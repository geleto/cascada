(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["nunjucks"] = factory();
	else
		root["nunjucks"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 6933:
/*!**********************************!*\
  !*** ./nunjucks/src/compiler.js ***!
  \**********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function cov_jwevct6y8() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\compiler.js";
  var hash = "597c40930f35110f5dbf9d9cdf1f5f268b38a7ea";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\compiler.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 15
        },
        end: {
          line: 3,
          column: 34
        }
      },
      "1": {
        start: {
          line: 4,
          column: 20
        },
        end: {
          line: 4,
          column: 44
        }
      },
      "2": {
        start: {
          line: 5,
          column: 14
        },
        end: {
          line: 5,
          column: 32
        }
      },
      "3": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 6,
          column: 40
        }
      },
      "4": {
        start: {
          line: 7,
          column: 16
        },
        end: {
          line: 7,
          column: 36
        }
      },
      "5": {
        start: {
          line: 8,
          column: 14
        },
        end: {
          line: 8,
          column: 33
        }
      },
      "6": {
        start: {
          line: 12,
          column: 19
        },
        end: {
          line: 21,
          column: 1
        }
      },
      "7": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 37
        }
      },
      "8": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 22
        }
      },
      "9": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 20
        }
      },
      "10": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 23
        }
      },
      "11": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 26
        }
      },
      "12": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 28
        }
      },
      "13": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 25
        }
      },
      "14": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 45
        }
      },
      "15": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 27
        }
      },
      "16": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 31
        }
      },
      "17": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "18": {
        start: {
          line: 39,
          column: 6
        },
        end: {
          line: 39,
          column: 18
        }
      },
      "19": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "20": {
        start: {
          line: 42,
          column: 6
        },
        end: {
          line: 42,
          column: 17
        }
      },
      "21": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 48
        }
      },
      "22": {
        start: {
          line: 49,
          column: 15
        },
        end: {
          line: 49,
          column: 28
        }
      },
      "23": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 39
        }
      },
      "24": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 21
        }
      },
      "25": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "26": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 53,
          column: 79
        }
      },
      "27": {
        start: {
          line: 55,
          column: 6
        },
        end: {
          line: 55,
          column: 49
        }
      },
      "28": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 14
        }
      },
      "29": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 41
        }
      },
      "30": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 28
        }
      },
      "31": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 28
        }
      },
      "32": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 50
        }
      },
      "33": {
        start: {
          line: 73,
          column: 28
        },
        end: {
          line: 73,
          column: 48
        }
      },
      "34": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 27
        }
      },
      "35": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 78,
          column: 28
        }
      },
      "36": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "37": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 80,
          column: 97
        }
      },
      "38": {
        start: {
          line: 82,
          column: 6
        },
        end: {
          line: 82,
          column: 77
        }
      },
      "39": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 51
        }
      },
      "40": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 49
        }
      },
      "41": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 91,
          column: 5
        }
      },
      "42": {
        start: {
          line: 88,
          column: 6
        },
        end: {
          line: 88,
          column: 75
        }
      },
      "43": {
        start: {
          line: 90,
          column: 6
        },
        end: {
          line: 90,
          column: 45
        }
      },
      "44": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 28
        }
      },
      "45": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "46": {
        start: {
          line: 97,
          column: 6
        },
        end: {
          line: 97,
          column: 55
        }
      },
      "47": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 100,
          column: 29
        }
      },
      "48": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 101,
          column: 36
        }
      },
      "49": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 67
        }
      },
      "50": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 103,
          column: 24
        }
      },
      "51": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 24
        }
      },
      "52": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 105,
          column: 23
        }
      },
      "53": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "54": {
        start: {
          line: 112,
          column: 6
        },
        end: {
          line: 112,
          column: 28
        }
      },
      "55": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "56": {
        start: {
          line: 118,
          column: 6
        },
        end: {
          line: 118,
          column: 22
        }
      },
      "57": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 128,
          column: 5
        }
      },
      "58": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 125,
          column: 38
        }
      },
      "59": {
        start: {
          line: 126,
          column: 6
        },
        end: {
          line: 126,
          column: 43
        }
      },
      "60": {
        start: {
          line: 127,
          column: 6
        },
        end: {
          line: 127,
          column: 31
        }
      },
      "61": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 139,
          column: 5
        }
      },
      "62": {
        start: {
          line: 133,
          column: 6
        },
        end: {
          line: 133,
          column: 34
        }
      },
      "63": {
        start: {
          line: 134,
          column: 6
        },
        end: {
          line: 134,
          column: 31
        }
      },
      "64": {
        start: {
          line: 135,
          column: 6
        },
        end: {
          line: 137,
          column: 7
        }
      },
      "65": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 81
        }
      },
      "66": {
        start: {
          line: 138,
          column: 6
        },
        end: {
          line: 138,
          column: 63
        }
      },
      "67": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 148,
          column: 5
        }
      },
      "68": {
        start: {
          line: 144,
          column: 6
        },
        end: {
          line: 144,
          column: 82
        }
      },
      "69": {
        start: {
          line: 145,
          column: 6
        },
        end: {
          line: 145,
          column: 47
        }
      },
      "70": {
        start: {
          line: 146,
          column: 6
        },
        end: {
          line: 146,
          column: 28
        }
      },
      "71": {
        start: {
          line: 147,
          column: 6
        },
        end: {
          line: 147,
          column: 31
        }
      },
      "72": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 159,
          column: 5
        }
      },
      "73": {
        start: {
          line: 153,
          column: 6
        },
        end: {
          line: 153,
          column: 29
        }
      },
      "74": {
        start: {
          line: 154,
          column: 6
        },
        end: {
          line: 154,
          column: 31
        }
      },
      "75": {
        start: {
          line: 155,
          column: 6
        },
        end: {
          line: 157,
          column: 7
        }
      },
      "76": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 81
        }
      },
      "77": {
        start: {
          line: 158,
          column: 6
        },
        end: {
          line: 158,
          column: 63
        }
      },
      "78": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 175,
          column: 5
        }
      },
      "79": {
        start: {
          line: 164,
          column: 6
        },
        end: {
          line: 172,
          column: 7
        }
      },
      "80": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 39
        }
      },
      "81": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 49
        }
      },
      "82": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 62
        }
      },
      "83": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 47
        }
      },
      "84": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 33
        }
      },
      "85": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 68
        }
      },
      "86": {
        start: {
          line: 174,
          column: 6
        },
        end: {
          line: 174,
          column: 39
        }
      },
      "87": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 186,
          column: 5
        }
      },
      "88": {
        start: {
          line: 180,
          column: 6
        },
        end: {
          line: 180,
          column: 29
        }
      },
      "89": {
        start: {
          line: 181,
          column: 6
        },
        end: {
          line: 181,
          column: 31
        }
      },
      "90": {
        start: {
          line: 182,
          column: 6
        },
        end: {
          line: 184,
          column: 7
        }
      },
      "91": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 81
        }
      },
      "92": {
        start: {
          line: 185,
          column: 6
        },
        end: {
          line: 185,
          column: 63
        }
      },
      "93": {
        start: {
          line: 190,
          column: 4
        },
        end: {
          line: 210,
          column: 5
        }
      },
      "94": {
        start: {
          line: 192,
          column: 6
        },
        end: {
          line: 192,
          column: 34
        }
      },
      "95": {
        start: {
          line: 195,
          column: 6
        },
        end: {
          line: 195,
          column: 41
        }
      },
      "96": {
        start: {
          line: 198,
          column: 24
        },
        end: {
          line: 198,
          column: 37
        }
      },
      "97": {
        start: {
          line: 201,
          column: 6
        },
        end: {
          line: 201,
          column: 47
        }
      },
      "98": {
        start: {
          line: 202,
          column: 6
        },
        end: {
          line: 202,
          column: 52
        }
      },
      "99": {
        start: {
          line: 205,
          column: 6
        },
        end: {
          line: 205,
          column: 79
        }
      },
      "100": {
        start: {
          line: 208,
          column: 6
        },
        end: {
          line: 208,
          column: 30
        }
      },
      "101": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 220,
          column: 5
        }
      },
      "102": {
        start: {
          line: 216,
          column: 6
        },
        end: {
          line: 216,
          column: 32
        }
      },
      "103": {
        start: {
          line: 219,
          column: 6
        },
        end: {
          line: 219,
          column: 43
        }
      },
      "104": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 224,
          column: 31
        }
      },
      "105": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 228,
          column: 45
        }
      },
      "106": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 229,
          column: 28
        }
      },
      "107": {
        start: {
          line: 233,
          column: 24
        },
        end: {
          line: 233,
          column: 42
        }
      },
      "108": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 234,
          column: 28
        }
      },
      "109": {
        start: {
          line: 236,
          column: 4
        },
        end: {
          line: 236,
          column: 20
        }
      },
      "110": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 238,
          column: 29
        }
      },
      "111": {
        start: {
          line: 239,
          column: 4
        },
        end: {
          line: 239,
          column: 39
        }
      },
      "112": {
        start: {
          line: 243,
          column: 14
        },
        end: {
          line: 243,
          column: 27
        }
      },
      "113": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 246,
          column: 53
        }
      },
      "114": {
        start: {
          line: 250,
          column: 4
        },
        end: {
          line: 250,
          column: 18
        }
      },
      "115": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 251,
          column: 30
        }
      },
      "116": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 255,
          column: 87
        }
      },
      "117": {
        start: {
          line: 259,
          column: 4
        },
        end: {
          line: 261,
          column: 7
        }
      },
      "118": {
        start: {
          line: 260,
          column: 6
        },
        end: {
          line: 260,
          column: 33
        }
      },
      "119": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 267,
          column: 5
        }
      },
      "120": {
        start: {
          line: 266,
          column: 6
        },
        end: {
          line: 266,
          column: 28
        }
      },
      "121": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 275,
          column: 7
        }
      },
      "122": {
        start: {
          line: 270,
          column: 6
        },
        end: {
          line: 272,
          column: 7
        }
      },
      "123": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 24
        }
      },
      "124": {
        start: {
          line: 274,
          column: 6
        },
        end: {
          line: 274,
          column: 33
        }
      },
      "125": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 279,
          column: 5
        }
      },
      "126": {
        start: {
          line: 278,
          column: 6
        },
        end: {
          line: 278,
          column: 26
        }
      },
      "127": {
        start: {
          line: 285,
          column: 4
        },
        end: {
          line: 315,
          column: 6
        }
      },
      "128": {
        start: {
          line: 316,
          column: 4
        },
        end: {
          line: 316,
          column: 30
        }
      },
      "129": {
        start: {
          line: 320,
          column: 4
        },
        end: {
          line: 322,
          column: 5
        }
      },
      "130": {
        start: {
          line: 320,
          column: 25
        },
        end: {
          line: 320,
          column: 42
        }
      },
      "131": {
        start: {
          line: 321,
          column: 6
        },
        end: {
          line: 321,
          column: 87
        }
      },
      "132": {
        start: {
          line: 326,
          column: 15
        },
        end: {
          line: 326,
          column: 24
        }
      },
      "133": {
        start: {
          line: 327,
          column: 22
        },
        end: {
          line: 327,
          column: 38
        }
      },
      "134": {
        start: {
          line: 328,
          column: 21
        },
        end: {
          line: 328,
          column: 82
        }
      },
      "135": {
        start: {
          line: 330,
          column: 4
        },
        end: {
          line: 335,
          column: 5
        }
      },
      "136": {
        start: {
          line: 332,
          column: 6
        },
        end: {
          line: 332,
          column: 35
        }
      },
      "137": {
        start: {
          line: 333,
          column: 6
        },
        end: {
          line: 333,
          column: 101
        }
      },
      "138": {
        start: {
          line: 334,
          column: 6
        },
        end: {
          line: 334,
          column: 29
        }
      },
      "139": {
        start: {
          line: 337,
          column: 4
        },
        end: {
          line: 337,
          column: 71
        }
      },
      "140": {
        start: {
          line: 338,
          column: 4
        },
        end: {
          line: 338,
          column: 26
        }
      },
      "141": {
        start: {
          line: 340,
          column: 4
        },
        end: {
          line: 342,
          column: 5
        }
      },
      "142": {
        start: {
          line: 341,
          column: 6
        },
        end: {
          line: 341,
          column: 22
        }
      },
      "143": {
        start: {
          line: 344,
          column: 4
        },
        end: {
          line: 360,
          column: 5
        }
      },
      "144": {
        start: {
          line: 345,
          column: 6
        },
        end: {
          line: 348,
          column: 7
        }
      },
      "145": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 347,
          column: 41
        }
      },
      "146": {
        start: {
          line: 350,
          column: 6
        },
        end: {
          line: 359,
          column: 9
        }
      },
      "147": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 354,
          column: 44
        }
      },
      "148": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 358,
          column: 9
        }
      },
      "149": {
        start: {
          line: 357,
          column: 10
        },
        end: {
          line: 357,
          column: 26
        }
      },
      "150": {
        start: {
          line: 362,
          column: 4
        },
        end: {
          line: 385,
          column: 5
        }
      },
      "151": {
        start: {
          line: 363,
          column: 6
        },
        end: {
          line: 384,
          column: 9
        }
      },
      "152": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 366,
          column: 9
        }
      },
      "153": {
        start: {
          line: 365,
          column: 10
        },
        end: {
          line: 365,
          column: 26
        }
      },
      "154": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 383,
          column: 9
        }
      },
      "155": {
        start: {
          line: 369,
          column: 10
        },
        end: {
          line: 369,
          column: 43
        }
      },
      "156": {
        start: {
          line: 370,
          column: 10
        },
        end: {
          line: 370,
          column: 84
        }
      },
      "157": {
        start: {
          line: 371,
          column: 21
        },
        end: {
          line: 371,
          column: 39
        }
      },
      "158": {
        start: {
          line: 373,
          column: 10
        },
        end: {
          line: 376,
          column: 13
        }
      },
      "159": {
        start: {
          line: 374,
          column: 12
        },
        end: {
          line: 374,
          column: 37
        }
      },
      "160": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 375,
          column: 47
        }
      },
      "161": {
        start: {
          line: 378,
          column: 10
        },
        end: {
          line: 378,
          column: 28
        }
      },
      "162": {
        start: {
          line: 379,
          column: 10
        },
        end: {
          line: 379,
          column: 42
        }
      },
      "163": {
        start: {
          line: 380,
          column: 10
        },
        end: {
          line: 380,
          column: 30
        }
      },
      "164": {
        start: {
          line: 382,
          column: 10
        },
        end: {
          line: 382,
          column: 29
        }
      },
      "165": {
        start: {
          line: 387,
          column: 4
        },
        end: {
          line: 406,
          column: 5
        }
      },
      "166": {
        start: {
          line: 388,
          column: 18
        },
        end: {
          line: 388,
          column: 31
        }
      },
      "167": {
        start: {
          line: 389,
          column: 6
        },
        end: {
          line: 389,
          column: 53
        }
      },
      "168": {
        start: {
          line: 391,
          column: 6
        },
        end: {
          line: 391,
          column: 35
        }
      },
      "169": {
        start: {
          line: 396,
          column: 6
        },
        end: {
          line: 396,
          column: 146
        }
      },
      "170": {
        start: {
          line: 398,
          column: 6
        },
        end: {
          line: 398,
          column: 33
        }
      },
      "171": {
        start: {
          line: 400,
          column: 6
        },
        end: {
          line: 400,
          column: 28
        }
      },
      "172": {
        start: {
          line: 402,
          column: 6
        },
        end: {
          line: 402,
          column: 22
        }
      },
      "173": {
        start: {
          line: 403,
          column: 6
        },
        end: {
          line: 403,
          column: 27
        }
      },
      "174": {
        start: {
          line: 404,
          column: 6
        },
        end: {
          line: 404,
          column: 63
        }
      },
      "175": {
        start: {
          line: 405,
          column: 6
        },
        end: {
          line: 405,
          column: 33
        }
      },
      "176": {
        start: {
          line: 410,
          column: 4
        },
        end: {
          line: 410,
          column: 49
        }
      },
      "177": {
        start: {
          line: 414,
          column: 4
        },
        end: {
          line: 414,
          column: 39
        }
      },
      "178": {
        start: {
          line: 418,
          column: 4
        },
        end: {
          line: 430,
          column: 5
        }
      },
      "179": {
        start: {
          line: 419,
          column: 16
        },
        end: {
          line: 419,
          column: 49
        }
      },
      "180": {
        start: {
          line: 420,
          column: 6
        },
        end: {
          line: 420,
          column: 37
        }
      },
      "181": {
        start: {
          line: 421,
          column: 6
        },
        end: {
          line: 421,
          column: 38
        }
      },
      "182": {
        start: {
          line: 422,
          column: 6
        },
        end: {
          line: 422,
          column: 38
        }
      },
      "183": {
        start: {
          line: 423,
          column: 6
        },
        end: {
          line: 423,
          column: 38
        }
      },
      "184": {
        start: {
          line: 424,
          column: 6
        },
        end: {
          line: 424,
          column: 46
        }
      },
      "185": {
        start: {
          line: 425,
          column: 6
        },
        end: {
          line: 425,
          column: 29
        }
      },
      "186": {
        start: {
          line: 426,
          column: 11
        },
        end: {
          line: 430,
          column: 5
        }
      },
      "187": {
        start: {
          line: 427,
          column: 6
        },
        end: {
          line: 427,
          column: 25
        }
      },
      "188": {
        start: {
          line: 429,
          column: 6
        },
        end: {
          line: 429,
          column: 40
        }
      },
      "189": {
        start: {
          line: 434,
          column: 15
        },
        end: {
          line: 434,
          column: 25
        }
      },
      "190": {
        start: {
          line: 435,
          column: 12
        },
        end: {
          line: 435,
          column: 30
        }
      },
      "191": {
        start: {
          line: 437,
          column: 4
        },
        end: {
          line: 446,
          column: 5
        }
      },
      "192": {
        start: {
          line: 438,
          column: 6
        },
        end: {
          line: 438,
          column: 20
        }
      },
      "193": {
        start: {
          line: 442,
          column: 6
        },
        end: {
          line: 442,
          column: 29
        }
      },
      "194": {
        start: {
          line: 443,
          column: 6
        },
        end: {
          line: 444,
          column: 43
        }
      },
      "195": {
        start: {
          line: 445,
          column: 6
        },
        end: {
          line: 445,
          column: 27
        }
      },
      "196": {
        start: {
          line: 450,
          column: 4
        },
        end: {
          line: 450,
          column: 50
        }
      },
      "197": {
        start: {
          line: 454,
          column: 4
        },
        end: {
          line: 454,
          column: 50
        }
      },
      "198": {
        start: {
          line: 458,
          column: 4
        },
        end: {
          line: 458,
          column: 50
        }
      },
      "199": {
        start: {
          line: 462,
          column: 14
        },
        end: {
          line: 462,
          column: 22
        }
      },
      "200": {
        start: {
          line: 463,
          column: 14
        },
        end: {
          line: 463,
          column: 24
        }
      },
      "201": {
        start: {
          line: 465,
          column: 4
        },
        end: {
          line: 472,
          column: 5
        }
      },
      "202": {
        start: {
          line: 466,
          column: 6
        },
        end: {
          line: 466,
          column: 64
        }
      },
      "203": {
        start: {
          line: 467,
          column: 11
        },
        end: {
          line: 472,
          column: 5
        }
      },
      "204": {
        start: {
          line: 469,
          column: 6
        },
        end: {
          line: 471,
          column: 19
        }
      },
      "205": {
        start: {
          line: 474,
          column: 4
        },
        end: {
          line: 474,
          column: 29
        }
      },
      "206": {
        start: {
          line: 475,
          column: 4
        },
        end: {
          line: 475,
          column: 21
        }
      },
      "207": {
        start: {
          line: 476,
          column: 4
        },
        end: {
          line: 476,
          column: 40
        }
      },
      "208": {
        start: {
          line: 480,
          column: 4
        },
        end: {
          line: 480,
          column: 20
        }
      },
      "209": {
        start: {
          line: 481,
          column: 4
        },
        end: {
          line: 481,
          column: 35
        }
      },
      "210": {
        start: {
          line: 482,
          column: 4
        },
        end: {
          line: 482,
          column: 20
        }
      },
      "211": {
        start: {
          line: 483,
          column: 4
        },
        end: {
          line: 483,
          column: 35
        }
      },
      "212": {
        start: {
          line: 484,
          column: 4
        },
        end: {
          line: 484,
          column: 20
        }
      },
      "213": {
        start: {
          line: 485,
          column: 4
        },
        end: {
          line: 489,
          column: 5
        }
      },
      "214": {
        start: {
          line: 486,
          column: 6
        },
        end: {
          line: 486,
          column: 38
        }
      },
      "215": {
        start: {
          line: 488,
          column: 6
        },
        end: {
          line: 488,
          column: 23
        }
      },
      "216": {
        start: {
          line: 490,
          column: 4
        },
        end: {
          line: 490,
          column: 20
        }
      },
      "217": {
        start: {
          line: 494,
          column: 4
        },
        end: {
          line: 494,
          column: 38
        }
      },
      "218": {
        start: {
          line: 495,
          column: 4
        },
        end: {
          line: 495,
          column: 35
        }
      },
      "219": {
        start: {
          line: 496,
          column: 4
        },
        end: {
          line: 496,
          column: 20
        }
      },
      "220": {
        start: {
          line: 497,
          column: 4
        },
        end: {
          line: 497,
          column: 36
        }
      },
      "221": {
        start: {
          line: 498,
          column: 4
        },
        end: {
          line: 498,
          column: 20
        }
      },
      "222": {
        start: {
          line: 504,
          column: 16
        },
        end: {
          line: 507,
          column: 24
        }
      },
      "223": {
        start: {
          line: 508,
          column: 4
        },
        end: {
          line: 508,
          column: 62
        }
      },
      "224": {
        start: {
          line: 509,
          column: 4
        },
        end: {
          line: 509,
          column: 35
        }
      },
      "225": {
        start: {
          line: 511,
          column: 4
        },
        end: {
          line: 514,
          column: 5
        }
      },
      "226": {
        start: {
          line: 512,
          column: 6
        },
        end: {
          line: 512,
          column: 22
        }
      },
      "227": {
        start: {
          line: 513,
          column: 6
        },
        end: {
          line: 513,
          column: 43
        }
      },
      "228": {
        start: {
          line: 515,
          column: 4
        },
        end: {
          line: 515,
          column: 29
        }
      },
      "229": {
        start: {
          line: 519,
          column: 4
        },
        end: {
          line: 519,
          column: 35
        }
      },
      "230": {
        start: {
          line: 520,
          column: 4
        },
        end: {
          line: 520,
          column: 20
        }
      },
      "231": {
        start: {
          line: 521,
          column: 4
        },
        end: {
          line: 521,
          column: 36
        }
      },
      "232": {
        start: {
          line: 527,
          column: 4
        },
        end: {
          line: 527,
          column: 51
        }
      },
      "233": {
        start: {
          line: 531,
          column: 4
        },
        end: {
          line: 531,
          column: 51
        }
      },
      "234": {
        start: {
          line: 535,
          column: 4
        },
        end: {
          line: 535,
          column: 50
        }
      },
      "235": {
        start: {
          line: 539,
          column: 4
        },
        end: {
          line: 539,
          column: 55
        }
      },
      "236": {
        start: {
          line: 543,
          column: 4
        },
        end: {
          line: 543,
          column: 50
        }
      },
      "237": {
        start: {
          line: 547,
          column: 4
        },
        end: {
          line: 547,
          column: 50
        }
      },
      "238": {
        start: {
          line: 551,
          column: 4
        },
        end: {
          line: 551,
          column: 50
        }
      },
      "239": {
        start: {
          line: 555,
          column: 4
        },
        end: {
          line: 555,
          column: 50
        }
      },
      "240": {
        start: {
          line: 559,
          column: 4
        },
        end: {
          line: 559,
          column: 20
        }
      },
      "241": {
        start: {
          line: 560,
          column: 4
        },
        end: {
          line: 560,
          column: 37
        }
      },
      "242": {
        start: {
          line: 564,
          column: 4
        },
        end: {
          line: 564,
          column: 30
        }
      },
      "243": {
        start: {
          line: 565,
          column: 4
        },
        end: {
          line: 565,
          column: 35
        }
      },
      "244": {
        start: {
          line: 566,
          column: 4
        },
        end: {
          line: 566,
          column: 22
        }
      },
      "245": {
        start: {
          line: 567,
          column: 4
        },
        end: {
          line: 567,
          column: 36
        }
      },
      "246": {
        start: {
          line: 568,
          column: 4
        },
        end: {
          line: 568,
          column: 20
        }
      },
      "247": {
        start: {
          line: 572,
          column: 4
        },
        end: {
          line: 572,
          column: 28
        }
      },
      "248": {
        start: {
          line: 573,
          column: 4
        },
        end: {
          line: 573,
          column: 35
        }
      },
      "249": {
        start: {
          line: 574,
          column: 4
        },
        end: {
          line: 574,
          column: 21
        }
      },
      "250": {
        start: {
          line: 575,
          column: 4
        },
        end: {
          line: 575,
          column: 36
        }
      },
      "251": {
        start: {
          line: 576,
          column: 4
        },
        end: {
          line: 576,
          column: 20
        }
      },
      "252": {
        start: {
          line: 580,
          column: 4
        },
        end: {
          line: 580,
          column: 20
        }
      },
      "253": {
        start: {
          line: 581,
          column: 4
        },
        end: {
          line: 581,
          column: 37
        }
      },
      "254": {
        start: {
          line: 585,
          column: 4
        },
        end: {
          line: 585,
          column: 20
        }
      },
      "255": {
        start: {
          line: 586,
          column: 4
        },
        end: {
          line: 586,
          column: 37
        }
      },
      "256": {
        start: {
          line: 590,
          column: 4
        },
        end: {
          line: 590,
          column: 35
        }
      },
      "257": {
        start: {
          line: 592,
          column: 4
        },
        end: {
          line: 595,
          column: 7
        }
      },
      "258": {
        start: {
          line: 593,
          column: 6
        },
        end: {
          line: 593,
          column: 45
        }
      },
      "259": {
        start: {
          line: 594,
          column: 6
        },
        end: {
          line: 594,
          column: 35
        }
      },
      "260": {
        start: {
          line: 599,
          column: 4
        },
        end: {
          line: 599,
          column: 27
        }
      },
      "261": {
        start: {
          line: 600,
          column: 4
        },
        end: {
          line: 600,
          column: 41
        }
      },
      "262": {
        start: {
          line: 601,
          column: 4
        },
        end: {
          line: 601,
          column: 48
        }
      },
      "263": {
        start: {
          line: 602,
          column: 4
        },
        end: {
          line: 602,
          column: 21
        }
      },
      "264": {
        start: {
          line: 603,
          column: 4
        },
        end: {
          line: 603,
          column: 45
        }
      },
      "265": {
        start: {
          line: 604,
          column: 4
        },
        end: {
          line: 604,
          column: 20
        }
      },
      "266": {
        start: {
          line: 605,
          column: 4
        },
        end: {
          line: 605,
          column: 25
        }
      },
      "267": {
        start: {
          line: 609,
          column: 4
        },
        end: {
          line: 621,
          column: 5
        }
      },
      "268": {
        start: {
          line: 611,
          column: 8
        },
        end: {
          line: 611,
          column: 26
        }
      },
      "269": {
        start: {
          line: 613,
          column: 8
        },
        end: {
          line: 613,
          column: 76
        }
      },
      "270": {
        start: {
          line: 615,
          column: 8
        },
        end: {
          line: 616,
          column: 45
        }
      },
      "271": {
        start: {
          line: 618,
          column: 8
        },
        end: {
          line: 618,
          column: 37
        }
      },
      "272": {
        start: {
          line: 620,
          column: 8
        },
        end: {
          line: 620,
          column: 32
        }
      },
      "273": {
        start: {
          line: 629,
          column: 4
        },
        end: {
          line: 631,
          column: 5
        }
      },
      "274": {
        start: {
          line: 630,
          column: 6
        },
        end: {
          line: 630,
          column: 34
        }
      },
      "275": {
        start: {
          line: 632,
          column: 4
        },
        end: {
          line: 633,
          column: 40
        }
      },
      "276": {
        start: {
          line: 635,
          column: 4
        },
        end: {
          line: 635,
          column: 27
        }
      },
      "277": {
        start: {
          line: 636,
          column: 4
        },
        end: {
          line: 636,
          column: 36
        }
      },
      "278": {
        start: {
          line: 638,
          column: 4
        },
        end: {
          line: 638,
          column: 46
        }
      },
      "279": {
        start: {
          line: 642,
          column: 4
        },
        end: {
          line: 642,
          column: 91
        }
      },
      "280": {
        start: {
          line: 644,
          column: 4
        },
        end: {
          line: 644,
          column: 56
        }
      },
      "281": {
        start: {
          line: 646,
          column: 4
        },
        end: {
          line: 646,
          column: 20
        }
      },
      "282": {
        start: {
          line: 648,
          column: 4
        },
        end: {
          line: 648,
          column: 25
        }
      },
      "283": {
        start: {
          line: 650,
          column: 4
        },
        end: {
          line: 652,
          column: 5
        }
      },
      "284": {
        start: {
          line: 651,
          column: 6
        },
        end: {
          line: 651,
          column: 32
        }
      },
      "285": {
        start: {
          line: 656,
          column: 15
        },
        end: {
          line: 656,
          column: 24
        }
      },
      "286": {
        start: {
          line: 658,
          column: 4
        },
        end: {
          line: 658,
          column: 27
        }
      },
      "287": {
        start: {
          line: 659,
          column: 4
        },
        end: {
          line: 659,
          column: 40
        }
      },
      "288": {
        start: {
          line: 660,
          column: 4
        },
        end: {
          line: 660,
          column: 69
        }
      },
      "289": {
        start: {
          line: 661,
          column: 4
        },
        end: {
          line: 661,
          column: 45
        }
      },
      "290": {
        start: {
          line: 662,
          column: 4
        },
        end: {
          line: 662,
          column: 20
        }
      },
      "291": {
        start: {
          line: 663,
          column: 4
        },
        end: {
          line: 663,
          column: 25
        }
      },
      "292": {
        start: {
          line: 667,
          column: 15
        },
        end: {
          line: 667,
          column: 24
        }
      },
      "293": {
        start: {
          line: 668,
          column: 17
        },
        end: {
          line: 668,
          column: 34
        }
      },
      "294": {
        start: {
          line: 670,
          column: 4
        },
        end: {
          line: 670,
          column: 40
        }
      },
      "295": {
        start: {
          line: 672,
          column: 4
        },
        end: {
          line: 672,
          column: 30
        }
      },
      "296": {
        start: {
          line: 674,
          column: 4
        },
        end: {
          line: 674,
          column: 69
        }
      },
      "297": {
        start: {
          line: 675,
          column: 4
        },
        end: {
          line: 675,
          column: 45
        }
      },
      "298": {
        start: {
          line: 676,
          column: 4
        },
        end: {
          line: 676,
          column: 54
        }
      },
      "299": {
        start: {
          line: 678,
          column: 4
        },
        end: {
          line: 678,
          column: 26
        }
      },
      "300": {
        start: {
          line: 682,
          column: 4
        },
        end: {
          line: 682,
          column: 43
        }
      },
      "301": {
        start: {
          line: 683,
          column: 4
        },
        end: {
          line: 683,
          column: 34
        }
      },
      "302": {
        start: {
          line: 684,
          column: 4
        },
        end: {
          line: 684,
          column: 20
        }
      },
      "303": {
        start: {
          line: 688,
          column: 14
        },
        end: {
          line: 688,
          column: 16
        }
      },
      "304": {
        start: {
          line: 692,
          column: 4
        },
        end: {
          line: 705,
          column: 7
        }
      },
      "305": {
        start: {
          line: 693,
          column: 17
        },
        end: {
          line: 693,
          column: 29
        }
      },
      "306": {
        start: {
          line: 694,
          column: 15
        },
        end: {
          line: 694,
          column: 33
        }
      },
      "307": {
        start: {
          line: 696,
          column: 6
        },
        end: {
          line: 702,
          column: 7
        }
      },
      "308": {
        start: {
          line: 697,
          column: 8
        },
        end: {
          line: 697,
          column: 27
        }
      },
      "309": {
        start: {
          line: 701,
          column: 8
        },
        end: {
          line: 701,
          column: 42
        }
      },
      "310": {
        start: {
          line: 704,
          column: 6
        },
        end: {
          line: 704,
          column: 19
        }
      },
      "311": {
        start: {
          line: 707,
          column: 4
        },
        end: {
          line: 715,
          column: 5
        }
      },
      "312": {
        start: {
          line: 708,
          column: 6
        },
        end: {
          line: 708,
          column: 42
        }
      },
      "313": {
        start: {
          line: 709,
          column: 6
        },
        end: {
          line: 709,
          column: 49
        }
      },
      "314": {
        start: {
          line: 710,
          column: 6
        },
        end: {
          line: 710,
          column: 26
        }
      },
      "315": {
        start: {
          line: 712,
          column: 6
        },
        end: {
          line: 712,
          column: 42
        }
      },
      "316": {
        start: {
          line: 713,
          column: 6
        },
        end: {
          line: 713,
          column: 37
        }
      },
      "317": {
        start: {
          line: 714,
          column: 6
        },
        end: {
          line: 714,
          column: 26
        }
      },
      "318": {
        start: {
          line: 717,
          column: 4
        },
        end: {
          line: 734,
          column: 7
        }
      },
      "319": {
        start: {
          line: 718,
          column: 15
        },
        end: {
          line: 718,
          column: 21
        }
      },
      "320": {
        start: {
          line: 719,
          column: 17
        },
        end: {
          line: 719,
          column: 29
        }
      },
      "321": {
        start: {
          line: 723,
          column: 6
        },
        end: {
          line: 723,
          column: 59
        }
      },
      "322": {
        start: {
          line: 725,
          column: 6
        },
        end: {
          line: 725,
          column: 45
        }
      },
      "323": {
        start: {
          line: 726,
          column: 6
        },
        end: {
          line: 726,
          column: 63
        }
      },
      "324": {
        start: {
          line: 727,
          column: 6
        },
        end: {
          line: 727,
          column: 26
        }
      },
      "325": {
        start: {
          line: 729,
          column: 6
        },
        end: {
          line: 733,
          column: 7
        }
      },
      "326": {
        start: {
          line: 730,
          column: 8
        },
        end: {
          line: 730,
          column: 47
        }
      },
      "327": {
        start: {
          line: 731,
          column: 8
        },
        end: {
          line: 731,
          column: 63
        }
      },
      "328": {
        start: {
          line: 732,
          column: 8
        },
        end: {
          line: 732,
          column: 28
        }
      },
      "329": {
        start: {
          line: 738,
          column: 4
        },
        end: {
          line: 738,
          column: 27
        }
      },
      "330": {
        start: {
          line: 739,
          column: 4
        },
        end: {
          line: 739,
          column: 35
        }
      },
      "331": {
        start: {
          line: 740,
          column: 4
        },
        end: {
          line: 740,
          column: 22
        }
      },
      "332": {
        start: {
          line: 741,
          column: 4
        },
        end: {
          line: 750,
          column: 7
        }
      },
      "333": {
        start: {
          line: 742,
          column: 6
        },
        end: {
          line: 742,
          column: 26
        }
      },
      "334": {
        start: {
          line: 743,
          column: 6
        },
        end: {
          line: 743,
          column: 34
        }
      },
      "335": {
        start: {
          line: 744,
          column: 6
        },
        end: {
          line: 744,
          column: 23
        }
      },
      "336": {
        start: {
          line: 745,
          column: 6
        },
        end: {
          line: 745,
          column: 34
        }
      },
      "337": {
        start: {
          line: 747,
          column: 6
        },
        end: {
          line: 749,
          column: 7
        }
      },
      "338": {
        start: {
          line: 748,
          column: 8
        },
        end: {
          line: 748,
          column: 33
        }
      },
      "339": {
        start: {
          line: 751,
          column: 4
        },
        end: {
          line: 754,
          column: 5
        }
      },
      "340": {
        start: {
          line: 752,
          column: 6
        },
        end: {
          line: 752,
          column: 29
        }
      },
      "341": {
        start: {
          line: 753,
          column: 6
        },
        end: {
          line: 753,
          column: 40
        }
      },
      "342": {
        start: {
          line: 755,
          column: 4
        },
        end: {
          line: 755,
          column: 20
        }
      },
      "343": {
        start: {
          line: 759,
          column: 4
        },
        end: {
          line: 759,
          column: 33
        }
      },
      "344": {
        start: {
          line: 761,
          column: 4
        },
        end: {
          line: 761,
          column: 22
        }
      },
      "345": {
        start: {
          line: 762,
          column: 4
        },
        end: {
          line: 762,
          column: 46
        }
      },
      "346": {
        start: {
          line: 763,
          column: 4
        },
        end: {
          line: 763,
          column: 26
        }
      },
      "347": {
        start: {
          line: 765,
          column: 4
        },
        end: {
          line: 771,
          column: 7
        }
      },
      "348": {
        start: {
          line: 766,
          column: 6
        },
        end: {
          line: 766,
          column: 37
        }
      },
      "349": {
        start: {
          line: 768,
          column: 6
        },
        end: {
          line: 770,
          column: 7
        }
      },
      "350": {
        start: {
          line: 769,
          column: 8
        },
        end: {
          line: 769,
          column: 27
        }
      },
      "351": {
        start: {
          line: 773,
          column: 4
        },
        end: {
          line: 786,
          column: 5
        }
      },
      "352": {
        start: {
          line: 774,
          column: 6
        },
        end: {
          line: 774,
          column: 34
        }
      },
      "353": {
        start: {
          line: 776,
          column: 6
        },
        end: {
          line: 782,
          column: 9
        }
      },
      "354": {
        start: {
          line: 777,
          column: 8
        },
        end: {
          line: 777,
          column: 40
        }
      },
      "355": {
        start: {
          line: 779,
          column: 8
        },
        end: {
          line: 781,
          column: 9
        }
      },
      "356": {
        start: {
          line: 780,
          column: 10
        },
        end: {
          line: 780,
          column: 29
        }
      },
      "357": {
        start: {
          line: 783,
          column: 11
        },
        end: {
          line: 786,
          column: 5
        }
      },
      "358": {
        start: {
          line: 784,
          column: 6
        },
        end: {
          line: 784,
          column: 34
        }
      },
      "359": {
        start: {
          line: 785,
          column: 6
        },
        end: {
          line: 785,
          column: 25
        }
      },
      "360": {
        start: {
          line: 788,
          column: 4
        },
        end: {
          line: 788,
          column: 24
        }
      },
      "361": {
        start: {
          line: 790,
          column: 4
        },
        end: {
          line: 790,
          column: 31
        }
      },
      "362": {
        start: {
          line: 794,
          column: 4
        },
        end: {
          line: 794,
          column: 34
        }
      },
      "363": {
        start: {
          line: 795,
          column: 4
        },
        end: {
          line: 795,
          column: 38
        }
      },
      "364": {
        start: {
          line: 796,
          column: 4
        },
        end: {
          line: 796,
          column: 45
        }
      },
      "365": {
        start: {
          line: 797,
          column: 4
        },
        end: {
          line: 797,
          column: 26
        }
      },
      "366": {
        start: {
          line: 801,
          column: 21
        },
        end: {
          line: 809,
          column: 5
        }
      },
      "367": {
        start: {
          line: 811,
          column: 4
        },
        end: {
          line: 813,
          column: 7
        }
      },
      "368": {
        start: {
          line: 812,
          column: 6
        },
        end: {
          line: 812,
          column: 63
        }
      },
      "369": {
        start: {
          line: 821,
          column: 4
        },
        end: {
          line: 821,
          column: 33
        }
      },
      "370": {
        start: {
          line: 823,
          column: 14
        },
        end: {
          line: 823,
          column: 27
        }
      },
      "371": {
        start: {
          line: 824,
          column: 16
        },
        end: {
          line: 824,
          column: 29
        }
      },
      "372": {
        start: {
          line: 825,
          column: 16
        },
        end: {
          line: 825,
          column: 29
        }
      },
      "373": {
        start: {
          line: 826,
          column: 4
        },
        end: {
          line: 826,
          column: 25
        }
      },
      "374": {
        start: {
          line: 828,
          column: 4
        },
        end: {
          line: 828,
          column: 44
        }
      },
      "375": {
        start: {
          line: 830,
          column: 4
        },
        end: {
          line: 830,
          column: 32
        }
      },
      "376": {
        start: {
          line: 831,
          column: 4
        },
        end: {
          line: 831,
          column: 45
        }
      },
      "377": {
        start: {
          line: 832,
          column: 4
        },
        end: {
          line: 832,
          column: 24
        }
      },
      "378": {
        start: {
          line: 833,
          column: 4
        },
        end: {
          line: 833,
          column: 34
        }
      },
      "379": {
        start: {
          line: 835,
          column: 4
        },
        end: {
          line: 835,
          column: 31
        }
      },
      "380": {
        start: {
          line: 836,
          column: 4
        },
        end: {
          line: 836,
          column: 66
        }
      },
      "381": {
        start: {
          line: 840,
          column: 4
        },
        end: {
          line: 937,
          column: 5
        }
      },
      "382": {
        start: {
          line: 841,
          column: 6
        },
        end: {
          line: 841,
          column: 34
        }
      },
      "383": {
        start: {
          line: 846,
          column: 6
        },
        end: {
          line: 846,
          column: 54
        }
      },
      "384": {
        start: {
          line: 847,
          column: 6
        },
        end: {
          line: 847,
          column: 48
        }
      },
      "385": {
        start: {
          line: 848,
          column: 6
        },
        end: {
          line: 848,
          column: 68
        }
      },
      "386": {
        start: {
          line: 850,
          column: 6
        },
        end: {
          line: 853,
          column: 7
        }
      },
      "387": {
        start: {
          line: 851,
          column: 8
        },
        end: {
          line: 851,
          column: 48
        }
      },
      "388": {
        start: {
          line: 852,
          column: 8
        },
        end: {
          line: 852,
          column: 37
        }
      },
      "389": {
        start: {
          line: 856,
          column: 6
        },
        end: {
          line: 861,
          column: 9
        }
      },
      "390": {
        start: {
          line: 857,
          column: 18
        },
        end: {
          line: 857,
          column: 31
        }
      },
      "391": {
        start: {
          line: 858,
          column: 8
        },
        end: {
          line: 858,
          column: 59
        }
      },
      "392": {
        start: {
          line: 859,
          column: 8
        },
        end: {
          line: 859,
          column: 63
        }
      },
      "393": {
        start: {
          line: 860,
          column: 8
        },
        end: {
          line: 860,
          column: 52
        }
      },
      "394": {
        start: {
          line: 863,
          column: 6
        },
        end: {
          line: 863,
          column: 48
        }
      },
      "395": {
        start: {
          line: 864,
          column: 6
        },
        end: {
          line: 866,
          column: 9
        }
      },
      "396": {
        start: {
          line: 865,
          column: 8
        },
        end: {
          line: 865,
          column: 39
        }
      },
      "397": {
        start: {
          line: 868,
          column: 6
        },
        end: {
          line: 871,
          column: 7
        }
      },
      "398": {
        start: {
          line: 869,
          column: 8
        },
        end: {
          line: 869,
          column: 35
        }
      },
      "399": {
        start: {
          line: 870,
          column: 8
        },
        end: {
          line: 870,
          column: 47
        }
      },
      "400": {
        start: {
          line: 873,
          column: 6
        },
        end: {
          line: 873,
          column: 26
        }
      },
      "401": {
        start: {
          line: 874,
          column: 6
        },
        end: {
          line: 874,
          column: 33
        }
      },
      "402": {
        start: {
          line: 876,
          column: 25
        },
        end: {
          line: 876,
          column: 43
        }
      },
      "403": {
        start: {
          line: 877,
          column: 16
        },
        end: {
          line: 877,
          column: 29
        }
      },
      "404": {
        start: {
          line: 878,
          column: 16
        },
        end: {
          line: 878,
          column: 29
        }
      },
      "405": {
        start: {
          line: 879,
          column: 6
        },
        end: {
          line: 879,
          column: 30
        }
      },
      "406": {
        start: {
          line: 880,
          column: 6
        },
        end: {
          line: 880,
          column: 30
        }
      },
      "407": {
        start: {
          line: 882,
          column: 6
        },
        end: {
          line: 882,
          column: 35
        }
      },
      "408": {
        start: {
          line: 883,
          column: 6
        },
        end: {
          line: 883,
          column: 62
        }
      },
      "409": {
        start: {
          line: 884,
          column: 6
        },
        end: {
          line: 884,
          column: 50
        }
      },
      "410": {
        start: {
          line: 886,
          column: 6
        },
        end: {
          line: 889,
          column: 7
        }
      },
      "411": {
        start: {
          line: 887,
          column: 8
        },
        end: {
          line: 887,
          column: 48
        }
      },
      "412": {
        start: {
          line: 888,
          column: 8
        },
        end: {
          line: 888,
          column: 37
        }
      },
      "413": {
        start: {
          line: 891,
          column: 6
        },
        end: {
          line: 891,
          column: 32
        }
      },
      "414": {
        start: {
          line: 892,
          column: 6
        },
        end: {
          line: 892,
          column: 49
        }
      },
      "415": {
        start: {
          line: 893,
          column: 6
        },
        end: {
          line: 893,
          column: 57
        }
      },
      "416": {
        start: {
          line: 894,
          column: 6
        },
        end: {
          line: 894,
          column: 57
        }
      },
      "417": {
        start: {
          line: 896,
          column: 6
        },
        end: {
          line: 896,
          column: 48
        }
      },
      "418": {
        start: {
          line: 897,
          column: 6
        },
        end: {
          line: 899,
          column: 9
        }
      },
      "419": {
        start: {
          line: 898,
          column: 8
        },
        end: {
          line: 898,
          column: 39
        }
      },
      "420": {
        start: {
          line: 901,
          column: 6
        },
        end: {
          line: 904,
          column: 7
        }
      },
      "421": {
        start: {
          line: 902,
          column: 8
        },
        end: {
          line: 902,
          column: 35
        }
      },
      "422": {
        start: {
          line: 903,
          column: 8
        },
        end: {
          line: 903,
          column: 47
        }
      },
      "423": {
        start: {
          line: 906,
          column: 6
        },
        end: {
          line: 906,
          column: 26
        }
      },
      "424": {
        start: {
          line: 908,
          column: 6
        },
        end: {
          line: 908,
          column: 26
        }
      },
      "425": {
        start: {
          line: 911,
          column: 16
        },
        end: {
          line: 911,
          column: 29
        }
      },
      "426": {
        start: {
          line: 912,
          column: 6
        },
        end: {
          line: 912,
          column: 36
        }
      },
      "427": {
        start: {
          line: 914,
          column: 6
        },
        end: {
          line: 914,
          column: 48
        }
      },
      "428": {
        start: {
          line: 915,
          column: 6
        },
        end: {
          line: 915,
          column: 72
        }
      },
      "429": {
        start: {
          line: 917,
          column: 6
        },
        end: {
          line: 920,
          column: 7
        }
      },
      "430": {
        start: {
          line: 918,
          column: 8
        },
        end: {
          line: 918,
          column: 48
        }
      },
      "431": {
        start: {
          line: 919,
          column: 8
        },
        end: {
          line: 919,
          column: 37
        }
      },
      "432": {
        start: {
          line: 922,
          column: 6
        },
        end: {
          line: 922,
          column: 49
        }
      },
      "433": {
        start: {
          line: 923,
          column: 6
        },
        end: {
          line: 923,
          column: 63
        }
      },
      "434": {
        start: {
          line: 925,
          column: 6
        },
        end: {
          line: 925,
          column: 48
        }
      },
      "435": {
        start: {
          line: 927,
          column: 6
        },
        end: {
          line: 929,
          column: 9
        }
      },
      "436": {
        start: {
          line: 928,
          column: 8
        },
        end: {
          line: 928,
          column: 39
        }
      },
      "437": {
        start: {
          line: 931,
          column: 6
        },
        end: {
          line: 934,
          column: 7
        }
      },
      "438": {
        start: {
          line: 932,
          column: 8
        },
        end: {
          line: 932,
          column: 35
        }
      },
      "439": {
        start: {
          line: 933,
          column: 8
        },
        end: {
          line: 933,
          column: 47
        }
      },
      "440": {
        start: {
          line: 936,
          column: 6
        },
        end: {
          line: 936,
          column: 26
        }
      },
      "441": {
        start: {
          line: 939,
          column: 4
        },
        end: {
          line: 939,
          column: 24
        }
      },
      "442": {
        start: {
          line: 940,
          column: 4
        },
        end: {
          line: 946,
          column: 5
        }
      },
      "443": {
        start: {
          line: 941,
          column: 6
        },
        end: {
          line: 941,
          column: 39
        }
      },
      "444": {
        start: {
          line: 942,
          column: 6
        },
        end: {
          line: 942,
          column: 35
        }
      },
      "445": {
        start: {
          line: 943,
          column: 6
        },
        end: {
          line: 943,
          column: 38
        }
      },
      "446": {
        start: {
          line: 944,
          column: 6
        },
        end: {
          line: 944,
          column: 33
        }
      },
      "447": {
        start: {
          line: 945,
          column: 6
        },
        end: {
          line: 945,
          column: 26
        }
      },
      "448": {
        start: {
          line: 948,
          column: 4
        },
        end: {
          line: 948,
          column: 43
        }
      },
      "449": {
        start: {
          line: 949,
          column: 4
        },
        end: {
          line: 949,
          column: 31
        }
      },
      "450": {
        start: {
          line: 957,
          column: 12
        },
        end: {
          line: 957,
          column: 25
        }
      },
      "451": {
        start: {
          line: 958,
          column: 14
        },
        end: {
          line: 958,
          column: 27
        }
      },
      "452": {
        start: {
          line: 959,
          column: 14
        },
        end: {
          line: 959,
          column: 27
        }
      },
      "453": {
        start: {
          line: 960,
          column: 22
        },
        end: {
          line: 960,
          column: 57
        }
      },
      "454": {
        start: {
          line: 961,
          column: 4
        },
        end: {
          line: 961,
          column: 25
        }
      },
      "455": {
        start: {
          line: 963,
          column: 4
        },
        end: {
          line: 963,
          column: 44
        }
      },
      "456": {
        start: {
          line: 965,
          column: 4
        },
        end: {
          line: 965,
          column: 58
        }
      },
      "457": {
        start: {
          line: 966,
          column: 4
        },
        end: {
          line: 966,
          column: 45
        }
      },
      "458": {
        start: {
          line: 967,
          column: 4
        },
        end: {
          line: 967,
          column: 25
        }
      },
      "459": {
        start: {
          line: 969,
          column: 4
        },
        end: {
          line: 989,
          column: 5
        }
      },
      "460": {
        start: {
          line: 970,
          column: 23
        },
        end: {
          line: 970,
          column: 48
        }
      },
      "461": {
        start: {
          line: 971,
          column: 6
        },
        end: {
          line: 971,
          column: 74
        }
      },
      "462": {
        start: {
          line: 973,
          column: 6
        },
        end: {
          line: 975,
          column: 9
        }
      },
      "463": {
        start: {
          line: 974,
          column: 8
        },
        end: {
          line: 974,
          column: 37
        }
      },
      "464": {
        start: {
          line: 977,
          column: 6
        },
        end: {
          line: 977,
          column: 45
        }
      },
      "465": {
        start: {
          line: 979,
          column: 6
        },
        end: {
          line: 983,
          column: 9
        }
      },
      "466": {
        start: {
          line: 980,
          column: 19
        },
        end: {
          line: 980,
          column: 29
        }
      },
      "467": {
        start: {
          line: 981,
          column: 8
        },
        end: {
          line: 981,
          column: 26
        }
      },
      "468": {
        start: {
          line: 982,
          column: 8
        },
        end: {
          line: 982,
          column: 53
        }
      },
      "469": {
        start: {
          line: 985,
          column: 17
        },
        end: {
          line: 985,
          column: 32
        }
      },
      "470": {
        start: {
          line: 986,
          column: 6
        },
        end: {
          line: 986,
          column: 95
        }
      },
      "471": {
        start: {
          line: 987,
          column: 6
        },
        end: {
          line: 987,
          column: 61
        }
      },
      "472": {
        start: {
          line: 988,
          column: 6
        },
        end: {
          line: 988,
          column: 24
        }
      },
      "473": {
        start: {
          line: 991,
          column: 4
        },
        end: {
          line: 991,
          column: 46
        }
      },
      "474": {
        start: {
          line: 993,
          column: 4
        },
        end: {
          line: 1005,
          column: 7
        }
      },
      "475": {
        start: {
          line: 995,
          column: 6
        },
        end: {
          line: 997,
          column: 7
        }
      },
      "476": {
        start: {
          line: 996,
          column: 8
        },
        end: {
          line: 996,
          column: 33
        }
      },
      "477": {
        start: {
          line: 999,
          column: 6
        },
        end: {
          line: 999,
          column: 37
        }
      },
      "478": {
        start: {
          line: 1000,
          column: 6
        },
        end: {
          line: 1000,
          column: 66
        }
      },
      "479": {
        start: {
          line: 1002,
          column: 6
        },
        end: {
          line: 1004,
          column: 7
        }
      },
      "480": {
        start: {
          line: 1003,
          column: 8
        },
        end: {
          line: 1003,
          column: 26
        }
      },
      "481": {
        start: {
          line: 1007,
          column: 19
        },
        end: {
          line: 1007,
          column: 32
        }
      },
      "482": {
        start: {
          line: 1008,
          column: 4
        },
        end: {
          line: 1008,
          column: 55
        }
      },
      "483": {
        start: {
          line: 1009,
          column: 4
        },
        end: {
          line: 1009,
          column: 26
        }
      },
      "484": {
        start: {
          line: 1011,
          column: 4
        },
        end: {
          line: 1013,
          column: 5
        }
      },
      "485": {
        start: {
          line: 1012,
          column: 6
        },
        end: {
          line: 1012,
          column: 58
        }
      },
      "486": {
        start: {
          line: 1015,
          column: 4
        },
        end: {
          line: 1019,
          column: 5
        }
      },
      "487": {
        start: {
          line: 1016,
          column: 6
        },
        end: {
          line: 1016,
          column: 51
        }
      },
      "488": {
        start: {
          line: 1017,
          column: 6
        },
        end: {
          line: 1017,
          column: 38
        }
      },
      "489": {
        start: {
          line: 1018,
          column: 6
        },
        end: {
          line: 1018,
          column: 26
        }
      },
      "490": {
        start: {
          line: 1021,
          column: 4
        },
        end: {
          line: 1021,
          column: 43
        }
      },
      "491": {
        start: {
          line: 1025,
          column: 4
        },
        end: {
          line: 1025,
          column: 40
        }
      },
      "492": {
        start: {
          line: 1029,
          column: 4
        },
        end: {
          line: 1029,
          column: 46
        }
      },
      "493": {
        start: {
          line: 1033,
          column: 15
        },
        end: {
          line: 1033,
          column: 17
        }
      },
      "494": {
        start: {
          line: 1034,
          column: 17
        },
        end: {
          line: 1034,
          column: 21
        }
      },
      "495": {
        start: {
          line: 1035,
          column: 17
        },
        end: {
          line: 1035,
          column: 41
        }
      },
      "496": {
        start: {
          line: 1036,
          column: 21
        },
        end: {
          line: 1036,
          column: 40
        }
      },
      "497": {
        start: {
          line: 1039,
          column: 4
        },
        end: {
          line: 1046,
          column: 7
        }
      },
      "498": {
        start: {
          line: 1040,
          column: 6
        },
        end: {
          line: 1045,
          column: 7
        }
      },
      "499": {
        start: {
          line: 1041,
          column: 8
        },
        end: {
          line: 1041,
          column: 21
        }
      },
      "500": {
        start: {
          line: 1043,
          column: 8
        },
        end: {
          line: 1043,
          column: 43
        }
      },
      "501": {
        start: {
          line: 1044,
          column: 8
        },
        end: {
          line: 1044,
          column: 23
        }
      },
      "502": {
        start: {
          line: 1048,
          column: 22
        },
        end: {
          line: 1048,
          column: 68
        }
      },
      "503": {
        start: {
          line: 1048,
          column: 42
        },
        end: {
          line: 1048,
          column: 56
        }
      },
      "504": {
        start: {
          line: 1051,
          column: 21
        },
        end: {
          line: 1051,
          column: 52
        }
      },
      "505": {
        start: {
          line: 1051,
          column: 37
        },
        end: {
          line: 1051,
          column: 51
        }
      },
      "506": {
        start: {
          line: 1052,
          column: 23
        },
        end: {
          line: 1052,
          column: 89
        }
      },
      "507": {
        start: {
          line: 1052,
          column: 70
        },
        end: {
          line: 1052,
          column: 88
        }
      },
      "508": {
        start: {
          line: 1059,
          column: 4
        },
        end: {
          line: 1063,
          column: 5
        }
      },
      "509": {
        start: {
          line: 1060,
          column: 6
        },
        end: {
          line: 1060,
          column: 35
        }
      },
      "510": {
        start: {
          line: 1062,
          column: 6
        },
        end: {
          line: 1062,
          column: 30
        }
      },
      "511": {
        start: {
          line: 1064,
          column: 4
        },
        end: {
          line: 1073,
          column: 47
        }
      },
      "512": {
        start: {
          line: 1078,
          column: 4
        },
        end: {
          line: 1081,
          column: 7
        }
      },
      "513": {
        start: {
          line: 1079,
          column: 6
        },
        end: {
          line: 1079,
          column: 67
        }
      },
      "514": {
        start: {
          line: 1080,
          column: 6
        },
        end: {
          line: 1080,
          column: 49
        }
      },
      "515": {
        start: {
          line: 1084,
          column: 4
        },
        end: {
          line: 1093,
          column: 5
        }
      },
      "516": {
        start: {
          line: 1085,
          column: 6
        },
        end: {
          line: 1092,
          column: 9
        }
      },
      "517": {
        start: {
          line: 1086,
          column: 21
        },
        end: {
          line: 1086,
          column: 35
        }
      },
      "518": {
        start: {
          line: 1087,
          column: 8
        },
        end: {
          line: 1087,
          column: 44
        }
      },
      "519": {
        start: {
          line: 1088,
          column: 8
        },
        end: {
          line: 1088,
          column: 78
        }
      },
      "520": {
        start: {
          line: 1089,
          column: 8
        },
        end: {
          line: 1089,
          column: 46
        }
      },
      "521": {
        start: {
          line: 1090,
          column: 8
        },
        end: {
          line: 1090,
          column: 55
        }
      },
      "522": {
        start: {
          line: 1091,
          column: 8
        },
        end: {
          line: 1091,
          column: 25
        }
      },
      "523": {
        start: {
          line: 1095,
          column: 21
        },
        end: {
          line: 1095,
          column: 39
        }
      },
      "524": {
        start: {
          line: 1097,
          column: 4
        },
        end: {
          line: 1099,
          column: 7
        }
      },
      "525": {
        start: {
          line: 1098,
          column: 6
        },
        end: {
          line: 1098,
          column: 41
        }
      },
      "526": {
        start: {
          line: 1101,
          column: 4
        },
        end: {
          line: 1101,
          column: 81
        }
      },
      "527": {
        start: {
          line: 1102,
          column: 4
        },
        end: {
          line: 1102,
          column: 66
        }
      },
      "528": {
        start: {
          line: 1103,
          column: 4
        },
        end: {
          line: 1103,
          column: 26
        }
      },
      "529": {
        start: {
          line: 1104,
          column: 4
        },
        end: {
          line: 1104,
          column: 22
        }
      },
      "530": {
        start: {
          line: 1106,
          column: 4
        },
        end: {
          line: 1106,
          column: 18
        }
      },
      "531": {
        start: {
          line: 1110,
          column: 17
        },
        end: {
          line: 1110,
          column: 41
        }
      },
      "532": {
        start: {
          line: 1113,
          column: 15
        },
        end: {
          line: 1113,
          column: 30
        }
      },
      "533": {
        start: {
          line: 1114,
          column: 4
        },
        end: {
          line: 1114,
          column: 28
        }
      },
      "534": {
        start: {
          line: 1116,
          column: 4
        },
        end: {
          line: 1123,
          column: 5
        }
      },
      "535": {
        start: {
          line: 1117,
          column: 6
        },
        end: {
          line: 1117,
          column: 57
        }
      },
      "536": {
        start: {
          line: 1119,
          column: 6
        },
        end: {
          line: 1121,
          column: 7
        }
      },
      "537": {
        start: {
          line: 1120,
          column: 8
        },
        end: {
          line: 1120,
          column: 56
        }
      },
      "538": {
        start: {
          line: 1122,
          column: 6
        },
        end: {
          line: 1122,
          column: 67
        }
      },
      "539": {
        start: {
          line: 1128,
          column: 4
        },
        end: {
          line: 1128,
          column: 32
        }
      },
      "540": {
        start: {
          line: 1129,
          column: 19
        },
        end: {
          line: 1129,
          column: 50
        }
      },
      "541": {
        start: {
          line: 1130,
          column: 4
        },
        end: {
          line: 1130,
          column: 40
        }
      },
      "542": {
        start: {
          line: 1134,
          column: 29
        },
        end: {
          line: 1134,
          column: 42
        }
      },
      "543": {
        start: {
          line: 1135,
          column: 23
        },
        end: {
          line: 1135,
          column: 43
        }
      },
      "544": {
        start: {
          line: 1136,
          column: 15
        },
        end: {
          line: 1136,
          column: 51
        }
      },
      "545": {
        start: {
          line: 1137,
          column: 28
        },
        end: {
          line: 1137,
          column: 61
        }
      },
      "546": {
        start: {
          line: 1138,
          column: 29
        },
        end: {
          line: 1138,
          column: 63
        }
      },
      "547": {
        start: {
          line: 1139,
          column: 4
        },
        end: {
          line: 1139,
          column: 76
        }
      },
      "548": {
        start: {
          line: 1140,
          column: 4
        },
        end: {
          line: 1140,
          column: 50
        }
      },
      "549": {
        start: {
          line: 1141,
          column: 4
        },
        end: {
          line: 1141,
          column: 86
        }
      },
      "550": {
        start: {
          line: 1142,
          column: 4
        },
        end: {
          line: 1142,
          column: 28
        }
      },
      "551": {
        start: {
          line: 1146,
          column: 19
        },
        end: {
          line: 1146,
          column: 36
        }
      },
      "552": {
        start: {
          line: 1147,
          column: 15
        },
        end: {
          line: 1147,
          column: 66
        }
      },
      "553": {
        start: {
          line: 1148,
          column: 4
        },
        end: {
          line: 1148,
          column: 26
        }
      },
      "554": {
        start: {
          line: 1150,
          column: 4
        },
        end: {
          line: 1152,
          column: 30
        }
      },
      "555": {
        start: {
          line: 1153,
          column: 4
        },
        end: {
          line: 1153,
          column: 26
        }
      },
      "556": {
        start: {
          line: 1155,
          column: 4
        },
        end: {
          line: 1155,
          column: 26
        }
      },
      "557": {
        start: {
          line: 1157,
          column: 4
        },
        end: {
          line: 1161,
          column: 5
        }
      },
      "558": {
        start: {
          line: 1158,
          column: 6
        },
        end: {
          line: 1158,
          column: 55
        }
      },
      "559": {
        start: {
          line: 1160,
          column: 6
        },
        end: {
          line: 1160,
          column: 65
        }
      },
      "560": {
        start: {
          line: 1165,
          column: 23
        },
        end: {
          line: 1165,
          column: 74
        }
      },
      "561": {
        start: {
          line: 1166,
          column: 4
        },
        end: {
          line: 1166,
          column: 26
        }
      },
      "562": {
        start: {
          line: 1168,
          column: 4
        },
        end: {
          line: 1170,
          column: 38
        }
      },
      "563": {
        start: {
          line: 1171,
          column: 4
        },
        end: {
          line: 1171,
          column: 26
        }
      },
      "564": {
        start: {
          line: 1173,
          column: 4
        },
        end: {
          line: 1199,
          column: 7
        }
      },
      "565": {
        start: {
          line: 1176,
          column: 15
        },
        end: {
          line: 1176,
          column: 28
        }
      },
      "566": {
        start: {
          line: 1178,
          column: 6
        },
        end: {
          line: 1184,
          column: 7
        }
      },
      "567": {
        start: {
          line: 1179,
          column: 8
        },
        end: {
          line: 1179,
          column: 34
        }
      },
      "568": {
        start: {
          line: 1180,
          column: 8
        },
        end: {
          line: 1180,
          column: 37
        }
      },
      "569": {
        start: {
          line: 1182,
          column: 8
        },
        end: {
          line: 1182,
          column: 30
        }
      },
      "570": {
        start: {
          line: 1183,
          column: 8
        },
        end: {
          line: 1183,
          column: 21
        }
      },
      "571": {
        start: {
          line: 1186,
          column: 6
        },
        end: {
          line: 1186,
          column: 93
        }
      },
      "572": {
        start: {
          line: 1187,
          column: 6
        },
        end: {
          line: 1187,
          column: 55
        }
      },
      "573": {
        start: {
          line: 1188,
          column: 6
        },
        end: {
          line: 1188,
          column: 33
        }
      },
      "574": {
        start: {
          line: 1189,
          column: 6
        },
        end: {
          line: 1189,
          column: 74
        }
      },
      "575": {
        start: {
          line: 1190,
          column: 6
        },
        end: {
          line: 1190,
          column: 26
        }
      },
      "576": {
        start: {
          line: 1192,
          column: 6
        },
        end: {
          line: 1192,
          column: 27
        }
      },
      "577": {
        start: {
          line: 1194,
          column: 6
        },
        end: {
          line: 1198,
          column: 7
        }
      },
      "578": {
        start: {
          line: 1195,
          column: 8
        },
        end: {
          line: 1195,
          column: 56
        }
      },
      "579": {
        start: {
          line: 1197,
          column: 8
        },
        end: {
          line: 1197,
          column: 66
        }
      },
      "580": {
        start: {
          line: 1203,
          column: 13
        },
        end: {
          line: 1203,
          column: 26
        }
      },
      "581": {
        start: {
          line: 1215,
          column: 4
        },
        end: {
          line: 1217,
          column: 5
        }
      },
      "582": {
        start: {
          line: 1216,
          column: 6
        },
        end: {
          line: 1216,
          column: 78
        }
      },
      "583": {
        start: {
          line: 1218,
          column: 4
        },
        end: {
          line: 1218,
          column: 57
        }
      },
      "584": {
        start: {
          line: 1219,
          column: 4
        },
        end: {
          line: 1221,
          column: 5
        }
      },
      "585": {
        start: {
          line: 1220,
          column: 6
        },
        end: {
          line: 1220,
          column: 22
        }
      },
      "586": {
        start: {
          line: 1222,
          column: 4
        },
        end: {
          line: 1222,
          column: 79
        }
      },
      "587": {
        start: {
          line: 1223,
          column: 4
        },
        end: {
          line: 1223,
          column: 38
        }
      },
      "588": {
        start: {
          line: 1225,
          column: 4
        },
        end: {
          line: 1225,
          column: 29
        }
      },
      "589": {
        start: {
          line: 1226,
          column: 4
        },
        end: {
          line: 1226,
          column: 36
        }
      },
      "590": {
        start: {
          line: 1227,
          column: 4
        },
        end: {
          line: 1227,
          column: 26
        }
      },
      "591": {
        start: {
          line: 1231,
          column: 15
        },
        end: {
          line: 1231,
          column: 35
        }
      },
      "592": {
        start: {
          line: 1232,
          column: 13
        },
        end: {
          line: 1232,
          column: 30
        }
      },
      "593": {
        start: {
          line: 1234,
          column: 15
        },
        end: {
          line: 1234,
          column: 37
        }
      },
      "594": {
        start: {
          line: 1235,
          column: 4
        },
        end: {
          line: 1235,
          column: 88
        }
      },
      "595": {
        start: {
          line: 1236,
          column: 4
        },
        end: {
          line: 1236,
          column: 55
        }
      },
      "596": {
        start: {
          line: 1237,
          column: 4
        },
        end: {
          line: 1237,
          column: 26
        }
      },
      "597": {
        start: {
          line: 1238,
          column: 4
        },
        end: {
          line: 1238,
          column: 22
        }
      },
      "598": {
        start: {
          line: 1242,
          column: 12
        },
        end: {
          line: 1242,
          column: 25
        }
      },
      "599": {
        start: {
          line: 1244,
          column: 29
        },
        end: {
          line: 1244,
          column: 79
        }
      },
      "600": {
        start: {
          line: 1249,
          column: 4
        },
        end: {
          line: 1249,
          column: 59
        }
      },
      "601": {
        start: {
          line: 1251,
          column: 4
        },
        end: {
          line: 1251,
          column: 63
        }
      },
      "602": {
        start: {
          line: 1252,
          column: 4
        },
        end: {
          line: 1252,
          column: 75
        }
      },
      "603": {
        start: {
          line: 1253,
          column: 4
        },
        end: {
          line: 1253,
          column: 24
        }
      },
      "604": {
        start: {
          line: 1255,
          column: 4
        },
        end: {
          line: 1255,
          column: 26
        }
      },
      "605": {
        start: {
          line: 1259,
          column: 4
        },
        end: {
          line: 1259,
          column: 38
        }
      },
      "606": {
        start: {
          line: 1260,
          column: 4
        },
        end: {
          line: 1260,
          column: 34
        }
      },
      "607": {
        start: {
          line: 1261,
          column: 4
        },
        end: {
          line: 1261,
          column: 43
        }
      },
      "608": {
        start: {
          line: 1263,
          column: 4
        },
        end: {
          line: 1263,
          column: 32
        }
      },
      "609": {
        start: {
          line: 1264,
          column: 15
        },
        end: {
          line: 1264,
          column: 79
        }
      },
      "610": {
        start: {
          line: 1265,
          column: 4
        },
        end: {
          line: 1265,
          column: 47
        }
      },
      "611": {
        start: {
          line: 1266,
          column: 4
        },
        end: {
          line: 1266,
          column: 30
        }
      },
      "612": {
        start: {
          line: 1267,
          column: 4
        },
        end: {
          line: 1267,
          column: 26
        }
      },
      "613": {
        start: {
          line: 1269,
          column: 16
        },
        end: {
          line: 1269,
          column: 29
        }
      },
      "614": {
        start: {
          line: 1270,
          column: 4
        },
        end: {
          line: 1270,
          column: 34
        }
      },
      "615": {
        start: {
          line: 1271,
          column: 4
        },
        end: {
          line: 1271,
          column: 52
        }
      },
      "616": {
        start: {
          line: 1272,
          column: 4
        },
        end: {
          line: 1272,
          column: 130
        }
      },
      "617": {
        start: {
          line: 1273,
          column: 4
        },
        end: {
          line: 1273,
          column: 53
        }
      },
      "618": {
        start: {
          line: 1274,
          column: 4
        },
        end: {
          line: 1274,
          column: 26
        }
      },
      "619": {
        start: {
          line: 1276,
          column: 4
        },
        end: {
          line: 1276,
          column: 34
        }
      },
      "620": {
        start: {
          line: 1277,
          column: 4
        },
        end: {
          line: 1277,
          column: 50
        }
      },
      "621": {
        start: {
          line: 1278,
          column: 4
        },
        end: {
          line: 1278,
          column: 38
        }
      },
      "622": {
        start: {
          line: 1280,
          column: 4
        },
        end: {
          line: 1280,
          column: 30
        }
      },
      "623": {
        start: {
          line: 1281,
          column: 4
        },
        end: {
          line: 1281,
          column: 36
        }
      },
      "624": {
        start: {
          line: 1282,
          column: 4
        },
        end: {
          line: 1282,
          column: 38
        }
      },
      "625": {
        start: {
          line: 1283,
          column: 4
        },
        end: {
          line: 1283,
          column: 26
        }
      },
      "626": {
        start: {
          line: 1284,
          column: 4
        },
        end: {
          line: 1284,
          column: 55
        }
      },
      "627": {
        start: {
          line: 1285,
          column: 4
        },
        end: {
          line: 1285,
          column: 26
        }
      },
      "628": {
        start: {
          line: 1289,
          column: 4
        },
        end: {
          line: 1289,
          column: 37
        }
      },
      "629": {
        start: {
          line: 1295,
          column: 17
        },
        end: {
          line: 1295,
          column: 28
        }
      },
      "630": {
        start: {
          line: 1296,
          column: 4
        },
        end: {
          line: 1296,
          column: 27
        }
      },
      "631": {
        start: {
          line: 1297,
          column: 4
        },
        end: {
          line: 1297,
          column: 36
        }
      },
      "632": {
        start: {
          line: 1298,
          column: 4
        },
        end: {
          line: 1298,
          column: 39
        }
      },
      "633": {
        start: {
          line: 1299,
          column: 4
        },
        end: {
          line: 1301,
          column: 7
        }
      },
      "634": {
        start: {
          line: 1300,
          column: 6
        },
        end: {
          line: 1300,
          column: 37
        }
      },
      "635": {
        start: {
          line: 1302,
          column: 4
        },
        end: {
          line: 1302,
          column: 37
        }
      },
      "636": {
        start: {
          line: 1303,
          column: 4
        },
        end: {
          line: 1303,
          column: 27
        }
      },
      "637": {
        start: {
          line: 1305,
          column: 4
        },
        end: {
          line: 1305,
          column: 25
        }
      },
      "638": {
        start: {
          line: 1309,
          column: 21
        },
        end: {
          line: 1309,
          column: 34
        }
      },
      "639": {
        start: {
          line: 1310,
          column: 4
        },
        end: {
          line: 1335,
          column: 7
        }
      },
      "640": {
        start: {
          line: 1313,
          column: 6
        },
        end: {
          line: 1334,
          column: 7
        }
      },
      "641": {
        start: {
          line: 1314,
          column: 8
        },
        end: {
          line: 1320,
          column: 9
        }
      },
      "642": {
        start: {
          line: 1315,
          column: 10
        },
        end: {
          line: 1315,
          column: 44
        }
      },
      "643": {
        start: {
          line: 1317,
          column: 10
        },
        end: {
          line: 1317,
          column: 44
        }
      },
      "644": {
        start: {
          line: 1318,
          column: 10
        },
        end: {
          line: 1318,
          column: 42
        }
      },
      "645": {
        start: {
          line: 1319,
          column: 10
        },
        end: {
          line: 1319,
          column: 30
        }
      },
      "646": {
        start: {
          line: 1322,
          column: 8
        },
        end: {
          line: 1322,
          column: 37
        }
      },
      "647": {
        start: {
          line: 1323,
          column: 8
        },
        end: {
          line: 1323,
          column: 103
        }
      },
      "648": {
        start: {
          line: 1325,
          column: 8
        },
        end: {
          line: 1327,
          column: 9
        }
      },
      "649": {
        start: {
          line: 1326,
          column: 10
        },
        end: {
          line: 1326,
          column: 105
        }
      },
      "650": {
        start: {
          line: 1328,
          column: 8
        },
        end: {
          line: 1328,
          column: 35
        }
      },
      "651": {
        start: {
          line: 1329,
          column: 8
        },
        end: {
          line: 1331,
          column: 9
        }
      },
      "652": {
        start: {
          line: 1330,
          column: 10
        },
        end: {
          line: 1330,
          column: 55
        }
      },
      "653": {
        start: {
          line: 1332,
          column: 8
        },
        end: {
          line: 1332,
          column: 48
        }
      },
      "654": {
        start: {
          line: 1333,
          column: 8
        },
        end: {
          line: 1333,
          column: 35
        }
      },
      "655": {
        start: {
          line: 1339,
          column: 4
        },
        end: {
          line: 1341,
          column: 5
        }
      },
      "656": {
        start: {
          line: 1340,
          column: 6
        },
        end: {
          line: 1340,
          column: 60
        }
      },
      "657": {
        start: {
          line: 1343,
          column: 4
        },
        end: {
          line: 1343,
          column: 24
        }
      },
      "658": {
        start: {
          line: 1345,
          column: 4
        },
        end: {
          line: 1345,
          column: 38
        }
      },
      "659": {
        start: {
          line: 1346,
          column: 4
        },
        end: {
          line: 1346,
          column: 49
        }
      },
      "660": {
        start: {
          line: 1347,
          column: 4
        },
        end: {
          line: 1347,
          column: 39
        }
      },
      "661": {
        start: {
          line: 1348,
          column: 4
        },
        end: {
          line: 1360,
          column: 5
        }
      },
      "662": {
        start: {
          line: 1349,
          column: 6
        },
        end: {
          line: 1349,
          column: 41
        }
      },
      "663": {
        start: {
          line: 1350,
          column: 6
        },
        end: {
          line: 1350,
          column: 62
        }
      },
      "664": {
        start: {
          line: 1351,
          column: 6
        },
        end: {
          line: 1351,
          column: 47
        }
      },
      "665": {
        start: {
          line: 1352,
          column: 6
        },
        end: {
          line: 1352,
          column: 108
        }
      },
      "666": {
        start: {
          line: 1353,
          column: 6
        },
        end: {
          line: 1353,
          column: 35
        }
      },
      "667": {
        start: {
          line: 1354,
          column: 6
        },
        end: {
          line: 1354,
          column: 78
        }
      },
      "668": {
        start: {
          line: 1355,
          column: 6
        },
        end: {
          line: 1355,
          column: 28
        }
      },
      "669": {
        start: {
          line: 1356,
          column: 6
        },
        end: {
          line: 1356,
          column: 40
        }
      },
      "670": {
        start: {
          line: 1357,
          column: 6
        },
        end: {
          line: 1357,
          column: 66
        }
      },
      "671": {
        start: {
          line: 1358,
          column: 6
        },
        end: {
          line: 1358,
          column: 28
        }
      },
      "672": {
        start: {
          line: 1359,
          column: 6
        },
        end: {
          line: 1359,
          column: 33
        }
      },
      "673": {
        start: {
          line: 1361,
          column: 4
        },
        end: {
          line: 1361,
          column: 43
        }
      },
      "674": {
        start: {
          line: 1362,
          column: 4
        },
        end: {
          line: 1362,
          column: 87
        }
      },
      "675": {
        start: {
          line: 1363,
          column: 4
        },
        end: {
          line: 1363,
          column: 31
        }
      },
      "676": {
        start: {
          line: 1364,
          column: 4
        },
        end: {
          line: 1364,
          column: 48
        }
      },
      "677": {
        start: {
          line: 1365,
          column: 4
        },
        end: {
          line: 1365,
          column: 24
        }
      },
      "678": {
        start: {
          line: 1366,
          column: 4
        },
        end: {
          line: 1368,
          column: 5
        }
      },
      "679": {
        start: {
          line: 1367,
          column: 6
        },
        end: {
          line: 1367,
          column: 26
        }
      },
      "680": {
        start: {
          line: 1369,
          column: 4
        },
        end: {
          line: 1369,
          column: 28
        }
      },
      "681": {
        start: {
          line: 1371,
          column: 4
        },
        end: {
          line: 1371,
          column: 24
        }
      },
      "682": {
        start: {
          line: 1373,
          column: 23
        },
        end: {
          line: 1373,
          column: 25
        }
      },
      "683": {
        start: {
          line: 1375,
          column: 19
        },
        end: {
          line: 1375,
          column: 44
        }
      },
      "684": {
        start: {
          line: 1377,
          column: 4
        },
        end: {
          line: 1391,
          column: 7
        }
      },
      "685": {
        start: {
          line: 1378,
          column: 19
        },
        end: {
          line: 1378,
          column: 35
        }
      },
      "686": {
        start: {
          line: 1380,
          column: 6
        },
        end: {
          line: 1382,
          column: 7
        }
      },
      "687": {
        start: {
          line: 1381,
          column: 8
        },
        end: {
          line: 1381,
          column: 67
        }
      },
      "688": {
        start: {
          line: 1383,
          column: 6
        },
        end: {
          line: 1383,
          column: 28
        }
      },
      "689": {
        start: {
          line: 1385,
          column: 6
        },
        end: {
          line: 1385,
          column: 46
        }
      },
      "690": {
        start: {
          line: 1387,
          column: 21
        },
        end: {
          line: 1387,
          column: 32
        }
      },
      "691": {
        start: {
          line: 1388,
          column: 6
        },
        end: {
          line: 1388,
          column: 54
        }
      },
      "692": {
        start: {
          line: 1389,
          column: 6
        },
        end: {
          line: 1389,
          column: 41
        }
      },
      "693": {
        start: {
          line: 1390,
          column: 6
        },
        end: {
          line: 1390,
          column: 26
        }
      },
      "694": {
        start: {
          line: 1393,
          column: 4
        },
        end: {
          line: 1393,
          column: 31
        }
      },
      "695": {
        start: {
          line: 1395,
          column: 4
        },
        end: {
          line: 1398,
          column: 7
        }
      },
      "696": {
        start: {
          line: 1396,
          column: 24
        },
        end: {
          line: 1396,
          column: 47
        }
      },
      "697": {
        start: {
          line: 1397,
          column: 6
        },
        end: {
          line: 1397,
          column: 52
        }
      },
      "698": {
        start: {
          line: 1400,
          column: 4
        },
        end: {
          line: 1400,
          column: 37
        }
      },
      "699": {
        start: {
          line: 1404,
          column: 19
        },
        end: {
          line: 1404,
          column: 50
        }
      },
      "700": {
        start: {
          line: 1405,
          column: 4
        },
        end: {
          line: 1409,
          column: 5
        }
      },
      "701": {
        start: {
          line: 1406,
          column: 6
        },
        end: {
          line: 1406,
          column: 39
        }
      },
      "702": {
        start: {
          line: 1408,
          column: 6
        },
        end: {
          line: 1408,
          column: 91
        }
      },
      "703": {
        start: {
          line: 1413,
          column: 4
        },
        end: {
          line: 1413,
          column: 33
        }
      },
      "704": {
        start: {
          line: 1417,
          column: 0
        },
        end: {
          line: 1439,
          column: 2
        }
      },
      "705": {
        start: {
          line: 1419,
          column: 4
        },
        end: {
          line: 1422,
          column: 5
        }
      },
      "706": {
        start: {
          line: 1420,
          column: 6
        },
        end: {
          line: 1420,
          column: 21
        }
      },
      "707": {
        start: {
          line: 1421,
          column: 6
        },
        end: {
          line: 1421,
          column: 22
        }
      },
      "708": {
        start: {
          line: 1423,
          column: 14
        },
        end: {
          line: 1423,
          column: 64
        }
      },
      "709": {
        start: {
          line: 1426,
          column: 26
        },
        end: {
          line: 1426,
          column: 88
        }
      },
      "710": {
        start: {
          line: 1426,
          column: 56
        },
        end: {
          line: 1426,
          column: 70
        }
      },
      "711": {
        start: {
          line: 1426,
          column: 84
        },
        end: {
          line: 1426,
          column: 87
        }
      },
      "712": {
        start: {
          line: 1428,
          column: 25
        },
        end: {
          line: 1428,
          column: 82
        }
      },
      "713": {
        start: {
          line: 1428,
          column: 64
        },
        end: {
          line: 1428,
          column: 76
        }
      },
      "714": {
        start: {
          line: 1430,
          column: 4
        },
        end: {
          line: 1434,
          column: 7
        }
      },
      "715": {
        start: {
          line: 1435,
          column: 4
        },
        end: {
          line: 1435,
          column: 23
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 24,
            column: 2
          },
          end: {
            line: 24,
            column: 3
          }
        },
        loc: {
          start: {
            line: 24,
            column: 48
          },
          end: {
            line: 35,
            column: 3
          }
        },
        line: 24
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 37,
            column: 2
          },
          end: {
            line: 37,
            column: 3
          }
        },
        loc: {
          start: {
            line: 37,
            column: 27
          },
          end: {
            line: 46,
            column: 3
          }
        },
        line: 37
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 48,
            column: 2
          },
          end: {
            line: 48,
            column: 3
          }
        },
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 58,
            column: 3
          }
        },
        line: 48
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 60,
            column: 2
          },
          end: {
            line: 60,
            column: 3
          }
        },
        loc: {
          start: {
            line: 60,
            column: 15
          },
          end: {
            line: 62,
            column: 3
          }
        },
        line: 60
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 64,
            column: 2
          },
          end: {
            line: 64,
            column: 3
          }
        },
        loc: {
          start: {
            line: 64,
            column: 14
          },
          end: {
            line: 66,
            column: 3
          }
        },
        line: 64
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 68,
            column: 2
          },
          end: {
            line: 68,
            column: 3
          }
        },
        loc: {
          start: {
            line: 68,
            column: 18
          },
          end: {
            line: 70,
            column: 3
          }
        },
        line: 68
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 72,
            column: 2
          },
          end: {
            line: 72,
            column: 3
          }
        },
        loc: {
          start: {
            line: 72,
            column: 23
          },
          end: {
            line: 74,
            column: 3
          }
        },
        line: 72
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 73,
            column: 18
          },
          end: {
            line: 73,
            column: 19
          }
        },
        loc: {
          start: {
            line: 73,
            column: 28
          },
          end: {
            line: 73,
            column: 48
          }
        },
        line: 73
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 76,
            column: 2
          },
          end: {
            line: 76,
            column: 3
          }
        },
        loc: {
          start: {
            line: 76,
            column: 29
          },
          end: {
            line: 93,
            column: 3
          }
        },
        line: 76
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 95,
            column: 2
          },
          end: {
            line: 95,
            column: 3
          }
        },
        loc: {
          start: {
            line: 95,
            column: 25
          },
          end: {
            line: 106,
            column: 3
          }
        },
        line: 95
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 110,
            column: 2
          },
          end: {
            line: 110,
            column: 3
          }
        },
        loc: {
          start: {
            line: 110,
            column: 20
          },
          end: {
            line: 114,
            column: 3
          }
        },
        line: 110
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 116,
            column: 2
          },
          end: {
            line: 116,
            column: 3
          }
        },
        loc: {
          start: {
            line: 116,
            column: 18
          },
          end: {
            line: 120,
            column: 3
          }
        },
        line: 116
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 123,
            column: 2
          },
          end: {
            line: 123,
            column: 3
          }
        },
        loc: {
          start: {
            line: 123,
            column: 25
          },
          end: {
            line: 129,
            column: 3
          }
        },
        line: 123
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 131,
            column: 2
          },
          end: {
            line: 131,
            column: 3
          }
        },
        loc: {
          start: {
            line: 131,
            column: 23
          },
          end: {
            line: 140,
            column: 3
          }
        },
        line: 131
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 142,
            column: 2
          },
          end: {
            line: 142,
            column: 3
          }
        },
        loc: {
          start: {
            line: 142,
            column: 25
          },
          end: {
            line: 149,
            column: 3
          }
        },
        line: 142
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 151,
            column: 2
          },
          end: {
            line: 151,
            column: 3
          }
        },
        loc: {
          start: {
            line: 151,
            column: 23
          },
          end: {
            line: 160,
            column: 3
          }
        },
        line: 151
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 162,
            column: 2
          },
          end: {
            line: 162,
            column: 3
          }
        },
        loc: {
          start: {
            line: 162,
            column: 43
          },
          end: {
            line: 176,
            column: 3
          }
        },
        line: 162
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 178,
            column: 2
          },
          end: {
            line: 178,
            column: 3
          }
        },
        loc: {
          start: {
            line: 178,
            column: 41
          },
          end: {
            line: 187,
            column: 3
          }
        },
        line: 178
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 189,
            column: 2
          },
          end: {
            line: 189,
            column: 3
          }
        },
        loc: {
          start: {
            line: 189,
            column: 26
          },
          end: {
            line: 211,
            column: 3
          }
        },
        line: 189
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 213,
            column: 2
          },
          end: {
            line: 213,
            column: 3
          }
        },
        loc: {
          start: {
            line: 213,
            column: 24
          },
          end: {
            line: 221,
            column: 3
          }
        },
        line: 213
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 223,
            column: 2
          },
          end: {
            line: 223,
            column: 3
          }
        },
        loc: {
          start: {
            line: 223,
            column: 19
          },
          end: {
            line: 225,
            column: 3
          }
        },
        line: 223
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 227,
            column: 2
          },
          end: {
            line: 227,
            column: 3
          }
        },
        loc: {
          start: {
            line: 227,
            column: 22
          },
          end: {
            line: 230,
            column: 3
          }
        },
        line: 227
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 232,
            column: 2
          },
          end: {
            line: 232,
            column: 3
          }
        },
        loc: {
          start: {
            line: 232,
            column: 26
          },
          end: {
            line: 240,
            column: 3
          }
        },
        line: 232
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 242,
            column: 2
          },
          end: {
            line: 242,
            column: 3
          }
        },
        loc: {
          start: {
            line: 242,
            column: 21
          },
          end: {
            line: 247,
            column: 3
          }
        },
        line: 242
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 249,
            column: 2
          },
          end: {
            line: 249,
            column: 3
          }
        },
        loc: {
          start: {
            line: 249,
            column: 11
          },
          end: {
            line: 252,
            column: 3
          }
        },
        line: 249
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 254,
            column: 2
          },
          end: {
            line: 254,
            column: 3
          }
        },
        loc: {
          start: {
            line: 254,
            column: 18
          },
          end: {
            line: 256,
            column: 3
          }
        },
        line: 254
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 258,
            column: 2
          },
          end: {
            line: 258,
            column: 3
          }
        },
        loc: {
          start: {
            line: 258,
            column: 32
          },
          end: {
            line: 262,
            column: 3
          }
        },
        line: 258
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 259,
            column: 26
          },
          end: {
            line: 259,
            column: 27
          }
        },
        loc: {
          start: {
            line: 259,
            column: 37
          },
          end: {
            line: 261,
            column: 5
          }
        },
        line: 259
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 264,
            column: 2
          },
          end: {
            line: 264,
            column: 3
          }
        },
        loc: {
          start: {
            line: 264,
            column: 53
          },
          end: {
            line: 280,
            column: 3
          }
        },
        line: 264
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 269,
            column: 26
          },
          end: {
            line: 269,
            column: 27
          }
        },
        loc: {
          start: {
            line: 269,
            column: 40
          },
          end: {
            line: 275,
            column: 5
          }
        },
        line: 269
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 282,
            column: 2
          },
          end: {
            line: 282,
            column: 3
          }
        },
        loc: {
          start: {
            line: 282,
            column: 34
          },
          end: {
            line: 317,
            column: 3
          }
        },
        line: 282
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 319,
            column: 2
          },
          end: {
            line: 319,
            column: 3
          }
        },
        loc: {
          start: {
            line: 319,
            column: 29
          },
          end: {
            line: 323,
            column: 3
          }
        },
        line: 319
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 320,
            column: 20
          },
          end: {
            line: 320,
            column: 21
          }
        },
        loc: {
          start: {
            line: 320,
            column: 25
          },
          end: {
            line: 320,
            column: 42
          }
        },
        line: 320
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 325,
            column: 2
          },
          end: {
            line: 325,
            column: 3
          }
        },
        loc: {
          start: {
            line: 325,
            column: 43
          },
          end: {
            line: 407,
            column: 3
          }
        },
        line: 325
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 350,
            column: 28
          },
          end: {
            line: 350,
            column: 29
          }
        },
        loc: {
          start: {
            line: 350,
            column: 40
          },
          end: {
            line: 359,
            column: 7
          }
        },
        line: 350
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 363,
            column: 26
          },
          end: {
            line: 363,
            column: 27
          }
        },
        loc: {
          start: {
            line: 363,
            column: 38
          },
          end: {
            line: 384,
            column: 7
          }
        },
        line: 363
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 373,
            column: 33
          },
          end: {
            line: 373,
            column: 34
          }
        },
        loc: {
          start: {
            line: 373,
            column: 39
          },
          end: {
            line: 376,
            column: 11
          }
        },
        line: 373
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 409,
            column: 2
          },
          end: {
            line: 409,
            column: 3
          }
        },
        loc: {
          start: {
            line: 409,
            column: 41
          },
          end: {
            line: 411,
            column: 3
          }
        },
        line: 409
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 413,
            column: 2
          },
          end: {
            line: 413,
            column: 3
          }
        },
        loc: {
          start: {
            line: 413,
            column: 31
          },
          end: {
            line: 415,
            column: 3
          }
        },
        line: 413
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 417,
            column: 2
          },
          end: {
            line: 417,
            column: 3
          }
        },
        loc: {
          start: {
            line: 417,
            column: 23
          },
          end: {
            line: 431,
            column: 3
          }
        },
        line: 417
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 433,
            column: 2
          },
          end: {
            line: 433,
            column: 3
          }
        },
        loc: {
          start: {
            line: 433,
            column: 29
          },
          end: {
            line: 447,
            column: 3
          }
        },
        line: 433
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 449,
            column: 2
          },
          end: {
            line: 449,
            column: 3
          }
        },
        loc: {
          start: {
            line: 449,
            column: 28
          },
          end: {
            line: 451,
            column: 3
          }
        },
        line: 449
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 453,
            column: 2
          },
          end: {
            line: 453,
            column: 3
          }
        },
        loc: {
          start: {
            line: 453,
            column: 28
          },
          end: {
            line: 455,
            column: 3
          }
        },
        line: 453
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 457,
            column: 2
          },
          end: {
            line: 457,
            column: 3
          }
        },
        loc: {
          start: {
            line: 457,
            column: 27
          },
          end: {
            line: 459,
            column: 3
          }
        },
        line: 457
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 461,
            column: 2
          },
          end: {
            line: 461,
            column: 3
          }
        },
        loc: {
          start: {
            line: 461,
            column: 27
          },
          end: {
            line: 477,
            column: 3
          }
        },
        line: 461
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 479,
            column: 2
          },
          end: {
            line: 479,
            column: 3
          }
        },
        loc: {
          start: {
            line: 479,
            column: 31
          },
          end: {
            line: 491,
            column: 3
          }
        },
        line: 479
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 493,
            column: 2
          },
          end: {
            line: 493,
            column: 3
          }
        },
        loc: {
          start: {
            line: 493,
            column: 25
          },
          end: {
            line: 499,
            column: 3
          }
        },
        line: 493
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 501,
            column: 2
          },
          end: {
            line: 501,
            column: 3
          }
        },
        loc: {
          start: {
            line: 501,
            column: 25
          },
          end: {
            line: 516,
            column: 3
          }
        },
        line: 501
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 518,
            column: 2
          },
          end: {
            line: 518,
            column: 3
          }
        },
        loc: {
          start: {
            line: 518,
            column: 34
          },
          end: {
            line: 522,
            column: 3
          }
        },
        line: 518
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 526,
            column: 2
          },
          end: {
            line: 526,
            column: 3
          }
        },
        loc: {
          start: {
            line: 526,
            column: 25
          },
          end: {
            line: 528,
            column: 3
          }
        },
        line: 526
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 530,
            column: 2
          },
          end: {
            line: 530,
            column: 3
          }
        },
        loc: {
          start: {
            line: 530,
            column: 26
          },
          end: {
            line: 532,
            column: 3
          }
        },
        line: 530
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 534,
            column: 2
          },
          end: {
            line: 534,
            column: 3
          }
        },
        loc: {
          start: {
            line: 534,
            column: 26
          },
          end: {
            line: 536,
            column: 3
          }
        },
        line: 534
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 538,
            column: 2
          },
          end: {
            line: 538,
            column: 3
          }
        },
        loc: {
          start: {
            line: 538,
            column: 29
          },
          end: {
            line: 540,
            column: 3
          }
        },
        line: 538
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 542,
            column: 2
          },
          end: {
            line: 542,
            column: 3
          }
        },
        loc: {
          start: {
            line: 542,
            column: 26
          },
          end: {
            line: 544,
            column: 3
          }
        },
        line: 542
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 546,
            column: 2
          },
          end: {
            line: 546,
            column: 3
          }
        },
        loc: {
          start: {
            line: 546,
            column: 26
          },
          end: {
            line: 548,
            column: 3
          }
        },
        line: 546
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 550,
            column: 2
          },
          end: {
            line: 550,
            column: 3
          }
        },
        loc: {
          start: {
            line: 550,
            column: 26
          },
          end: {
            line: 552,
            column: 3
          }
        },
        line: 550
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 554,
            column: 2
          },
          end: {
            line: 554,
            column: 3
          }
        },
        loc: {
          start: {
            line: 554,
            column: 26
          },
          end: {
            line: 556,
            column: 3
          }
        },
        line: 554
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 558,
            column: 2
          },
          end: {
            line: 558,
            column: 3
          }
        },
        loc: {
          start: {
            line: 558,
            column: 26
          },
          end: {
            line: 561,
            column: 3
          }
        },
        line: 558
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 563,
            column: 2
          },
          end: {
            line: 563,
            column: 3
          }
        },
        loc: {
          start: {
            line: 563,
            column: 31
          },
          end: {
            line: 569,
            column: 3
          }
        },
        line: 563
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 571,
            column: 2
          },
          end: {
            line: 571,
            column: 3
          }
        },
        loc: {
          start: {
            line: 571,
            column: 26
          },
          end: {
            line: 577,
            column: 3
          }
        },
        line: 571
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 579,
            column: 2
          },
          end: {
            line: 579,
            column: 3
          }
        },
        loc: {
          start: {
            line: 579,
            column: 26
          },
          end: {
            line: 582,
            column: 3
          }
        },
        line: 579
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 584,
            column: 2
          },
          end: {
            line: 584,
            column: 3
          }
        },
        loc: {
          start: {
            line: 584,
            column: 26
          },
          end: {
            line: 587,
            column: 3
          }
        },
        line: 584
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 589,
            column: 2
          },
          end: {
            line: 589,
            column: 3
          }
        },
        loc: {
          start: {
            line: 589,
            column: 30
          },
          end: {
            line: 596,
            column: 3
          }
        },
        line: 589
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 592,
            column: 21
          },
          end: {
            line: 592,
            column: 22
          }
        },
        loc: {
          start: {
            line: 592,
            column: 29
          },
          end: {
            line: 595,
            column: 5
          }
        },
        line: 592
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 598,
            column: 2
          },
          end: {
            line: 598,
            column: 3
          }
        },
        loc: {
          start: {
            line: 598,
            column: 32
          },
          end: {
            line: 606,
            column: 3
          }
        },
        line: 598
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 608,
            column: 2
          },
          end: {
            line: 608,
            column: 3
          }
        },
        loc: {
          start: {
            line: 608,
            column: 21
          },
          end: {
            line: 622,
            column: 3
          }
        },
        line: 608
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 624,
            column: 2
          },
          end: {
            line: 624,
            column: 3
          }
        },
        loc: {
          start: {
            line: 624,
            column: 30
          },
          end: {
            line: 653,
            column: 3
          }
        },
        line: 624
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 655,
            column: 2
          },
          end: {
            line: 655,
            column: 3
          }
        },
        loc: {
          start: {
            line: 655,
            column: 29
          },
          end: {
            line: 664,
            column: 3
          }
        },
        line: 655
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 666,
            column: 2
          },
          end: {
            line: 666,
            column: 3
          }
        },
        loc: {
          start: {
            line: 666,
            column: 34
          },
          end: {
            line: 679,
            column: 3
          }
        },
        line: 666
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 681,
            column: 2
          },
          end: {
            line: 681,
            column: 3
          }
        },
        loc: {
          start: {
            line: 681,
            column: 34
          },
          end: {
            line: 685,
            column: 3
          }
        },
        line: 681
      },
      "70": {
        name: "(anonymous_70)",
        decl: {
          start: {
            line: 687,
            column: 2
          },
          end: {
            line: 687,
            column: 3
          }
        },
        loc: {
          start: {
            line: 687,
            column: 26
          },
          end: {
            line: 735,
            column: 3
          }
        },
        line: 687
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 692,
            column: 25
          },
          end: {
            line: 692,
            column: 26
          }
        },
        loc: {
          start: {
            line: 692,
            column: 37
          },
          end: {
            line: 705,
            column: 5
          }
        },
        line: 692
      },
      "72": {
        name: "(anonymous_72)",
        decl: {
          start: {
            line: 717,
            column: 25
          },
          end: {
            line: 717,
            column: 26
          }
        },
        loc: {
          start: {
            line: 717,
            column: 40
          },
          end: {
            line: 734,
            column: 5
          }
        },
        line: 717
      },
      "73": {
        name: "(anonymous_73)",
        decl: {
          start: {
            line: 737,
            column: 2
          },
          end: {
            line: 737,
            column: 3
          }
        },
        loc: {
          start: {
            line: 737,
            column: 29
          },
          end: {
            line: 756,
            column: 3
          }
        },
        line: 737
      },
      "74": {
        name: "(anonymous_74)",
        decl: {
          start: {
            line: 741,
            column: 23
          },
          end: {
            line: 741,
            column: 24
          }
        },
        loc: {
          start: {
            line: 741,
            column: 33
          },
          end: {
            line: 750,
            column: 5
          }
        },
        line: 741
      },
      "75": {
        name: "(anonymous_75)",
        decl: {
          start: {
            line: 758,
            column: 2
          },
          end: {
            line: 758,
            column: 3
          }
        },
        loc: {
          start: {
            line: 758,
            column: 32
          },
          end: {
            line: 791,
            column: 3
          }
        },
        line: 758
      },
      "76": {
        name: "(anonymous_76)",
        decl: {
          start: {
            line: 765,
            column: 27
          },
          end: {
            line: 765,
            column: 28
          }
        },
        loc: {
          start: {
            line: 765,
            column: 33
          },
          end: {
            line: 771,
            column: 5
          }
        },
        line: 765
      },
      "77": {
        name: "(anonymous_77)",
        decl: {
          start: {
            line: 776,
            column: 29
          },
          end: {
            line: 776,
            column: 30
          }
        },
        loc: {
          start: {
            line: 776,
            column: 35
          },
          end: {
            line: 782,
            column: 7
          }
        },
        line: 776
      },
      "78": {
        name: "(anonymous_78)",
        decl: {
          start: {
            line: 793,
            column: 2
          },
          end: {
            line: 793,
            column: 3
          }
        },
        loc: {
          start: {
            line: 793,
            column: 30
          },
          end: {
            line: 798,
            column: 3
          }
        },
        line: 793
      },
      "79": {
        name: "(anonymous_79)",
        decl: {
          start: {
            line: 800,
            column: 2
          },
          end: {
            line: 800,
            column: 3
          }
        },
        loc: {
          start: {
            line: 800,
            column: 39
          },
          end: {
            line: 814,
            column: 3
          }
        },
        line: 800
      },
      "80": {
        name: "(anonymous_80)",
        decl: {
          start: {
            line: 811,
            column: 21
          },
          end: {
            line: 811,
            column: 22
          }
        },
        loc: {
          start: {
            line: 811,
            column: 28
          },
          end: {
            line: 813,
            column: 5
          }
        },
        line: 811
      },
      "81": {
        name: "(anonymous_81)",
        decl: {
          start: {
            line: 816,
            column: 2
          },
          end: {
            line: 816,
            column: 3
          }
        },
        loc: {
          start: {
            line: 816,
            column: 26
          },
          end: {
            line: 950,
            column: 3
          }
        },
        line: 816
      },
      "82": {
        name: "(anonymous_82)",
        decl: {
          start: {
            line: 856,
            column: 33
          },
          end: {
            line: 856,
            column: 34
          }
        },
        loc: {
          start: {
            line: 856,
            column: 47
          },
          end: {
            line: 861,
            column: 7
          }
        },
        line: 856
      },
      "83": {
        name: "(anonymous_83)",
        decl: {
          start: {
            line: 864,
            column: 29
          },
          end: {
            line: 864,
            column: 30
          }
        },
        loc: {
          start: {
            line: 864,
            column: 35
          },
          end: {
            line: 866,
            column: 7
          }
        },
        line: 864
      },
      "84": {
        name: "(anonymous_84)",
        decl: {
          start: {
            line: 897,
            column: 29
          },
          end: {
            line: 897,
            column: 30
          }
        },
        loc: {
          start: {
            line: 897,
            column: 35
          },
          end: {
            line: 899,
            column: 7
          }
        },
        line: 897
      },
      "85": {
        name: "(anonymous_85)",
        decl: {
          start: {
            line: 927,
            column: 29
          },
          end: {
            line: 927,
            column: 30
          }
        },
        loc: {
          start: {
            line: 927,
            column: 35
          },
          end: {
            line: 929,
            column: 7
          }
        },
        line: 927
      },
      "86": {
        name: "(anonymous_86)",
        decl: {
          start: {
            line: 952,
            column: 2
          },
          end: {
            line: 952,
            column: 3
          }
        },
        loc: {
          start: {
            line: 952,
            column: 43
          },
          end: {
            line: 1022,
            column: 3
          }
        },
        line: 952
      },
      "87": {
        name: "(anonymous_87)",
        decl: {
          start: {
            line: 973,
            column: 33
          },
          end: {
            line: 973,
            column: 34
          }
        },
        loc: {
          start: {
            line: 973,
            column: 43
          },
          end: {
            line: 975,
            column: 7
          }
        },
        line: 973
      },
      "88": {
        name: "(anonymous_88)",
        decl: {
          start: {
            line: 979,
            column: 33
          },
          end: {
            line: 979,
            column: 34
          }
        },
        loc: {
          start: {
            line: 979,
            column: 43
          },
          end: {
            line: 983,
            column: 7
          }
        },
        line: 979
      },
      "89": {
        name: "(anonymous_89)",
        decl: {
          start: {
            line: 993,
            column: 27
          },
          end: {
            line: 993,
            column: 28
          }
        },
        loc: {
          start: {
            line: 993,
            column: 33
          },
          end: {
            line: 1005,
            column: 5
          }
        },
        line: 993
      },
      "90": {
        name: "(anonymous_90)",
        decl: {
          start: {
            line: 1024,
            column: 2
          },
          end: {
            line: 1024,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1024,
            column: 32
          },
          end: {
            line: 1026,
            column: 3
          }
        },
        line: 1024
      },
      "91": {
        name: "(anonymous_91)",
        decl: {
          start: {
            line: 1028,
            column: 2
          },
          end: {
            line: 1028,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1028,
            column: 31
          },
          end: {
            line: 1030,
            column: 3
          }
        },
        line: 1028
      },
      "92": {
        name: "(anonymous_92)",
        decl: {
          start: {
            line: 1032,
            column: 2
          },
          end: {
            line: 1032,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1032,
            column: 29
          },
          end: {
            line: 1107,
            column: 3
          }
        },
        line: 1032
      },
      "93": {
        name: "(anonymous_93)",
        decl: {
          start: {
            line: 1039,
            column: 31
          },
          end: {
            line: 1039,
            column: 32
          }
        },
        loc: {
          start: {
            line: 1039,
            column: 43
          },
          end: {
            line: 1046,
            column: 5
          }
        },
        line: 1039
      },
      "94": {
        name: "(anonymous_94)",
        decl: {
          start: {
            line: 1048,
            column: 35
          },
          end: {
            line: 1048,
            column: 36
          }
        },
        loc: {
          start: {
            line: 1048,
            column: 42
          },
          end: {
            line: 1048,
            column: 56
          }
        },
        line: 1048
      },
      "95": {
        name: "(anonymous_95)",
        decl: {
          start: {
            line: 1051,
            column: 30
          },
          end: {
            line: 1051,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1051,
            column: 37
          },
          end: {
            line: 1051,
            column: 51
          }
        },
        line: 1051
      },
      "96": {
        name: "(anonymous_96)",
        decl: {
          start: {
            line: 1052,
            column: 63
          },
          end: {
            line: 1052,
            column: 64
          }
        },
        loc: {
          start: {
            line: 1052,
            column: 70
          },
          end: {
            line: 1052,
            column: 88
          }
        },
        line: 1052
      },
      "97": {
        name: "(anonymous_97)",
        decl: {
          start: {
            line: 1078,
            column: 17
          },
          end: {
            line: 1078,
            column: 18
          }
        },
        loc: {
          start: {
            line: 1078,
            column: 26
          },
          end: {
            line: 1081,
            column: 5
          }
        },
        line: 1078
      },
      "98": {
        name: "(anonymous_98)",
        decl: {
          start: {
            line: 1085,
            column: 30
          },
          end: {
            line: 1085,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1085,
            column: 40
          },
          end: {
            line: 1092,
            column: 7
          }
        },
        line: 1085
      },
      "99": {
        name: "(anonymous_99)",
        decl: {
          start: {
            line: 1097,
            column: 27
          },
          end: {
            line: 1097,
            column: 28
          }
        },
        loc: {
          start: {
            line: 1097,
            column: 33
          },
          end: {
            line: 1099,
            column: 5
          }
        },
        line: 1097
      },
      "100": {
        name: "(anonymous_100)",
        decl: {
          start: {
            line: 1109,
            column: 2
          },
          end: {
            line: 1109,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1109,
            column: 28
          },
          end: {
            line: 1124,
            column: 3
          }
        },
        line: 1109
      },
      "101": {
        name: "(anonymous_101)",
        decl: {
          start: {
            line: 1126,
            column: 2
          },
          end: {
            line: 1126,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1126,
            column: 29
          },
          end: {
            line: 1131,
            column: 3
          }
        },
        line: 1126
      },
      "102": {
        name: "(anonymous_102)",
        decl: {
          start: {
            line: 1133,
            column: 2
          },
          end: {
            line: 1133,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1133,
            column: 64
          },
          end: {
            line: 1143,
            column: 3
          }
        },
        line: 1133
      },
      "103": {
        name: "(anonymous_103)",
        decl: {
          start: {
            line: 1145,
            column: 2
          },
          end: {
            line: 1145,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1145,
            column: 29
          },
          end: {
            line: 1162,
            column: 3
          }
        },
        line: 1145
      },
      "104": {
        name: "(anonymous_104)",
        decl: {
          start: {
            line: 1164,
            column: 2
          },
          end: {
            line: 1164,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1164,
            column: 33
          },
          end: {
            line: 1200,
            column: 3
          }
        },
        line: 1164
      },
      "105": {
        name: "(anonymous_105)",
        decl: {
          start: {
            line: 1173,
            column: 32
          },
          end: {
            line: 1173,
            column: 33
          }
        },
        loc: {
          start: {
            line: 1173,
            column: 46
          },
          end: {
            line: 1199,
            column: 5
          }
        },
        line: 1173
      },
      "106": {
        name: "(anonymous_106)",
        decl: {
          start: {
            line: 1202,
            column: 2
          },
          end: {
            line: 1202,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1202,
            column: 21
          },
          end: {
            line: 1228,
            column: 3
          }
        },
        line: 1202
      },
      "107": {
        name: "(anonymous_107)",
        decl: {
          start: {
            line: 1230,
            column: 2
          },
          end: {
            line: 1230,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1230,
            column: 28
          },
          end: {
            line: 1239,
            column: 3
          }
        },
        line: 1230
      },
      "108": {
        name: "(anonymous_108)",
        decl: {
          start: {
            line: 1241,
            column: 2
          },
          end: {
            line: 1241,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1241,
            column: 30
          },
          end: {
            line: 1256,
            column: 3
          }
        },
        line: 1241
      },
      "109": {
        name: "(anonymous_109)",
        decl: {
          start: {
            line: 1258,
            column: 2
          },
          end: {
            line: 1258,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1258,
            column: 30
          },
          end: {
            line: 1286,
            column: 3
          }
        },
        line: 1258
      },
      "110": {
        name: "(anonymous_110)",
        decl: {
          start: {
            line: 1288,
            column: 2
          },
          end: {
            line: 1288,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1288,
            column: 35
          },
          end: {
            line: 1290,
            column: 3
          }
        },
        line: 1288
      },
      "111": {
        name: "(anonymous_111)",
        decl: {
          start: {
            line: 1292,
            column: 2
          },
          end: {
            line: 1292,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1292,
            column: 30
          },
          end: {
            line: 1306,
            column: 3
          }
        },
        line: 1292
      },
      "112": {
        name: "(anonymous_112)",
        decl: {
          start: {
            line: 1299,
            column: 27
          },
          end: {
            line: 1299,
            column: 28
          }
        },
        loc: {
          start: {
            line: 1299,
            column: 33
          },
          end: {
            line: 1301,
            column: 5
          }
        },
        line: 1299
      },
      "113": {
        name: "(anonymous_113)",
        decl: {
          start: {
            line: 1308,
            column: 2
          },
          end: {
            line: 1308,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1308,
            column: 29
          },
          end: {
            line: 1336,
            column: 3
          }
        },
        line: 1308
      },
      "114": {
        name: "(anonymous_114)",
        decl: {
          start: {
            line: 1310,
            column: 21
          },
          end: {
            line: 1310,
            column: 22
          }
        },
        loc: {
          start: {
            line: 1310,
            column: 30
          },
          end: {
            line: 1335,
            column: 5
          }
        },
        line: 1310
      },
      "115": {
        name: "(anonymous_115)",
        decl: {
          start: {
            line: 1338,
            column: 2
          },
          end: {
            line: 1338,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1338,
            column: 27
          },
          end: {
            line: 1401,
            column: 3
          }
        },
        line: 1338
      },
      "116": {
        name: "(anonymous_116)",
        decl: {
          start: {
            line: 1377,
            column: 19
          },
          end: {
            line: 1377,
            column: 20
          }
        },
        loc: {
          start: {
            line: 1377,
            column: 33
          },
          end: {
            line: 1391,
            column: 5
          }
        },
        line: 1377
      },
      "117": {
        name: "(anonymous_117)",
        decl: {
          start: {
            line: 1395,
            column: 19
          },
          end: {
            line: 1395,
            column: 20
          }
        },
        loc: {
          start: {
            line: 1395,
            column: 33
          },
          end: {
            line: 1398,
            column: 5
          }
        },
        line: 1395
      },
      "118": {
        name: "(anonymous_118)",
        decl: {
          start: {
            line: 1403,
            column: 2
          },
          end: {
            line: 1403,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1403,
            column: 23
          },
          end: {
            line: 1410,
            column: 3
          }
        },
        line: 1403
      },
      "119": {
        name: "(anonymous_119)",
        decl: {
          start: {
            line: 1412,
            column: 2
          },
          end: {
            line: 1412,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1412,
            column: 12
          },
          end: {
            line: 1414,
            column: 3
          }
        },
        line: 1412
      },
      "120": {
        name: "compile",
        decl: {
          start: {
            line: 1418,
            column: 20
          },
          end: {
            line: 1418,
            column: 27
          }
        },
        loc: {
          start: {
            line: 1418,
            column: 85
          },
          end: {
            line: 1436,
            column: 3
          }
        },
        line: 1418
      },
      "121": {
        name: "(anonymous_121)",
        decl: {
          start: {
            line: 1426,
            column: 49
          },
          end: {
            line: 1426,
            column: 50
          }
        },
        loc: {
          start: {
            line: 1426,
            column: 56
          },
          end: {
            line: 1426,
            column: 70
          }
        },
        line: 1426
      },
      "122": {
        name: "(anonymous_122)",
        decl: {
          start: {
            line: 1426,
            column: 79
          },
          end: {
            line: 1426,
            column: 80
          }
        },
        loc: {
          start: {
            line: 1426,
            column: 84
          },
          end: {
            line: 1426,
            column: 87
          }
        },
        line: 1426
      },
      "123": {
        name: "(anonymous_123)",
        decl: {
          start: {
            line: 1428,
            column: 46
          },
          end: {
            line: 1428,
            column: 47
          }
        },
        loc: {
          start: {
            line: 1428,
            column: 64
          },
          end: {
            line: 1428,
            column: 76
          }
        },
        line: 1428
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: 54,
            column: 11
          },
          end: {
            line: 56,
            column: 5
          }
        }],
        line: 52
      },
      "3": {
        loc: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        }, {
          start: {
            line: 81,
            column: 11
          },
          end: {
            line: 83,
            column: 5
          }
        }],
        line: 79
      },
      "4": {
        loc: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        }, {
          start: {
            line: 89,
            column: 11
          },
          end: {
            line: 91,
            column: 5
          }
        }],
        line: 87
      },
      "5": {
        loc: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "6": {
        loc: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "7": {
        loc: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "8": {
        loc: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "9": {
        loc: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "10": {
        loc: {
          start: {
            line: 135,
            column: 6
          },
          end: {
            line: 137,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 6
          },
          end: {
            line: 137,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "11": {
        loc: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "12": {
        loc: {
          start: {
            line: 144,
            column: 24
          },
          end: {
            line: 144,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 144,
            column: 53
          },
          end: {
            line: 144,
            column: 61
          }
        }, {
          start: {
            line: 144,
            column: 64
          },
          end: {
            line: 144,
            column: 66
          }
        }],
        line: 144
      },
      "13": {
        loc: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "14": {
        loc: {
          start: {
            line: 155,
            column: 6
          },
          end: {
            line: 157,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 6
          },
          end: {
            line: 157,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "15": {
        loc: {
          start: {
            line: 162,
            column: 24
          },
          end: {
            line: 162,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 162,
            column: 37
          },
          end: {
            line: 162,
            column: 41
          }
        }],
        line: 162
      },
      "16": {
        loc: {
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        }, {
          start: {
            line: 173,
            column: 11
          },
          end: {
            line: 175,
            column: 5
          }
        }],
        line: 163
      },
      "17": {
        loc: {
          start: {
            line: 164,
            column: 6
          },
          end: {
            line: 172,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 6
          },
          end: {
            line: 172,
            column: 7
          }
        }, {
          start: {
            line: 170,
            column: 13
          },
          end: {
            line: 172,
            column: 7
          }
        }],
        line: 164
      },
      "18": {
        loc: {
          start: {
            line: 178,
            column: 22
          },
          end: {
            line: 178,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 178,
            column: 35
          },
          end: {
            line: 178,
            column: 39
          }
        }],
        line: 178
      },
      "19": {
        loc: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "20": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 179,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 179,
            column: 20
          }
        }, {
          start: {
            line: 179,
            column: 24
          },
          end: {
            line: 179,
            column: 34
          }
        }],
        line: 179
      },
      "21": {
        loc: {
          start: {
            line: 182,
            column: 6
          },
          end: {
            line: 184,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 6
          },
          end: {
            line: 184,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "22": {
        loc: {
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 210,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 210,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "23": {
        loc: {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 220,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 220,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "24": {
        loc: {
          start: {
            line: 245,
            column: 32
          },
          end: {
            line: 245,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 245,
            column: 38
          },
          end: {
            line: 245,
            column: 47
          }
        }, {
          start: {
            line: 245,
            column: 50
          },
          end: {
            line: 245,
            column: 52
          }
        }],
        line: 245
      },
      "25": {
        loc: {
          start: {
            line: 255,
            column: 11
          },
          end: {
            line: 255,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 255,
            column: 39
          },
          end: {
            line: 255,
            column: 50
          }
        }, {
          start: {
            line: 255,
            column: 53
          },
          end: {
            line: 255,
            column: 86
          }
        }],
        line: 255
      },
      "26": {
        loc: {
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "27": {
        loc: {
          start: {
            line: 270,
            column: 6
          },
          end: {
            line: 272,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 6
          },
          end: {
            line: 272,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "28": {
        loc: {
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 279,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 279,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "29": {
        loc: {
          start: {
            line: 320,
            column: 4
          },
          end: {
            line: 322,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 4
          },
          end: {
            line: 322,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 320
      },
      "30": {
        loc: {
          start: {
            line: 328,
            column: 21
          },
          end: {
            line: 328,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 328,
            column: 60
          },
          end: {
            line: 328,
            column: 75
          }
        }, {
          start: {
            line: 328,
            column: 78
          },
          end: {
            line: 328,
            column: 82
          }
        }],
        line: 328
      },
      "31": {
        loc: {
          start: {
            line: 330,
            column: 4
          },
          end: {
            line: 335,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 4
          },
          end: {
            line: 335,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "32": {
        loc: {
          start: {
            line: 333,
            column: 20
          },
          end: {
            line: 333,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 333,
            column: 35
          },
          end: {
            line: 333,
            column: 70
          }
        }, {
          start: {
            line: 333,
            column: 73
          },
          end: {
            line: 333,
            column: 97
          }
        }],
        line: 333
      },
      "33": {
        loc: {
          start: {
            line: 340,
            column: 4
          },
          end: {
            line: 342,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 4
          },
          end: {
            line: 342,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 340
      },
      "34": {
        loc: {
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 340,
            column: 27
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 340,
            column: 12
          }
        }, {
          start: {
            line: 340,
            column: 16
          },
          end: {
            line: 340,
            column: 27
          }
        }],
        line: 340
      },
      "35": {
        loc: {
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 360,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 360,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "36": {
        loc: {
          start: {
            line: 345,
            column: 6
          },
          end: {
            line: 348,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 345,
            column: 6
          },
          end: {
            line: 348,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 345
      },
      "37": {
        loc: {
          start: {
            line: 356,
            column: 8
          },
          end: {
            line: 358,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 356,
            column: 8
          },
          end: {
            line: 358,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 356
      },
      "38": {
        loc: {
          start: {
            line: 356,
            column: 12
          },
          end: {
            line: 356,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 356,
            column: 12
          },
          end: {
            line: 356,
            column: 42
          }
        }, {
          start: {
            line: 356,
            column: 46
          },
          end: {
            line: 356,
            column: 64
          }
        }],
        line: 356
      },
      "39": {
        loc: {
          start: {
            line: 362,
            column: 4
          },
          end: {
            line: 385,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 362,
            column: 4
          },
          end: {
            line: 385,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 362
      },
      "40": {
        loc: {
          start: {
            line: 364,
            column: 8
          },
          end: {
            line: 366,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 8
          },
          end: {
            line: 366,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 364
      },
      "41": {
        loc: {
          start: {
            line: 368,
            column: 8
          },
          end: {
            line: 383,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 368,
            column: 8
          },
          end: {
            line: 383,
            column: 9
          }
        }, {
          start: {
            line: 381,
            column: 15
          },
          end: {
            line: 383,
            column: 9
          }
        }],
        line: 368
      },
      "42": {
        loc: {
          start: {
            line: 387,
            column: 4
          },
          end: {
            line: 406,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 387,
            column: 4
          },
          end: {
            line: 406,
            column: 5
          }
        }, {
          start: {
            line: 401,
            column: 11
          },
          end: {
            line: 406,
            column: 5
          }
        }],
        line: 387
      },
      "43": {
        loc: {
          start: {
            line: 396,
            column: 20
          },
          end: {
            line: 396,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 396,
            column: 35
          },
          end: {
            line: 396,
            column: 69
          }
        }, {
          start: {
            line: 396,
            column: 72
          },
          end: {
            line: 396,
            column: 95
          }
        }],
        line: 396
      },
      "44": {
        loc: {
          start: {
            line: 418,
            column: 4
          },
          end: {
            line: 430,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 4
          },
          end: {
            line: 430,
            column: 5
          }
        }, {
          start: {
            line: 426,
            column: 11
          },
          end: {
            line: 430,
            column: 5
          }
        }],
        line: 418
      },
      "45": {
        loc: {
          start: {
            line: 426,
            column: 11
          },
          end: {
            line: 430,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 426,
            column: 11
          },
          end: {
            line: 430,
            column: 5
          }
        }, {
          start: {
            line: 428,
            column: 11
          },
          end: {
            line: 430,
            column: 5
          }
        }],
        line: 426
      },
      "46": {
        loc: {
          start: {
            line: 437,
            column: 4
          },
          end: {
            line: 446,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 437,
            column: 4
          },
          end: {
            line: 446,
            column: 5
          }
        }, {
          start: {
            line: 439,
            column: 11
          },
          end: {
            line: 446,
            column: 5
          }
        }],
        line: 437
      },
      "47": {
        loc: {
          start: {
            line: 465,
            column: 4
          },
          end: {
            line: 472,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 465,
            column: 4
          },
          end: {
            line: 472,
            column: 5
          }
        }, {
          start: {
            line: 467,
            column: 11
          },
          end: {
            line: 472,
            column: 5
          }
        }],
        line: 465
      },
      "48": {
        loc: {
          start: {
            line: 467,
            column: 11
          },
          end: {
            line: 472,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 467,
            column: 11
          },
          end: {
            line: 472,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 467
      },
      "49": {
        loc: {
          start: {
            line: 467,
            column: 17
          },
          end: {
            line: 468,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 467,
            column: 17
          },
          end: {
            line: 467,
            column: 45
          }
        }, {
          start: {
            line: 468,
            column: 6
          },
          end: {
            line: 468,
            column: 35
          }
        }],
        line: 467
      },
      "50": {
        loc: {
          start: {
            line: 485,
            column: 4
          },
          end: {
            line: 489,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 485,
            column: 4
          },
          end: {
            line: 489,
            column: 5
          }
        }, {
          start: {
            line: 487,
            column: 11
          },
          end: {
            line: 489,
            column: 5
          }
        }],
        line: 485
      },
      "51": {
        loc: {
          start: {
            line: 504,
            column: 16
          },
          end: {
            line: 507,
            column: 24
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 505,
            column: 8
          },
          end: {
            line: 505,
            column: 29
          }
        }, {
          start: {
            line: 507,
            column: 8
          },
          end: {
            line: 507,
            column: 24
          }
        }],
        line: 504
      },
      "52": {
        loc: {
          start: {
            line: 511,
            column: 4
          },
          end: {
            line: 514,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 511,
            column: 4
          },
          end: {
            line: 514,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 511
      },
      "53": {
        loc: {
          start: {
            line: 609,
            column: 4
          },
          end: {
            line: 621,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 610,
            column: 6
          },
          end: {
            line: 611,
            column: 26
          }
        }, {
          start: {
            line: 612,
            column: 6
          },
          end: {
            line: 613,
            column: 76
          }
        }, {
          start: {
            line: 614,
            column: 6
          },
          end: {
            line: 616,
            column: 45
          }
        }, {
          start: {
            line: 617,
            column: 6
          },
          end: {
            line: 618,
            column: 37
          }
        }, {
          start: {
            line: 619,
            column: 6
          },
          end: {
            line: 620,
            column: 32
          }
        }],
        line: 609
      },
      "54": {
        loc: {
          start: {
            line: 629,
            column: 4
          },
          end: {
            line: 631,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 629,
            column: 4
          },
          end: {
            line: 631,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 629
      },
      "55": {
        loc: {
          start: {
            line: 650,
            column: 4
          },
          end: {
            line: 652,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 650,
            column: 4
          },
          end: {
            line: 652,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 650
      },
      "56": {
        loc: {
          start: {
            line: 696,
            column: 6
          },
          end: {
            line: 702,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 696,
            column: 6
          },
          end: {
            line: 702,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 696
      },
      "57": {
        loc: {
          start: {
            line: 696,
            column: 10
          },
          end: {
            line: 696,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 696,
            column: 10
          },
          end: {
            line: 696,
            column: 21
          }
        }, {
          start: {
            line: 696,
            column: 25
          },
          end: {
            line: 696,
            column: 41
          }
        }],
        line: 696
      },
      "58": {
        loc: {
          start: {
            line: 707,
            column: 4
          },
          end: {
            line: 715,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 707,
            column: 4
          },
          end: {
            line: 715,
            column: 5
          }
        }, {
          start: {
            line: 711,
            column: 11
          },
          end: {
            line: 715,
            column: 5
          }
        }],
        line: 707
      },
      "59": {
        loc: {
          start: {
            line: 729,
            column: 6
          },
          end: {
            line: 733,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 729,
            column: 6
          },
          end: {
            line: 733,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 729
      },
      "60": {
        loc: {
          start: {
            line: 747,
            column: 6
          },
          end: {
            line: 749,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 747,
            column: 6
          },
          end: {
            line: 749,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 747
      },
      "61": {
        loc: {
          start: {
            line: 751,
            column: 4
          },
          end: {
            line: 754,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 751,
            column: 4
          },
          end: {
            line: 754,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 751
      },
      "62": {
        loc: {
          start: {
            line: 768,
            column: 6
          },
          end: {
            line: 770,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 768,
            column: 6
          },
          end: {
            line: 770,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 768
      },
      "63": {
        loc: {
          start: {
            line: 773,
            column: 4
          },
          end: {
            line: 786,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 773,
            column: 4
          },
          end: {
            line: 786,
            column: 5
          }
        }, {
          start: {
            line: 783,
            column: 11
          },
          end: {
            line: 786,
            column: 5
          }
        }],
        line: 773
      },
      "64": {
        loc: {
          start: {
            line: 779,
            column: 8
          },
          end: {
            line: 781,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 779,
            column: 8
          },
          end: {
            line: 781,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 779
      },
      "65": {
        loc: {
          start: {
            line: 783,
            column: 11
          },
          end: {
            line: 786,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 783,
            column: 11
          },
          end: {
            line: 786,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 783
      },
      "66": {
        loc: {
          start: {
            line: 840,
            column: 4
          },
          end: {
            line: 937,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 840,
            column: 4
          },
          end: {
            line: 937,
            column: 5
          }
        }, {
          start: {
            line: 909,
            column: 11
          },
          end: {
            line: 937,
            column: 5
          }
        }],
        line: 840
      },
      "67": {
        loc: {
          start: {
            line: 850,
            column: 6
          },
          end: {
            line: 853,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 850,
            column: 6
          },
          end: {
            line: 853,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 850
      },
      "68": {
        loc: {
          start: {
            line: 868,
            column: 6
          },
          end: {
            line: 871,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 868,
            column: 6
          },
          end: {
            line: 871,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 868
      },
      "69": {
        loc: {
          start: {
            line: 886,
            column: 6
          },
          end: {
            line: 889,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 886,
            column: 6
          },
          end: {
            line: 889,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 886
      },
      "70": {
        loc: {
          start: {
            line: 901,
            column: 6
          },
          end: {
            line: 904,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 901,
            column: 6
          },
          end: {
            line: 904,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 901
      },
      "71": {
        loc: {
          start: {
            line: 917,
            column: 6
          },
          end: {
            line: 920,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 917,
            column: 6
          },
          end: {
            line: 920,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 917
      },
      "72": {
        loc: {
          start: {
            line: 931,
            column: 6
          },
          end: {
            line: 934,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 931,
            column: 6
          },
          end: {
            line: 934,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 931
      },
      "73": {
        loc: {
          start: {
            line: 940,
            column: 4
          },
          end: {
            line: 946,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 940,
            column: 4
          },
          end: {
            line: 946,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 940
      },
      "74": {
        loc: {
          start: {
            line: 960,
            column: 22
          },
          end: {
            line: 960,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 960,
            column: 33
          },
          end: {
            line: 960,
            column: 43
          }
        }, {
          start: {
            line: 960,
            column: 46
          },
          end: {
            line: 960,
            column: 57
          }
        }],
        line: 960
      },
      "75": {
        loc: {
          start: {
            line: 969,
            column: 4
          },
          end: {
            line: 989,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 969,
            column: 4
          },
          end: {
            line: 989,
            column: 5
          }
        }, {
          start: {
            line: 984,
            column: 11
          },
          end: {
            line: 989,
            column: 5
          }
        }],
        line: 969
      },
      "76": {
        loc: {
          start: {
            line: 995,
            column: 6
          },
          end: {
            line: 997,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 995,
            column: 6
          },
          end: {
            line: 997,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 995
      },
      "77": {
        loc: {
          start: {
            line: 1000,
            column: 36
          },
          end: {
            line: 1000,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1000,
            column: 42
          },
          end: {
            line: 1000,
            column: 51
          }
        }, {
          start: {
            line: 1000,
            column: 54
          },
          end: {
            line: 1000,
            column: 56
          }
        }],
        line: 1000
      },
      "78": {
        loc: {
          start: {
            line: 1002,
            column: 6
          },
          end: {
            line: 1004,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1002,
            column: 6
          },
          end: {
            line: 1004,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1002
      },
      "79": {
        loc: {
          start: {
            line: 1011,
            column: 4
          },
          end: {
            line: 1013,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1011,
            column: 4
          },
          end: {
            line: 1013,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1011
      },
      "80": {
        loc: {
          start: {
            line: 1015,
            column: 4
          },
          end: {
            line: 1019,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1015,
            column: 4
          },
          end: {
            line: 1019,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1015
      },
      "81": {
        loc: {
          start: {
            line: 1040,
            column: 6
          },
          end: {
            line: 1045,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1040,
            column: 6
          },
          end: {
            line: 1045,
            column: 7
          }
        }, {
          start: {
            line: 1042,
            column: 13
          },
          end: {
            line: 1045,
            column: 7
          }
        }],
        line: 1040
      },
      "82": {
        loc: {
          start: {
            line: 1040,
            column: 10
          },
          end: {
            line: 1040,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1040,
            column: 10
          },
          end: {
            line: 1040,
            column: 45
          }
        }, {
          start: {
            line: 1040,
            column: 49
          },
          end: {
            line: 1040,
            column: 74
          }
        }],
        line: 1040
      },
      "83": {
        loc: {
          start: {
            line: 1052,
            column: 24
          },
          end: {
            line: 1052,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1052,
            column: 25
          },
          end: {
            line: 1052,
            column: 31
          }
        }, {
          start: {
            line: 1052,
            column: 35
          },
          end: {
            line: 1052,
            column: 50
          }
        }, {
          start: {
            line: 1052,
            column: 55
          },
          end: {
            line: 1052,
            column: 57
          }
        }],
        line: 1052
      },
      "84": {
        loc: {
          start: {
            line: 1059,
            column: 4
          },
          end: {
            line: 1063,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1059,
            column: 4
          },
          end: {
            line: 1063,
            column: 5
          }
        }, {
          start: {
            line: 1061,
            column: 11
          },
          end: {
            line: 1063,
            column: 5
          }
        }],
        line: 1059
      },
      "85": {
        loc: {
          start: {
            line: 1070,
            column: 20
          },
          end: {
            line: 1070,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1070,
            column: 34
          },
          end: {
            line: 1070,
            column: 53
          }
        }, {
          start: {
            line: 1070,
            column: 56
          },
          end: {
            line: 1070,
            column: 78
          }
        }],
        line: 1070
      },
      "86": {
        loc: {
          start: {
            line: 1084,
            column: 4
          },
          end: {
            line: 1093,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1084,
            column: 4
          },
          end: {
            line: 1093,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1084
      },
      "87": {
        loc: {
          start: {
            line: 1101,
            column: 33
          },
          end: {
            line: 1101,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1101,
            column: 47
          },
          end: {
            line: 1101,
            column: 61
          }
        }, {
          start: {
            line: 1101,
            column: 64
          },
          end: {
            line: 1101,
            column: 78
          }
        }],
        line: 1101
      },
      "88": {
        loc: {
          start: {
            line: 1116,
            column: 4
          },
          end: {
            line: 1123,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1116,
            column: 4
          },
          end: {
            line: 1123,
            column: 5
          }
        }, {
          start: {
            line: 1118,
            column: 11
          },
          end: {
            line: 1123,
            column: 5
          }
        }],
        line: 1116
      },
      "89": {
        loc: {
          start: {
            line: 1119,
            column: 6
          },
          end: {
            line: 1121,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1119,
            column: 6
          },
          end: {
            line: 1121,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1119
      },
      "90": {
        loc: {
          start: {
            line: 1137,
            column: 28
          },
          end: {
            line: 1137,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1137,
            column: 45
          },
          end: {
            line: 1137,
            column: 51
          }
        }, {
          start: {
            line: 1137,
            column: 54
          },
          end: {
            line: 1137,
            column: 61
          }
        }],
        line: 1137
      },
      "91": {
        loc: {
          start: {
            line: 1138,
            column: 29
          },
          end: {
            line: 1138,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1138,
            column: 47
          },
          end: {
            line: 1138,
            column: 53
          }
        }, {
          start: {
            line: 1138,
            column: 56
          },
          end: {
            line: 1138,
            column: 63
          }
        }],
        line: 1138
      },
      "92": {
        loc: {
          start: {
            line: 1139,
            column: 15
          },
          end: {
            line: 1139,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1139,
            column: 30
          },
          end: {
            line: 1139,
            column: 53
          }
        }, {
          start: {
            line: 1139,
            column: 56
          },
          end: {
            line: 1139,
            column: 74
          }
        }],
        line: 1139
      },
      "93": {
        loc: {
          start: {
            line: 1151,
            column: 7
          },
          end: {
            line: 1151,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1151,
            column: 26
          },
          end: {
            line: 1151,
            column: 59
          }
        }, {
          start: {
            line: 1151,
            column: 62
          },
          end: {
            line: 1151,
            column: 64
          }
        }],
        line: 1151
      },
      "94": {
        loc: {
          start: {
            line: 1157,
            column: 4
          },
          end: {
            line: 1161,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1157,
            column: 4
          },
          end: {
            line: 1161,
            column: 5
          }
        }, {
          start: {
            line: 1159,
            column: 11
          },
          end: {
            line: 1161,
            column: 5
          }
        }],
        line: 1157
      },
      "95": {
        loc: {
          start: {
            line: 1169,
            column: 7
          },
          end: {
            line: 1169,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1169,
            column: 26
          },
          end: {
            line: 1169,
            column: 59
          }
        }, {
          start: {
            line: 1169,
            column: 62
          },
          end: {
            line: 1169,
            column: 64
          }
        }],
        line: 1169
      },
      "96": {
        loc: {
          start: {
            line: 1178,
            column: 6
          },
          end: {
            line: 1184,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1178,
            column: 6
          },
          end: {
            line: 1184,
            column: 7
          }
        }, {
          start: {
            line: 1181,
            column: 13
          },
          end: {
            line: 1184,
            column: 7
          }
        }],
        line: 1178
      },
      "97": {
        loc: {
          start: {
            line: 1194,
            column: 6
          },
          end: {
            line: 1198,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1194,
            column: 6
          },
          end: {
            line: 1198,
            column: 7
          }
        }, {
          start: {
            line: 1196,
            column: 13
          },
          end: {
            line: 1198,
            column: 7
          }
        }],
        line: 1194
      },
      "98": {
        loc: {
          start: {
            line: 1215,
            column: 4
          },
          end: {
            line: 1217,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1215,
            column: 4
          },
          end: {
            line: 1217,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1215
      },
      "99": {
        loc: {
          start: {
            line: 1219,
            column: 4
          },
          end: {
            line: 1221,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1219,
            column: 4
          },
          end: {
            line: 1221,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1219
      },
      "100": {
        loc: {
          start: {
            line: 1272,
            column: 72
          },
          end: {
            line: 1272,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1272,
            column: 87
          },
          end: {
            line: 1272,
            column: 96
          }
        }, {
          start: {
            line: 1272,
            column: 99
          },
          end: {
            line: 1272,
            column: 101
          }
        }],
        line: 1272
      },
      "101": {
        loc: {
          start: {
            line: 1313,
            column: 6
          },
          end: {
            line: 1334,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1313,
            column: 6
          },
          end: {
            line: 1334,
            column: 7
          }
        }, {
          start: {
            line: 1321,
            column: 13
          },
          end: {
            line: 1334,
            column: 7
          }
        }],
        line: 1313
      },
      "102": {
        loc: {
          start: {
            line: 1314,
            column: 8
          },
          end: {
            line: 1320,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1314,
            column: 8
          },
          end: {
            line: 1320,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1314
      },
      "103": {
        loc: {
          start: {
            line: 1323,
            column: 22
          },
          end: {
            line: 1323,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1323,
            column: 37
          },
          end: {
            line: 1323,
            column: 72
          }
        }, {
          start: {
            line: 1323,
            column: 75
          },
          end: {
            line: 1323,
            column: 99
          }
        }],
        line: 1323
      },
      "104": {
        loc: {
          start: {
            line: 1325,
            column: 8
          },
          end: {
            line: 1327,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1325,
            column: 8
          },
          end: {
            line: 1327,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1325
      },
      "105": {
        loc: {
          start: {
            line: 1326,
            column: 24
          },
          end: {
            line: 1326,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1326,
            column: 39
          },
          end: {
            line: 1326,
            column: 74
          }
        }, {
          start: {
            line: 1326,
            column: 77
          },
          end: {
            line: 1326,
            column: 101
          }
        }],
        line: 1326
      },
      "106": {
        loc: {
          start: {
            line: 1329,
            column: 8
          },
          end: {
            line: 1331,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1329,
            column: 8
          },
          end: {
            line: 1331,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1329
      },
      "107": {
        loc: {
          start: {
            line: 1339,
            column: 4
          },
          end: {
            line: 1341,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1339,
            column: 4
          },
          end: {
            line: 1341,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1339
      },
      "108": {
        loc: {
          start: {
            line: 1348,
            column: 4
          },
          end: {
            line: 1360,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1348,
            column: 4
          },
          end: {
            line: 1360,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1348
      },
      "109": {
        loc: {
          start: {
            line: 1366,
            column: 4
          },
          end: {
            line: 1368,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1366,
            column: 4
          },
          end: {
            line: 1368,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1366
      },
      "110": {
        loc: {
          start: {
            line: 1380,
            column: 6
          },
          end: {
            line: 1382,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1380,
            column: 6
          },
          end: {
            line: 1382,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1380
      },
      "111": {
        loc: {
          start: {
            line: 1405,
            column: 4
          },
          end: {
            line: 1409,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1405,
            column: 4
          },
          end: {
            line: 1409,
            column: 5
          }
        }, {
          start: {
            line: 1407,
            column: 11
          },
          end: {
            line: 1409,
            column: 5
          }
        }],
        line: 1405
      },
      "112": {
        loc: {
          start: {
            line: 1418,
            column: 74
          },
          end: {
            line: 1418,
            column: 83
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1418,
            column: 81
          },
          end: {
            line: 1418,
            column: 83
          }
        }],
        line: 1418
      },
      "113": {
        loc: {
          start: {
            line: 1419,
            column: 4
          },
          end: {
            line: 1422,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1419,
            column: 4
          },
          end: {
            line: 1422,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1419
      },
      "114": {
        loc: {
          start: {
            line: 1426,
            column: 27
          },
          end: {
            line: 1426,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1426,
            column: 27
          },
          end: {
            line: 1426,
            column: 37
          }
        }, {
          start: {
            line: 1426,
            column: 41
          },
          end: {
            line: 1426,
            column: 43
          }
        }],
        line: 1426
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0,
      "348": 0,
      "349": 0,
      "350": 0,
      "351": 0,
      "352": 0,
      "353": 0,
      "354": 0,
      "355": 0,
      "356": 0,
      "357": 0,
      "358": 0,
      "359": 0,
      "360": 0,
      "361": 0,
      "362": 0,
      "363": 0,
      "364": 0,
      "365": 0,
      "366": 0,
      "367": 0,
      "368": 0,
      "369": 0,
      "370": 0,
      "371": 0,
      "372": 0,
      "373": 0,
      "374": 0,
      "375": 0,
      "376": 0,
      "377": 0,
      "378": 0,
      "379": 0,
      "380": 0,
      "381": 0,
      "382": 0,
      "383": 0,
      "384": 0,
      "385": 0,
      "386": 0,
      "387": 0,
      "388": 0,
      "389": 0,
      "390": 0,
      "391": 0,
      "392": 0,
      "393": 0,
      "394": 0,
      "395": 0,
      "396": 0,
      "397": 0,
      "398": 0,
      "399": 0,
      "400": 0,
      "401": 0,
      "402": 0,
      "403": 0,
      "404": 0,
      "405": 0,
      "406": 0,
      "407": 0,
      "408": 0,
      "409": 0,
      "410": 0,
      "411": 0,
      "412": 0,
      "413": 0,
      "414": 0,
      "415": 0,
      "416": 0,
      "417": 0,
      "418": 0,
      "419": 0,
      "420": 0,
      "421": 0,
      "422": 0,
      "423": 0,
      "424": 0,
      "425": 0,
      "426": 0,
      "427": 0,
      "428": 0,
      "429": 0,
      "430": 0,
      "431": 0,
      "432": 0,
      "433": 0,
      "434": 0,
      "435": 0,
      "436": 0,
      "437": 0,
      "438": 0,
      "439": 0,
      "440": 0,
      "441": 0,
      "442": 0,
      "443": 0,
      "444": 0,
      "445": 0,
      "446": 0,
      "447": 0,
      "448": 0,
      "449": 0,
      "450": 0,
      "451": 0,
      "452": 0,
      "453": 0,
      "454": 0,
      "455": 0,
      "456": 0,
      "457": 0,
      "458": 0,
      "459": 0,
      "460": 0,
      "461": 0,
      "462": 0,
      "463": 0,
      "464": 0,
      "465": 0,
      "466": 0,
      "467": 0,
      "468": 0,
      "469": 0,
      "470": 0,
      "471": 0,
      "472": 0,
      "473": 0,
      "474": 0,
      "475": 0,
      "476": 0,
      "477": 0,
      "478": 0,
      "479": 0,
      "480": 0,
      "481": 0,
      "482": 0,
      "483": 0,
      "484": 0,
      "485": 0,
      "486": 0,
      "487": 0,
      "488": 0,
      "489": 0,
      "490": 0,
      "491": 0,
      "492": 0,
      "493": 0,
      "494": 0,
      "495": 0,
      "496": 0,
      "497": 0,
      "498": 0,
      "499": 0,
      "500": 0,
      "501": 0,
      "502": 0,
      "503": 0,
      "504": 0,
      "505": 0,
      "506": 0,
      "507": 0,
      "508": 0,
      "509": 0,
      "510": 0,
      "511": 0,
      "512": 0,
      "513": 0,
      "514": 0,
      "515": 0,
      "516": 0,
      "517": 0,
      "518": 0,
      "519": 0,
      "520": 0,
      "521": 0,
      "522": 0,
      "523": 0,
      "524": 0,
      "525": 0,
      "526": 0,
      "527": 0,
      "528": 0,
      "529": 0,
      "530": 0,
      "531": 0,
      "532": 0,
      "533": 0,
      "534": 0,
      "535": 0,
      "536": 0,
      "537": 0,
      "538": 0,
      "539": 0,
      "540": 0,
      "541": 0,
      "542": 0,
      "543": 0,
      "544": 0,
      "545": 0,
      "546": 0,
      "547": 0,
      "548": 0,
      "549": 0,
      "550": 0,
      "551": 0,
      "552": 0,
      "553": 0,
      "554": 0,
      "555": 0,
      "556": 0,
      "557": 0,
      "558": 0,
      "559": 0,
      "560": 0,
      "561": 0,
      "562": 0,
      "563": 0,
      "564": 0,
      "565": 0,
      "566": 0,
      "567": 0,
      "568": 0,
      "569": 0,
      "570": 0,
      "571": 0,
      "572": 0,
      "573": 0,
      "574": 0,
      "575": 0,
      "576": 0,
      "577": 0,
      "578": 0,
      "579": 0,
      "580": 0,
      "581": 0,
      "582": 0,
      "583": 0,
      "584": 0,
      "585": 0,
      "586": 0,
      "587": 0,
      "588": 0,
      "589": 0,
      "590": 0,
      "591": 0,
      "592": 0,
      "593": 0,
      "594": 0,
      "595": 0,
      "596": 0,
      "597": 0,
      "598": 0,
      "599": 0,
      "600": 0,
      "601": 0,
      "602": 0,
      "603": 0,
      "604": 0,
      "605": 0,
      "606": 0,
      "607": 0,
      "608": 0,
      "609": 0,
      "610": 0,
      "611": 0,
      "612": 0,
      "613": 0,
      "614": 0,
      "615": 0,
      "616": 0,
      "617": 0,
      "618": 0,
      "619": 0,
      "620": 0,
      "621": 0,
      "622": 0,
      "623": 0,
      "624": 0,
      "625": 0,
      "626": 0,
      "627": 0,
      "628": 0,
      "629": 0,
      "630": 0,
      "631": 0,
      "632": 0,
      "633": 0,
      "634": 0,
      "635": 0,
      "636": 0,
      "637": 0,
      "638": 0,
      "639": 0,
      "640": 0,
      "641": 0,
      "642": 0,
      "643": 0,
      "644": 0,
      "645": 0,
      "646": 0,
      "647": 0,
      "648": 0,
      "649": 0,
      "650": 0,
      "651": 0,
      "652": 0,
      "653": 0,
      "654": 0,
      "655": 0,
      "656": 0,
      "657": 0,
      "658": 0,
      "659": 0,
      "660": 0,
      "661": 0,
      "662": 0,
      "663": 0,
      "664": 0,
      "665": 0,
      "666": 0,
      "667": 0,
      "668": 0,
      "669": 0,
      "670": 0,
      "671": 0,
      "672": 0,
      "673": 0,
      "674": 0,
      "675": 0,
      "676": 0,
      "677": 0,
      "678": 0,
      "679": 0,
      "680": 0,
      "681": 0,
      "682": 0,
      "683": 0,
      "684": 0,
      "685": 0,
      "686": 0,
      "687": 0,
      "688": 0,
      "689": 0,
      "690": 0,
      "691": 0,
      "692": 0,
      "693": 0,
      "694": 0,
      "695": 0,
      "696": 0,
      "697": 0,
      "698": 0,
      "699": 0,
      "700": 0,
      "701": 0,
      "702": 0,
      "703": 0,
      "704": 0,
      "705": 0,
      "706": 0,
      "707": 0,
      "708": 0,
      "709": 0,
      "710": 0,
      "711": 0,
      "712": 0,
      "713": 0,
      "714": 0,
      "715": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0, 0, 0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0],
      "103": [0, 0],
      "104": [0, 0],
      "105": [0, 0],
      "106": [0, 0],
      "107": [0, 0],
      "108": [0, 0],
      "109": [0, 0],
      "110": [0, 0],
      "111": [0, 0],
      "112": [0],
      "113": [0, 0],
      "114": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "597c40930f35110f5dbf9d9cdf1f5f268b38a7ea"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_jwevct6y8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_jwevct6y8();
const parser = (cov_jwevct6y8().s[0]++, __webpack_require__(/*! ./parser */ 999));
const transformer = (cov_jwevct6y8().s[1]++, __webpack_require__(/*! ./transformer */ 1333));
const nodes = (cov_jwevct6y8().s[2]++, __webpack_require__(/*! ./nodes */ 8883));
const {
  TemplateError
} = (cov_jwevct6y8().s[3]++, __webpack_require__(/*! ./lib */ 449));
const {
  Frame
} = (cov_jwevct6y8().s[4]++, __webpack_require__(/*! ./runtime */ 5434));
const {
  Obj
} = (cov_jwevct6y8().s[5]++, __webpack_require__(/*! ./object */ 891));

// These are all the same for now, but shouldn't be passed straight
// through
const compareOps = (cov_jwevct6y8().s[6]++, {
  '==': '==',
  '===': '===',
  '!=': '!=',
  '!==': '!==',
  '<': '<',
  '>': '>',
  '<=': '<=',
  '>=': '>='
});
class Compiler extends Obj {
  init(templateName, throwOnUndefined, isAsync) {
    cov_jwevct6y8().f[0]++;
    cov_jwevct6y8().s[7]++;
    this.templateName = templateName;
    cov_jwevct6y8().s[8]++;
    this.codebuf = [];
    cov_jwevct6y8().s[9]++;
    this.lastId = 0;
    cov_jwevct6y8().s[10]++;
    this.buffer = null;
    cov_jwevct6y8().s[11]++;
    this.bufferStack = [];
    cov_jwevct6y8().s[12]++;
    this._scopeClosers = '';
    cov_jwevct6y8().s[13]++;
    this.inBlock = false;
    cov_jwevct6y8().s[14]++;
    this.throwOnUndefined = throwOnUndefined;
    cov_jwevct6y8().s[15]++;
    this.isAsync = isAsync;
    cov_jwevct6y8().s[16]++;
    this.asyncClosureDepth = 0;
  }
  fail(msg, lineno, colno) {
    cov_jwevct6y8().f[1]++;
    cov_jwevct6y8().s[17]++;
    if (lineno !== undefined) {
      cov_jwevct6y8().b[0][0]++;
      cov_jwevct6y8().s[18]++;
      lineno += 1;
    } else {
      cov_jwevct6y8().b[0][1]++;
    }
    cov_jwevct6y8().s[19]++;
    if (colno !== undefined) {
      cov_jwevct6y8().b[1][0]++;
      cov_jwevct6y8().s[20]++;
      colno += 1;
    } else {
      cov_jwevct6y8().b[1][1]++;
    }
    cov_jwevct6y8().s[21]++;
    throw new TemplateError(msg, lineno, colno);
  }
  _pushBuffer() {
    cov_jwevct6y8().f[2]++;
    const id = (cov_jwevct6y8().s[22]++, this._tmpid());
    cov_jwevct6y8().s[23]++;
    this.bufferStack.push(this.buffer);
    cov_jwevct6y8().s[24]++;
    this.buffer = id;
    cov_jwevct6y8().s[25]++;
    if (this.isAsync) {
      cov_jwevct6y8().b[2][0]++;
      cov_jwevct6y8().s[26]++;
      this._emitLine(`let ${this.buffer} = []; let ${this.buffer}_index = 0;`);
    } else {
      cov_jwevct6y8().b[2][1]++;
      cov_jwevct6y8().s[27]++;
      this._emitLine(`let ${this.buffer} = "";`);
    }
    cov_jwevct6y8().s[28]++;
    return id;
  }
  _popBuffer() {
    cov_jwevct6y8().f[3]++;
    cov_jwevct6y8().s[29]++;
    this.buffer = this.bufferStack.pop();
  }
  _emit(code) {
    cov_jwevct6y8().f[4]++;
    cov_jwevct6y8().s[30]++;
    this.codebuf.push(code);
  }
  _emitLine(code) {
    cov_jwevct6y8().f[5]++;
    cov_jwevct6y8().s[31]++;
    this._emit(code + '\n');
  }
  _emitLines() {
    cov_jwevct6y8().f[6]++;
    cov_jwevct6y8().s[32]++;
    for (var _len = arguments.length, lines = new Array(_len), _key = 0; _key < _len; _key++) {
      lines[_key] = arguments[_key];
    }
    lines.forEach(line => {
      cov_jwevct6y8().f[7]++;
      cov_jwevct6y8().s[33]++;
      return this._emitLine(line);
    });
  }
  _emitFuncBegin(node, name) {
    cov_jwevct6y8().f[8]++;
    cov_jwevct6y8().s[34]++;
    this.buffer = 'output';
    cov_jwevct6y8().s[35]++;
    this._scopeClosers = '';
    cov_jwevct6y8().s[36]++;
    if (this.isAsync) {
      cov_jwevct6y8().b[3][0]++;
      cov_jwevct6y8().s[37]++;
      this._emitLine(`function ${name}(env, context, frame, runtime, astate, isIncluded, cb) {`);
    } else {
      cov_jwevct6y8().b[3][1]++;
      cov_jwevct6y8().s[38]++;
      this._emitLine(`function ${name}(env, context, frame, runtime, cb) {`);
    }
    cov_jwevct6y8().s[39]++;
    this._emitLine(`let lineno = ${node.lineno};`);
    cov_jwevct6y8().s[40]++;
    this._emitLine(`let colno = ${node.colno};`);
    // this._emitLine(`let ${this.buffer} = "";`);
    cov_jwevct6y8().s[41]++;
    if (this.isAsync) {
      cov_jwevct6y8().b[4][0]++;
      cov_jwevct6y8().s[42]++;
      this._emit(`let ${this.buffer} = []; let ${this.buffer}_index = 0;`);
    } else {
      cov_jwevct6y8().b[4][1]++;
      cov_jwevct6y8().s[43]++;
      this._emit(`let ${this.buffer} = "";`);
    }
    cov_jwevct6y8().s[44]++;
    this._emitLine('try {');
  }
  _emitFuncEnd(noReturn) {
    cov_jwevct6y8().f[9]++;
    cov_jwevct6y8().s[45]++;
    if (!noReturn) {
      cov_jwevct6y8().b[5][0]++;
      cov_jwevct6y8().s[46]++;
      this._emitLine('cb(null, ' + this.buffer + ');');
    } else {
      cov_jwevct6y8().b[5][1]++;
    }
    cov_jwevct6y8().s[47]++;
    this._closeScopeLevels();
    cov_jwevct6y8().s[48]++;
    this._emitLine('} catch (e) {');
    cov_jwevct6y8().s[49]++;
    this._emitLine('  cb(runtime.handleError(e, lineno, colno));');
    cov_jwevct6y8().s[50]++;
    this._emitLine('}');
    cov_jwevct6y8().s[51]++;
    this._emitLine('}');
    cov_jwevct6y8().s[52]++;
    this.buffer = null;
  }

  // wrap await calls in this, maybe we should only astate.enterClosure()/leaveClosure()
  // the async blocks
  _emitAwaitBegin() {
    cov_jwevct6y8().f[10]++;
    cov_jwevct6y8().s[53]++;
    if (this.isAsync) {
      cov_jwevct6y8().b[6][0]++;
      cov_jwevct6y8().s[54]++;
      this._emit('(await ');
    } else {
      cov_jwevct6y8().b[6][1]++;
    }
  }
  _emitAwaitEnd() {
    cov_jwevct6y8().f[11]++;
    cov_jwevct6y8().s[55]++;
    if (this.isAsync) {
      cov_jwevct6y8().b[7][0]++;
      cov_jwevct6y8().s[56]++;
      this._emit(')');
    } else {
      cov_jwevct6y8().b[7][1]++;
    }
  }

  // an async block that does not have a value should be wrapped in this
  _emitAsyncBlockBegin() {
    cov_jwevct6y8().f[12]++;
    cov_jwevct6y8().s[57]++;
    if (this.isAsync) {
      cov_jwevct6y8().b[8][0]++;
      cov_jwevct6y8().s[58]++;
      this._emit(`(async (frame)=>{`);
      cov_jwevct6y8().s[59]++;
      this._emit('astate.enterClosure();');
      cov_jwevct6y8().s[60]++;
      this.asyncClosureDepth++;
    } else {
      cov_jwevct6y8().b[8][1]++;
    }
  }
  _emitAsyncBlockEnd() {
    cov_jwevct6y8().f[13]++;
    cov_jwevct6y8().s[61]++;
    if (this.isAsync) {
      cov_jwevct6y8().b[9][0]++;
      cov_jwevct6y8().s[62]++;
      this._emitLine(`})(frame)`);
      cov_jwevct6y8().s[63]++;
      this.asyncClosureDepth--;
      cov_jwevct6y8().s[64]++;
      if (this.asyncClosureDepth === 0) {
        cov_jwevct6y8().b[10][0]++;
        cov_jwevct6y8().s[65]++;
        this._emitLine('.catch(e=>{cb(runtime.handleError(e, lineno, colno))})');
      } else {
        cov_jwevct6y8().b[10][1]++;
      }
      cov_jwevct6y8().s[66]++;
      this._emitLine('.finally(()=>{astate.leaveClosure();})');
    } else {
      cov_jwevct6y8().b[9][1]++;
    }
  }
  _emitAsyncValueBegin() {
    cov_jwevct6y8().f[14]++;
    cov_jwevct6y8().s[67]++;
    if (this.isAsync) {
      cov_jwevct6y8().b[11][0]++;
      cov_jwevct6y8().s[68]++;
      this._emitLine(`${this.asyncClosureDepth > 0 ? (cov_jwevct6y8().b[12][0]++, 'await ') : (cov_jwevct6y8().b[12][1]++, '')}(async ()=>{`);
      cov_jwevct6y8().s[69]++;
      this._emitLine('astate.enterClosure();');
      cov_jwevct6y8().s[70]++;
      this._emit('return ');
      cov_jwevct6y8().s[71]++;
      this.asyncClosureDepth++;
    } else {
      cov_jwevct6y8().b[11][1]++;
    }
  }
  _emitAsyncValueEnd() {
    cov_jwevct6y8().f[15]++;
    cov_jwevct6y8().s[72]++;
    if (this.isAsync) {
      cov_jwevct6y8().b[13][0]++;
      cov_jwevct6y8().s[73]++;
      this._emitLine('})()');
      cov_jwevct6y8().s[74]++;
      this.asyncClosureDepth--;
      cov_jwevct6y8().s[75]++;
      if (this.asyncClosureDepth === 0) {
        cov_jwevct6y8().b[14][0]++;
        cov_jwevct6y8().s[76]++;
        this._emitLine('.catch(e=>{cb(runtime.handleError(e, lineno, colno))})');
      } else {
        cov_jwevct6y8().b[14][1]++;
      }
      cov_jwevct6y8().s[77]++;
      this._emitLine('.finally(()=>{astate.leaveClosure();})');
    } else {
      cov_jwevct6y8().b[13][1]++;
    }
  }
  _emitAddToBufferBegin(addClosure) {
    if (addClosure === void 0) {
      addClosure = (cov_jwevct6y8().b[15][0]++, true);
    }
    cov_jwevct6y8().f[16]++;
    cov_jwevct6y8().s[78]++;
    if (this.isAsync) {
      cov_jwevct6y8().b[16][0]++;
      cov_jwevct6y8().s[79]++;
      if (addClosure) {
        cov_jwevct6y8().b[17][0]++;
        cov_jwevct6y8().s[80]++;
        this._emitLine('(async ()=>{');
        cov_jwevct6y8().s[81]++;
        this._emitLine('astate.enterClosure();');
        cov_jwevct6y8().s[82]++;
        this._emitLine(`let index = ${this.buffer}_index++;`);
        cov_jwevct6y8().s[83]++;
        this._emit(`${this.buffer}[index] = `);
        cov_jwevct6y8().s[84]++;
        this.asyncClosureDepth++;
      } else {
        cov_jwevct6y8().b[17][1]++;
        cov_jwevct6y8().s[85]++;
        this._emitLine(`${this.buffer}[${this.buffer}_index++] = `);
      }
    } else {
      cov_jwevct6y8().b[16][1]++;
      cov_jwevct6y8().s[86]++;
      this._emit(`${this.buffer} += `);
    }
  }
  _emitAddToBufferEnd(addClosure) {
    if (addClosure === void 0) {
      addClosure = (cov_jwevct6y8().b[18][0]++, true);
    }
    cov_jwevct6y8().f[17]++;
    cov_jwevct6y8().s[87]++;
    if ((cov_jwevct6y8().b[20][0]++, this.isAsync) && (cov_jwevct6y8().b[20][1]++, addClosure)) {
      cov_jwevct6y8().b[19][0]++;
      cov_jwevct6y8().s[88]++;
      this._emitLine('})()');
      cov_jwevct6y8().s[89]++;
      this.asyncClosureDepth--;
      cov_jwevct6y8().s[90]++;
      if (this.asyncClosureDepth === 0) {
        cov_jwevct6y8().b[21][0]++;
        cov_jwevct6y8().s[91]++;
        this._emitLine('.catch(e=>{cb(runtime.handleError(e, lineno, colno))})');
      } else {
        cov_jwevct6y8().b[21][1]++;
      }
      cov_jwevct6y8().s[92]++;
      this._emitLine('.finally(()=>{astate.leaveClosure();})');
    } else {
      cov_jwevct6y8().b[19][1]++;
    }
  }
  _emitBufferBlockBegin() {
    cov_jwevct6y8().f[18]++;
    cov_jwevct6y8().s[93]++;
    if (this.isAsync) {
      cov_jwevct6y8().b[22][0]++;
      cov_jwevct6y8().s[94]++;
      // Start the async closure
      this._emitAsyncBlockBegin();

      // Push the current buffer onto the stack
      cov_jwevct6y8().s[95]++;
      this.bufferStack.push(this.buffer);

      // Create a new buffer array for the nested block
      const newBuffer = (cov_jwevct6y8().s[96]++, this._tmpid());

      // Initialize the new buffer and its index inside the async closure
      cov_jwevct6y8().s[97]++;
      this._emitLine(`let ${newBuffer} = [];`);
      cov_jwevct6y8().s[98]++;
      this._emitLine(`let ${newBuffer}_index = 0;`);

      // Append the new buffer to the parent buffer
      cov_jwevct6y8().s[99]++;
      this._emitLine(`${this.buffer}[${this.buffer}_index++] = ${newBuffer};`);

      // Update the buffer reference
      cov_jwevct6y8().s[100]++;
      this.buffer = newBuffer;
      // No need to update bufferIndex; we'll use `${this.buffer}_index` when needed
    } else {
      cov_jwevct6y8().b[22][1]++;
    }
  }
  _emitBufferBlockEnd() {
    cov_jwevct6y8().f[19]++;
    cov_jwevct6y8().s[101]++;
    if (this.isAsync) {
      cov_jwevct6y8().b[23][0]++;
      cov_jwevct6y8().s[102]++;
      // End the async closure
      this._emitAsyncBlockEnd();

      // Restore the previous buffer from the stack
      cov_jwevct6y8().s[103]++;
      this.buffer = this.bufferStack.pop();
    } else {
      cov_jwevct6y8().b[23][1]++;
    }
  }
  _addScopeLevel() {
    cov_jwevct6y8().f[20]++;
    cov_jwevct6y8().s[104]++;
    this._scopeClosers += '})';
  }
  _closeScopeLevels() {
    cov_jwevct6y8().f[21]++;
    cov_jwevct6y8().s[105]++;
    this._emitLine(this._scopeClosers + ';');
    cov_jwevct6y8().s[106]++;
    this._scopeClosers = '';
  }
  _withScopedSyntax(func) {
    cov_jwevct6y8().f[22]++;
    var _scopeClosers = (cov_jwevct6y8().s[107]++, this._scopeClosers);
    cov_jwevct6y8().s[108]++;
    this._scopeClosers = '';
    cov_jwevct6y8().s[109]++;
    func.call(this);
    cov_jwevct6y8().s[110]++;
    this._closeScopeLevels();
    cov_jwevct6y8().s[111]++;
    this._scopeClosers = _scopeClosers;
  }
  _makeCallback(res) {
    cov_jwevct6y8().f[23]++;
    var err = (cov_jwevct6y8().s[112]++, this._tmpid());
    cov_jwevct6y8().s[113]++;
    return 'function(' + err + (res ? (cov_jwevct6y8().b[24][0]++, ',' + res) : (cov_jwevct6y8().b[24][1]++, '')) + ') {\n' + 'if(' + err + ') { cb(' + err + '); return; }';
  }
  _tmpid() {
    cov_jwevct6y8().f[24]++;
    cov_jwevct6y8().s[114]++;
    this.lastId++;
    cov_jwevct6y8().s[115]++;
    return 't_' + this.lastId;
  }
  _templateName() {
    cov_jwevct6y8().f[25]++;
    cov_jwevct6y8().s[116]++;
    return this.templateName == null ? (cov_jwevct6y8().b[25][0]++, 'undefined') : (cov_jwevct6y8().b[25][1]++, JSON.stringify(this.templateName));
  }
  _compileChildren(node, frame) {
    cov_jwevct6y8().f[26]++;
    cov_jwevct6y8().s[117]++;
    node.children.forEach(child => {
      cov_jwevct6y8().f[27]++;
      cov_jwevct6y8().s[118]++;
      this.compile(child, frame);
    });
  }
  _compileAggregate(node, frame, startChar, endChar) {
    cov_jwevct6y8().f[28]++;
    cov_jwevct6y8().s[119]++;
    if (startChar) {
      cov_jwevct6y8().b[26][0]++;
      cov_jwevct6y8().s[120]++;
      this._emit(startChar);
    } else {
      cov_jwevct6y8().b[26][1]++;
    }
    cov_jwevct6y8().s[121]++;
    node.children.forEach((child, i) => {
      cov_jwevct6y8().f[29]++;
      cov_jwevct6y8().s[122]++;
      if (i > 0) {
        cov_jwevct6y8().b[27][0]++;
        cov_jwevct6y8().s[123]++;
        this._emit(',');
      } else {
        cov_jwevct6y8().b[27][1]++;
      }
      cov_jwevct6y8().s[124]++;
      this.compile(child, frame);
    });
    cov_jwevct6y8().s[125]++;
    if (endChar) {
      cov_jwevct6y8().b[28][0]++;
      cov_jwevct6y8().s[126]++;
      this._emit(endChar);
    } else {
      cov_jwevct6y8().b[28][1]++;
    }
  }
  _compileExpression(node, frame) {
    cov_jwevct6y8().f[30]++;
    cov_jwevct6y8().s[127]++;
    // TODO: I'm not really sure if this type check is worth it or
    // not.
    this.assertType(node, nodes.Literal, nodes.Symbol, nodes.Group, nodes.Array, nodes.Dict, nodes.FunCall, nodes.Caller, nodes.Filter, nodes.LookupVal, nodes.Compare, nodes.InlineIf, nodes.In, nodes.Is, nodes.And, nodes.Or, nodes.Not, nodes.Add, nodes.Concat, nodes.Sub, nodes.Mul, nodes.Div, nodes.FloorDiv, nodes.Mod, nodes.Pow, nodes.Neg, nodes.Pos, nodes.Compare, nodes.NodeList);
    cov_jwevct6y8().s[128]++;
    this.compile(node, frame);
  }
  assertType(node) {
    cov_jwevct6y8().f[31]++;
    cov_jwevct6y8().s[129]++;
    for (var _len2 = arguments.length, types = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      types[_key2 - 1] = arguments[_key2];
    }
    if (!types.some(t => {
      cov_jwevct6y8().f[32]++;
      cov_jwevct6y8().s[130]++;
      return node instanceof t;
    })) {
      cov_jwevct6y8().b[29][0]++;
      cov_jwevct6y8().s[131]++;
      this.fail(`assertType: invalid type: ${node.typename}`, node.lineno, node.colno);
    } else {
      cov_jwevct6y8().b[29][1]++;
    }
  }
  compileCallExtension(node, frame, async) {
    cov_jwevct6y8().f[33]++;
    var args = (cov_jwevct6y8().s[132]++, node.args);
    var contentArgs = (cov_jwevct6y8().s[133]++, node.contentArgs);
    var autoescape = (cov_jwevct6y8().s[134]++, typeof node.autoescape === 'boolean' ? (cov_jwevct6y8().b[30][0]++, node.autoescape) : (cov_jwevct6y8().b[30][1]++, true));
    cov_jwevct6y8().s[135]++;
    if (!async) {
      cov_jwevct6y8().b[31][0]++;
      cov_jwevct6y8().s[136]++;
      // this._emit(`${this.buffer} += runtime.suppressValue(`);
      this._emitAddToBufferBegin();
      cov_jwevct6y8().s[137]++;
      this._emit(`${this.isAsync ? (cov_jwevct6y8().b[32][0]++, 'await runtime.suppressValueAsync(') : (cov_jwevct6y8().b[32][1]++, 'runtime.suppressValue(')}`);
      cov_jwevct6y8().s[138]++;
      this._emitAwaitBegin();
    } else {
      cov_jwevct6y8().b[31][1]++;
    }
    cov_jwevct6y8().s[139]++;
    this._emit(`env.getExtension("${node.extName}")["${node.prop}"](`);
    cov_jwevct6y8().s[140]++;
    this._emit('context');
    cov_jwevct6y8().s[141]++;
    if ((cov_jwevct6y8().b[34][0]++, args) || (cov_jwevct6y8().b[34][1]++, contentArgs)) {
      cov_jwevct6y8().b[33][0]++;
      cov_jwevct6y8().s[142]++;
      this._emit(',');
    } else {
      cov_jwevct6y8().b[33][1]++;
    }
    cov_jwevct6y8().s[143]++;
    if (args) {
      cov_jwevct6y8().b[35][0]++;
      cov_jwevct6y8().s[144]++;
      if (!(args instanceof nodes.NodeList)) {
        cov_jwevct6y8().b[36][0]++;
        cov_jwevct6y8().s[145]++;
        this.fail('compileCallExtension: arguments must be a NodeList, ' + 'use `parser.parseSignature`');
      } else {
        cov_jwevct6y8().b[36][1]++;
      }
      cov_jwevct6y8().s[146]++;
      args.children.forEach((arg, i) => {
        cov_jwevct6y8().f[34]++;
        cov_jwevct6y8().s[147]++;
        // Tag arguments are passed normally to the call. Note
        // that keyword arguments are turned into a single js
        // object as the last argument, if they exist.
        this._compileExpression(arg, frame);
        cov_jwevct6y8().s[148]++;
        if ((cov_jwevct6y8().b[38][0]++, i !== args.children.length - 1) || (cov_jwevct6y8().b[38][1]++, contentArgs.length)) {
          cov_jwevct6y8().b[37][0]++;
          cov_jwevct6y8().s[149]++;
          this._emit(',');
        } else {
          cov_jwevct6y8().b[37][1]++;
        }
      });
    } else {
      cov_jwevct6y8().b[35][1]++;
    }
    cov_jwevct6y8().s[150]++;
    if (contentArgs.length) {
      cov_jwevct6y8().b[39][0]++;
      cov_jwevct6y8().s[151]++;
      contentArgs.forEach((arg, i) => {
        cov_jwevct6y8().f[35]++;
        cov_jwevct6y8().s[152]++;
        if (i > 0) {
          cov_jwevct6y8().b[40][0]++;
          cov_jwevct6y8().s[153]++;
          this._emit(',');
        } else {
          cov_jwevct6y8().b[40][1]++;
        }
        cov_jwevct6y8().s[154]++;
        if (arg) {
          cov_jwevct6y8().b[41][0]++;
          cov_jwevct6y8().s[155]++;
          this._emitLine('function(cb) {');
          cov_jwevct6y8().s[156]++;
          this._emitLine('if(!cb) { cb = function(err) { if(err) { throw err; }}}');
          const id = (cov_jwevct6y8().s[157]++, this._pushBuffer());
          cov_jwevct6y8().s[158]++;
          this._withScopedSyntax(() => {
            cov_jwevct6y8().f[36]++;
            cov_jwevct6y8().s[159]++;
            this.compile(arg, frame);
            cov_jwevct6y8().s[160]++;
            this._emitLine(`cb(null, ${id});`);
          });
          cov_jwevct6y8().s[161]++;
          this._popBuffer();
          cov_jwevct6y8().s[162]++;
          this._emitLine(`return ${id};`);
          cov_jwevct6y8().s[163]++;
          this._emitLine('}');
        } else {
          cov_jwevct6y8().b[41][1]++;
          cov_jwevct6y8().s[164]++;
          this._emit('null');
        }
      });
    } else {
      cov_jwevct6y8().b[39][1]++;
    }
    cov_jwevct6y8().s[165]++;
    if (async) {
      cov_jwevct6y8().b[42][0]++;
      const res = (cov_jwevct6y8().s[166]++, this._tmpid());
      cov_jwevct6y8().s[167]++;
      this._emitLine(', ' + this._makeCallback(res));
      cov_jwevct6y8().s[168]++;
      this._emitAddToBufferBegin();

      // this._emitLine(
      //  `${this.buffer} += runtime.suppressValue(${res}, ${autoescape} && env.opts.autoescape);`);
      cov_jwevct6y8().s[169]++;
      this._emit(`${this.isAsync ? (cov_jwevct6y8().b[43][0]++, 'await runtime.suppressValueAsync') : (cov_jwevct6y8().b[43][1]++, 'runtime.suppressValue')}(${res}, ${autoescape} && env.opts.autoescape);`);
      cov_jwevct6y8().s[170]++;
      this._emitAddToBufferEnd();
      cov_jwevct6y8().s[171]++;
      this._addScopeLevel();
    } else {
      cov_jwevct6y8().b[42][1]++;
      cov_jwevct6y8().s[172]++;
      this._emit(')');
      cov_jwevct6y8().s[173]++;
      this._emitAwaitEnd();
      cov_jwevct6y8().s[174]++;
      this._emit(`, ${autoescape} && env.opts.autoescape);\n`);
      cov_jwevct6y8().s[175]++;
      this._emitAddToBufferEnd();
    }
  }
  compileCallExtensionAsync(node, frame) {
    cov_jwevct6y8().f[37]++;
    cov_jwevct6y8().s[176]++;
    this.compileCallExtension(node, frame, true);
  }
  compileNodeList(node, frame) {
    cov_jwevct6y8().f[38]++;
    cov_jwevct6y8().s[177]++;
    this._compileChildren(node, frame);
  }
  compileLiteral(node) {
    cov_jwevct6y8().f[39]++;
    cov_jwevct6y8().s[178]++;
    if (typeof node.value === 'string') {
      cov_jwevct6y8().b[44][0]++;
      let val = (cov_jwevct6y8().s[179]++, node.value.replace(/\\/g, '\\\\'));
      cov_jwevct6y8().s[180]++;
      val = val.replace(/"/g, '\\"');
      cov_jwevct6y8().s[181]++;
      val = val.replace(/\n/g, '\\n');
      cov_jwevct6y8().s[182]++;
      val = val.replace(/\r/g, '\\r');
      cov_jwevct6y8().s[183]++;
      val = val.replace(/\t/g, '\\t');
      cov_jwevct6y8().s[184]++;
      val = val.replace(/\u2028/g, '\\u2028');
      cov_jwevct6y8().s[185]++;
      this._emit(`"${val}"`);
    } else {
      cov_jwevct6y8().b[44][1]++;
      cov_jwevct6y8().s[186]++;
      if (node.value === null) {
        cov_jwevct6y8().b[45][0]++;
        cov_jwevct6y8().s[187]++;
        this._emit('null');
      } else {
        cov_jwevct6y8().b[45][1]++;
        cov_jwevct6y8().s[188]++;
        this._emit(node.value.toString());
      }
    }
  }
  compileSymbol(node, frame) {
    cov_jwevct6y8().f[40]++;
    var name = (cov_jwevct6y8().s[189]++, node.value);
    var v = (cov_jwevct6y8().s[190]++, frame.lookup(name));
    cov_jwevct6y8().s[191]++;
    if (v) {
      cov_jwevct6y8().b[46][0]++;
      cov_jwevct6y8().s[192]++;
      this._emit(v);
    } else {
      cov_jwevct6y8().b[46][1]++;
      cov_jwevct6y8().s[193]++;
      // @todo - omit this for function calls?
      // (parent instanceof nodes.FunCall && parent.name === node)
      this._emitAwaitBegin();
      cov_jwevct6y8().s[194]++;
      this._emit('runtime.contextOrFrameLookup(' + 'context, frame, "' + name + '")');
      cov_jwevct6y8().s[195]++;
      this._emitAwaitEnd();
    }
  }
  compileGroup(node, frame) {
    cov_jwevct6y8().f[41]++;
    cov_jwevct6y8().s[196]++;
    this._compileAggregate(node, frame, '(', ')');
  }
  compileArray(node, frame) {
    cov_jwevct6y8().f[42]++;
    cov_jwevct6y8().s[197]++;
    this._compileAggregate(node, frame, '[', ']');
  }
  compileDict(node, frame) {
    cov_jwevct6y8().f[43]++;
    cov_jwevct6y8().s[198]++;
    this._compileAggregate(node, frame, '{', '}');
  }
  compilePair(node, frame) {
    cov_jwevct6y8().f[44]++;
    var key = (cov_jwevct6y8().s[199]++, node.key);
    var val = (cov_jwevct6y8().s[200]++, node.value);
    cov_jwevct6y8().s[201]++;
    if (key instanceof nodes.Symbol) {
      cov_jwevct6y8().b[47][0]++;
      cov_jwevct6y8().s[202]++;
      key = new nodes.Literal(key.lineno, key.colno, key.value);
    } else {
      cov_jwevct6y8().b[47][1]++;
      cov_jwevct6y8().s[203]++;
      if (!((cov_jwevct6y8().b[49][0]++, key instanceof nodes.Literal) && (cov_jwevct6y8().b[49][1]++, typeof key.value === 'string'))) {
        cov_jwevct6y8().b[48][0]++;
        cov_jwevct6y8().s[204]++;
        this.fail('compilePair: Dict keys must be strings or names', key.lineno, key.colno);
      } else {
        cov_jwevct6y8().b[48][1]++;
      }
    }
    cov_jwevct6y8().s[205]++;
    this.compile(key, frame);
    cov_jwevct6y8().s[206]++;
    this._emit(': ');
    cov_jwevct6y8().s[207]++;
    this._compileExpression(val, frame);
  }
  compileInlineIf(node, frame) {
    cov_jwevct6y8().f[45]++;
    cov_jwevct6y8().s[208]++;
    this._emit('(');
    cov_jwevct6y8().s[209]++;
    this.compile(node.cond, frame);
    cov_jwevct6y8().s[210]++;
    this._emit('?');
    cov_jwevct6y8().s[211]++;
    this.compile(node.body, frame);
    cov_jwevct6y8().s[212]++;
    this._emit(':');
    cov_jwevct6y8().s[213]++;
    if (node.else_ !== null) {
      cov_jwevct6y8().b[50][0]++;
      cov_jwevct6y8().s[214]++;
      this.compile(node.else_, frame);
    } else {
      cov_jwevct6y8().b[50][1]++;
      cov_jwevct6y8().s[215]++;
      this._emit('""');
    }
    cov_jwevct6y8().s[216]++;
    this._emit(')');
  }
  compileIn(node, frame) {
    cov_jwevct6y8().f[46]++;
    cov_jwevct6y8().s[217]++;
    this._emit('runtime.inOperator(');
    cov_jwevct6y8().s[218]++;
    this.compile(node.left, frame);
    cov_jwevct6y8().s[219]++;
    this._emit(',');
    cov_jwevct6y8().s[220]++;
    this.compile(node.right, frame);
    cov_jwevct6y8().s[221]++;
    this._emit(')');
  }
  compileIs(node, frame) {
    cov_jwevct6y8().f[47]++;
    // first, we need to try to get the name of the test function, if it's a
    // callable (i.e., has args) and not a symbol.
    var right = (cov_jwevct6y8().s[222]++, node.right.name ? (cov_jwevct6y8().b[51][0]++, node.right.name.value // otherwise go with the symbol value
    ) : (cov_jwevct6y8().b[51][1]++, node.right.value));
    cov_jwevct6y8().s[223]++;
    this._emit('env.getTest("' + right + '").call(context, ');
    cov_jwevct6y8().s[224]++;
    this.compile(node.left, frame);
    // compile the arguments for the callable if they exist
    cov_jwevct6y8().s[225]++;
    if (node.right.args) {
      cov_jwevct6y8().b[52][0]++;
      cov_jwevct6y8().s[226]++;
      this._emit(',');
      cov_jwevct6y8().s[227]++;
      this.compile(node.right.args, frame);
    } else {
      cov_jwevct6y8().b[52][1]++;
    }
    cov_jwevct6y8().s[228]++;
    this._emit(') === true');
  }
  _binOpEmitter(node, frame, str) {
    cov_jwevct6y8().f[48]++;
    cov_jwevct6y8().s[229]++;
    this.compile(node.left, frame);
    cov_jwevct6y8().s[230]++;
    this._emit(str);
    cov_jwevct6y8().s[231]++;
    this.compile(node.right, frame);
  }

  // ensure concatenation instead of addition
  // by adding empty string in between
  compileOr(node, frame) {
    cov_jwevct6y8().f[49]++;
    cov_jwevct6y8().s[232]++;
    return this._binOpEmitter(node, frame, ' || ');
  }
  compileAnd(node, frame) {
    cov_jwevct6y8().f[50]++;
    cov_jwevct6y8().s[233]++;
    return this._binOpEmitter(node, frame, ' && ');
  }
  compileAdd(node, frame) {
    cov_jwevct6y8().f[51]++;
    cov_jwevct6y8().s[234]++;
    return this._binOpEmitter(node, frame, ' + ');
  }
  compileConcat(node, frame) {
    cov_jwevct6y8().f[52]++;
    cov_jwevct6y8().s[235]++;
    return this._binOpEmitter(node, frame, ' + "" + ');
  }
  compileSub(node, frame) {
    cov_jwevct6y8().f[53]++;
    cov_jwevct6y8().s[236]++;
    return this._binOpEmitter(node, frame, ' - ');
  }
  compileMul(node, frame) {
    cov_jwevct6y8().f[54]++;
    cov_jwevct6y8().s[237]++;
    return this._binOpEmitter(node, frame, ' * ');
  }
  compileDiv(node, frame) {
    cov_jwevct6y8().f[55]++;
    cov_jwevct6y8().s[238]++;
    return this._binOpEmitter(node, frame, ' / ');
  }
  compileMod(node, frame) {
    cov_jwevct6y8().f[56]++;
    cov_jwevct6y8().s[239]++;
    return this._binOpEmitter(node, frame, ' % ');
  }
  compileNot(node, frame) {
    cov_jwevct6y8().f[57]++;
    cov_jwevct6y8().s[240]++;
    this._emit('!');
    cov_jwevct6y8().s[241]++;
    this.compile(node.target, frame);
  }
  compileFloorDiv(node, frame) {
    cov_jwevct6y8().f[58]++;
    cov_jwevct6y8().s[242]++;
    this._emit('Math.floor(');
    cov_jwevct6y8().s[243]++;
    this.compile(node.left, frame);
    cov_jwevct6y8().s[244]++;
    this._emit(' / ');
    cov_jwevct6y8().s[245]++;
    this.compile(node.right, frame);
    cov_jwevct6y8().s[246]++;
    this._emit(')');
  }
  compilePow(node, frame) {
    cov_jwevct6y8().f[59]++;
    cov_jwevct6y8().s[247]++;
    this._emit('Math.pow(');
    cov_jwevct6y8().s[248]++;
    this.compile(node.left, frame);
    cov_jwevct6y8().s[249]++;
    this._emit(', ');
    cov_jwevct6y8().s[250]++;
    this.compile(node.right, frame);
    cov_jwevct6y8().s[251]++;
    this._emit(')');
  }
  compileNeg(node, frame) {
    cov_jwevct6y8().f[60]++;
    cov_jwevct6y8().s[252]++;
    this._emit('-');
    cov_jwevct6y8().s[253]++;
    this.compile(node.target, frame);
  }
  compilePos(node, frame) {
    cov_jwevct6y8().f[61]++;
    cov_jwevct6y8().s[254]++;
    this._emit('+');
    cov_jwevct6y8().s[255]++;
    this.compile(node.target, frame);
  }
  compileCompare(node, frame) {
    cov_jwevct6y8().f[62]++;
    cov_jwevct6y8().s[256]++;
    this.compile(node.expr, frame);
    cov_jwevct6y8().s[257]++;
    node.ops.forEach(op => {
      cov_jwevct6y8().f[63]++;
      cov_jwevct6y8().s[258]++;
      this._emit(` ${compareOps[op.type]} `);
      cov_jwevct6y8().s[259]++;
      this.compile(op.expr, frame);
    });
  }
  compileLookupVal(node, frame) {
    cov_jwevct6y8().f[64]++;
    cov_jwevct6y8().s[260]++;
    this._emitAwaitBegin();
    cov_jwevct6y8().s[261]++;
    this._emit('runtime.memberLookup((');
    cov_jwevct6y8().s[262]++;
    this._compileExpression(node.target, frame);
    cov_jwevct6y8().s[263]++;
    this._emit('),');
    cov_jwevct6y8().s[264]++;
    this._compileExpression(node.val, frame);
    cov_jwevct6y8().s[265]++;
    this._emit(')');
    cov_jwevct6y8().s[266]++;
    this._emitAwaitEnd();
  }
  _getNodeName(node) {
    cov_jwevct6y8().f[65]++;
    cov_jwevct6y8().s[267]++;
    switch (node.typename) {
      case 'Symbol':
        cov_jwevct6y8().b[53][0]++;
        cov_jwevct6y8().s[268]++;
        return node.value;
      case 'FunCall':
        cov_jwevct6y8().b[53][1]++;
        cov_jwevct6y8().s[269]++;
        return 'the return value of (' + this._getNodeName(node.name) + ')';
      case 'LookupVal':
        cov_jwevct6y8().b[53][2]++;
        cov_jwevct6y8().s[270]++;
        return this._getNodeName(node.target) + '["' + this._getNodeName(node.val) + '"]';
      case 'Literal':
        cov_jwevct6y8().b[53][3]++;
        cov_jwevct6y8().s[271]++;
        return node.value.toString();
      default:
        cov_jwevct6y8().b[53][4]++;
        cov_jwevct6y8().s[272]++;
        return '--expression--';
    }
  }
  compileFunCall(node, frame) {
    cov_jwevct6y8().f[66]++;
    cov_jwevct6y8().s[273]++;
    // Keep track of line/col info at runtime by settings
    // variables within an expression. An expression in javascript
    // like (x, y, z) returns the last value, and x and y can be
    // anything
    if (this.isAsync) {
      cov_jwevct6y8().b[54][0]++;
      cov_jwevct6y8().s[274]++;
      this._emitAsyncValueBegin();
    } else {
      cov_jwevct6y8().b[54][1]++;
    }
    cov_jwevct6y8().s[275]++;
    this._emit('(lineno = ' + node.lineno + ', colno = ' + node.colno + ', ');
    cov_jwevct6y8().s[276]++;
    this._emitAwaitBegin();
    cov_jwevct6y8().s[277]++;
    this._emit('runtime.callWrap(');
    // Compile it as normal.
    cov_jwevct6y8().s[278]++;
    this._compileExpression(node.name, frame);

    // Output the name of what we're calling so we can get friendly errors
    // if the lookup fails.
    cov_jwevct6y8().s[279]++;
    this._emit(', "' + this._getNodeName(node.name).replace(/"/g, '\\"') + '", context, ');
    cov_jwevct6y8().s[280]++;
    this._compileAggregate(node.args, frame, '[', '])');
    cov_jwevct6y8().s[281]++;
    this._emit(')');
    cov_jwevct6y8().s[282]++;
    this._emitAwaitEnd();
    cov_jwevct6y8().s[283]++;
    if (this.isAsync) {
      cov_jwevct6y8().b[55][0]++;
      cov_jwevct6y8().s[284]++;
      this._emitAsyncValueEnd();
    } else {
      cov_jwevct6y8().b[55][1]++;
    }
  }
  compileFilter(node, frame) {
    cov_jwevct6y8().f[67]++;
    var name = (cov_jwevct6y8().s[285]++, node.name);
    cov_jwevct6y8().s[286]++;
    this._emitAwaitBegin();
    cov_jwevct6y8().s[287]++;
    this.assertType(name, nodes.Symbol);
    cov_jwevct6y8().s[288]++;
    this._emit('env.getFilter("' + name.value + '").call(context, ');
    cov_jwevct6y8().s[289]++;
    this._compileAggregate(node.args, frame);
    cov_jwevct6y8().s[290]++;
    this._emit(')');
    cov_jwevct6y8().s[291]++;
    this._emitAwaitEnd();
  }
  compileFilterAsync(node, frame) {
    cov_jwevct6y8().f[68]++;
    var name = (cov_jwevct6y8().s[292]++, node.name);
    var symbol = (cov_jwevct6y8().s[293]++, node.symbol.value);
    cov_jwevct6y8().s[294]++;
    this.assertType(name, nodes.Symbol);
    cov_jwevct6y8().s[295]++;
    frame.set(symbol, symbol);
    cov_jwevct6y8().s[296]++;
    this._emit('env.getFilter("' + name.value + '").call(context, ');
    cov_jwevct6y8().s[297]++;
    this._compileAggregate(node.args, frame);
    cov_jwevct6y8().s[298]++;
    this._emitLine(', ' + this._makeCallback(symbol));
    cov_jwevct6y8().s[299]++;
    this._addScopeLevel();
  }
  compileKeywordArgs(node, frame) {
    cov_jwevct6y8().f[69]++;
    cov_jwevct6y8().s[300]++;
    this._emit('runtime.makeKeywordArgs(');
    cov_jwevct6y8().s[301]++;
    this.compileDict(node, frame);
    cov_jwevct6y8().s[302]++;
    this._emit(')');
  }
  compileSet(node, frame) {
    cov_jwevct6y8().f[70]++;
    var ids = (cov_jwevct6y8().s[303]++, []);

    // Lookup the variable names for each identifier and create
    // new ones if necessary
    cov_jwevct6y8().s[304]++;
    node.targets.forEach(target => {
      cov_jwevct6y8().f[71]++;
      var name = (cov_jwevct6y8().s[305]++, target.value);
      var id = (cov_jwevct6y8().s[306]++, frame.lookup(name));
      cov_jwevct6y8().s[307]++;
      if ((cov_jwevct6y8().b[57][0]++, id === null) || (cov_jwevct6y8().b[57][1]++, id === undefined)) {
        cov_jwevct6y8().b[56][0]++;
        cov_jwevct6y8().s[308]++;
        id = this._tmpid();

        // Note: This relies on js allowing scope across
        // blocks, in case this is created inside an `if`
        cov_jwevct6y8().s[309]++;
        this._emitLine('let ' + id + ';');
      } else {
        cov_jwevct6y8().b[56][1]++;
      }
      cov_jwevct6y8().s[310]++;
      ids.push(id);
    });
    cov_jwevct6y8().s[311]++;
    if (node.value) {
      cov_jwevct6y8().b[58][0]++;
      cov_jwevct6y8().s[312]++;
      this._emit(ids.join(' = ') + ' = ');
      cov_jwevct6y8().s[313]++;
      this._compileExpression(node.value, frame);
      cov_jwevct6y8().s[314]++;
      this._emitLine(';');
    } else {
      cov_jwevct6y8().b[58][1]++;
      cov_jwevct6y8().s[315]++;
      this._emit(ids.join(' = ') + ' = ');
      cov_jwevct6y8().s[316]++;
      this.compile(node.body, frame);
      cov_jwevct6y8().s[317]++;
      this._emitLine(';');
    }
    cov_jwevct6y8().s[318]++;
    node.targets.forEach((target, i) => {
      cov_jwevct6y8().f[72]++;
      var id = (cov_jwevct6y8().s[319]++, ids[i]);
      var name = (cov_jwevct6y8().s[320]++, target.value);

      // We are running this for every var, but it's very
      // uncommon to assign to multiple vars anyway
      cov_jwevct6y8().s[321]++;
      this._emitLine(`frame.set("${name}", ${id}, true);`);
      cov_jwevct6y8().s[322]++;
      this._emitLine('if(frame.topLevel) {');
      cov_jwevct6y8().s[323]++;
      this._emitLine(`context.setVariable("${name}", ${id});`);
      cov_jwevct6y8().s[324]++;
      this._emitLine('}');
      cov_jwevct6y8().s[325]++;
      if (name.charAt(0) !== '_') {
        cov_jwevct6y8().b[59][0]++;
        cov_jwevct6y8().s[326]++;
        this._emitLine('if(frame.topLevel) {');
        cov_jwevct6y8().s[327]++;
        this._emitLine(`context.addExport("${name}", ${id});`);
        cov_jwevct6y8().s[328]++;
        this._emitLine('}');
      } else {
        cov_jwevct6y8().b[59][1]++;
      }
    });
  }
  compileSwitch(node, frame) {
    cov_jwevct6y8().f[73]++;
    cov_jwevct6y8().s[329]++;
    this._emit('switch (');
    cov_jwevct6y8().s[330]++;
    this.compile(node.expr, frame);
    cov_jwevct6y8().s[331]++;
    this._emit(') {');
    cov_jwevct6y8().s[332]++;
    node.cases.forEach((c, i) => {
      cov_jwevct6y8().f[74]++;
      cov_jwevct6y8().s[333]++;
      this._emit('case ');
      cov_jwevct6y8().s[334]++;
      this.compile(c.cond, frame);
      cov_jwevct6y8().s[335]++;
      this._emit(': ');
      cov_jwevct6y8().s[336]++;
      this.compile(c.body, frame);
      // preserve fall-throughs
      cov_jwevct6y8().s[337]++;
      if (c.body.children.length) {
        cov_jwevct6y8().b[60][0]++;
        cov_jwevct6y8().s[338]++;
        this._emitLine('break;');
      } else {
        cov_jwevct6y8().b[60][1]++;
      }
    });
    cov_jwevct6y8().s[339]++;
    if (node.default) {
      cov_jwevct6y8().b[61][0]++;
      cov_jwevct6y8().s[340]++;
      this._emit('default:');
      cov_jwevct6y8().s[341]++;
      this.compile(node.default, frame);
    } else {
      cov_jwevct6y8().b[61][1]++;
    }
    cov_jwevct6y8().s[342]++;
    this._emit('}');
  }
  compileIf(node, frame, async) {
    cov_jwevct6y8().f[75]++;
    cov_jwevct6y8().s[343]++;
    this._emitBufferBlockBegin();
    cov_jwevct6y8().s[344]++;
    this._emit('if(');
    cov_jwevct6y8().s[345]++;
    this._compileExpression(node.cond, frame);
    cov_jwevct6y8().s[346]++;
    this._emitLine(') {');
    cov_jwevct6y8().s[347]++;
    this._withScopedSyntax(() => {
      cov_jwevct6y8().f[76]++;
      cov_jwevct6y8().s[348]++;
      this.compile(node.body, frame);
      cov_jwevct6y8().s[349]++;
      if (async) {
        cov_jwevct6y8().b[62][0]++;
        cov_jwevct6y8().s[350]++;
        this._emit('cb()');
      } else {
        cov_jwevct6y8().b[62][1]++;
      }
    });
    cov_jwevct6y8().s[351]++;
    if (node.else_) {
      cov_jwevct6y8().b[63][0]++;
      cov_jwevct6y8().s[352]++;
      this._emitLine('}\nelse {');
      cov_jwevct6y8().s[353]++;
      this._withScopedSyntax(() => {
        cov_jwevct6y8().f[77]++;
        cov_jwevct6y8().s[354]++;
        this.compile(node.else_, frame);
        cov_jwevct6y8().s[355]++;
        if (async) {
          cov_jwevct6y8().b[64][0]++;
          cov_jwevct6y8().s[356]++;
          this._emit('cb()');
        } else {
          cov_jwevct6y8().b[64][1]++;
        }
      });
    } else {
      cov_jwevct6y8().b[63][1]++;
      cov_jwevct6y8().s[357]++;
      if (async) {
        cov_jwevct6y8().b[65][0]++;
        cov_jwevct6y8().s[358]++;
        this._emitLine('}\nelse {');
        cov_jwevct6y8().s[359]++;
        this._emit('cb()');
      } else {
        cov_jwevct6y8().b[65][1]++;
      }
    }
    cov_jwevct6y8().s[360]++;
    this._emitLine('}');
    cov_jwevct6y8().s[361]++;
    this._emitBufferBlockEnd();
  }
  compileIfAsync(node, frame) {
    cov_jwevct6y8().f[78]++;
    cov_jwevct6y8().s[362]++;
    this._emit('(function(cb) {');
    cov_jwevct6y8().s[363]++;
    this.compileIf(node, frame, true);
    cov_jwevct6y8().s[364]++;
    this._emit('})(' + this._makeCallback());
    cov_jwevct6y8().s[365]++;
    this._addScopeLevel();
  }
  _emitLoopBindings(node, arr, i, len) {
    cov_jwevct6y8().f[79]++;
    const bindings = (cov_jwevct6y8().s[366]++, [{
      name: 'index',
      val: `${i} + 1`
    }, {
      name: 'index0',
      val: i
    }, {
      name: 'revindex',
      val: `${len} - ${i}`
    }, {
      name: 'revindex0',
      val: `${len} - ${i} - 1`
    }, {
      name: 'first',
      val: `${i} === 0`
    }, {
      name: 'last',
      val: `${i} === ${len} - 1`
    }, {
      name: 'length',
      val: len
    }]);
    cov_jwevct6y8().s[367]++;
    bindings.forEach(b => {
      cov_jwevct6y8().f[80]++;
      cov_jwevct6y8().s[368]++;
      this._emitLine(`frame.set("loop.${b.name}", ${b.val});`);
    });
  }
  compileFor(node, frame) {
    cov_jwevct6y8().f[81]++;
    cov_jwevct6y8().s[369]++;
    // Some of this code is ugly, but it keeps the generated code
    // as fast as possible. ForAsync also shares some of this, but
    // not much.

    this._emitBufferBlockBegin();
    const i = (cov_jwevct6y8().s[370]++, this._tmpid());
    const len = (cov_jwevct6y8().s[371]++, this._tmpid());
    const arr = (cov_jwevct6y8().s[372]++, this._tmpid());
    cov_jwevct6y8().s[373]++;
    frame = frame.push();
    cov_jwevct6y8().s[374]++;
    this._emitLine('frame = frame.push();');
    cov_jwevct6y8().s[375]++;
    this._emit(`let ${arr} = `);
    cov_jwevct6y8().s[376]++;
    this._compileExpression(node.arr, frame);
    cov_jwevct6y8().s[377]++;
    this._emitLine(';');
    cov_jwevct6y8().s[378]++;
    this._emitLine(`let ${len};`);
    cov_jwevct6y8().s[379]++;
    this._emit(`if(${arr}) {`);
    cov_jwevct6y8().s[380]++;
    this._emitLine(arr + ' = runtime.fromIterator(' + arr + ');');

    // If multiple names are passed, we need to bind them
    // appropriately
    cov_jwevct6y8().s[381]++;
    if (node.name instanceof nodes.Array) {
      cov_jwevct6y8().b[66][0]++;
      cov_jwevct6y8().s[382]++;
      this._emitLine(`let ${i};`);

      // The object could be an array or object. Note that the
      // body of the loop is duplicated for each condition, but
      // we are optimizing for speed over size.
      cov_jwevct6y8().s[383]++;
      this._emitLine(`if(runtime.isArray(${arr})) {`);
      cov_jwevct6y8().s[384]++;
      this._emitLine(`${len} = ${arr}.length;`);
      cov_jwevct6y8().s[385]++;
      this._emitLine(`for(${i}=0; ${i} < ${arr}.length; ${i}++) {`);
      cov_jwevct6y8().s[386]++;
      if (this.isAsync) {
        cov_jwevct6y8().b[67][0]++;
        cov_jwevct6y8().s[387]++;
        this._emitLine('frame = frame.push();');
        cov_jwevct6y8().s[388]++;
        this._emitBufferBlockBegin();
      } else {
        cov_jwevct6y8().b[67][1]++;
      }

      // Bind each declared var
      cov_jwevct6y8().s[389]++;
      node.name.children.forEach((child, u) => {
        cov_jwevct6y8().f[82]++;
        let tid = (cov_jwevct6y8().s[390]++, this._tmpid());
        cov_jwevct6y8().s[391]++;
        this._emitLine(`let ${tid} = ${arr}[${i}][${u}];`);
        cov_jwevct6y8().s[392]++;
        this._emitLine(`frame.set("${child.value}", ${tid});`); // fixed nunjucks bug with array unpacking
        cov_jwevct6y8().s[393]++;
        frame.set(node.name.children[u].value, tid);
      });
      cov_jwevct6y8().s[394]++;
      this._emitLoopBindings(node, arr, i, len);
      cov_jwevct6y8().s[395]++;
      this._withScopedSyntax(() => {
        cov_jwevct6y8().f[83]++;
        cov_jwevct6y8().s[396]++;
        this.compile(node.body, frame);
      });
      cov_jwevct6y8().s[397]++;
      if (this.isAsync) {
        cov_jwevct6y8().b[68][0]++;
        cov_jwevct6y8().s[398]++;
        this._emitBufferBlockEnd();
        cov_jwevct6y8().s[399]++;
        this._emitLine('frame = frame.pop();');
      } else {
        cov_jwevct6y8().b[68][1]++;
      }
      cov_jwevct6y8().s[400]++;
      this._emitLine('}');
      cov_jwevct6y8().s[401]++;
      this._emitLine('} else {');
      // Iterate over the key/values of an object
      const [key, val] = (cov_jwevct6y8().s[402]++, node.name.children);
      const k = (cov_jwevct6y8().s[403]++, this._tmpid());
      const v = (cov_jwevct6y8().s[404]++, this._tmpid());
      cov_jwevct6y8().s[405]++;
      frame.set(key.value, k);
      cov_jwevct6y8().s[406]++;
      frame.set(val.value, v);
      cov_jwevct6y8().s[407]++;
      this._emitLine(`${i} = -1;`);
      cov_jwevct6y8().s[408]++;
      this._emitLine(`${len} = runtime.keys(${arr}).length;`);
      cov_jwevct6y8().s[409]++;
      this._emitLine(`for(let ${k} in ${arr}) {`);
      cov_jwevct6y8().s[410]++;
      if (this.isAsync) {
        cov_jwevct6y8().b[69][0]++;
        cov_jwevct6y8().s[411]++;
        this._emitLine('frame = frame.push();');
        cov_jwevct6y8().s[412]++;
        this._emitBufferBlockBegin();
      } else {
        cov_jwevct6y8().b[69][1]++;
      }
      cov_jwevct6y8().s[413]++;
      this._emitLine(`${i}++;`);
      cov_jwevct6y8().s[414]++;
      this._emitLine(`let ${v} = ${arr}[${k}];`);
      cov_jwevct6y8().s[415]++;
      this._emitLine(`frame.set("${key.value}", ${k});`);
      cov_jwevct6y8().s[416]++;
      this._emitLine(`frame.set("${val.value}", ${v});`);
      cov_jwevct6y8().s[417]++;
      this._emitLoopBindings(node, arr, i, len);
      cov_jwevct6y8().s[418]++;
      this._withScopedSyntax(() => {
        cov_jwevct6y8().f[84]++;
        cov_jwevct6y8().s[419]++;
        this.compile(node.body, frame);
      });
      cov_jwevct6y8().s[420]++;
      if (this.isAsync) {
        cov_jwevct6y8().b[70][0]++;
        cov_jwevct6y8().s[421]++;
        this._emitBufferBlockEnd();
        cov_jwevct6y8().s[422]++;
        this._emitLine('frame = frame.pop();');
      } else {
        cov_jwevct6y8().b[70][1]++;
      }
      cov_jwevct6y8().s[423]++;
      this._emitLine('}');
      cov_jwevct6y8().s[424]++;
      this._emitLine('}');
    } else {
      cov_jwevct6y8().b[66][1]++;
      // Generate a typical array iteration
      const v = (cov_jwevct6y8().s[425]++, this._tmpid());
      cov_jwevct6y8().s[426]++;
      frame.set(node.name.value, v);
      cov_jwevct6y8().s[427]++;
      this._emitLine(`${len} = ${arr}.length;`);
      cov_jwevct6y8().s[428]++;
      this._emitLine(`for(let ${i}=0; ${i} < ${arr}.length; ${i}++) {`);
      cov_jwevct6y8().s[429]++;
      if (this.isAsync) {
        cov_jwevct6y8().b[71][0]++;
        cov_jwevct6y8().s[430]++;
        this._emitLine('frame = frame.push();');
        cov_jwevct6y8().s[431]++;
        this._emitBufferBlockBegin();
      } else {
        cov_jwevct6y8().b[71][1]++;
      }
      cov_jwevct6y8().s[432]++;
      this._emitLine(`let ${v} = ${arr}[${i}];`);
      cov_jwevct6y8().s[433]++;
      this._emitLine(`frame.set("${node.name.value}", ${v});`);
      cov_jwevct6y8().s[434]++;
      this._emitLoopBindings(node, arr, i, len);
      cov_jwevct6y8().s[435]++;
      this._withScopedSyntax(() => {
        cov_jwevct6y8().f[85]++;
        cov_jwevct6y8().s[436]++;
        this.compile(node.body, frame);
      });
      cov_jwevct6y8().s[437]++;
      if (this.isAsync) {
        cov_jwevct6y8().b[72][0]++;
        cov_jwevct6y8().s[438]++;
        this._emitBufferBlockEnd();
        cov_jwevct6y8().s[439]++;
        this._emitLine('frame = frame.pop();');
      } else {
        cov_jwevct6y8().b[72][1]++;
      }
      cov_jwevct6y8().s[440]++;
      this._emitLine('}');
    }
    cov_jwevct6y8().s[441]++;
    this._emitLine('}');
    cov_jwevct6y8().s[442]++;
    if (node.else_) {
      cov_jwevct6y8().b[73][0]++;
      cov_jwevct6y8().s[443]++;
      this._emitLine(`if (!${len}) {`);
      cov_jwevct6y8().s[444]++;
      this._emitBufferBlockBegin();
      cov_jwevct6y8().s[445]++;
      this.compile(node.else_, frame);
      cov_jwevct6y8().s[446]++;
      this._emitBufferBlockEnd();
      cov_jwevct6y8().s[447]++;
      this._emitLine('}');
    } else {
      cov_jwevct6y8().b[73][1]++;
    }
    cov_jwevct6y8().s[448]++;
    this._emitLine('frame = frame.pop();');
    cov_jwevct6y8().s[449]++;
    this._emitBufferBlockEnd();
  }
  _compileAsyncLoop(node, frame, parallel) {
    cov_jwevct6y8().f[86]++;
    // This shares some code with the For tag, but not enough to
    // worry about. This iterates across an object asynchronously,
    // but not in parallel.

    var i = (cov_jwevct6y8().s[450]++, this._tmpid());
    var len = (cov_jwevct6y8().s[451]++, this._tmpid());
    var arr = (cov_jwevct6y8().s[452]++, this._tmpid());
    var asyncMethod = (cov_jwevct6y8().s[453]++, parallel ? (cov_jwevct6y8().b[74][0]++, 'asyncAll') : (cov_jwevct6y8().b[74][1]++, 'asyncEach'));
    cov_jwevct6y8().s[454]++;
    frame = frame.push();
    cov_jwevct6y8().s[455]++;
    this._emitLine('frame = frame.push();');
    cov_jwevct6y8().s[456]++;
    this._emit('let ' + arr + ' = runtime.fromIterator(');
    cov_jwevct6y8().s[457]++;
    this._compileExpression(node.arr, frame);
    cov_jwevct6y8().s[458]++;
    this._emitLine(');');
    cov_jwevct6y8().s[459]++;
    if (node.name instanceof nodes.Array) {
      cov_jwevct6y8().b[75][0]++;
      const arrayLen = (cov_jwevct6y8().s[460]++, node.name.children.length);
      cov_jwevct6y8().s[461]++;
      this._emit(`runtime.${asyncMethod}(${arr}, ${arrayLen}, function(`);
      cov_jwevct6y8().s[462]++;
      node.name.children.forEach(name => {
        cov_jwevct6y8().f[87]++;
        cov_jwevct6y8().s[463]++;
        this._emit(`${name.value},`);
      });
      cov_jwevct6y8().s[464]++;
      this._emit(i + ',' + len + ',next) {');
      cov_jwevct6y8().s[465]++;
      node.name.children.forEach(name => {
        cov_jwevct6y8().f[88]++;
        const id = (cov_jwevct6y8().s[466]++, name.value);
        cov_jwevct6y8().s[467]++;
        frame.set(id, id);
        cov_jwevct6y8().s[468]++;
        this._emitLine(`frame.set("${id}", ${id});`);
      });
    } else {
      cov_jwevct6y8().b[75][1]++;
      const id = (cov_jwevct6y8().s[469]++, node.name.value);
      cov_jwevct6y8().s[470]++;
      this._emitLine(`runtime.${asyncMethod}(${arr}, 1, function(${id}, ${i}, ${len},next) {`);
      cov_jwevct6y8().s[471]++;
      this._emitLine('frame.set("' + id + '", ' + id + ');');
      cov_jwevct6y8().s[472]++;
      frame.set(id, id);
    }
    cov_jwevct6y8().s[473]++;
    this._emitLoopBindings(node, arr, i, len);
    cov_jwevct6y8().s[474]++;
    this._withScopedSyntax(() => {
      cov_jwevct6y8().f[89]++;
      let buf;
      cov_jwevct6y8().s[475]++;
      if (parallel) {
        cov_jwevct6y8().b[76][0]++;
        cov_jwevct6y8().s[476]++;
        buf = this._pushBuffer();
      } else {
        cov_jwevct6y8().b[76][1]++;
      }
      cov_jwevct6y8().s[477]++;
      this.compile(node.body, frame);
      cov_jwevct6y8().s[478]++;
      this._emitLine('next(' + i + (buf ? (cov_jwevct6y8().b[77][0]++, ',' + buf) : (cov_jwevct6y8().b[77][1]++, '')) + ');');
      cov_jwevct6y8().s[479]++;
      if (parallel) {
        cov_jwevct6y8().b[78][0]++;
        cov_jwevct6y8().s[480]++;
        this._popBuffer();
      } else {
        cov_jwevct6y8().b[78][1]++;
      }
    });
    const output = (cov_jwevct6y8().s[481]++, this._tmpid());
    cov_jwevct6y8().s[482]++;
    this._emitLine('}, ' + this._makeCallback(output));
    cov_jwevct6y8().s[483]++;
    this._addScopeLevel();
    cov_jwevct6y8().s[484]++;
    if (parallel) {
      cov_jwevct6y8().b[79][0]++;
      cov_jwevct6y8().s[485]++;
      this._emitLine(this.buffer + ' += ' + output + ';');
    } else {
      cov_jwevct6y8().b[79][1]++;
    }
    cov_jwevct6y8().s[486]++;
    if (node.else_) {
      cov_jwevct6y8().b[80][0]++;
      cov_jwevct6y8().s[487]++;
      this._emitLine('if (!' + arr + '.length) {');
      cov_jwevct6y8().s[488]++;
      this.compile(node.else_, frame);
      cov_jwevct6y8().s[489]++;
      this._emitLine('}');
    } else {
      cov_jwevct6y8().b[80][1]++;
    }
    cov_jwevct6y8().s[490]++;
    this._emitLine('frame = frame.pop();');
  }
  compileAsyncEach(node, frame) {
    cov_jwevct6y8().f[90]++;
    cov_jwevct6y8().s[491]++;
    this._compileAsyncLoop(node, frame);
  }
  compileAsyncAll(node, frame) {
    cov_jwevct6y8().f[91]++;
    cov_jwevct6y8().s[492]++;
    this._compileAsyncLoop(node, frame, true);
  }
  _compileMacro(node, frame) {
    cov_jwevct6y8().f[92]++;
    var args = (cov_jwevct6y8().s[493]++, []);
    var kwargs = (cov_jwevct6y8().s[494]++, null);
    var funcId = (cov_jwevct6y8().s[495]++, 'macro_' + this._tmpid());
    var keepFrame = (cov_jwevct6y8().s[496]++, frame !== undefined);

    // Type check the definition of the args
    cov_jwevct6y8().s[497]++;
    node.args.children.forEach((arg, i) => {
      cov_jwevct6y8().f[93]++;
      cov_jwevct6y8().s[498]++;
      if ((cov_jwevct6y8().b[82][0]++, i === node.args.children.length - 1) && (cov_jwevct6y8().b[82][1]++, arg instanceof nodes.Dict)) {
        cov_jwevct6y8().b[81][0]++;
        cov_jwevct6y8().s[499]++;
        kwargs = arg;
      } else {
        cov_jwevct6y8().b[81][1]++;
        cov_jwevct6y8().s[500]++;
        this.assertType(arg, nodes.Symbol);
        cov_jwevct6y8().s[501]++;
        args.push(arg);
      }
    });
    const realNames = (cov_jwevct6y8().s[502]++, [...args.map(n => {
      cov_jwevct6y8().f[94]++;
      cov_jwevct6y8().s[503]++;
      return `l_${n.value}`;
    }), 'kwargs']);

    // Quoted argument names
    const argNames = (cov_jwevct6y8().s[504]++, args.map(n => {
      cov_jwevct6y8().f[95]++;
      cov_jwevct6y8().s[505]++;
      return `"${n.value}"`;
    }));
    const kwargNames = (cov_jwevct6y8().s[506]++, ((cov_jwevct6y8().b[83][0]++, kwargs) && (cov_jwevct6y8().b[83][1]++, kwargs.children) || (cov_jwevct6y8().b[83][2]++, [])).map(n => {
      cov_jwevct6y8().f[96]++;
      cov_jwevct6y8().s[507]++;
      return `"${n.key.value}"`;
    }));

    // We pass a function to makeMacro which destructures the
    // arguments so support setting positional args with keywords
    // args and passing keyword args as positional args
    // (essentially default values). See runtime.js.
    let currFrame;
    cov_jwevct6y8().s[508]++;
    if (keepFrame) {
      cov_jwevct6y8().b[84][0]++;
      cov_jwevct6y8().s[509]++;
      currFrame = frame.push(true);
    } else {
      cov_jwevct6y8().b[84][1]++;
      cov_jwevct6y8().s[510]++;
      currFrame = new Frame();
    }
    cov_jwevct6y8().s[511]++;
    this._emitLines(`let ${funcId} = runtime.makeMacro(`, `[${argNames.join(', ')}], `, `[${kwargNames.join(', ')}], `, `function (${realNames.join(', ')}) {`, 'let callerFrame = frame;', 'frame = ' + (keepFrame ? (cov_jwevct6y8().b[85][0]++, 'frame.push(true);') : (cov_jwevct6y8().b[85][1]++, 'new runtime.Frame();')), 'kwargs = kwargs || {};', 'if (Object.prototype.hasOwnProperty.call(kwargs, "caller")) {', 'frame.set("caller", kwargs.caller); }');

    // Expose the arguments to the template. Don't need to use
    // random names because the function
    // will create a new run-time scope for us
    cov_jwevct6y8().s[512]++;
    args.forEach(arg => {
      cov_jwevct6y8().f[97]++;
      cov_jwevct6y8().s[513]++;
      this._emitLine(`frame.set("${arg.value}", l_${arg.value});`);
      cov_jwevct6y8().s[514]++;
      currFrame.set(arg.value, `l_${arg.value}`);
    });

    // Expose the keyword arguments
    cov_jwevct6y8().s[515]++;
    if (kwargs) {
      cov_jwevct6y8().b[86][0]++;
      cov_jwevct6y8().s[516]++;
      kwargs.children.forEach(pair => {
        cov_jwevct6y8().f[98]++;
        const name = (cov_jwevct6y8().s[517]++, pair.key.value);
        cov_jwevct6y8().s[518]++;
        this._emit(`frame.set("${name}", `);
        cov_jwevct6y8().s[519]++;
        this._emit(`Object.prototype.hasOwnProperty.call(kwargs, "${name}")`);
        cov_jwevct6y8().s[520]++;
        this._emit(` ? kwargs["${name}"] : `);
        cov_jwevct6y8().s[521]++;
        this._compileExpression(pair.value, currFrame);
        cov_jwevct6y8().s[522]++;
        this._emit(');');
      });
    } else {
      cov_jwevct6y8().b[86][1]++;
    }
    const bufferId = (cov_jwevct6y8().s[523]++, this._pushBuffer());
    cov_jwevct6y8().s[524]++;
    this._withScopedSyntax(() => {
      cov_jwevct6y8().f[99]++;
      cov_jwevct6y8().s[525]++;
      this.compile(node.body, currFrame);
    });
    cov_jwevct6y8().s[526]++;
    this._emitLine('frame = ' + (keepFrame ? (cov_jwevct6y8().b[87][0]++, 'frame.pop();') : (cov_jwevct6y8().b[87][1]++, 'callerFrame;')));
    cov_jwevct6y8().s[527]++;
    this._emitLine(`return new runtime.SafeString(${bufferId});`);
    cov_jwevct6y8().s[528]++;
    this._emitLine('});');
    cov_jwevct6y8().s[529]++;
    this._popBuffer();
    cov_jwevct6y8().s[530]++;
    return funcId;
  }
  compileMacro(node, frame) {
    cov_jwevct6y8().f[100]++;
    var funcId = (cov_jwevct6y8().s[531]++, this._compileMacro(node));

    // Expose the macro to the templates
    var name = (cov_jwevct6y8().s[532]++, node.name.value);
    cov_jwevct6y8().s[533]++;
    frame.set(name, funcId);
    cov_jwevct6y8().s[534]++;
    if (frame.parent) {
      cov_jwevct6y8().b[88][0]++;
      cov_jwevct6y8().s[535]++;
      this._emitLine(`frame.set("${name}", ${funcId});`);
    } else {
      cov_jwevct6y8().b[88][1]++;
      cov_jwevct6y8().s[536]++;
      if (node.name.value.charAt(0) !== '_') {
        cov_jwevct6y8().b[89][0]++;
        cov_jwevct6y8().s[537]++;
        this._emitLine(`context.addExport("${name}");`);
      } else {
        cov_jwevct6y8().b[89][1]++;
      }
      cov_jwevct6y8().s[538]++;
      this._emitLine(`context.setVariable("${name}", ${funcId});`);
    }
  }
  compileCaller(node, frame) {
    cov_jwevct6y8().f[101]++;
    cov_jwevct6y8().s[539]++;
    // basically an anonymous "macro expression"
    this._emit('(function (){');
    const funcId = (cov_jwevct6y8().s[540]++, this._compileMacro(node, frame));
    cov_jwevct6y8().s[541]++;
    this._emit(`return ${funcId};})()`);
  }
  _compileGetTemplate(node, frame, eagerCompile, ignoreMissing) {
    cov_jwevct6y8().f[102]++;
    const parentTemplateId = (cov_jwevct6y8().s[542]++, this._tmpid());
    const parentName = (cov_jwevct6y8().s[543]++, this._templateName());
    const cb = (cov_jwevct6y8().s[544]++, this._makeCallback(parentTemplateId));
    const eagerCompileArg = (cov_jwevct6y8().s[545]++, eagerCompile ? (cov_jwevct6y8().b[90][0]++, 'true') : (cov_jwevct6y8().b[90][1]++, 'false'));
    const ignoreMissingArg = (cov_jwevct6y8().s[546]++, ignoreMissing ? (cov_jwevct6y8().b[91][0]++, 'true') : (cov_jwevct6y8().b[91][1]++, 'false'));
    cov_jwevct6y8().s[547]++;
    this._emit(this.isAsync ? (cov_jwevct6y8().b[92][0]++, 'env.getAsyncTemplate(') : (cov_jwevct6y8().b[92][1]++, 'env.getTemplate('));
    cov_jwevct6y8().s[548]++;
    this._compileExpression(node.template, frame);
    cov_jwevct6y8().s[549]++;
    this._emitLine(`, ${eagerCompileArg}, ${parentName}, ${ignoreMissingArg}, ${cb}`);
    cov_jwevct6y8().s[550]++;
    return parentTemplateId;
  }
  compileImport(node, frame) {
    cov_jwevct6y8().f[103]++;
    const target = (cov_jwevct6y8().s[551]++, node.target.value);
    const id = (cov_jwevct6y8().s[552]++, this._compileGetTemplate(node, frame, false, false));
    cov_jwevct6y8().s[553]++;
    this._addScopeLevel();
    cov_jwevct6y8().s[554]++;
    this._emitLine(id + '.getExported(' + (node.withContext ? (cov_jwevct6y8().b[93][0]++, 'context.getVariables(), frame, ') : (cov_jwevct6y8().b[93][1]++, '')) + this._makeCallback(id));
    cov_jwevct6y8().s[555]++;
    this._addScopeLevel();
    cov_jwevct6y8().s[556]++;
    frame.set(target, id);
    cov_jwevct6y8().s[557]++;
    if (frame.parent) {
      cov_jwevct6y8().b[94][0]++;
      cov_jwevct6y8().s[558]++;
      this._emitLine(`frame.set("${target}", ${id});`);
    } else {
      cov_jwevct6y8().b[94][1]++;
      cov_jwevct6y8().s[559]++;
      this._emitLine(`context.setVariable("${target}", ${id});`);
    }
  }
  compileFromImport(node, frame) {
    cov_jwevct6y8().f[104]++;
    const importedId = (cov_jwevct6y8().s[560]++, this._compileGetTemplate(node, frame, false, false));
    cov_jwevct6y8().s[561]++;
    this._addScopeLevel();
    cov_jwevct6y8().s[562]++;
    this._emitLine(importedId + '.getExported(' + (node.withContext ? (cov_jwevct6y8().b[95][0]++, 'context.getVariables(), frame, ') : (cov_jwevct6y8().b[95][1]++, '')) + this._makeCallback(importedId));
    cov_jwevct6y8().s[563]++;
    this._addScopeLevel();
    cov_jwevct6y8().s[564]++;
    node.names.children.forEach(nameNode => {
      cov_jwevct6y8().f[105]++;
      let name;
      let alias;
      let id = (cov_jwevct6y8().s[565]++, this._tmpid()); // Declare id here with let
      cov_jwevct6y8().s[566]++;
      if (nameNode instanceof nodes.Pair) {
        cov_jwevct6y8().b[96][0]++;
        cov_jwevct6y8().s[567]++;
        name = nameNode.key.value;
        cov_jwevct6y8().s[568]++;
        alias = nameNode.value.value;
      } else {
        cov_jwevct6y8().b[96][1]++;
        cov_jwevct6y8().s[569]++;
        name = nameNode.value;
        cov_jwevct6y8().s[570]++;
        alias = name;
      }
      cov_jwevct6y8().s[571]++;
      this._emitLine(`if(Object.prototype.hasOwnProperty.call(${importedId}, "${name}")) {`);
      cov_jwevct6y8().s[572]++;
      this._emitLine(`${id} = ${importedId}.${name};`); // Remove 'let' here
      cov_jwevct6y8().s[573]++;
      this._emitLine('} else {');
      cov_jwevct6y8().s[574]++;
      this._emitLine(`cb(new Error("cannot import '${name}'")); return;`);
      cov_jwevct6y8().s[575]++;
      this._emitLine('}');
      cov_jwevct6y8().s[576]++;
      frame.set(alias, id);
      cov_jwevct6y8().s[577]++;
      if (frame.parent) {
        cov_jwevct6y8().b[97][0]++;
        cov_jwevct6y8().s[578]++;
        this._emitLine(`frame.set("${alias}", ${id});`);
      } else {
        cov_jwevct6y8().b[97][1]++;
        cov_jwevct6y8().s[579]++;
        this._emitLine(`context.setVariable("${alias}", ${id});`);
      }
    });
  }
  compileBlock(node) {
    cov_jwevct6y8().f[106]++;
    var id = (cov_jwevct6y8().s[580]++, this._tmpid());

    // If we are executing outside a block (creating a top-level
    // block), we really don't want to execute its code because it
    // will execute twice: once when the child template runs and
    // again when the parent template runs. Note that blocks
    // within blocks will *always* execute immediately *and*
    // wherever else they are invoked (like used in a parent
    // template). This may have behavioral differences from jinja
    // because blocks can have side effects, but it seems like a
    // waste of performance to always execute huge top-level
    // blocks twice
    cov_jwevct6y8().s[581]++;
    if (!this.inBlock) {
      cov_jwevct6y8().b[98][0]++;
      cov_jwevct6y8().s[582]++;
      this._emit('(parentTemplate ? function(e, c, f, r, cb) { cb(""); } : ');
    } else {
      cov_jwevct6y8().b[98][1]++;
    }
    cov_jwevct6y8().s[583]++;
    this._emit(`context.getBlock("${node.name.value}")`);
    cov_jwevct6y8().s[584]++;
    if (!this.inBlock) {
      cov_jwevct6y8().b[99][0]++;
      cov_jwevct6y8().s[585]++;
      this._emit(')');
    } else {
      cov_jwevct6y8().b[99][1]++;
    }
    cov_jwevct6y8().s[586]++;
    this._emitLine('(env, context, frame, runtime, ' + this._makeCallback(id));
    cov_jwevct6y8().s[587]++;
    this._emitAddToBufferBegin(false);
    // this._emitLine(`${this.buffer} += ${id};`);
    cov_jwevct6y8().s[588]++;
    this._emitLine(`${id};`);
    cov_jwevct6y8().s[589]++;
    this._emitAddToBufferEnd(false);
    cov_jwevct6y8().s[590]++;
    this._addScopeLevel();
  }
  compileSuper(node, frame) {
    cov_jwevct6y8().f[107]++;
    var name = (cov_jwevct6y8().s[591]++, node.blockName.value);
    var id = (cov_jwevct6y8().s[592]++, node.symbol.value);
    const cb = (cov_jwevct6y8().s[593]++, this._makeCallback(id));
    cov_jwevct6y8().s[594]++;
    this._emitLine(`context.getSuper(env, "${name}", b_${name}, frame, runtime, ${cb}`);
    cov_jwevct6y8().s[595]++;
    this._emitLine(`${id} = runtime.markSafe(${id});`);
    cov_jwevct6y8().s[596]++;
    this._addScopeLevel();
    cov_jwevct6y8().s[597]++;
    frame.set(id, id);
  }
  compileExtends(node, frame) {
    cov_jwevct6y8().f[108]++;
    var k = (cov_jwevct6y8().s[598]++, this._tmpid());
    const parentTemplateId = (cov_jwevct6y8().s[599]++, this._compileGetTemplate(node, frame, true, false));

    // extends is a dynamic tag and can occur within a block like
    // `if`, so if this happens we need to capture the parent
    // template in the top-level scope
    cov_jwevct6y8().s[600]++;
    this._emitLine(`parentTemplate = ${parentTemplateId}`);
    cov_jwevct6y8().s[601]++;
    this._emitLine(`for(let ${k} in parentTemplate.blocks) {`);
    cov_jwevct6y8().s[602]++;
    this._emitLine(`context.addBlock(${k}, parentTemplate.blocks[${k}]);`);
    cov_jwevct6y8().s[603]++;
    this._emitLine('}');
    cov_jwevct6y8().s[604]++;
    this._addScopeLevel();
  }
  compileInclude(node, frame) {
    cov_jwevct6y8().f[109]++;
    cov_jwevct6y8().s[605]++;
    this._emitLine('let tasks = [];');
    cov_jwevct6y8().s[606]++;
    this._emitLine('tasks.push(');
    cov_jwevct6y8().s[607]++;
    this._emitLine('function(callback) {');
    cov_jwevct6y8().s[608]++;
    this._emitAsyncBlockBegin();
    const id = (cov_jwevct6y8().s[609]++, this._compileGetTemplate(node, frame, false, node.ignoreMissing));
    cov_jwevct6y8().s[610]++;
    this._emitLine(`callback(null,${id});});`);
    cov_jwevct6y8().s[611]++;
    this._emitAsyncBlockEnd();
    cov_jwevct6y8().s[612]++;
    this._emitLine('});');
    const id2 = (cov_jwevct6y8().s[613]++, this._tmpid());
    cov_jwevct6y8().s[614]++;
    this._emitLine('tasks.push(');
    cov_jwevct6y8().s[615]++;
    this._emitLine('function(template, callback){');
    cov_jwevct6y8().s[616]++;
    this._emitLine('template.render(context.getVariables(), frame, ' + (this.isAsync ? (cov_jwevct6y8().b[100][0]++, 'astate,') : (cov_jwevct6y8().b[100][1]++, '')) + this._makeCallback(id2));
    cov_jwevct6y8().s[617]++;
    this._emitLine('callback(null,' + id2 + ');});');
    cov_jwevct6y8().s[618]++;
    this._emitLine('});');
    cov_jwevct6y8().s[619]++;
    this._emitLine('tasks.push(');
    cov_jwevct6y8().s[620]++;
    this._emitLine('function(result, callback){');
    cov_jwevct6y8().s[621]++;
    this._emitAddToBufferBegin(false);
    // this._emitLine(`${this.buffer} += result;`);
    cov_jwevct6y8().s[622]++;
    this._emitLine(`result;`);
    cov_jwevct6y8().s[623]++;
    this._emitAddToBufferEnd(false);
    cov_jwevct6y8().s[624]++;
    this._emitLine('callback(null);');
    cov_jwevct6y8().s[625]++;
    this._emitLine('});');
    cov_jwevct6y8().s[626]++;
    this._emitLine('env.waterfall(tasks, function(){');
    cov_jwevct6y8().s[627]++;
    this._addScopeLevel();
  }
  compileTemplateData(node, frame) {
    cov_jwevct6y8().f[110]++;
    cov_jwevct6y8().s[628]++;
    this.compileLiteral(node, frame);
  }
  compileCapture(node, frame) {
    cov_jwevct6y8().f[111]++;
    // we need to temporarily override the current buffer id as 'output'
    // so the set block writes to the capture output instead of the buffer
    var buffer = (cov_jwevct6y8().s[629]++, this.buffer);
    cov_jwevct6y8().s[630]++;
    this.buffer = 'output';
    cov_jwevct6y8().s[631]++;
    this._emitLine('(function() {');
    cov_jwevct6y8().s[632]++;
    this._emitLine('let output = "";');
    cov_jwevct6y8().s[633]++;
    this._withScopedSyntax(() => {
      cov_jwevct6y8().f[112]++;
      cov_jwevct6y8().s[634]++;
      this.compile(node.body, frame);
    });
    cov_jwevct6y8().s[635]++;
    this._emitLine('return output;');
    cov_jwevct6y8().s[636]++;
    this._emitLine('})()');
    // and of course, revert back to the old buffer id
    cov_jwevct6y8().s[637]++;
    this.buffer = buffer;
  }
  compileOutput(node, frame) {
    cov_jwevct6y8().f[113]++;
    const children = (cov_jwevct6y8().s[638]++, node.children);
    cov_jwevct6y8().s[639]++;
    children.forEach(child => {
      cov_jwevct6y8().f[114]++;
      cov_jwevct6y8().s[640]++;
      // TemplateData is a special case because it is never
      // autoescaped, so simply output it for optimization
      if (child instanceof nodes.TemplateData) {
        cov_jwevct6y8().b[101][0]++;
        cov_jwevct6y8().s[641]++;
        if (child.value) {
          cov_jwevct6y8().b[102][0]++;
          cov_jwevct6y8().s[642]++;
          this._emitAddToBufferBegin(false);
          // this._emit(`${this.buffer} += `);
          cov_jwevct6y8().s[643]++;
          this.compileLiteral(child, frame);
          cov_jwevct6y8().s[644]++;
          this._emitAddToBufferEnd(false);
          cov_jwevct6y8().s[645]++;
          this._emitLine(';');
        } else {
          cov_jwevct6y8().b[102][1]++;
        }
      } else {
        cov_jwevct6y8().b[101][1]++;
        cov_jwevct6y8().s[646]++;
        this._emitAddToBufferBegin();
        cov_jwevct6y8().s[647]++;
        this._emit(`${this.isAsync ? (cov_jwevct6y8().b[103][0]++, 'await runtime.suppressValueAsync(') : (cov_jwevct6y8().b[103][1]++, 'runtime.suppressValue(')}`);
        cov_jwevct6y8().s[648]++;
        if (this.throwOnUndefined) {
          cov_jwevct6y8().b[104][0]++;
          cov_jwevct6y8().s[649]++;
          this._emit(`${this.isAsync ? (cov_jwevct6y8().b[105][0]++, 'await runtime.ensureDefinedAsync(') : (cov_jwevct6y8().b[105][1]++, 'runtime.ensureDefined(')}`);
        } else {
          cov_jwevct6y8().b[104][1]++;
        }
        cov_jwevct6y8().s[650]++;
        this.compile(child, frame);
        cov_jwevct6y8().s[651]++;
        if (this.throwOnUndefined) {
          cov_jwevct6y8().b[106][0]++;
          cov_jwevct6y8().s[652]++;
          this._emit(`,${node.lineno},${node.colno})`);
        } else {
          cov_jwevct6y8().b[106][1]++;
        }
        cov_jwevct6y8().s[653]++;
        this._emit(', env.opts.autoescape);\n');
        cov_jwevct6y8().s[654]++;
        this._emitAddToBufferEnd();
      }
    });
  }
  compileRoot(node, frame) {
    cov_jwevct6y8().f[115]++;
    cov_jwevct6y8().s[655]++;
    if (frame) {
      cov_jwevct6y8().b[107][0]++;
      cov_jwevct6y8().s[656]++;
      this.fail('compileRoot: root node can\'t have frame');
    } else {
      cov_jwevct6y8().b[107][1]++;
    }
    cov_jwevct6y8().s[657]++;
    frame = new Frame();
    cov_jwevct6y8().s[658]++;
    this._emitFuncBegin(node, 'root');
    cov_jwevct6y8().s[659]++;
    this._emitLine('let parentTemplate = null;');
    cov_jwevct6y8().s[660]++;
    this._compileChildren(node, frame);
    cov_jwevct6y8().s[661]++;
    if (this.isAsync) {
      cov_jwevct6y8().b[108][0]++;
      cov_jwevct6y8().s[662]++;
      this._emitLine('if(!isIncluded){');
      cov_jwevct6y8().s[663]++;
      this._emitLine('astate.waitAllClosures().then(() => {');
      cov_jwevct6y8().s[664]++;
      this._emitLine('  if(parentTemplate) {');
      cov_jwevct6y8().s[665]++;
      this._emitLine('    parentTemplate.rootRenderFunc(env, context, frame, runtime, astate, false, cb);');
      cov_jwevct6y8().s[666]++;
      this._emitLine('  } else {');
      cov_jwevct6y8().s[667]++;
      this._emitLine(`    cb(null, runtime.flattentBuffer(${this.buffer}));`);
      cov_jwevct6y8().s[668]++;
      this._emitLine('  }');
      cov_jwevct6y8().s[669]++;
      this._emitLine('}).catch(e => {');
      cov_jwevct6y8().s[670]++;
      this._emitLine('cb(runtime.handleError(e, lineno, colno))');
      cov_jwevct6y8().s[671]++;
      this._emitLine('});');
      cov_jwevct6y8().s[672]++;
      this._emitLine('} else {');
    } else {
      cov_jwevct6y8().b[108][1]++;
    }
    cov_jwevct6y8().s[673]++;
    this._emitLine('if(parentTemplate) {');
    cov_jwevct6y8().s[674]++;
    this._emitLine('parentTemplate.rootRenderFunc(env, context, frame, runtime, cb);');
    cov_jwevct6y8().s[675]++;
    this._emitLine('} else {');
    cov_jwevct6y8().s[676]++;
    this._emitLine(`cb(null, ${this.buffer});`);
    cov_jwevct6y8().s[677]++;
    this._emitLine('}');
    cov_jwevct6y8().s[678]++;
    if (this.isAsync) {
      cov_jwevct6y8().b[109][0]++;
      cov_jwevct6y8().s[679]++;
      this._emitLine('}');
    } else {
      cov_jwevct6y8().b[109][1]++;
    }
    cov_jwevct6y8().s[680]++;
    this._emitFuncEnd(true);
    cov_jwevct6y8().s[681]++;
    this.inBlock = true;
    const blockNames = (cov_jwevct6y8().s[682]++, []);
    const blocks = (cov_jwevct6y8().s[683]++, node.findAll(nodes.Block));
    cov_jwevct6y8().s[684]++;
    blocks.forEach((block, i) => {
      cov_jwevct6y8().f[116]++;
      const name = (cov_jwevct6y8().s[685]++, block.name.value);
      cov_jwevct6y8().s[686]++;
      if (blockNames.indexOf(name) !== -1) {
        cov_jwevct6y8().b[110][0]++;
        cov_jwevct6y8().s[687]++;
        throw new Error(`Block "${name}" defined more than once.`);
      } else {
        cov_jwevct6y8().b[110][1]++;
      }
      cov_jwevct6y8().s[688]++;
      blockNames.push(name);
      cov_jwevct6y8().s[689]++;
      this._emitFuncBegin(block, `b_${name}`);
      let tmpFrame = (cov_jwevct6y8().s[690]++, new Frame());
      cov_jwevct6y8().s[691]++;
      this._emitLine('var frame = frame.push(true);'); // Keep this as 'var', the codebase depends on the function-scoped nature of var for frame
      cov_jwevct6y8().s[692]++;
      this.compile(block.body, tmpFrame);
      cov_jwevct6y8().s[693]++;
      this._emitFuncEnd();
    });
    cov_jwevct6y8().s[694]++;
    this._emitLine('return {');
    cov_jwevct6y8().s[695]++;
    blocks.forEach((block, i) => {
      cov_jwevct6y8().f[117]++;
      const blockName = (cov_jwevct6y8().s[696]++, `b_${block.name.value}`);
      cov_jwevct6y8().s[697]++;
      this._emitLine(`${blockName}: ${blockName},`);
    });
    cov_jwevct6y8().s[698]++;
    this._emitLine('root: root\n};');
  }
  compile(node, frame) {
    cov_jwevct6y8().f[118]++;
    var _compile = (cov_jwevct6y8().s[699]++, this['compile' + node.typename]);
    cov_jwevct6y8().s[700]++;
    if (_compile) {
      cov_jwevct6y8().b[111][0]++;
      cov_jwevct6y8().s[701]++;
      _compile.call(this, node, frame);
    } else {
      cov_jwevct6y8().b[111][1]++;
      cov_jwevct6y8().s[702]++;
      this.fail(`compile: Cannot compile node: ${node.typename}`, node.lineno, node.colno);
    }
  }
  getCode() {
    cov_jwevct6y8().f[119]++;
    cov_jwevct6y8().s[703]++;
    return this.codebuf.join('');
  }
}
cov_jwevct6y8().s[704]++;
module.exports = {
  compile: function compile(src, asyncFilters, extensions, name, isAsync, opts) {
    if (opts === void 0) {
      opts = (cov_jwevct6y8().b[112][0]++, {});
    }
    cov_jwevct6y8().f[120]++;
    cov_jwevct6y8().s[705]++;
    if (typeof isAsync === 'object') {
      cov_jwevct6y8().b[113][0]++;
      cov_jwevct6y8().s[706]++;
      opts = isAsync;
      cov_jwevct6y8().s[707]++;
      isAsync = false;
    } else {
      cov_jwevct6y8().b[113][1]++;
    }
    const c = (cov_jwevct6y8().s[708]++, new Compiler(name, opts.throwOnUndefined, isAsync));

    // Run the extension preprocessors against the source.
    const preprocessors = (cov_jwevct6y8().s[709]++, ((cov_jwevct6y8().b[114][0]++, extensions) || (cov_jwevct6y8().b[114][1]++, [])).map(ext => {
      cov_jwevct6y8().f[121]++;
      cov_jwevct6y8().s[710]++;
      return ext.preprocess;
    }).filter(f => {
      cov_jwevct6y8().f[122]++;
      cov_jwevct6y8().s[711]++;
      return !!f;
    }));
    const processedSrc = (cov_jwevct6y8().s[712]++, preprocessors.reduce((s, processor) => {
      cov_jwevct6y8().f[123]++;
      cov_jwevct6y8().s[713]++;
      return processor(s);
    }, src));
    cov_jwevct6y8().s[714]++;
    c.compile(transformer.transform(parser.parse(processedSrc, extensions, opts), asyncFilters, name));
    cov_jwevct6y8().s[715]++;
    return c.getCode();
  },
  Compiler: Compiler
};

/***/ }),

/***/ 2887:
/*!*************************************!*\
  !*** ./nunjucks/src/environment.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function cov_1trk1tgipr() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\environment.js";
  var hash = "98a1fc62da835de5f600a5c6ea9270f721b6940b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\environment.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 13
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "1": {
        start: {
          line: 4,
          column: 18
        },
        end: {
          line: 4,
          column: 45
        }
      },
      "2": {
        start: {
          line: 5,
          column: 12
        },
        end: {
          line: 5,
          column: 28
        }
      },
      "3": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 38
        }
      },
      "4": {
        start: {
          line: 7,
          column: 16
        },
        end: {
          line: 7,
          column: 36
        }
      },
      "5": {
        start: {
          line: 8,
          column: 59
        },
        end: {
          line: 8,
          column: 79
        }
      },
      "6": {
        start: {
          line: 9,
          column: 14
        },
        end: {
          line: 9,
          column: 32
        }
      },
      "7": {
        start: {
          line: 10,
          column: 16
        },
        end: {
          line: 10,
          column: 36
        }
      },
      "8": {
        start: {
          line: 11,
          column: 28
        },
        end: {
          line: 11,
          column: 47
        }
      },
      "9": {
        start: {
          line: 12,
          column: 22
        },
        end: {
          line: 12,
          column: 42
        }
      },
      "10": {
        start: {
          line: 13,
          column: 31
        },
        end: {
          line: 13,
          column: 44
        }
      },
      "11": {
        start: {
          line: 14,
          column: 19
        },
        end: {
          line: 14,
          column: 43
        }
      },
      "12": {
        start: {
          line: 19,
          column: 2
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "13": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 17
        }
      },
      "14": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 38,
          column: 1
        }
      },
      "15": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 35,
          column: 7
        }
      },
      "16": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 21
        }
      },
      "17": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 39
        }
      },
      "18": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 34
        }
      },
      "19": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 31
        }
      },
      "20": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 76
        }
      },
      "21": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 57
        }
      },
      "22": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 45
        }
      },
      "23": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 49
        }
      },
      "24": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 22
        }
      },
      "25": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "26": {
        start: {
          line: 67,
          column: 6
        },
        end: {
          line: 71,
          column: 7
        }
      },
      "27": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 55
        }
      },
      "28": {
        start: {
          line: 69,
          column: 13
        },
        end: {
          line: 71,
          column: 7
        }
      },
      "29": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 49
        }
      },
      "30": {
        start: {
          line: 73,
          column: 6
        },
        end: {
          line: 73,
          column: 64
        }
      },
      "31": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "32": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 82,
          column: 8
        }
      },
      "33": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 24
        }
      },
      "34": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 29
        }
      },
      "35": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 22
        }
      },
      "36": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 89,
          column: 20
        }
      },
      "37": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 90,
          column: 27
        }
      },
      "38": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 91,
          column: 25
        }
      },
      "39": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 29
        }
      },
      "40": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 94,
          column: 84
        }
      },
      "41": {
        start: {
          line: 94,
          column: 54
        },
        end: {
          line: 94,
          column: 82
        }
      },
      "42": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 95,
          column: 76
        }
      },
      "43": {
        start: {
          line: 95,
          column: 50
        },
        end: {
          line: 95,
          column: 74
        }
      },
      "44": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 111,
          column: 7
        }
      },
      "45": {
        start: {
          line: 101,
          column: 6
        },
        end: {
          line: 101,
          column: 24
        }
      },
      "46": {
        start: {
          line: 102,
          column: 6
        },
        end: {
          line: 110,
          column: 7
        }
      },
      "47": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 106,
          column: 11
        }
      },
      "48": {
        start: {
          line: 104,
          column: 10
        },
        end: {
          line: 104,
          column: 36
        }
      },
      "49": {
        start: {
          line: 105,
          column: 10
        },
        end: {
          line: 105,
          column: 54
        }
      },
      "50": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 109,
          column: 11
        }
      },
      "51": {
        start: {
          line: 108,
          column: 10
        },
        end: {
          line: 108,
          column: 50
        }
      },
      "52": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 117,
          column: 7
        }
      },
      "53": {
        start: {
          line: 116,
          column: 6
        },
        end: {
          line: 116,
          column: 24
        }
      },
      "54": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 121,
          column: 28
        }
      },
      "55": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 122,
          column: 38
        }
      },
      "56": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 123,
          column: 40
        }
      },
      "57": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 16
        }
      },
      "58": {
        start: {
          line: 128,
          column: 20
        },
        end: {
          line: 128,
          column: 43
        }
      },
      "59": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 131,
          column: 5
        }
      },
      "60": {
        start: {
          line: 130,
          column: 6
        },
        end: {
          line: 130,
          column: 13
        }
      },
      "61": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 133,
          column: 70
        }
      },
      "62": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 134,
          column: 33
        }
      },
      "63": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 138,
          column: 33
        }
      },
      "64": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 142,
          column: 35
        }
      },
      "65": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 146,
          column: 31
        }
      },
      "66": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 147,
          column: 16
        }
      },
      "67": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 153,
          column: 5
        }
      },
      "68": {
        start: {
          line: 152,
          column: 6
        },
        end: {
          line: 152,
          column: 51
        }
      },
      "69": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 154,
          column: 30
        }
      },
      "70": {
        start: {
          line: 158,
          column: 18
        },
        end: {
          line: 158,
          column: 22
        }
      },
      "71": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "72": {
        start: {
          line: 161,
          column: 6
        },
        end: {
          line: 161,
          column: 35
        }
      },
      "73": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 163,
          column: 33
        }
      },
      "74": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 164,
          column: 16
        }
      },
      "75": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 170,
          column: 5
        }
      },
      "76": {
        start: {
          line: 169,
          column: 6
        },
        end: {
          line: 169,
          column: 51
        }
      },
      "77": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 171,
          column: 30
        }
      },
      "78": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 175,
          column: 28
        }
      },
      "79": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 176,
          column: 16
        }
      },
      "80": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 182,
          column: 5
        }
      },
      "81": {
        start: {
          line: 181,
          column: 6
        },
        end: {
          line: 181,
          column: 49
        }
      },
      "82": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 183,
          column: 28
        }
      },
      "83": {
        start: {
          line: 187,
          column: 21
        },
        end: {
          line: 187,
          column: 92
        }
      },
      "84": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 188,
          column: 92
        }
      },
      "85": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 192,
          column: 85
        }
      },
      "86": {
        start: {
          line: 196,
          column: 15
        },
        end: {
          line: 196,
          column: 19
        }
      },
      "87": {
        start: {
          line: 197,
          column: 15
        },
        end: {
          line: 197,
          column: 19
        }
      },
      "88": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 201,
          column: 5
        }
      },
      "89": {
        start: {
          line: 200,
          column: 6
        },
        end: {
          line: 200,
          column: 22
        }
      },
      "90": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 206,
          column: 5
        }
      },
      "91": {
        start: {
          line: 204,
          column: 6
        },
        end: {
          line: 204,
          column: 19
        }
      },
      "92": {
        start: {
          line: 205,
          column: 6
        },
        end: {
          line: 205,
          column: 22
        }
      },
      "93": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 211,
          column: 5
        }
      },
      "94": {
        start: {
          line: 209,
          column: 6
        },
        end: {
          line: 209,
          column: 25
        }
      },
      "95": {
        start: {
          line: 210,
          column: 6
        },
        end: {
          line: 210,
          column: 28
        }
      },
      "96": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 217,
          column: 5
        }
      },
      "97": {
        start: {
          line: 214,
          column: 6
        },
        end: {
          line: 214,
          column: 22
        }
      },
      "98": {
        start: {
          line: 215,
          column: 6
        },
        end: {
          line: 215,
          column: 24
        }
      },
      "99": {
        start: {
          line: 216,
          column: 6
        },
        end: {
          line: 216,
          column: 43
        }
      },
      "100": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 222,
          column: 5
        }
      },
      "101": {
        start: {
          line: 220,
          column: 6
        },
        end: {
          line: 220,
          column: 24
        }
      },
      "102": {
        start: {
          line: 221,
          column: 6
        },
        end: {
          line: 221,
          column: 27
        }
      },
      "103": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 239,
          column: 5
        }
      },
      "104": {
        start: {
          line: 225,
          column: 6
        },
        end: {
          line: 225,
          column: 18
        }
      },
      "105": {
        start: {
          line: 226,
          column: 11
        },
        end: {
          line: 239,
          column: 5
        }
      },
      "106": {
        start: {
          line: 227,
          column: 6
        },
        end: {
          line: 227,
          column: 66
        }
      },
      "107": {
        start: {
          line: 229,
          column: 6
        },
        end: {
          line: 238,
          column: 7
        }
      },
      "108": {
        start: {
          line: 229,
          column: 19
        },
        end: {
          line: 229,
          column: 20
        }
      },
      "109": {
        start: {
          line: 230,
          column: 23
        },
        end: {
          line: 230,
          column: 38
        }
      },
      "110": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 76
        }
      },
      "111": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "112": {
        start: {
          line: 233,
          column: 10
        },
        end: {
          line: 235,
          column: 11
        }
      },
      "113": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 97
        }
      },
      "114": {
        start: {
          line: 236,
          column: 10
        },
        end: {
          line: 236,
          column: 16
        }
      },
      "115": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 252,
          column: 5
        }
      },
      "116": {
        start: {
          line: 242,
          column: 6
        },
        end: {
          line: 244,
          column: 7
        }
      },
      "117": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 23
        }
      },
      "118": {
        start: {
          line: 246,
          column: 6
        },
        end: {
          line: 251,
          column: 7
        }
      },
      "119": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 247,
          column: 23
        }
      },
      "120": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 25
        }
      },
      "121": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 20
        }
      },
      "122": {
        start: {
          line: 255,
          column: 27
        },
        end: {
          line: 282,
          column: 5
        }
      },
      "123": {
        start: {
          line: 256,
          column: 6
        },
        end: {
          line: 258,
          column: 7
        }
      },
      "124": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 55
        }
      },
      "125": {
        start: {
          line: 260,
          column: 6
        },
        end: {
          line: 267,
          column: 7
        }
      },
      "126": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "127": {
        start: {
          line: 262,
          column: 10
        },
        end: {
          line: 262,
          column: 18
        }
      },
      "128": {
        start: {
          line: 263,
          column: 10
        },
        end: {
          line: 263,
          column: 17
        }
      },
      "129": {
        start: {
          line: 265,
          column: 10
        },
        end: {
          line: 265,
          column: 20
        }
      },
      "130": {
        start: {
          line: 269,
          column: 6
        },
        end: {
          line: 276,
          column: 7
        }
      },
      "131": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 77
        }
      },
      "132": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 81
        }
      },
      "133": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 275,
          column: 9
        }
      },
      "134": {
        start: {
          line: 274,
          column: 10
        },
        end: {
          line: 274,
          column: 44
        }
      },
      "135": {
        start: {
          line: 277,
          column: 6
        },
        end: {
          line: 281,
          column: 7
        }
      },
      "136": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 278,
          column: 26
        }
      },
      "137": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 29
        }
      },
      "138": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 304,
          column: 23
        }
      },
      "139": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 293,
          column: 9
        }
      },
      "140": {
        start: {
          line: 287,
          column: 10
        },
        end: {
          line: 287,
          column: 20
        }
      },
      "141": {
        start: {
          line: 288,
          column: 15
        },
        end: {
          line: 293,
          column: 9
        }
      },
      "142": {
        start: {
          line: 289,
          column: 10
        },
        end: {
          line: 289,
          column: 30
        }
      },
      "143": {
        start: {
          line: 290,
          column: 10
        },
        end: {
          line: 290,
          column: 26
        }
      },
      "144": {
        start: {
          line: 292,
          column: 10
        },
        end: {
          line: 292,
          column: 17
        }
      },
      "145": {
        start: {
          line: 297,
          column: 6
        },
        end: {
          line: 297,
          column: 60
        }
      },
      "146": {
        start: {
          line: 299,
          column: 6
        },
        end: {
          line: 303,
          column: 7
        }
      },
      "147": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 39
        }
      },
      "148": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 302,
          column: 45
        }
      },
      "149": {
        start: {
          line: 306,
          column: 4
        },
        end: {
          line: 306,
          column: 22
        }
      },
      "150": {
        start: {
          line: 310,
          column: 4
        },
        end: {
          line: 310,
          column: 33
        }
      },
      "151": {
        start: {
          line: 314,
          column: 4
        },
        end: {
          line: 317,
          column: 5
        }
      },
      "152": {
        start: {
          line: 315,
          column: 6
        },
        end: {
          line: 315,
          column: 15
        }
      },
      "153": {
        start: {
          line: 316,
          column: 6
        },
        end: {
          line: 316,
          column: 17
        }
      },
      "154": {
        start: {
          line: 323,
          column: 21
        },
        end: {
          line: 323,
          column: 25
        }
      },
      "155": {
        start: {
          line: 325,
          column: 4
        },
        end: {
          line: 333,
          column: 7
        }
      },
      "156": {
        start: {
          line: 326,
          column: 6
        },
        end: {
          line: 332,
          column: 7
        }
      },
      "157": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 30
        }
      },
      "158": {
        start: {
          line: 328,
          column: 13
        },
        end: {
          line: 332,
          column: 7
        }
      },
      "159": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 18
        }
      },
      "160": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 331,
          column: 42
        }
      },
      "161": {
        start: {
          line: 335,
          column: 4
        },
        end: {
          line: 335,
          column: 22
        }
      },
      "162": {
        start: {
          line: 339,
          column: 4
        },
        end: {
          line: 342,
          column: 5
        }
      },
      "163": {
        start: {
          line: 340,
          column: 6
        },
        end: {
          line: 340,
          column: 16
        }
      },
      "164": {
        start: {
          line: 341,
          column: 6
        },
        end: {
          line: 341,
          column: 16
        }
      },
      "165": {
        start: {
          line: 343,
          column: 4
        },
        end: {
          line: 343,
          column: 22
        }
      },
      "166": {
        start: {
          line: 345,
          column: 17
        },
        end: {
          line: 345,
          column: 51
        }
      },
      "167": {
        start: {
          line: 346,
          column: 4
        },
        end: {
          line: 346,
          column: 32
        }
      },
      "168": {
        start: {
          line: 350,
          column: 4
        },
        end: {
          line: 350,
          column: 67
        }
      },
      "169": {
        start: {
          line: 354,
          column: 4
        },
        end: {
          line: 354,
          column: 22
        }
      },
      "170": {
        start: {
          line: 355,
          column: 4
        },
        end: {
          line: 355,
          column: 52
        }
      },
      "171": {
        start: {
          line: 359,
          column: 19
        },
        end: {
          line: 382,
          column: 6
        }
      },
      "172": {
        start: {
          line: 360,
          column: 21
        },
        end: {
          line: 366,
          column: 7
        }
      },
      "173": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 365,
          column: 9
        }
      },
      "174": {
        start: {
          line: 362,
          column: 10
        },
        end: {
          line: 362,
          column: 55
        }
      },
      "175": {
        start: {
          line: 364,
          column: 10
        },
        end: {
          line: 364,
          column: 23
        }
      },
      "176": {
        start: {
          line: 368,
          column: 6
        },
        end: {
          line: 381,
          column: 7
        }
      },
      "177": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 376,
          column: 11
        }
      },
      "178": {
        start: {
          line: 371,
          column: 10
        },
        end: {
          line: 375,
          column: 11
        }
      },
      "179": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 40
        }
      },
      "180": {
        start: {
          line: 374,
          column: 12
        },
        end: {
          line: 374,
          column: 39
        }
      },
      "181": {
        start: {
          line: 379,
          column: 21
        },
        end: {
          line: 379,
          column: 65
        }
      },
      "182": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 380,
          column: 35
        }
      },
      "183": {
        start: {
          line: 383,
          column: 4
        },
        end: {
          line: 383,
          column: 18
        }
      },
      "184": {
        start: {
          line: 387,
          column: 4
        },
        end: {
          line: 387,
          column: 50
        }
      },
      "185": {
        start: {
          line: 393,
          column: 4
        },
        end: {
          line: 393,
          column: 28
        }
      },
      "186": {
        start: {
          line: 396,
          column: 4
        },
        end: {
          line: 396,
          column: 26
        }
      },
      "187": {
        start: {
          line: 399,
          column: 4
        },
        end: {
          line: 399,
          column: 26
        }
      },
      "188": {
        start: {
          line: 400,
          column: 4
        },
        end: {
          line: 403,
          column: 5
        }
      },
      "189": {
        start: {
          line: 401,
          column: 6
        },
        end: {
          line: 401,
          column: 32
        }
      },
      "190": {
        start: {
          line: 402,
          column: 6
        },
        end: {
          line: 402,
          column: 37
        }
      },
      "191": {
        start: {
          line: 406,
          column: 4
        },
        end: {
          line: 408,
          column: 5
        }
      },
      "192": {
        start: {
          line: 407,
          column: 6
        },
        end: {
          line: 407,
          column: 31
        }
      },
      "193": {
        start: {
          line: 409,
          column: 4
        },
        end: {
          line: 411,
          column: 7
        }
      },
      "194": {
        start: {
          line: 410,
          column: 6
        },
        end: {
          line: 410,
          column: 40
        }
      },
      "195": {
        start: {
          line: 418,
          column: 4
        },
        end: {
          line: 418,
          column: 40
        }
      },
      "196": {
        start: {
          line: 421,
          column: 4
        },
        end: {
          line: 421,
          column: 35
        }
      },
      "197": {
        start: {
          line: 423,
          column: 4
        },
        end: {
          line: 423,
          column: 21
        }
      },
      "198": {
        start: {
          line: 424,
          column: 4
        },
        end: {
          line: 424,
          column: 23
        }
      },
      "199": {
        start: {
          line: 426,
          column: 4
        },
        end: {
          line: 428,
          column: 7
        }
      },
      "200": {
        start: {
          line: 427,
          column: 6
        },
        end: {
          line: 427,
          column: 40
        }
      },
      "201": {
        start: {
          line: 434,
          column: 4
        },
        end: {
          line: 438,
          column: 5
        }
      },
      "202": {
        start: {
          line: 435,
          column: 6
        },
        end: {
          line: 435,
          column: 36
        }
      },
      "203": {
        start: {
          line: 437,
          column: 6
        },
        end: {
          line: 437,
          column: 28
        }
      },
      "204": {
        start: {
          line: 442,
          column: 4
        },
        end: {
          line: 442,
          column: 25
        }
      },
      "205": {
        start: {
          line: 446,
          column: 4
        },
        end: {
          line: 446,
          column: 20
        }
      },
      "206": {
        start: {
          line: 450,
          column: 4
        },
        end: {
          line: 450,
          column: 48
        }
      },
      "207": {
        start: {
          line: 451,
          column: 4
        },
        end: {
          line: 451,
          column: 34
        }
      },
      "208": {
        start: {
          line: 452,
          column: 4
        },
        end: {
          line: 452,
          column: 16
        }
      },
      "209": {
        start: {
          line: 456,
          column: 4
        },
        end: {
          line: 458,
          column: 5
        }
      },
      "210": {
        start: {
          line: 457,
          column: 6
        },
        end: {
          line: 457,
          column: 54
        }
      },
      "211": {
        start: {
          line: 460,
          column: 4
        },
        end: {
          line: 460,
          column: 32
        }
      },
      "212": {
        start: {
          line: 464,
          column: 14
        },
        end: {
          line: 464,
          column: 57
        }
      },
      "213": {
        start: {
          line: 465,
          column: 14
        },
        end: {
          line: 465,
          column: 40
        }
      },
      "214": {
        start: {
          line: 466,
          column: 18
        },
        end: {
          line: 466,
          column: 22
        }
      },
      "215": {
        start: {
          line: 468,
          column: 4
        },
        end: {
          line: 470,
          column: 5
        }
      },
      "216": {
        start: {
          line: 469,
          column: 6
        },
        end: {
          line: 469,
          column: 69
        }
      },
      "217": {
        start: {
          line: 472,
          column: 4
        },
        end: {
          line: 472,
          column: 42
        }
      },
      "218": {
        start: {
          line: 476,
          column: 4
        },
        end: {
          line: 476,
          column: 29
        }
      },
      "219": {
        start: {
          line: 480,
          column: 19
        },
        end: {
          line: 480,
          column: 21
        }
      },
      "220": {
        start: {
          line: 481,
          column: 4
        },
        end: {
          line: 483,
          column: 7
        }
      },
      "221": {
        start: {
          line: 482,
          column: 6
        },
        end: {
          line: 482,
          column: 38
        }
      },
      "222": {
        start: {
          line: 484,
          column: 4
        },
        end: {
          line: 484,
          column: 20
        }
      },
      "223": {
        start: {
          line: 490,
          column: 4
        },
        end: {
          line: 490,
          column: 40
        }
      },
      "224": {
        start: {
          line: 491,
          column: 4
        },
        end: {
          line: 491,
          column: 27
        }
      },
      "225": {
        start: {
          line: 493,
          column: 4
        },
        end: {
          line: 509,
          column: 5
        }
      },
      "226": {
        start: {
          line: 494,
          column: 6
        },
        end: {
          line: 504,
          column: 7
        }
      },
      "227": {
        start: {
          line: 496,
          column: 10
        },
        end: {
          line: 496,
          column: 35
        }
      },
      "228": {
        start: {
          line: 497,
          column: 10
        },
        end: {
          line: 497,
          column: 16
        }
      },
      "229": {
        start: {
          line: 499,
          column: 10
        },
        end: {
          line: 499,
          column: 33
        }
      },
      "230": {
        start: {
          line: 500,
          column: 10
        },
        end: {
          line: 500,
          column: 16
        }
      },
      "231": {
        start: {
          line: 502,
          column: 10
        },
        end: {
          line: 503,
          column: 89
        }
      },
      "232": {
        start: {
          line: 505,
          column: 11
        },
        end: {
          line: 509,
          column: 5
        }
      },
      "233": {
        start: {
          line: 506,
          column: 6
        },
        end: {
          line: 506,
          column: 25
        }
      },
      "234": {
        start: {
          line: 508,
          column: 6
        },
        end: {
          line: 508,
          column: 81
        }
      },
      "235": {
        start: {
          line: 511,
          column: 4
        },
        end: {
          line: 511,
          column: 21
        }
      },
      "236": {
        start: {
          line: 513,
          column: 4
        },
        end: {
          line: 521,
          column: 5
        }
      },
      "237": {
        start: {
          line: 514,
          column: 6
        },
        end: {
          line: 518,
          column: 7
        }
      },
      "238": {
        start: {
          line: 515,
          column: 8
        },
        end: {
          line: 515,
          column: 24
        }
      },
      "239": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 517,
          column: 68
        }
      },
      "240": {
        start: {
          line: 520,
          column: 6
        },
        end: {
          line: 520,
          column: 28
        }
      },
      "241": {
        start: {
          line: 525,
          column: 4
        },
        end: {
          line: 534,
          column: 5
        }
      },
      "242": {
        start: {
          line: 526,
          column: 6
        },
        end: {
          line: 526,
          column: 15
        }
      },
      "243": {
        start: {
          line: 527,
          column: 6
        },
        end: {
          line: 527,
          column: 15
        }
      },
      "244": {
        start: {
          line: 528,
          column: 11
        },
        end: {
          line: 534,
          column: 5
        }
      },
      "245": {
        start: {
          line: 529,
          column: 6
        },
        end: {
          line: 529,
          column: 23
        }
      },
      "246": {
        start: {
          line: 530,
          column: 6
        },
        end: {
          line: 530,
          column: 25
        }
      },
      "247": {
        start: {
          line: 531,
          column: 11
        },
        end: {
          line: 534,
          column: 5
        }
      },
      "248": {
        start: {
          line: 532,
          column: 6
        },
        end: {
          line: 532,
          column: 18
        }
      },
      "249": {
        start: {
          line: 533,
          column: 6
        },
        end: {
          line: 533,
          column: 20
        }
      },
      "250": {
        start: {
          line: 540,
          column: 23
        },
        end: {
          line: 540,
          column: 35
        }
      },
      "251": {
        start: {
          line: 543,
          column: 4
        },
        end: {
          line: 552,
          column: 5
        }
      },
      "252": {
        start: {
          line: 544,
          column: 6
        },
        end: {
          line: 544,
          column: 21
        }
      },
      "253": {
        start: {
          line: 546,
          column: 18
        },
        end: {
          line: 546,
          column: 69
        }
      },
      "254": {
        start: {
          line: 547,
          column: 6
        },
        end: {
          line: 551,
          column: 7
        }
      },
      "255": {
        start: {
          line: 548,
          column: 8
        },
        end: {
          line: 548,
          column: 37
        }
      },
      "256": {
        start: {
          line: 550,
          column: 8
        },
        end: {
          line: 550,
          column: 18
        }
      },
      "257": {
        start: {
          line: 554,
          column: 20
        },
        end: {
          line: 554,
          column: 65
        }
      },
      "258": {
        start: {
          line: 555,
          column: 18
        },
        end: {
          line: 555,
          column: 68
        }
      },
      "259": {
        start: {
          line: 556,
          column: 4
        },
        end: {
          line: 556,
          column: 26
        }
      },
      "260": {
        start: {
          line: 557,
          column: 21
        },
        end: {
          line: 557,
          column: 25
        }
      },
      "261": {
        start: {
          line: 558,
          column: 19
        },
        end: {
          line: 558,
          column: 24
        }
      },
      "262": {
        start: {
          line: 560,
          column: 21
        },
        end: {
          line: 587,
          column: 5
        }
      },
      "263": {
        start: {
          line: 565,
          column: 6
        },
        end: {
          line: 568,
          column: 7
        }
      },
      "264": {
        start: {
          line: 567,
          column: 8
        },
        end: {
          line: 567,
          column: 15
        }
      },
      "265": {
        start: {
          line: 570,
          column: 6
        },
        end: {
          line: 573,
          column: 7
        }
      },
      "266": {
        start: {
          line: 571,
          column: 8
        },
        end: {
          line: 571,
          column: 68
        }
      },
      "267": {
        start: {
          line: 572,
          column: 8
        },
        end: {
          line: 572,
          column: 24
        }
      },
      "268": {
        start: {
          line: 575,
          column: 6
        },
        end: {
          line: 586,
          column: 7
        }
      },
      "269": {
        start: {
          line: 576,
          column: 8
        },
        end: {
          line: 580,
          column: 9
        }
      },
      "270": {
        start: {
          line: 577,
          column: 10
        },
        end: {
          line: 577,
          column: 37
        }
      },
      "271": {
        start: {
          line: 579,
          column: 10
        },
        end: {
          line: 579,
          column: 23
        }
      },
      "272": {
        start: {
          line: 582,
          column: 8
        },
        end: {
          line: 584,
          column: 9
        }
      },
      "273": {
        start: {
          line: 583,
          column: 10
        },
        end: {
          line: 583,
          column: 20
        }
      },
      "274": {
        start: {
          line: 585,
          column: 8
        },
        end: {
          line: 585,
          column: 25
        }
      },
      "275": {
        start: {
          line: 589,
          column: 4
        },
        end: {
          line: 594,
          column: 5
        }
      },
      "276": {
        start: {
          line: 590,
          column: 6
        },
        end: {
          line: 591,
          column: 56
        }
      },
      "277": {
        start: {
          line: 593,
          column: 6
        },
        end: {
          line: 593,
          column: 77
        }
      },
      "278": {
        start: {
          line: 596,
          column: 4
        },
        end: {
          line: 596,
          column: 22
        }
      },
      "279": {
        start: {
          line: 600,
          column: 4
        },
        end: {
          line: 603,
          column: 5
        }
      },
      "280": {
        start: {
          line: 601,
          column: 6
        },
        end: {
          line: 601,
          column: 15
        }
      },
      "281": {
        start: {
          line: 602,
          column: 6
        },
        end: {
          line: 602,
          column: 15
        }
      },
      "282": {
        start: {
          line: 605,
          column: 4
        },
        end: {
          line: 608,
          column: 5
        }
      },
      "283": {
        start: {
          line: 606,
          column: 6
        },
        end: {
          line: 606,
          column: 23
        }
      },
      "284": {
        start: {
          line: 607,
          column: 6
        },
        end: {
          line: 607,
          column: 25
        }
      },
      "285": {
        start: {
          line: 611,
          column: 4
        },
        end: {
          line: 619,
          column: 5
        }
      },
      "286": {
        start: {
          line: 612,
          column: 6
        },
        end: {
          line: 612,
          column: 21
        }
      },
      "287": {
        start: {
          line: 614,
          column: 6
        },
        end: {
          line: 618,
          column: 7
        }
      },
      "288": {
        start: {
          line: 615,
          column: 8
        },
        end: {
          line: 615,
          column: 21
        }
      },
      "289": {
        start: {
          line: 617,
          column: 8
        },
        end: {
          line: 617,
          column: 16
        }
      },
      "290": {
        start: {
          line: 621,
          column: 18
        },
        end: {
          line: 621,
          column: 64
        }
      },
      "291": {
        start: {
          line: 622,
          column: 4
        },
        end: {
          line: 622,
          column: 26
        }
      },
      "292": {
        start: {
          line: 625,
          column: 20
        },
        end: {
          line: 625,
          column: 65
        }
      },
      "293": {
        start: {
          line: 626,
          column: 21
        },
        end: {
          line: 632,
          column: 5
        }
      },
      "294": {
        start: {
          line: 627,
          column: 6
        },
        end: {
          line: 631,
          column: 7
        }
      },
      "295": {
        start: {
          line: 628,
          column: 8
        },
        end: {
          line: 628,
          column: 22
        }
      },
      "296": {
        start: {
          line: 630,
          column: 8
        },
        end: {
          line: 630,
          column: 40
        }
      },
      "297": {
        start: {
          line: 633,
          column: 4
        },
        end: {
          line: 637,
          column: 5
        }
      },
      "298": {
        start: {
          line: 634,
          column: 6
        },
        end: {
          line: 634,
          column: 95
        }
      },
      "299": {
        start: {
          line: 636,
          column: 6
        },
        end: {
          line: 636,
          column: 77
        }
      },
      "300": {
        start: {
          line: 641,
          column: 4
        },
        end: {
          line: 643,
          column: 5
        }
      },
      "301": {
        start: {
          line: 642,
          column: 6
        },
        end: {
          line: 642,
          column: 22
        }
      },
      "302": {
        start: {
          line: 649,
          column: 4
        },
        end: {
          line: 700,
          column: 5
        }
      },
      "303": {
        start: {
          line: 650,
          column: 6
        },
        end: {
          line: 650,
          column: 29
        }
      },
      "304": {
        start: {
          line: 652,
          column: 21
        },
        end: {
          line: 657,
          column: 22
        }
      },
      "305": {
        start: {
          line: 660,
          column: 6
        },
        end: {
          line: 698,
          column: 7
        }
      },
      "306": {
        start: {
          line: 661,
          column: 8
        },
        end: {
          line: 661,
          column: 36
        }
      },
      "307": {
        start: {
          line: 663,
          column: 8
        },
        end: {
          line: 663,
          column: 51
        }
      },
      "308": {
        start: {
          line: 665,
          column: 8
        },
        end: {
          line: 665,
          column: 48
        }
      },
      "309": {
        start: {
          line: 666,
          column: 8
        },
        end: {
          line: 666,
          column: 39
        }
      },
      "310": {
        start: {
          line: 667,
          column: 8
        },
        end: {
          line: 667,
          column: 45
        }
      },
      "311": {
        start: {
          line: 668,
          column: 8
        },
        end: {
          line: 668,
          column: 41
        }
      },
      "312": {
        start: {
          line: 670,
          column: 8
        },
        end: {
          line: 670,
          column: 46
        }
      },
      "313": {
        start: {
          line: 671,
          column: 8
        },
        end: {
          line: 671,
          column: 55
        }
      },
      "314": {
        start: {
          line: 678,
          column: 8
        },
        end: {
          line: 678,
          column: 70
        }
      },
      "315": {
        start: {
          line: 678,
          column: 26
        },
        end: {
          line: 678,
          column: 70
        }
      },
      "316": {
        start: {
          line: 679,
          column: 8
        },
        end: {
          line: 679,
          column: 76
        }
      },
      "317": {
        start: {
          line: 679,
          column: 28
        },
        end: {
          line: 679,
          column: 76
        }
      },
      "318": {
        start: {
          line: 680,
          column: 8
        },
        end: {
          line: 680,
          column: 64
        }
      },
      "319": {
        start: {
          line: 680,
          column: 24
        },
        end: {
          line: 680,
          column: 64
        }
      },
      "320": {
        start: {
          line: 683,
          column: 8
        },
        end: {
          line: 688,
          column: 9
        }
      },
      "321": {
        start: {
          line: 684,
          column: 10
        },
        end: {
          line: 684,
          column: 48
        }
      },
      "322": {
        start: {
          line: 686,
          column: 10
        },
        end: {
          line: 686,
          column: 53
        }
      },
      "323": {
        start: {
          line: 686,
          column: 22
        },
        end: {
          line: 686,
          column: 53
        }
      },
      "324": {
        start: {
          line: 687,
          column: 10
        },
        end: {
          line: 687,
          column: 59
        }
      },
      "325": {
        start: {
          line: 687,
          column: 24
        },
        end: {
          line: 687,
          column: 59
        }
      },
      "326": {
        start: {
          line: 691,
          column: 8
        },
        end: {
          line: 691,
          column: 53
        }
      },
      "327": {
        start: {
          line: 694,
          column: 8
        },
        end: {
          line: 694,
          column: 59
        }
      },
      "328": {
        start: {
          line: 695,
          column: 8
        },
        end: {
          line: 695,
          column: 58
        }
      },
      "329": {
        start: {
          line: 697,
          column: 8
        },
        end: {
          line: 697,
          column: 82
        }
      },
      "330": {
        start: {
          line: 699,
          column: 6
        },
        end: {
          line: 699,
          column: 21
        }
      },
      "331": {
        start: {
          line: 702,
          column: 4
        },
        end: {
          line: 702,
          column: 41
        }
      },
      "332": {
        start: {
          line: 703,
          column: 4
        },
        end: {
          line: 703,
          column: 37
        }
      },
      "333": {
        start: {
          line: 704,
          column: 4
        },
        end: {
          line: 704,
          column: 25
        }
      },
      "334": {
        start: {
          line: 708,
          column: 17
        },
        end: {
          line: 708,
          column: 19
        }
      },
      "335": {
        start: {
          line: 710,
          column: 4
        },
        end: {
          line: 714,
          column: 7
        }
      },
      "336": {
        start: {
          line: 711,
          column: 6
        },
        end: {
          line: 713,
          column: 7
        }
      },
      "337": {
        start: {
          line: 712,
          column: 8
        },
        end: {
          line: 712,
          column: 38
        }
      },
      "338": {
        start: {
          line: 716,
          column: 4
        },
        end: {
          line: 716,
          column: 18
        }
      },
      "339": {
        start: {
          line: 722,
          column: 4
        },
        end: {
          line: 722,
          column: 51
        }
      },
      "340": {
        start: {
          line: 726,
          column: 0
        },
        end: {
          line: 730,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "callbackAsap",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 21
          }
        },
        loc: {
          start: {
            line: 18,
            column: 36
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 7
          },
          end: {
            line: 19,
            column: 8
          }
        },
        loc: {
          start: {
            line: 19,
            column: 13
          },
          end: {
            line: 21,
            column: 3
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 43
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 41,
            column: 2
          },
          end: {
            line: 41,
            column: 3
          }
        },
        loc: {
          start: {
            line: 41,
            column: 22
          },
          end: {
            line: 96,
            column: 3
          }
        },
        line: 41
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 94,
            column: 34
          },
          end: {
            line: 94,
            column: 35
          }
        },
        loc: {
          start: {
            line: 94,
            column: 54
          },
          end: {
            line: 94,
            column: 82
          }
        },
        line: 94
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 95,
            column: 32
          },
          end: {
            line: 95,
            column: 33
          }
        },
        loc: {
          start: {
            line: 95,
            column: 50
          },
          end: {
            line: 95,
            column: 74
          }
        },
        line: 95
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 98,
            column: 2
          },
          end: {
            line: 98,
            column: 3
          }
        },
        loc: {
          start: {
            line: 98,
            column: 17
          },
          end: {
            line: 112,
            column: 3
          }
        },
        line: 98
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 99,
            column: 25
          },
          end: {
            line: 99,
            column: 26
          }
        },
        loc: {
          start: {
            line: 99,
            column: 37
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 99
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 103,
            column: 28
          },
          end: {
            line: 103,
            column: 29
          }
        },
        loc: {
          start: {
            line: 103,
            column: 48
          },
          end: {
            line: 106,
            column: 9
          }
        },
        line: 103
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 107,
            column: 26
          },
          end: {
            line: 107,
            column: 27
          }
        },
        loc: {
          start: {
            line: 107,
            column: 44
          },
          end: {
            line: 109,
            column: 9
          }
        },
        line: 107
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 114,
            column: 2
          },
          end: {
            line: 114,
            column: 3
          }
        },
        loc: {
          start: {
            line: 114,
            column: 20
          },
          end: {
            line: 118,
            column: 3
          }
        },
        line: 114
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 115,
            column: 25
          },
          end: {
            line: 115,
            column: 26
          }
        },
        loc: {
          start: {
            line: 115,
            column: 37
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 115
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 120,
            column: 2
          },
          end: {
            line: 120,
            column: 3
          }
        },
        loc: {
          start: {
            line: 120,
            column: 32
          },
          end: {
            line: 125,
            column: 3
          }
        },
        line: 120
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 127,
            column: 2
          },
          end: {
            line: 127,
            column: 3
          }
        },
        loc: {
          start: {
            line: 127,
            column: 24
          },
          end: {
            line: 135,
            column: 3
          }
        },
        line: 127
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 137,
            column: 2
          },
          end: {
            line: 137,
            column: 3
          }
        },
        loc: {
          start: {
            line: 137,
            column: 21
          },
          end: {
            line: 139,
            column: 3
          }
        },
        line: 137
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 141,
            column: 2
          },
          end: {
            line: 141,
            column: 3
          }
        },
        loc: {
          start: {
            line: 141,
            column: 21
          },
          end: {
            line: 143,
            column: 3
          }
        },
        line: 141
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 145,
            column: 2
          },
          end: {
            line: 145,
            column: 3
          }
        },
        loc: {
          start: {
            line: 145,
            column: 25
          },
          end: {
            line: 148,
            column: 3
          }
        },
        line: 145
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 150,
            column: 2
          },
          end: {
            line: 150,
            column: 3
          }
        },
        loc: {
          start: {
            line: 150,
            column: 18
          },
          end: {
            line: 155,
            column: 3
          }
        },
        line: 150
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 157,
            column: 2
          },
          end: {
            line: 157,
            column: 3
          }
        },
        loc: {
          start: {
            line: 157,
            column: 31
          },
          end: {
            line: 165,
            column: 3
          }
        },
        line: 157
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 167,
            column: 2
          },
          end: {
            line: 167,
            column: 3
          }
        },
        loc: {
          start: {
            line: 167,
            column: 18
          },
          end: {
            line: 172,
            column: 3
          }
        },
        line: 167
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 174,
            column: 2
          },
          end: {
            line: 174,
            column: 3
          }
        },
        loc: {
          start: {
            line: 174,
            column: 22
          },
          end: {
            line: 177,
            column: 3
          }
        },
        line: 174
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 179,
            column: 2
          },
          end: {
            line: 179,
            column: 3
          }
        },
        loc: {
          start: {
            line: 179,
            column: 16
          },
          end: {
            line: 184,
            column: 3
          }
        },
        line: 179
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 186,
            column: 2
          },
          end: {
            line: 186,
            column: 3
          }
        },
        loc: {
          start: {
            line: 186,
            column: 48
          },
          end: {
            line: 189,
            column: 3
          }
        },
        line: 186
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 191,
            column: 2
          },
          end: {
            line: 191,
            column: 3
          }
        },
        loc: {
          start: {
            line: 191,
            column: 70
          },
          end: {
            line: 193,
            column: 3
          }
        },
        line: 191
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 195,
            column: 2
          },
          end: {
            line: 195,
            column: 3
          }
        },
        loc: {
          start: {
            line: 195,
            column: 74
          },
          end: {
            line: 307,
            column: 3
          }
        },
        line: 195
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 255,
            column: 27
          },
          end: {
            line: 255,
            column: 28
          }
        },
        loc: {
          start: {
            line: 255,
            column: 42
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 255
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 284,
            column: 32
          },
          end: {
            line: 284,
            column: 33
          }
        },
        loc: {
          start: {
            line: 284,
            column: 59
          },
          end: {
            line: 304,
            column: 5
          }
        },
        line: 284
      },
      "27": {
        name: "handle",
        decl: {
          start: {
            line: 285,
            column: 15
          },
          end: {
            line: 285,
            column: 21
          }
        },
        loc: {
          start: {
            line: 285,
            column: 32
          },
          end: {
            line: 294,
            column: 7
          }
        },
        line: 285
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 309,
            column: 2
          },
          end: {
            line: 309,
            column: 3
          }
        },
        loc: {
          start: {
            line: 309,
            column: 15
          },
          end: {
            line: 311,
            column: 3
          }
        },
        line: 309
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 313,
            column: 2
          },
          end: {
            line: 313,
            column: 3
          }
        },
        loc: {
          start: {
            line: 313,
            column: 24
          },
          end: {
            line: 336,
            column: 3
          }
        },
        line: 313
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 325,
            column: 34
          },
          end: {
            line: 325,
            column: 35
          }
        },
        loc: {
          start: {
            line: 325,
            column: 49
          },
          end: {
            line: 333,
            column: 5
          }
        },
        line: 325
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 338,
            column: 2
          },
          end: {
            line: 338,
            column: 3
          }
        },
        loc: {
          start: {
            line: 338,
            column: 35
          },
          end: {
            line: 347,
            column: 3
          }
        },
        line: 338
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 349,
            column: 2
          },
          end: {
            line: 349,
            column: 3
          }
        },
        loc: {
          start: {
            line: 349,
            column: 52
          },
          end: {
            line: 351,
            column: 3
          }
        },
        line: 349
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 353,
            column: 2
          },
          end: {
            line: 353,
            column: 3
          }
        },
        loc: {
          start: {
            line: 353,
            column: 42
          },
          end: {
            line: 356,
            column: 3
          }
        },
        line: 353
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 358,
            column: 2
          },
          end: {
            line: 358,
            column: 3
          }
        },
        loc: {
          start: {
            line: 358,
            column: 57
          },
          end: {
            line: 384,
            column: 3
          }
        },
        line: 358
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 359,
            column: 37
          },
          end: {
            line: 359,
            column: 38
          }
        },
        loc: {
          start: {
            line: 359,
            column: 58
          },
          end: {
            line: 382,
            column: 5
          }
        },
        line: 359
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 360,
            column: 21
          },
          end: {
            line: 360,
            column: 22
          }
        },
        loc: {
          start: {
            line: 360,
            column: 35
          },
          end: {
            line: 366,
            column: 7
          }
        },
        line: 360
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 370,
            column: 61
          },
          end: {
            line: 370,
            column: 62
          }
        },
        loc: {
          start: {
            line: 370,
            column: 76
          },
          end: {
            line: 376,
            column: 9
          }
        },
        line: 370
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 386,
            column: 2
          },
          end: {
            line: 386,
            column: 3
          }
        },
        loc: {
          start: {
            line: 386,
            column: 41
          },
          end: {
            line: 388,
            column: 3
          }
        },
        line: 386
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 392,
            column: 2
          },
          end: {
            line: 392,
            column: 3
          }
        },
        loc: {
          start: {
            line: 392,
            column: 16
          },
          end: {
            line: 394,
            column: 3
          }
        },
        line: 392
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 395,
            column: 2
          },
          end: {
            line: 395,
            column: 3
          }
        },
        loc: {
          start: {
            line: 395,
            column: 17
          },
          end: {
            line: 397,
            column: 3
          }
        },
        line: 395
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 398,
            column: 2
          },
          end: {
            line: 398,
            column: 3
          }
        },
        loc: {
          start: {
            line: 398,
            column: 17
          },
          end: {
            line: 404,
            column: 3
          }
        },
        line: 398
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 405,
            column: 2
          },
          end: {
            line: 405,
            column: 3
          }
        },
        loc: {
          start: {
            line: 405,
            column: 26
          },
          end: {
            line: 412,
            column: 3
          }
        },
        line: 405
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 409,
            column: 23
          },
          end: {
            line: 409,
            column: 24
          }
        },
        loc: {
          start: {
            line: 409,
            column: 34
          },
          end: {
            line: 411,
            column: 5
          }
        },
        line: 409
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 416,
            column: 2
          },
          end: {
            line: 416,
            column: 3
          }
        },
        loc: {
          start: {
            line: 416,
            column: 25
          },
          end: {
            line: 429,
            column: 3
          }
        },
        line: 416
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 426,
            column: 29
          },
          end: {
            line: 426,
            column: 30
          }
        },
        loc: {
          start: {
            line: 426,
            column: 37
          },
          end: {
            line: 428,
            column: 5
          }
        },
        line: 426
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 431,
            column: 2
          },
          end: {
            line: 431,
            column: 3
          }
        },
        loc: {
          start: {
            line: 431,
            column: 15
          },
          end: {
            line: 439,
            column: 3
          }
        },
        line: 431
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 441,
            column: 2
          },
          end: {
            line: 441,
            column: 3
          }
        },
        loc: {
          start: {
            line: 441,
            column: 25
          },
          end: {
            line: 443,
            column: 3
          }
        },
        line: 441
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 445,
            column: 2
          },
          end: {
            line: 445,
            column: 3
          }
        },
        loc: {
          start: {
            line: 445,
            column: 17
          },
          end: {
            line: 447,
            column: 3
          }
        },
        line: 445
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 449,
            column: 2
          },
          end: {
            line: 449,
            column: 3
          }
        },
        loc: {
          start: {
            line: 449,
            column: 24
          },
          end: {
            line: 453,
            column: 3
          }
        },
        line: 449
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 455,
            column: 2
          },
          end: {
            line: 455,
            column: 3
          }
        },
        loc: {
          start: {
            line: 455,
            column: 17
          },
          end: {
            line: 461,
            column: 3
          }
        },
        line: 455
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 463,
            column: 2
          },
          end: {
            line: 463,
            column: 3
          }
        },
        loc: {
          start: {
            line: 463,
            column: 49
          },
          end: {
            line: 473,
            column: 3
          }
        },
        line: 463
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 475,
            column: 2
          },
          end: {
            line: 475,
            column: 3
          }
        },
        loc: {
          start: {
            line: 475,
            column: 18
          },
          end: {
            line: 477,
            column: 3
          }
        },
        line: 475
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 479,
            column: 2
          },
          end: {
            line: 479,
            column: 3
          }
        },
        loc: {
          start: {
            line: 479,
            column: 16
          },
          end: {
            line: 485,
            column: 3
          }
        },
        line: 479
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 481,
            column: 26
          },
          end: {
            line: 481,
            column: 27
          }
        },
        loc: {
          start: {
            line: 481,
            column: 36
          },
          end: {
            line: 483,
            column: 5
          }
        },
        line: 481
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 489,
            column: 2
          },
          end: {
            line: 489,
            column: 3
          }
        },
        loc: {
          start: {
            line: 489,
            column: 46
          },
          end: {
            line: 522,
            column: 3
          }
        },
        line: 489
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 524,
            column: 2
          },
          end: {
            line: 524,
            column: 3
          }
        },
        loc: {
          start: {
            line: 524,
            column: 39
          },
          end: {
            line: 597,
            column: 3
          }
        },
        line: 524
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 560,
            column: 21
          },
          end: {
            line: 560,
            column: 22
          }
        },
        loc: {
          start: {
            line: 560,
            column: 35
          },
          end: {
            line: 587,
            column: 5
          }
        },
        line: 560
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 599,
            column: 2
          },
          end: {
            line: 599,
            column: 3
          }
        },
        loc: {
          start: {
            line: 599,
            column: 36
          },
          end: {
            line: 638,
            column: 3
          }
        },
        line: 599
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 626,
            column: 21
          },
          end: {
            line: 626,
            column: 22
          }
        },
        loc: {
          start: {
            line: 626,
            column: 30
          },
          end: {
            line: 632,
            column: 5
          }
        },
        line: 626
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 640,
            column: 2
          },
          end: {
            line: 640,
            column: 3
          }
        },
        loc: {
          start: {
            line: 640,
            column: 12
          },
          end: {
            line: 644,
            column: 3
          }
        },
        line: 640
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 646,
            column: 2
          },
          end: {
            line: 646,
            column: 3
          }
        },
        loc: {
          start: {
            line: 646,
            column: 13
          },
          end: {
            line: 705,
            column: 3
          }
        },
        line: 646
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 707,
            column: 2
          },
          end: {
            line: 707,
            column: 3
          }
        },
        loc: {
          start: {
            line: 707,
            column: 20
          },
          end: {
            line: 717,
            column: 3
          }
        },
        line: 707
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 710,
            column: 28
          },
          end: {
            line: 710,
            column: 29
          }
        },
        loc: {
          start: {
            line: 710,
            column: 35
          },
          end: {
            line: 714,
            column: 5
          }
        },
        line: 710
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 721,
            column: 2
          },
          end: {
            line: 721,
            column: 3
          }
        },
        loc: {
          start: {
            line: 721,
            column: 37
          },
          end: {
            line: 723,
            column: 3
          }
        },
        line: 721
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 48,
            column: 23
          },
          end: {
            line: 48,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 23
          },
          end: {
            line: 48,
            column: 27
          }
        }, {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 33
          }
        }],
        line: 48
      },
      "1": {
        loc: {
          start: {
            line: 55,
            column: 27
          },
          end: {
            line: 55,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 53
          },
          end: {
            line: 55,
            column: 68
          }
        }, {
          start: {
            line: 55,
            column: 71
          },
          end: {
            line: 55,
            column: 75
          }
        }],
        line: 55
      },
      "2": {
        loc: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        }, {
          start: {
            line: 72,
            column: 11
          },
          end: {
            line: 74,
            column: 5
          }
        }],
        line: 65
      },
      "3": {
        loc: {
          start: {
            line: 67,
            column: 6
          },
          end: {
            line: 71,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 6
          },
          end: {
            line: 71,
            column: 7
          }
        }, {
          start: {
            line: 69,
            column: 13
          },
          end: {
            line: 71,
            column: 7
          }
        }],
        line: 67
      },
      "4": {
        loc: {
          start: {
            line: 69,
            column: 13
          },
          end: {
            line: 71,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 13
          },
          end: {
            line: 71,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "5": {
        loc: {
          start: {
            line: 73,
            column: 21
          },
          end: {
            line: 73,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 44
          },
          end: {
            line: 73,
            column: 51
          }
        }, {
          start: {
            line: 73,
            column: 54
          },
          end: {
            line: 73,
            column: 63
          }
        }],
        line: 73
      },
      "6": {
        loc: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "7": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 79,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 79,
            column: 37
          }
        }, {
          start: {
            line: 79,
            column: 41
          },
          end: {
            line: 79,
            column: 67
          }
        }],
        line: 79
      },
      "8": {
        loc: {
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 110,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 110,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "9": {
        loc: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "10": {
        loc: {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "11": {
        loc: {
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "12": {
        loc: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "13": {
        loc: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "14": {
        loc: {
          start: {
            line: 187,
            column: 21
          },
          end: {
            line: 187,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 187,
            column: 57
          },
          end: {
            line: 187,
            column: 84
          }
        }, {
          start: {
            line: 187,
            column: 87
          },
          end: {
            line: 187,
            column: 92
          }
        }],
        line: 187
      },
      "15": {
        loc: {
          start: {
            line: 187,
            column: 22
          },
          end: {
            line: 187,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 22
          },
          end: {
            line: 187,
            column: 39
          }
        }, {
          start: {
            line: 187,
            column: 43
          },
          end: {
            line: 187,
            column: 53
          }
        }],
        line: 187
      },
      "16": {
        loc: {
          start: {
            line: 188,
            column: 11
          },
          end: {
            line: 188,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 188,
            column: 44
          },
          end: {
            line: 188,
            column: 80
          }
        }, {
          start: {
            line: 188,
            column: 83
          },
          end: {
            line: 188,
            column: 91
          }
        }],
        line: 188
      },
      "17": {
        loc: {
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 188,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 188,
            column: 22
          }
        }, {
          start: {
            line: 188,
            column: 26
          },
          end: {
            line: 188,
            column: 40
          }
        }],
        line: 188
      },
      "18": {
        loc: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 201,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 201,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "19": {
        loc: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 198,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 198,
            column: 12
          }
        }, {
          start: {
            line: 198,
            column: 16
          },
          end: {
            line: 198,
            column: 24
          }
        }],
        line: 198
      },
      "20": {
        loc: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "21": {
        loc: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "22": {
        loc: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 217,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 217,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "23": {
        loc: {
          start: {
            line: 216,
            column: 21
          },
          end: {
            line: 216,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 216,
            column: 21
          },
          end: {
            line: 216,
            column: 33
          }
        }, {
          start: {
            line: 216,
            column: 37
          },
          end: {
            line: 216,
            column: 42
          }
        }],
        line: 216
      },
      "24": {
        loc: {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "25": {
        loc: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        }, {
          start: {
            line: 226,
            column: 11
          },
          end: {
            line: 239,
            column: 5
          }
        }],
        line: 224
      },
      "26": {
        loc: {
          start: {
            line: 226,
            column: 11
          },
          end: {
            line: 239,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 11
          },
          end: {
            line: 239,
            column: 5
          }
        }, {
          start: {
            line: 228,
            column: 11
          },
          end: {
            line: 239,
            column: 5
          }
        }],
        line: 226
      },
      "27": {
        loc: {
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "28": {
        loc: {
          start: {
            line: 233,
            column: 10
          },
          end: {
            line: 235,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 10
          },
          end: {
            line: 235,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "29": {
        loc: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 252,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 252,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "30": {
        loc: {
          start: {
            line: 242,
            column: 6
          },
          end: {
            line: 244,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 6
          },
          end: {
            line: 244,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "31": {
        loc: {
          start: {
            line: 246,
            column: 6
          },
          end: {
            line: 251,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 6
          },
          end: {
            line: 251,
            column: 7
          }
        }, {
          start: {
            line: 249,
            column: 13
          },
          end: {
            line: 251,
            column: 7
          }
        }],
        line: 246
      },
      "32": {
        loc: {
          start: {
            line: 256,
            column: 6
          },
          end: {
            line: 258,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 6
          },
          end: {
            line: 258,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "33": {
        loc: {
          start: {
            line: 256,
            column: 10
          },
          end: {
            line: 256,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 10
          },
          end: {
            line: 256,
            column: 15
          }
        }, {
          start: {
            line: 256,
            column: 19
          },
          end: {
            line: 256,
            column: 23
          }
        }, {
          start: {
            line: 256,
            column: 27
          },
          end: {
            line: 256,
            column: 41
          }
        }],
        line: 256
      },
      "34": {
        loc: {
          start: {
            line: 260,
            column: 6
          },
          end: {
            line: 267,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 6
          },
          end: {
            line: 267,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "35": {
        loc: {
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        }, {
          start: {
            line: 264,
            column: 15
          },
          end: {
            line: 266,
            column: 9
          }
        }],
        line: 261
      },
      "36": {
        loc: {
          start: {
            line: 269,
            column: 6
          },
          end: {
            line: 276,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 6
          },
          end: {
            line: 276,
            column: 7
          }
        }, {
          start: {
            line: 271,
            column: 13
          },
          end: {
            line: 276,
            column: 7
          }
        }],
        line: 269
      },
      "37": {
        loc: {
          start: {
            line: 273,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "38": {
        loc: {
          start: {
            line: 277,
            column: 6
          },
          end: {
            line: 281,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 6
          },
          end: {
            line: 281,
            column: 7
          }
        }, {
          start: {
            line: 279,
            column: 13
          },
          end: {
            line: 281,
            column: 7
          }
        }],
        line: 277
      },
      "39": {
        loc: {
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 293,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 293,
            column: 9
          }
        }, {
          start: {
            line: 288,
            column: 15
          },
          end: {
            line: 293,
            column: 9
          }
        }],
        line: 286
      },
      "40": {
        loc: {
          start: {
            line: 288,
            column: 15
          },
          end: {
            line: 293,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 15
          },
          end: {
            line: 293,
            column: 9
          }
        }, {
          start: {
            line: 291,
            column: 15
          },
          end: {
            line: 293,
            column: 9
          }
        }],
        line: 288
      },
      "41": {
        loc: {
          start: {
            line: 299,
            column: 6
          },
          end: {
            line: 303,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 6
          },
          end: {
            line: 303,
            column: 7
          }
        }, {
          start: {
            line: 301,
            column: 13
          },
          end: {
            line: 303,
            column: 7
          }
        }],
        line: 299
      },
      "42": {
        loc: {
          start: {
            line: 314,
            column: 4
          },
          end: {
            line: 317,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 4
          },
          end: {
            line: 317,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "43": {
        loc: {
          start: {
            line: 326,
            column: 6
          },
          end: {
            line: 332,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 6
          },
          end: {
            line: 332,
            column: 7
          }
        }, {
          start: {
            line: 328,
            column: 13
          },
          end: {
            line: 332,
            column: 7
          }
        }],
        line: 326
      },
      "44": {
        loc: {
          start: {
            line: 326,
            column: 10
          },
          end: {
            line: 326,
            column: 19
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 326,
            column: 10
          },
          end: {
            line: 326,
            column: 13
          }
        }, {
          start: {
            line: 326,
            column: 17
          },
          end: {
            line: 326,
            column: 19
          }
        }],
        line: 326
      },
      "45": {
        loc: {
          start: {
            line: 328,
            column: 13
          },
          end: {
            line: 332,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 13
          },
          end: {
            line: 332,
            column: 7
          }
        }, {
          start: {
            line: 330,
            column: 13
          },
          end: {
            line: 332,
            column: 7
          }
        }],
        line: 328
      },
      "46": {
        loc: {
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 342,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 342,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 339
      },
      "47": {
        loc: {
          start: {
            line: 343,
            column: 11
          },
          end: {
            line: 343,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 343,
            column: 11
          },
          end: {
            line: 343,
            column: 15
          }
        }, {
          start: {
            line: 343,
            column: 19
          },
          end: {
            line: 343,
            column: 21
          }
        }],
        line: 343
      },
      "48": {
        loc: {
          start: {
            line: 354,
            column: 11
          },
          end: {
            line: 354,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 354,
            column: 11
          },
          end: {
            line: 354,
            column: 15
          }
        }, {
          start: {
            line: 354,
            column: 19
          },
          end: {
            line: 354,
            column: 21
          }
        }],
        line: 354
      },
      "49": {
        loc: {
          start: {
            line: 361,
            column: 8
          },
          end: {
            line: 365,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 361,
            column: 8
          },
          end: {
            line: 365,
            column: 9
          }
        }, {
          start: {
            line: 363,
            column: 15
          },
          end: {
            line: 365,
            column: 9
          }
        }],
        line: 361
      },
      "50": {
        loc: {
          start: {
            line: 361,
            column: 12
          },
          end: {
            line: 361,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 361,
            column: 12
          },
          end: {
            line: 361,
            column: 15
          }
        }, {
          start: {
            line: 361,
            column: 19
          },
          end: {
            line: 361,
            column: 31
          }
        }],
        line: 361
      },
      "51": {
        loc: {
          start: {
            line: 362,
            column: 17
          },
          end: {
            line: 362,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 362,
            column: 17
          },
          end: {
            line: 362,
            column: 20
          }
        }, {
          start: {
            line: 362,
            column: 24
          },
          end: {
            line: 362,
            column: 53
          }
        }],
        line: 362
      },
      "52": {
        loc: {
          start: {
            line: 368,
            column: 6
          },
          end: {
            line: 381,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 368,
            column: 6
          },
          end: {
            line: 381,
            column: 7
          }
        }, {
          start: {
            line: 377,
            column: 13
          },
          end: {
            line: 381,
            column: 7
          }
        }],
        line: 368
      },
      "53": {
        loc: {
          start: {
            line: 371,
            column: 10
          },
          end: {
            line: 375,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 371,
            column: 10
          },
          end: {
            line: 375,
            column: 11
          }
        }, {
          start: {
            line: 373,
            column: 17
          },
          end: {
            line: 375,
            column: 11
          }
        }],
        line: 371
      },
      "54": {
        loc: {
          start: {
            line: 400,
            column: 4
          },
          end: {
            line: 403,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 400,
            column: 4
          },
          end: {
            line: 403,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 400
      },
      "55": {
        loc: {
          start: {
            line: 400,
            column: 8
          },
          end: {
            line: 400,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 400,
            column: 8
          },
          end: {
            line: 400,
            column: 33
          }
        }, {
          start: {
            line: 400,
            column: 37
          },
          end: {
            line: 400,
            column: 60
          }
        }],
        line: 400
      },
      "56": {
        loc: {
          start: {
            line: 406,
            column: 4
          },
          end: {
            line: 408,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 4
          },
          end: {
            line: 408,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      },
      "57": {
        loc: {
          start: {
            line: 418,
            column: 15
          },
          end: {
            line: 418,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 418,
            column: 15
          },
          end: {
            line: 418,
            column: 18
          }
        }, {
          start: {
            line: 418,
            column: 22
          },
          end: {
            line: 418,
            column: 39
          }
        }],
        line: 418
      },
      "58": {
        loc: {
          start: {
            line: 434,
            column: 4
          },
          end: {
            line: 438,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 434,
            column: 4
          },
          end: {
            line: 438,
            column: 5
          }
        }, {
          start: {
            line: 436,
            column: 11
          },
          end: {
            line: 438,
            column: 5
          }
        }],
        line: 434
      },
      "59": {
        loc: {
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 434,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 434,
            column: 32
          }
        }, {
          start: {
            line: 434,
            column: 36
          },
          end: {
            line: 434,
            column: 55
          }
        }],
        line: 434
      },
      "60": {
        loc: {
          start: {
            line: 450,
            column: 24
          },
          end: {
            line: 450,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 450,
            column: 24
          },
          end: {
            line: 450,
            column: 41
          }
        }, {
          start: {
            line: 450,
            column: 45
          },
          end: {
            line: 450,
            column: 47
          }
        }],
        line: 450
      },
      "61": {
        loc: {
          start: {
            line: 456,
            column: 4
          },
          end: {
            line: 458,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 456,
            column: 4
          },
          end: {
            line: 458,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 456
      },
      "62": {
        loc: {
          start: {
            line: 464,
            column: 26
          },
          end: {
            line: 464,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 464,
            column: 26
          },
          end: {
            line: 464,
            column: 43
          }
        }, {
          start: {
            line: 464,
            column: 47
          },
          end: {
            line: 464,
            column: 49
          }
        }],
        line: 464
      },
      "63": {
        loc: {
          start: {
            line: 468,
            column: 4
          },
          end: {
            line: 470,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 468,
            column: 4
          },
          end: {
            line: 470,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 468
      },
      "64": {
        loc: {
          start: {
            line: 468,
            column: 8
          },
          end: {
            line: 468,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 468,
            column: 8
          },
          end: {
            line: 468,
            column: 18
          }
        }, {
          start: {
            line: 468,
            column: 22
          },
          end: {
            line: 468,
            column: 26
          }
        }],
        line: 468
      },
      "65": {
        loc: {
          start: {
            line: 490,
            column: 15
          },
          end: {
            line: 490,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 490,
            column: 15
          },
          end: {
            line: 490,
            column: 18
          }
        }, {
          start: {
            line: 490,
            column: 22
          },
          end: {
            line: 490,
            column: 39
          }
        }],
        line: 490
      },
      "66": {
        loc: {
          start: {
            line: 493,
            column: 4
          },
          end: {
            line: 509,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 493,
            column: 4
          },
          end: {
            line: 509,
            column: 5
          }
        }, {
          start: {
            line: 505,
            column: 11
          },
          end: {
            line: 509,
            column: 5
          }
        }],
        line: 493
      },
      "67": {
        loc: {
          start: {
            line: 494,
            column: 6
          },
          end: {
            line: 504,
            column: 7
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 495,
            column: 8
          },
          end: {
            line: 497,
            column: 16
          }
        }, {
          start: {
            line: 498,
            column: 8
          },
          end: {
            line: 500,
            column: 16
          }
        }, {
          start: {
            line: 501,
            column: 8
          },
          end: {
            line: 503,
            column: 89
          }
        }],
        line: 494
      },
      "68": {
        loc: {
          start: {
            line: 505,
            column: 11
          },
          end: {
            line: 509,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 505,
            column: 11
          },
          end: {
            line: 509,
            column: 5
          }
        }, {
          start: {
            line: 507,
            column: 11
          },
          end: {
            line: 509,
            column: 5
          }
        }],
        line: 505
      },
      "69": {
        loc: {
          start: {
            line: 513,
            column: 4
          },
          end: {
            line: 521,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 513,
            column: 4
          },
          end: {
            line: 521,
            column: 5
          }
        }, {
          start: {
            line: 519,
            column: 11
          },
          end: {
            line: 521,
            column: 5
          }
        }],
        line: 513
      },
      "70": {
        loc: {
          start: {
            line: 525,
            column: 4
          },
          end: {
            line: 534,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 525,
            column: 4
          },
          end: {
            line: 534,
            column: 5
          }
        }, {
          start: {
            line: 528,
            column: 11
          },
          end: {
            line: 534,
            column: 5
          }
        }],
        line: 525
      },
      "71": {
        loc: {
          start: {
            line: 528,
            column: 11
          },
          end: {
            line: 534,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 528,
            column: 11
          },
          end: {
            line: 534,
            column: 5
          }
        }, {
          start: {
            line: 531,
            column: 11
          },
          end: {
            line: 534,
            column: 5
          }
        }],
        line: 528
      },
      "72": {
        loc: {
          start: {
            line: 531,
            column: 11
          },
          end: {
            line: 534,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 531,
            column: 11
          },
          end: {
            line: 534,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 531
      },
      "73": {
        loc: {
          start: {
            line: 547,
            column: 6
          },
          end: {
            line: 551,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 547,
            column: 6
          },
          end: {
            line: 551,
            column: 7
          }
        }, {
          start: {
            line: 549,
            column: 13
          },
          end: {
            line: 551,
            column: 7
          }
        }],
        line: 547
      },
      "74": {
        loc: {
          start: {
            line: 554,
            column: 32
          },
          end: {
            line: 554,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 554,
            column: 32
          },
          end: {
            line: 554,
            column: 35
          }
        }, {
          start: {
            line: 554,
            column: 39
          },
          end: {
            line: 554,
            column: 41
          }
        }],
        line: 554
      },
      "75": {
        loc: {
          start: {
            line: 555,
            column: 18
          },
          end: {
            line: 555,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 555,
            column: 32
          },
          end: {
            line: 555,
            column: 54
          }
        }, {
          start: {
            line: 555,
            column: 57
          },
          end: {
            line: 555,
            column: 68
          }
        }],
        line: 555
      },
      "76": {
        loc: {
          start: {
            line: 565,
            column: 6
          },
          end: {
            line: 568,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 565,
            column: 6
          },
          end: {
            line: 568,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 565
      },
      "77": {
        loc: {
          start: {
            line: 565,
            column: 10
          },
          end: {
            line: 565,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 565,
            column: 10
          },
          end: {
            line: 565,
            column: 18
          }
        }, {
          start: {
            line: 565,
            column: 22
          },
          end: {
            line: 565,
            column: 24
          }
        }, {
          start: {
            line: 565,
            column: 28
          },
          end: {
            line: 565,
            column: 54
          }
        }],
        line: 565
      },
      "78": {
        loc: {
          start: {
            line: 570,
            column: 6
          },
          end: {
            line: 573,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 570,
            column: 6
          },
          end: {
            line: 573,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 570
      },
      "79": {
        loc: {
          start: {
            line: 575,
            column: 6
          },
          end: {
            line: 586,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 575,
            column: 6
          },
          end: {
            line: 586,
            column: 7
          }
        }, {
          start: {
            line: 581,
            column: 13
          },
          end: {
            line: 586,
            column: 7
          }
        }],
        line: 575
      },
      "80": {
        loc: {
          start: {
            line: 576,
            column: 8
          },
          end: {
            line: 580,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 576,
            column: 8
          },
          end: {
            line: 580,
            column: 9
          }
        }, {
          start: {
            line: 578,
            column: 15
          },
          end: {
            line: 580,
            column: 9
          }
        }],
        line: 576
      },
      "81": {
        loc: {
          start: {
            line: 582,
            column: 8
          },
          end: {
            line: 584,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 582,
            column: 8
          },
          end: {
            line: 584,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 582
      },
      "82": {
        loc: {
          start: {
            line: 589,
            column: 4
          },
          end: {
            line: 594,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 589,
            column: 4
          },
          end: {
            line: 594,
            column: 5
          }
        }, {
          start: {
            line: 592,
            column: 11
          },
          end: {
            line: 594,
            column: 5
          }
        }],
        line: 589
      },
      "83": {
        loc: {
          start: {
            line: 591,
            column: 8
          },
          end: {
            line: 591,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 591,
            column: 8
          },
          end: {
            line: 591,
            column: 14
          }
        }, {
          start: {
            line: 591,
            column: 18
          },
          end: {
            line: 591,
            column: 34
          }
        }],
        line: 591
      },
      "84": {
        loc: {
          start: {
            line: 600,
            column: 4
          },
          end: {
            line: 603,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 600,
            column: 4
          },
          end: {
            line: 603,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 600
      },
      "85": {
        loc: {
          start: {
            line: 605,
            column: 4
          },
          end: {
            line: 608,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 605,
            column: 4
          },
          end: {
            line: 608,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 605
      },
      "86": {
        loc: {
          start: {
            line: 614,
            column: 6
          },
          end: {
            line: 618,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 614,
            column: 6
          },
          end: {
            line: 618,
            column: 7
          }
        }, {
          start: {
            line: 616,
            column: 13
          },
          end: {
            line: 618,
            column: 7
          }
        }],
        line: 614
      },
      "87": {
        loc: {
          start: {
            line: 621,
            column: 18
          },
          end: {
            line: 621,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 621,
            column: 32
          },
          end: {
            line: 621,
            column: 50
          }
        }, {
          start: {
            line: 621,
            column: 53
          },
          end: {
            line: 621,
            column: 64
          }
        }],
        line: 621
      },
      "88": {
        loc: {
          start: {
            line: 625,
            column: 32
          },
          end: {
            line: 625,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 625,
            column: 32
          },
          end: {
            line: 625,
            column: 35
          }
        }, {
          start: {
            line: 625,
            column: 39
          },
          end: {
            line: 625,
            column: 41
          }
        }],
        line: 625
      },
      "89": {
        loc: {
          start: {
            line: 627,
            column: 6
          },
          end: {
            line: 631,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 627,
            column: 6
          },
          end: {
            line: 631,
            column: 7
          }
        }, {
          start: {
            line: 629,
            column: 13
          },
          end: {
            line: 631,
            column: 7
          }
        }],
        line: 627
      },
      "90": {
        loc: {
          start: {
            line: 633,
            column: 4
          },
          end: {
            line: 637,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 633,
            column: 4
          },
          end: {
            line: 637,
            column: 5
          }
        }, {
          start: {
            line: 635,
            column: 11
          },
          end: {
            line: 637,
            column: 5
          }
        }],
        line: 633
      },
      "91": {
        loc: {
          start: {
            line: 641,
            column: 4
          },
          end: {
            line: 643,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 641,
            column: 4
          },
          end: {
            line: 643,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 641
      },
      "92": {
        loc: {
          start: {
            line: 649,
            column: 4
          },
          end: {
            line: 700,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 649,
            column: 4
          },
          end: {
            line: 700,
            column: 5
          }
        }, {
          start: {
            line: 651,
            column: 11
          },
          end: {
            line: 700,
            column: 5
          }
        }],
        line: 649
      },
      "93": {
        loc: {
          start: {
            line: 678,
            column: 8
          },
          end: {
            line: 678,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 678,
            column: 8
          },
          end: {
            line: 678,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 678
      },
      "94": {
        loc: {
          start: {
            line: 679,
            column: 8
          },
          end: {
            line: 679,
            column: 76
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 679,
            column: 8
          },
          end: {
            line: 679,
            column: 76
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 679
      },
      "95": {
        loc: {
          start: {
            line: 680,
            column: 8
          },
          end: {
            line: 680,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 680,
            column: 8
          },
          end: {
            line: 680,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 680
      },
      "96": {
        loc: {
          start: {
            line: 683,
            column: 8
          },
          end: {
            line: 688,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 683,
            column: 8
          },
          end: {
            line: 688,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 683
      },
      "97": {
        loc: {
          start: {
            line: 686,
            column: 10
          },
          end: {
            line: 686,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 686,
            column: 10
          },
          end: {
            line: 686,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 686
      },
      "98": {
        loc: {
          start: {
            line: 687,
            column: 10
          },
          end: {
            line: 687,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 687,
            column: 10
          },
          end: {
            line: 687,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 687
      },
      "99": {
        loc: {
          start: {
            line: 711,
            column: 6
          },
          end: {
            line: 713,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 711,
            column: 6
          },
          end: {
            line: 713,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 711
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "98a1fc62da835de5f600a5c6ea9270f721b6940b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1trk1tgipr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1trk1tgipr();
const asap = (cov_1trk1tgipr().s[0]++, __webpack_require__(/*! asap */ 5236));
const waterfall = (cov_1trk1tgipr().s[1]++, __webpack_require__(/*! a-sync-waterfall */ 211));
const lib = (cov_1trk1tgipr().s[2]++, __webpack_require__(/*! ./lib */ 449));
const compiler = (cov_1trk1tgipr().s[3]++, __webpack_require__(/*! ./compiler */ 6933));
const filters = (cov_1trk1tgipr().s[4]++, __webpack_require__(/*! ./filters */ 1153));
const {
  FileSystemLoader,
  WebLoader,
  PrecompiledLoader
} = (cov_1trk1tgipr().s[5]++, __webpack_require__(/*! ./loaders */ 7494));
const tests = (cov_1trk1tgipr().s[6]++, __webpack_require__(/*! ./tests */ 8423));
const globals = (cov_1trk1tgipr().s[7]++, __webpack_require__(/*! ./globals */ 5790));
const {
  Obj,
  EmitterObj
} = (cov_1trk1tgipr().s[8]++, __webpack_require__(/*! ./object */ 891));
const globalRuntime = (cov_1trk1tgipr().s[9]++, __webpack_require__(/*! ./runtime */ 5434));
const {
  handleError,
  Frame
} = (cov_1trk1tgipr().s[10]++, globalRuntime);
const expressApp = (cov_1trk1tgipr().s[11]++, __webpack_require__(/*! ./express-app */ 804));

// If the user is using the async API, *always* call it
// asynchronously even if the template was synchronous.
function callbackAsap(cb, err, res) {
  cov_1trk1tgipr().f[0]++;
  cov_1trk1tgipr().s[12]++;
  asap(() => {
    cov_1trk1tgipr().f[1]++;
    cov_1trk1tgipr().s[13]++;
    cb(err, res);
  });
}

/**
 * A no-op template, for use with {% include ignore missing %}
 */
const noopTmplSrc = (cov_1trk1tgipr().s[14]++, {
  type: 'code',
  obj: {
    root(env, context, frame, runtime, cb) {
      cov_1trk1tgipr().f[2]++;
      cov_1trk1tgipr().s[15]++;
      try {
        cov_1trk1tgipr().s[16]++;
        cb(null, '');
      } catch (e) {
        cov_1trk1tgipr().s[17]++;
        cb(handleError(e, null, null));
      }
    }
  }
});
class Environment extends EmitterObj {
  init(loaders, opts) {
    cov_1trk1tgipr().f[3]++;
    cov_1trk1tgipr().s[18]++;
    // The dev flag determines the trace that'll be shown on errors.
    // If set to true, returns the full trace from the error point,
    // otherwise will return trace starting from Template.render
    // (the full trace from within nunjucks may confuse developers using
    //  the library)
    // defaults to false
    opts = this.opts = (cov_1trk1tgipr().b[0][0]++, opts) || (cov_1trk1tgipr().b[0][1]++, {});
    cov_1trk1tgipr().s[19]++;
    this.opts.dev = !!opts.dev;

    // The autoescape flag sets global autoescaping. If true,
    // every string variable will be escaped by default.
    // If false, strings can be manually escaped using the `escape` filter.
    // defaults to true
    cov_1trk1tgipr().s[20]++;
    this.opts.autoescape = opts.autoescape != null ? (cov_1trk1tgipr().b[1][0]++, opts.autoescape) : (cov_1trk1tgipr().b[1][1]++, true);

    // If true, this will make the system throw errors if trying
    // to output a null or undefined value
    cov_1trk1tgipr().s[21]++;
    this.opts.throwOnUndefined = !!opts.throwOnUndefined;
    cov_1trk1tgipr().s[22]++;
    this.opts.trimBlocks = !!opts.trimBlocks;
    cov_1trk1tgipr().s[23]++;
    this.opts.lstripBlocks = !!opts.lstripBlocks;
    cov_1trk1tgipr().s[24]++;
    this.loaders = [];
    cov_1trk1tgipr().s[25]++;
    if (!loaders) {
      cov_1trk1tgipr().b[2][0]++;
      cov_1trk1tgipr().s[26]++;
      // The filesystem loader is only available server-side
      if (FileSystemLoader) {
        cov_1trk1tgipr().b[3][0]++;
        cov_1trk1tgipr().s[27]++;
        this.loaders = [new FileSystemLoader('views')];
      } else {
        cov_1trk1tgipr().b[3][1]++;
        cov_1trk1tgipr().s[28]++;
        if (WebLoader) {
          cov_1trk1tgipr().b[4][0]++;
          cov_1trk1tgipr().s[29]++;
          this.loaders = [new WebLoader('/views')];
        } else {
          cov_1trk1tgipr().b[4][1]++;
        }
      }
    } else {
      cov_1trk1tgipr().b[2][1]++;
      cov_1trk1tgipr().s[30]++;
      this.loaders = lib.isArray(loaders) ? (cov_1trk1tgipr().b[5][0]++, loaders) : (cov_1trk1tgipr().b[5][1]++, [loaders]);
    }

    // It's easy to use precompiled templates: just include them
    // before you configure nunjucks and this will automatically
    // pick it up and use it
    cov_1trk1tgipr().s[31]++;
    if ((cov_1trk1tgipr().b[7][0]++, typeof window !== 'undefined') && (cov_1trk1tgipr().b[7][1]++, window.nunjucksPrecompiled)) {
      cov_1trk1tgipr().b[6][0]++;
      cov_1trk1tgipr().s[32]++;
      this.loaders.unshift(new PrecompiledLoader(window.nunjucksPrecompiled));
    } else {
      cov_1trk1tgipr().b[6][1]++;
    }
    cov_1trk1tgipr().s[33]++;
    this._initLoaders();
    cov_1trk1tgipr().s[34]++;
    this.globals = globals();
    cov_1trk1tgipr().s[35]++;
    this.filters = {};
    cov_1trk1tgipr().s[36]++;
    this.tests = {};
    cov_1trk1tgipr().s[37]++;
    this.asyncFilters = [];
    cov_1trk1tgipr().s[38]++;
    this.extensions = {};
    cov_1trk1tgipr().s[39]++;
    this.extensionsList = [];
    cov_1trk1tgipr().s[40]++;
    lib._entries(filters).forEach(_ref => {
      let [name, filter] = _ref;
      cov_1trk1tgipr().f[4]++;
      cov_1trk1tgipr().s[41]++;
      return this.addFilter(name, filter);
    });
    cov_1trk1tgipr().s[42]++;
    lib._entries(tests).forEach(_ref2 => {
      let [name, test] = _ref2;
      cov_1trk1tgipr().f[5]++;
      cov_1trk1tgipr().s[43]++;
      return this.addTest(name, test);
    });
  }
  _initLoaders() {
    cov_1trk1tgipr().f[6]++;
    cov_1trk1tgipr().s[44]++;
    this.loaders.forEach(loader => {
      cov_1trk1tgipr().f[7]++;
      cov_1trk1tgipr().s[45]++;
      // Caching and cache busting
      loader.cache = {};
      cov_1trk1tgipr().s[46]++;
      if (typeof loader.on === 'function') {
        cov_1trk1tgipr().b[8][0]++;
        cov_1trk1tgipr().s[47]++;
        loader.on('update', (name, fullname) => {
          cov_1trk1tgipr().f[8]++;
          cov_1trk1tgipr().s[48]++;
          loader.cache[name] = null;
          cov_1trk1tgipr().s[49]++;
          this.emit('update', name, fullname, loader);
        });
        cov_1trk1tgipr().s[50]++;
        loader.on('load', (name, source) => {
          cov_1trk1tgipr().f[9]++;
          cov_1trk1tgipr().s[51]++;
          this.emit('load', name, source, loader);
        });
      } else {
        cov_1trk1tgipr().b[8][1]++;
      }
    });
  }
  invalidateCache() {
    cov_1trk1tgipr().f[10]++;
    cov_1trk1tgipr().s[52]++;
    this.loaders.forEach(loader => {
      cov_1trk1tgipr().f[11]++;
      cov_1trk1tgipr().s[53]++;
      loader.cache = {};
    });
  }
  addExtension(name, extension) {
    cov_1trk1tgipr().f[12]++;
    cov_1trk1tgipr().s[54]++;
    extension.__name = name;
    cov_1trk1tgipr().s[55]++;
    this.extensions[name] = extension;
    cov_1trk1tgipr().s[56]++;
    this.extensionsList.push(extension);
    cov_1trk1tgipr().s[57]++;
    return this;
  }
  removeExtension(name) {
    cov_1trk1tgipr().f[13]++;
    var extension = (cov_1trk1tgipr().s[58]++, this.getExtension(name));
    cov_1trk1tgipr().s[59]++;
    if (!extension) {
      cov_1trk1tgipr().b[9][0]++;
      cov_1trk1tgipr().s[60]++;
      return;
    } else {
      cov_1trk1tgipr().b[9][1]++;
    }
    cov_1trk1tgipr().s[61]++;
    this.extensionsList = lib.without(this.extensionsList, extension);
    cov_1trk1tgipr().s[62]++;
    delete this.extensions[name];
  }
  getExtension(name) {
    cov_1trk1tgipr().f[14]++;
    cov_1trk1tgipr().s[63]++;
    return this.extensions[name];
  }
  hasExtension(name) {
    cov_1trk1tgipr().f[15]++;
    cov_1trk1tgipr().s[64]++;
    return !!this.extensions[name];
  }
  addGlobal(name, value) {
    cov_1trk1tgipr().f[16]++;
    cov_1trk1tgipr().s[65]++;
    this.globals[name] = value;
    cov_1trk1tgipr().s[66]++;
    return this;
  }
  getGlobal(name) {
    cov_1trk1tgipr().f[17]++;
    cov_1trk1tgipr().s[67]++;
    if (typeof this.globals[name] === 'undefined') {
      cov_1trk1tgipr().b[10][0]++;
      cov_1trk1tgipr().s[68]++;
      throw new Error('global not found: ' + name);
    } else {
      cov_1trk1tgipr().b[10][1]++;
    }
    cov_1trk1tgipr().s[69]++;
    return this.globals[name];
  }
  addFilter(name, func, async) {
    cov_1trk1tgipr().f[18]++;
    var wrapped = (cov_1trk1tgipr().s[70]++, func);
    cov_1trk1tgipr().s[71]++;
    if (async) {
      cov_1trk1tgipr().b[11][0]++;
      cov_1trk1tgipr().s[72]++;
      this.asyncFilters.push(name);
    } else {
      cov_1trk1tgipr().b[11][1]++;
    }
    cov_1trk1tgipr().s[73]++;
    this.filters[name] = wrapped;
    cov_1trk1tgipr().s[74]++;
    return this;
  }
  getFilter(name) {
    cov_1trk1tgipr().f[19]++;
    cov_1trk1tgipr().s[75]++;
    if (!this.filters[name]) {
      cov_1trk1tgipr().b[12][0]++;
      cov_1trk1tgipr().s[76]++;
      throw new Error('filter not found: ' + name);
    } else {
      cov_1trk1tgipr().b[12][1]++;
    }
    cov_1trk1tgipr().s[77]++;
    return this.filters[name];
  }
  addTest(name, func) {
    cov_1trk1tgipr().f[20]++;
    cov_1trk1tgipr().s[78]++;
    this.tests[name] = func;
    cov_1trk1tgipr().s[79]++;
    return this;
  }
  getTest(name) {
    cov_1trk1tgipr().f[21]++;
    cov_1trk1tgipr().s[80]++;
    if (!this.tests[name]) {
      cov_1trk1tgipr().b[13][0]++;
      cov_1trk1tgipr().s[81]++;
      throw new Error('test not found: ' + name);
    } else {
      cov_1trk1tgipr().b[13][1]++;
    }
    cov_1trk1tgipr().s[82]++;
    return this.tests[name];
  }
  resolveTemplate(loader, parentName, filename) {
    cov_1trk1tgipr().f[22]++;
    var isRelative = (cov_1trk1tgipr().s[83]++, (cov_1trk1tgipr().b[15][0]++, loader.isRelative) && (cov_1trk1tgipr().b[15][1]++, parentName) ? (cov_1trk1tgipr().b[14][0]++, loader.isRelative(filename)) : (cov_1trk1tgipr().b[14][1]++, false));
    cov_1trk1tgipr().s[84]++;
    return (cov_1trk1tgipr().b[17][0]++, isRelative) && (cov_1trk1tgipr().b[17][1]++, loader.resolve) ? (cov_1trk1tgipr().b[16][0]++, loader.resolve(parentName, filename)) : (cov_1trk1tgipr().b[16][1]++, filename);
  }
  getAsyncTemplate(name, eagerCompile, parentName, ignoreMissing, cb) {
    cov_1trk1tgipr().f[23]++;
    cov_1trk1tgipr().s[85]++;
    return this.getTemplate(name, eagerCompile, parentName, ignoreMissing, true, cb);
  }
  getTemplate(name, eagerCompile, parentName, ignoreMissing, isAsync, cb) {
    cov_1trk1tgipr().f[24]++;
    var that = (cov_1trk1tgipr().s[86]++, this);
    var tmpl = (cov_1trk1tgipr().s[87]++, null);
    cov_1trk1tgipr().s[88]++;
    if ((cov_1trk1tgipr().b[19][0]++, name) && (cov_1trk1tgipr().b[19][1]++, name.raw)) {
      cov_1trk1tgipr().b[18][0]++;
      cov_1trk1tgipr().s[89]++;
      // this fixes autoescape for templates referenced in symbols
      name = name.raw;
    } else {
      cov_1trk1tgipr().b[18][1]++;
    }
    cov_1trk1tgipr().s[90]++;
    if (lib.isFunction(isAsync)) {
      cov_1trk1tgipr().b[20][0]++;
      cov_1trk1tgipr().s[91]++;
      cb = isAsync;
      cov_1trk1tgipr().s[92]++;
      isAsync = false;
    } else {
      cov_1trk1tgipr().b[20][1]++;
    }
    cov_1trk1tgipr().s[93]++;
    if (lib.isFunction(ignoreMissing)) {
      cov_1trk1tgipr().b[21][0]++;
      cov_1trk1tgipr().s[94]++;
      cb = ignoreMissing;
      cov_1trk1tgipr().s[95]++;
      ignoreMissing = false;
    } else {
      cov_1trk1tgipr().b[21][1]++;
    }
    cov_1trk1tgipr().s[96]++;
    if (lib.isFunction(parentName)) {
      cov_1trk1tgipr().b[22][0]++;
      cov_1trk1tgipr().s[97]++;
      cb = parentName;
      cov_1trk1tgipr().s[98]++;
      parentName = null;
      cov_1trk1tgipr().s[99]++;
      eagerCompile = (cov_1trk1tgipr().b[23][0]++, eagerCompile) || (cov_1trk1tgipr().b[23][1]++, false);
    } else {
      cov_1trk1tgipr().b[22][1]++;
    }
    cov_1trk1tgipr().s[100]++;
    if (lib.isFunction(eagerCompile)) {
      cov_1trk1tgipr().b[24][0]++;
      cov_1trk1tgipr().s[101]++;
      cb = eagerCompile;
      cov_1trk1tgipr().s[102]++;
      eagerCompile = false;
    } else {
      cov_1trk1tgipr().b[24][1]++;
    }
    cov_1trk1tgipr().s[103]++;
    if (name instanceof Template) {
      cov_1trk1tgipr().b[25][0]++;
      cov_1trk1tgipr().s[104]++;
      tmpl = name;
    } else {
      cov_1trk1tgipr().b[25][1]++;
      cov_1trk1tgipr().s[105]++;
      if (typeof name !== 'string') {
        cov_1trk1tgipr().b[26][0]++;
        cov_1trk1tgipr().s[106]++;
        throw new Error('template names must be a string: ' + name);
      } else {
        cov_1trk1tgipr().b[26][1]++;
        cov_1trk1tgipr().s[107]++;
        for (let i = (cov_1trk1tgipr().s[108]++, 0); i < this.loaders.length; i++) {
          const loader = (cov_1trk1tgipr().s[109]++, this.loaders[i]);
          cov_1trk1tgipr().s[110]++;
          tmpl = loader.cache[this.resolveTemplate(loader, parentName, name)];
          cov_1trk1tgipr().s[111]++;
          if (tmpl) {
            cov_1trk1tgipr().b[27][0]++;
            cov_1trk1tgipr().s[112]++;
            if (tmpl.isAsync !== isAsync) {
              cov_1trk1tgipr().b[28][0]++;
              cov_1trk1tgipr().s[113]++;
              throw new Error('The same template can not be compiled in both async and sync mode');
            } else {
              cov_1trk1tgipr().b[28][1]++;
            }
            cov_1trk1tgipr().s[114]++;
            break;
          } else {
            cov_1trk1tgipr().b[27][1]++;
          }
        }
      }
    }
    cov_1trk1tgipr().s[115]++;
    if (tmpl) {
      cov_1trk1tgipr().b[29][0]++;
      cov_1trk1tgipr().s[116]++;
      if (eagerCompile) {
        cov_1trk1tgipr().b[30][0]++;
        cov_1trk1tgipr().s[117]++;
        tmpl.compile();
      } else {
        cov_1trk1tgipr().b[30][1]++;
      }
      cov_1trk1tgipr().s[118]++;
      if (cb) {
        cov_1trk1tgipr().b[31][0]++;
        cov_1trk1tgipr().s[119]++;
        cb(null, tmpl);
        cov_1trk1tgipr().s[120]++;
        return undefined;
      } else {
        cov_1trk1tgipr().b[31][1]++;
        cov_1trk1tgipr().s[121]++;
        return tmpl;
      }
    } else {
      cov_1trk1tgipr().b[29][1]++;
    }
    let syncResult;
    cov_1trk1tgipr().s[122]++;
    const createTemplate = (err, info) => {
      cov_1trk1tgipr().f[25]++;
      cov_1trk1tgipr().s[123]++;
      if ((cov_1trk1tgipr().b[33][0]++, !info) && (cov_1trk1tgipr().b[33][1]++, !err) && (cov_1trk1tgipr().b[33][2]++, !ignoreMissing)) {
        cov_1trk1tgipr().b[32][0]++;
        cov_1trk1tgipr().s[124]++;
        err = new Error('template not found: ' + name);
      } else {
        cov_1trk1tgipr().b[32][1]++;
      }
      cov_1trk1tgipr().s[125]++;
      if (err) {
        cov_1trk1tgipr().b[34][0]++;
        cov_1trk1tgipr().s[126]++;
        if (cb) {
          cov_1trk1tgipr().b[35][0]++;
          cov_1trk1tgipr().s[127]++;
          cb(err);
          cov_1trk1tgipr().s[128]++;
          return;
        } else {
          cov_1trk1tgipr().b[35][1]++;
          cov_1trk1tgipr().s[129]++;
          throw err;
        }
      } else {
        cov_1trk1tgipr().b[34][1]++;
      }
      let newTmpl;
      cov_1trk1tgipr().s[130]++;
      if (!info) {
        cov_1trk1tgipr().b[36][0]++;
        cov_1trk1tgipr().s[131]++;
        newTmpl = new Template(noopTmplSrc, this, '', eagerCompile, isAsync);
      } else {
        cov_1trk1tgipr().b[36][1]++;
        cov_1trk1tgipr().s[132]++;
        newTmpl = new Template(info.src, this, info.path, eagerCompile, isAsync);
        cov_1trk1tgipr().s[133]++;
        if (!info.noCache) {
          cov_1trk1tgipr().b[37][0]++;
          cov_1trk1tgipr().s[134]++;
          info.loader.cache[name] = newTmpl;
        } else {
          cov_1trk1tgipr().b[37][1]++;
        }
      }
      cov_1trk1tgipr().s[135]++;
      if (cb) {
        cov_1trk1tgipr().b[38][0]++;
        cov_1trk1tgipr().s[136]++;
        cb(null, newTmpl);
      } else {
        cov_1trk1tgipr().b[38][1]++;
        cov_1trk1tgipr().s[137]++;
        syncResult = newTmpl;
      }
    };
    cov_1trk1tgipr().s[138]++;
    lib.asyncIter(this.loaders, (loader, i, next, done) => {
      cov_1trk1tgipr().f[26]++;
      function handle(err, src) {
        cov_1trk1tgipr().f[27]++;
        cov_1trk1tgipr().s[139]++;
        if (err) {
          cov_1trk1tgipr().b[39][0]++;
          cov_1trk1tgipr().s[140]++;
          done(err);
        } else {
          cov_1trk1tgipr().b[39][1]++;
          cov_1trk1tgipr().s[141]++;
          if (src) {
            cov_1trk1tgipr().b[40][0]++;
            cov_1trk1tgipr().s[142]++;
            src.loader = loader;
            cov_1trk1tgipr().s[143]++;
            done(null, src);
          } else {
            cov_1trk1tgipr().b[40][1]++;
            cov_1trk1tgipr().s[144]++;
            next();
          }
        }
      }

      // Resolve name relative to parentName
      cov_1trk1tgipr().s[145]++;
      name = that.resolveTemplate(loader, parentName, name);
      cov_1trk1tgipr().s[146]++;
      if (loader.async) {
        cov_1trk1tgipr().b[41][0]++;
        cov_1trk1tgipr().s[147]++;
        loader.getSource(name, handle);
      } else {
        cov_1trk1tgipr().b[41][1]++;
        cov_1trk1tgipr().s[148]++;
        handle(null, loader.getSource(name));
      }
    }, createTemplate);
    cov_1trk1tgipr().s[149]++;
    return syncResult;
  }
  express(app) {
    cov_1trk1tgipr().f[28]++;
    cov_1trk1tgipr().s[150]++;
    return expressApp(this, app);
  }
  render(name, ctx, cb) {
    cov_1trk1tgipr().f[29]++;
    cov_1trk1tgipr().s[151]++;
    if (lib.isFunction(ctx)) {
      cov_1trk1tgipr().b[42][0]++;
      cov_1trk1tgipr().s[152]++;
      cb = ctx;
      cov_1trk1tgipr().s[153]++;
      ctx = null;
    } else {
      cov_1trk1tgipr().b[42][1]++;
    }

    // We support a synchronous API to make it easier to migrate
    // existing code to async. This works because if you don't do
    // anything async work, the whole thing is actually run
    // synchronously.
    let syncResult = (cov_1trk1tgipr().s[154]++, null);
    cov_1trk1tgipr().s[155]++;
    this.getTemplate(name, false, (err, tmpl) => {
      cov_1trk1tgipr().f[30]++;
      cov_1trk1tgipr().s[156]++;
      if ((cov_1trk1tgipr().b[44][0]++, err) && (cov_1trk1tgipr().b[44][1]++, cb)) {
        cov_1trk1tgipr().b[43][0]++;
        cov_1trk1tgipr().s[157]++;
        callbackAsap(cb, err);
      } else {
        cov_1trk1tgipr().b[43][1]++;
        cov_1trk1tgipr().s[158]++;
        if (err) {
          cov_1trk1tgipr().b[45][0]++;
          cov_1trk1tgipr().s[159]++;
          throw err;
        } else {
          cov_1trk1tgipr().b[45][1]++;
          cov_1trk1tgipr().s[160]++;
          syncResult = tmpl.render(ctx, cb);
        }
      }
    });
    cov_1trk1tgipr().s[161]++;
    return syncResult;
  }
  renderString(src, ctx, opts, cb) {
    cov_1trk1tgipr().f[31]++;
    cov_1trk1tgipr().s[162]++;
    if (lib.isFunction(opts)) {
      cov_1trk1tgipr().b[46][0]++;
      cov_1trk1tgipr().s[163]++;
      cb = opts;
      cov_1trk1tgipr().s[164]++;
      opts = {};
    } else {
      cov_1trk1tgipr().b[46][1]++;
    }
    cov_1trk1tgipr().s[165]++;
    opts = (cov_1trk1tgipr().b[47][0]++, opts) || (cov_1trk1tgipr().b[47][1]++, {});
    const tmpl = (cov_1trk1tgipr().s[166]++, new Template(src, this, opts.path));
    cov_1trk1tgipr().s[167]++;
    return tmpl.render(ctx, cb);
  }
  async renderAsync(templateName, ctx, parentFrame) {
    cov_1trk1tgipr().f[32]++;
    cov_1trk1tgipr().s[168]++;
    return this._asyncRender(templateName, ctx, true, parentFrame);
  }
  async renderStringAsync(src, ctx, opts) {
    cov_1trk1tgipr().f[33]++;
    cov_1trk1tgipr().s[169]++;
    opts = (cov_1trk1tgipr().b[48][0]++, opts) || (cov_1trk1tgipr().b[48][1]++, {});
    cov_1trk1tgipr().s[170]++;
    return this._asyncRender(src, ctx, false, opts);
  }
  async _asyncRender(template, ctx, namedTemplate, opts) {
    cov_1trk1tgipr().f[34]++;
    const result = (cov_1trk1tgipr().s[171]++, await new Promise((resolve, reject) => {
      cov_1trk1tgipr().f[35]++;
      cov_1trk1tgipr().s[172]++;
      let callback = (err, res) => {
        cov_1trk1tgipr().f[36]++;
        cov_1trk1tgipr().s[173]++;
        if ((cov_1trk1tgipr().b[50][0]++, err) || (cov_1trk1tgipr().b[50][1]++, res === null)) {
          cov_1trk1tgipr().b[49][0]++;
          cov_1trk1tgipr().s[174]++;
          reject((cov_1trk1tgipr().b[51][0]++, err) || (cov_1trk1tgipr().b[51][1]++, new Error('No render result')));
        } else {
          cov_1trk1tgipr().b[49][1]++;
          cov_1trk1tgipr().s[175]++;
          resolve(res);
        }
      };
      cov_1trk1tgipr().s[176]++;
      if (namedTemplate) {
        cov_1trk1tgipr().b[52][0]++;
        cov_1trk1tgipr().s[177]++;
        // render template object
        this.getTemplate(template, false, null, false, true, (err, tmpl) => {
          cov_1trk1tgipr().f[37]++;
          cov_1trk1tgipr().s[178]++;
          if (err) {
            cov_1trk1tgipr().b[53][0]++;
            cov_1trk1tgipr().s[179]++;
            callbackAsap(callback, err);
          } else {
            cov_1trk1tgipr().b[53][1]++;
            cov_1trk1tgipr().s[180]++;
            tmpl.render(ctx, callback);
          }
        });
      } else {
        cov_1trk1tgipr().b[52][1]++;
        // render template string
        const tmpl = (cov_1trk1tgipr().s[181]++, new AsyncTemplate(template, this, opts.path));
        cov_1trk1tgipr().s[182]++;
        tmpl.render(ctx, callback);
      }
    }));
    cov_1trk1tgipr().s[183]++;
    return result;
  }
  waterfall(tasks, callback, forceAsync) {
    cov_1trk1tgipr().f[38]++;
    cov_1trk1tgipr().s[184]++;
    return waterfall(tasks, callback, forceAsync);
  }
}
class AsyncState {
  constructor() {
    cov_1trk1tgipr().f[39]++;
    cov_1trk1tgipr().s[185]++;
    this.activeClosures = 0;
  }
  enterClosure() {
    cov_1trk1tgipr().f[40]++;
    cov_1trk1tgipr().s[186]++;
    this.activeClosures++;
  }
  leaveClosure() {
    cov_1trk1tgipr().f[41]++;
    cov_1trk1tgipr().s[187]++;
    this.activeClosures--;
    cov_1trk1tgipr().s[188]++;
    if ((cov_1trk1tgipr().b[55][0]++, this.activeClosures === 0) && (cov_1trk1tgipr().b[55][1]++, this.completionResolver)) {
      cov_1trk1tgipr().b[54][0]++;
      cov_1trk1tgipr().s[189]++;
      this.completionResolver();
      cov_1trk1tgipr().s[190]++;
      this.completionResolver = null;
    } else {
      cov_1trk1tgipr().b[54][1]++;
    }
  }
  async waitAllClosures() {
    cov_1trk1tgipr().f[42]++;
    cov_1trk1tgipr().s[191]++;
    if (this.activeClosures === 0) {
      cov_1trk1tgipr().b[56][0]++;
      cov_1trk1tgipr().s[192]++;
      return Promise.resolve();
    } else {
      cov_1trk1tgipr().b[56][1]++;
    }
    cov_1trk1tgipr().s[193]++;
    return new Promise(resolve => {
      cov_1trk1tgipr().f[43]++;
      cov_1trk1tgipr().s[194]++;
      this.completionResolver = resolve;
    });
  }
}
class Context extends Obj {
  init(ctx, blocks, env) {
    cov_1trk1tgipr().f[44]++;
    cov_1trk1tgipr().s[195]++;
    // Has to be tied to an environment so we can tap into its globals.
    this.env = (cov_1trk1tgipr().b[57][0]++, env) || (cov_1trk1tgipr().b[57][1]++, new Environment());

    // Make a duplicate of ctx
    cov_1trk1tgipr().s[196]++;
    this.ctx = lib.extend({}, ctx);
    cov_1trk1tgipr().s[197]++;
    this.blocks = {};
    cov_1trk1tgipr().s[198]++;
    this.exported = [];
    cov_1trk1tgipr().s[199]++;
    lib.keys(blocks).forEach(name => {
      cov_1trk1tgipr().f[45]++;
      cov_1trk1tgipr().s[200]++;
      this.addBlock(name, blocks[name]);
    });
  }
  lookup(name) {
    cov_1trk1tgipr().f[46]++;
    cov_1trk1tgipr().s[201]++;
    // This is one of the most called functions, so optimize for
    // the typical case where the name isn't in the globals
    if ((cov_1trk1tgipr().b[59][0]++, name in this.env.globals) && (cov_1trk1tgipr().b[59][1]++, !(name in this.ctx))) {
      cov_1trk1tgipr().b[58][0]++;
      cov_1trk1tgipr().s[202]++;
      return this.env.globals[name];
    } else {
      cov_1trk1tgipr().b[58][1]++;
      cov_1trk1tgipr().s[203]++;
      return this.ctx[name];
    }
  }
  setVariable(name, val) {
    cov_1trk1tgipr().f[47]++;
    cov_1trk1tgipr().s[204]++;
    this.ctx[name] = val;
  }
  getVariables() {
    cov_1trk1tgipr().f[48]++;
    cov_1trk1tgipr().s[205]++;
    return this.ctx;
  }
  addBlock(name, block) {
    cov_1trk1tgipr().f[49]++;
    cov_1trk1tgipr().s[206]++;
    this.blocks[name] = (cov_1trk1tgipr().b[60][0]++, this.blocks[name]) || (cov_1trk1tgipr().b[60][1]++, []);
    cov_1trk1tgipr().s[207]++;
    this.blocks[name].push(block);
    cov_1trk1tgipr().s[208]++;
    return this;
  }
  getBlock(name) {
    cov_1trk1tgipr().f[50]++;
    cov_1trk1tgipr().s[209]++;
    if (!this.blocks[name]) {
      cov_1trk1tgipr().b[61][0]++;
      cov_1trk1tgipr().s[210]++;
      throw new Error('unknown block "' + name + '"');
    } else {
      cov_1trk1tgipr().b[61][1]++;
    }
    cov_1trk1tgipr().s[211]++;
    return this.blocks[name][0];
  }
  getSuper(env, name, block, frame, runtime, cb) {
    cov_1trk1tgipr().f[51]++;
    var idx = (cov_1trk1tgipr().s[212]++, lib.indexOf((cov_1trk1tgipr().b[62][0]++, this.blocks[name]) || (cov_1trk1tgipr().b[62][1]++, []), block));
    var blk = (cov_1trk1tgipr().s[213]++, this.blocks[name][idx + 1]);
    var context = (cov_1trk1tgipr().s[214]++, this);
    cov_1trk1tgipr().s[215]++;
    if ((cov_1trk1tgipr().b[64][0]++, idx === -1) || (cov_1trk1tgipr().b[64][1]++, !blk)) {
      cov_1trk1tgipr().b[63][0]++;
      cov_1trk1tgipr().s[216]++;
      throw new Error('no super block available for "' + name + '"');
    } else {
      cov_1trk1tgipr().b[63][1]++;
    }
    cov_1trk1tgipr().s[217]++;
    blk(env, context, frame, runtime, cb);
  }
  addExport(name) {
    cov_1trk1tgipr().f[52]++;
    cov_1trk1tgipr().s[218]++;
    this.exported.push(name);
  }
  getExported() {
    cov_1trk1tgipr().f[53]++;
    var exported = (cov_1trk1tgipr().s[219]++, {});
    cov_1trk1tgipr().s[220]++;
    this.exported.forEach(name => {
      cov_1trk1tgipr().f[54]++;
      cov_1trk1tgipr().s[221]++;
      exported[name] = this.ctx[name];
    });
    cov_1trk1tgipr().s[222]++;
    return exported;
  }
}
class Template extends Obj {
  init(src, env, path, eagerCompile, isAsync) {
    cov_1trk1tgipr().f[55]++;
    cov_1trk1tgipr().s[223]++;
    this.env = (cov_1trk1tgipr().b[65][0]++, env) || (cov_1trk1tgipr().b[65][1]++, new Environment());
    cov_1trk1tgipr().s[224]++;
    this.isAsync = isAsync;
    cov_1trk1tgipr().s[225]++;
    if (lib.isObject(src)) {
      cov_1trk1tgipr().b[66][0]++;
      cov_1trk1tgipr().s[226]++;
      switch (src.type) {
        case 'code':
          cov_1trk1tgipr().b[67][0]++;
          cov_1trk1tgipr().s[227]++;
          this.tmplProps = src.obj;
          cov_1trk1tgipr().s[228]++;
          break;
        case 'string':
          cov_1trk1tgipr().b[67][1]++;
          cov_1trk1tgipr().s[229]++;
          this.tmplStr = src.obj;
          cov_1trk1tgipr().s[230]++;
          break;
        default:
          cov_1trk1tgipr().b[67][2]++;
          cov_1trk1tgipr().s[231]++;
          throw new Error(`Unexpected template object type ${src.type}; expected 'code', or 'string'`);
      }
    } else {
      cov_1trk1tgipr().b[66][1]++;
      cov_1trk1tgipr().s[232]++;
      if (lib.isString(src)) {
        cov_1trk1tgipr().b[68][0]++;
        cov_1trk1tgipr().s[233]++;
        this.tmplStr = src;
      } else {
        cov_1trk1tgipr().b[68][1]++;
        cov_1trk1tgipr().s[234]++;
        throw new Error('src must be a string or an object describing the source');
      }
    }
    cov_1trk1tgipr().s[235]++;
    this.path = path;
    cov_1trk1tgipr().s[236]++;
    if (eagerCompile) {
      cov_1trk1tgipr().b[69][0]++;
      cov_1trk1tgipr().s[237]++;
      try {
        cov_1trk1tgipr().s[238]++;
        this._compile();
      } catch (err) {
        cov_1trk1tgipr().s[239]++;
        throw lib._prettifyError(this.path, this.env.opts.dev, err);
      }
    } else {
      cov_1trk1tgipr().b[69][1]++;
      cov_1trk1tgipr().s[240]++;
      this.compiled = false;
    }
  }
  render(ctx, parentFrame, astate, cb) {
    cov_1trk1tgipr().f[56]++;
    cov_1trk1tgipr().s[241]++;
    if (typeof ctx === 'function') {
      cov_1trk1tgipr().b[70][0]++;
      cov_1trk1tgipr().s[242]++;
      cb = ctx;
      cov_1trk1tgipr().s[243]++;
      ctx = {};
    } else {
      cov_1trk1tgipr().b[70][1]++;
      cov_1trk1tgipr().s[244]++;
      if (typeof parentFrame === 'function') {
        cov_1trk1tgipr().b[71][0]++;
        cov_1trk1tgipr().s[245]++;
        cb = parentFrame;
        cov_1trk1tgipr().s[246]++;
        parentFrame = null;
      } else {
        cov_1trk1tgipr().b[71][1]++;
        cov_1trk1tgipr().s[247]++;
        if (typeof astate === 'function') {
          cov_1trk1tgipr().b[72][0]++;
          cov_1trk1tgipr().s[248]++;
          cb = astate;
          cov_1trk1tgipr().s[249]++;
          astate = null;
        } else {
          cov_1trk1tgipr().b[72][1]++;
        }
      }
    }

    // If there is a parent frame, we are being called from internal
    // code of another template, and the internal system
    // depends on the sync/async nature of the parent template
    // to be inherited, so force an async callback
    const forceAsync = (cov_1trk1tgipr().s[250]++, !parentFrame);

    // Catch compile errors for async rendering
    cov_1trk1tgipr().s[251]++;
    try {
      cov_1trk1tgipr().s[252]++;
      this.compile();
    } catch (e) {
      const err = (cov_1trk1tgipr().s[253]++, lib._prettifyError(this.path, this.env.opts.dev, e));
      cov_1trk1tgipr().s[254]++;
      if (cb) {
        cov_1trk1tgipr().b[73][0]++;
        cov_1trk1tgipr().s[255]++;
        return callbackAsap(cb, err);
      } else {
        cov_1trk1tgipr().b[73][1]++;
        cov_1trk1tgipr().s[256]++;
        throw err;
      }
    }
    const context = (cov_1trk1tgipr().s[257]++, new Context((cov_1trk1tgipr().b[74][0]++, ctx) || (cov_1trk1tgipr().b[74][1]++, {}), this.blocks, this.env));
    const frame = (cov_1trk1tgipr().s[258]++, parentFrame ? (cov_1trk1tgipr().b[75][0]++, parentFrame.push(true)) : (cov_1trk1tgipr().b[75][1]++, new Frame()));
    cov_1trk1tgipr().s[259]++;
    frame.topLevel = true;
    let syncResult = (cov_1trk1tgipr().s[260]++, null);
    let didError = (cov_1trk1tgipr().s[261]++, false);
    cov_1trk1tgipr().s[262]++;
    const callback = (err, res) => {
      cov_1trk1tgipr().f[57]++;
      cov_1trk1tgipr().s[263]++;
      // TODO: this is actually a bug in the compiled template (because waterfall
      // tasks are both not passing errors up the chain of callbacks AND are not
      // causing a return from the top-most render function). But fixing that
      // will require a more substantial change to the compiler.
      if ((cov_1trk1tgipr().b[77][0]++, didError) && (cov_1trk1tgipr().b[77][1]++, cb) && (cov_1trk1tgipr().b[77][2]++, typeof res !== 'undefined')) {
        cov_1trk1tgipr().b[76][0]++;
        cov_1trk1tgipr().s[264]++;
        // prevent multiple calls to cb
        return;
      } else {
        cov_1trk1tgipr().b[76][1]++;
      }
      cov_1trk1tgipr().s[265]++;
      if (err) {
        cov_1trk1tgipr().b[78][0]++;
        cov_1trk1tgipr().s[266]++;
        err = lib._prettifyError(this.path, this.env.opts.dev, err);
        cov_1trk1tgipr().s[267]++;
        didError = true;
      } else {
        cov_1trk1tgipr().b[78][1]++;
      }
      cov_1trk1tgipr().s[268]++;
      if (cb) {
        cov_1trk1tgipr().b[79][0]++;
        cov_1trk1tgipr().s[269]++;
        if (forceAsync) {
          cov_1trk1tgipr().b[80][0]++;
          cov_1trk1tgipr().s[270]++;
          callbackAsap(cb, err, res);
        } else {
          cov_1trk1tgipr().b[80][1]++;
          cov_1trk1tgipr().s[271]++;
          cb(err, res);
        }
      } else {
        cov_1trk1tgipr().b[79][1]++;
        cov_1trk1tgipr().s[272]++;
        if (err) {
          cov_1trk1tgipr().b[81][0]++;
          cov_1trk1tgipr().s[273]++;
          throw err;
        } else {
          cov_1trk1tgipr().b[81][1]++;
        }
        cov_1trk1tgipr().s[274]++;
        syncResult = res;
      }
    };
    cov_1trk1tgipr().s[275]++;
    if (this.isAsync) {
      cov_1trk1tgipr().b[82][0]++;
      cov_1trk1tgipr().s[276]++;
      this.rootRenderFunc(this.env, context, frame, globalRuntime, (cov_1trk1tgipr().b[83][0]++, astate) || (cov_1trk1tgipr().b[83][1]++, new AsyncState()), !!astate, callback);
    } else {
      cov_1trk1tgipr().b[82][1]++;
      cov_1trk1tgipr().s[277]++;
      this.rootRenderFunc(this.env, context, frame, globalRuntime, callback);
    }
    cov_1trk1tgipr().s[278]++;
    return syncResult;
  }
  getExported(ctx, parentFrame, cb) {
    cov_1trk1tgipr().f[58]++;
    cov_1trk1tgipr().s[279]++;
    // eslint-disable-line consistent-return
    if (typeof ctx === 'function') {
      cov_1trk1tgipr().b[84][0]++;
      cov_1trk1tgipr().s[280]++;
      cb = ctx;
      cov_1trk1tgipr().s[281]++;
      ctx = {};
    } else {
      cov_1trk1tgipr().b[84][1]++;
    }
    cov_1trk1tgipr().s[282]++;
    if (typeof parentFrame === 'function') {
      cov_1trk1tgipr().b[85][0]++;
      cov_1trk1tgipr().s[283]++;
      cb = parentFrame;
      cov_1trk1tgipr().s[284]++;
      parentFrame = null;
    } else {
      cov_1trk1tgipr().b[85][1]++;
    }

    // Catch compile errors for async rendering
    cov_1trk1tgipr().s[285]++;
    try {
      cov_1trk1tgipr().s[286]++;
      this.compile();
    } catch (e) {
      cov_1trk1tgipr().s[287]++;
      if (cb) {
        cov_1trk1tgipr().b[86][0]++;
        cov_1trk1tgipr().s[288]++;
        return cb(e);
      } else {
        cov_1trk1tgipr().b[86][1]++;
        cov_1trk1tgipr().s[289]++;
        throw e;
      }
    }
    const frame = (cov_1trk1tgipr().s[290]++, parentFrame ? (cov_1trk1tgipr().b[87][0]++, parentFrame.push()) : (cov_1trk1tgipr().b[87][1]++, new Frame()));
    cov_1trk1tgipr().s[291]++;
    frame.topLevel = true;

    // Run the rootRenderFunc to populate the context with exported vars
    const context = (cov_1trk1tgipr().s[292]++, new Context((cov_1trk1tgipr().b[88][0]++, ctx) || (cov_1trk1tgipr().b[88][1]++, {}), this.blocks, this.env));
    cov_1trk1tgipr().s[293]++;
    const callback = err => {
      cov_1trk1tgipr().f[59]++;
      cov_1trk1tgipr().s[294]++;
      if (err) {
        cov_1trk1tgipr().b[89][0]++;
        cov_1trk1tgipr().s[295]++;
        cb(err, null);
      } else {
        cov_1trk1tgipr().b[89][1]++;
        cov_1trk1tgipr().s[296]++;
        cb(null, context.getExported());
      }
    };
    cov_1trk1tgipr().s[297]++;
    if (this.isAsync) {
      cov_1trk1tgipr().b[90][0]++;
      cov_1trk1tgipr().s[298]++;
      this.rootRenderFunc(this.env, context, frame, globalRuntime, new AsyncState(), callback);
    } else {
      cov_1trk1tgipr().b[90][1]++;
      cov_1trk1tgipr().s[299]++;
      this.rootRenderFunc(this.env, context, frame, globalRuntime, callback);
    }
  }
  compile() {
    cov_1trk1tgipr().f[60]++;
    cov_1trk1tgipr().s[300]++;
    if (!this.compiled) {
      cov_1trk1tgipr().b[91][0]++;
      cov_1trk1tgipr().s[301]++;
      this._compile();
    } else {
      cov_1trk1tgipr().b[91][1]++;
    }
  }
  _compile() {
    cov_1trk1tgipr().f[61]++;
    var props;
    cov_1trk1tgipr().s[302]++;
    if (this.tmplProps) {
      cov_1trk1tgipr().b[92][0]++;
      cov_1trk1tgipr().s[303]++;
      props = this.tmplProps;
    } else {
      cov_1trk1tgipr().b[92][1]++;
      const source = (cov_1trk1tgipr().s[304]++, compiler.compile(this.tmplStr, this.env.asyncFilters, this.env.extensionsList, this.path, this.isAsync, this.env.opts));
      let func;
      cov_1trk1tgipr().s[305]++;
      try {
        cov_1trk1tgipr().s[306]++;
        func = new Function(source); // eslint-disable-line no-new-func
      } catch (e) {
        cov_1trk1tgipr().s[307]++;
        console.log('Error compiling:\n' + source); // eslint-disable-line no-console
        cov_1trk1tgipr().s[308]++;
        console.log('Error creating function:'); // eslint-disable-line no-console
        cov_1trk1tgipr().s[309]++;
        console.log('- Name:', e.name); // eslint-disable-line no-console
        cov_1trk1tgipr().s[310]++;
        console.log('- Message:', e.message); // eslint-disable-line no-console
        cov_1trk1tgipr().s[311]++;
        console.log('- Stack:', e.stack); // eslint-disable-line no-console
        cov_1trk1tgipr().s[312]++;
        console.log('Test environment info:'); // eslint-disable-line no-console
        cov_1trk1tgipr().s[313]++;
        console.log('UserAgent:', navigator.userAgent); // eslint-disable-line no-console
        /* console.log("JavaScript features:", {
          let: typeof let !== 'undefined',
          const: typeof const !== 'undefined',
          arrow: typeof (() => {}) === 'function'
        }); */
        // Additional properties that might e available
        cov_1trk1tgipr().s[314]++;
        if (e.lineNumber) {
          cov_1trk1tgipr().b[93][0]++;
          cov_1trk1tgipr().s[315]++;
          console.log('- Line Number:', e.lineNumber);
        } else {
          cov_1trk1tgipr().b[93][1]++;
        } // eslint-disable-line no-console
        cov_1trk1tgipr().s[316]++;
        if (e.columnNumber) {
          cov_1trk1tgipr().b[94][0]++;
          cov_1trk1tgipr().s[317]++;
          console.log('- Column Number:', e.columnNumber);
        } else {
          cov_1trk1tgipr().b[94][1]++;
        } // eslint-disable-line no-console
        cov_1trk1tgipr().s[318]++;
        if (e.fileName) {
          cov_1trk1tgipr().b[95][0]++;
          cov_1trk1tgipr().s[319]++;
          console.log('- File Name:', e.fileName);
        } else {
          cov_1trk1tgipr().b[95][1]++;
        } // eslint-disable-line no-console

        // If it's a syntax error, it might have additional properties
        cov_1trk1tgipr().s[320]++;
        if (e instanceof SyntaxError) {
          cov_1trk1tgipr().b[96][0]++;
          cov_1trk1tgipr().s[321]++;
          console.log('- Is Syntax Error: Yes'); // eslint-disable-line no-console
          // Some environments provide these for SyntaxErrors
          cov_1trk1tgipr().s[322]++;
          if (e.line) {
            cov_1trk1tgipr().b[97][0]++;
            cov_1trk1tgipr().s[323]++;
            console.log('- Line:', e.line);
          } else {
            cov_1trk1tgipr().b[97][1]++;
          } // eslint-disable-line no-console
          cov_1trk1tgipr().s[324]++;
          if (e.column) {
            cov_1trk1tgipr().b[98][0]++;
            cov_1trk1tgipr().s[325]++;
            console.log('- Column:', e.column);
          } else {
            cov_1trk1tgipr().b[98][1]++;
          } // eslint-disable-line no-console
        } else {
          cov_1trk1tgipr().b[96][1]++;
        }

        // Log the source that caused the error
        cov_1trk1tgipr().s[326]++;
        console.log('- Problematic source:', source); // eslint-disable-line no-console

        // Log the current environment
        cov_1trk1tgipr().s[327]++;
        console.log('- Node.js version:', process.version); // eslint-disable-line no-console
        cov_1trk1tgipr().s[328]++;
        console.log('- V8 version:', process.versions.v8); // eslint-disable-line no-console
        cov_1trk1tgipr().s[329]++;
        throw new Error('Error trying to compile ' + this.path + ' ' + e.message);
      }
      cov_1trk1tgipr().s[330]++;
      props = func();
    }
    cov_1trk1tgipr().s[331]++;
    this.blocks = this._getBlocks(props);
    cov_1trk1tgipr().s[332]++;
    this.rootRenderFunc = props.root;
    cov_1trk1tgipr().s[333]++;
    this.compiled = true;
  }
  _getBlocks(props) {
    cov_1trk1tgipr().f[62]++;
    var blocks = (cov_1trk1tgipr().s[334]++, {});
    cov_1trk1tgipr().s[335]++;
    lib.keys(props).forEach(k => {
      cov_1trk1tgipr().f[63]++;
      cov_1trk1tgipr().s[336]++;
      if (k.slice(0, 2) === 'b_') {
        cov_1trk1tgipr().b[99][0]++;
        cov_1trk1tgipr().s[337]++;
        blocks[k.slice(2)] = props[k];
      } else {
        cov_1trk1tgipr().b[99][1]++;
      }
    });
    cov_1trk1tgipr().s[338]++;
    return blocks;
  }
}
class AsyncTemplate extends Template {
  init(src, env, path, eagerCompile) {
    cov_1trk1tgipr().f[64]++;
    cov_1trk1tgipr().s[339]++;
    super.init(src, env, path, eagerCompile, true);
  }
}
cov_1trk1tgipr().s[340]++;
module.exports = {
  Environment: Environment,
  Template: Template,
  AsyncTemplate: AsyncTemplate
};

/***/ }),

/***/ 804:
/*!*************************************!*\
  !*** ./nunjucks/src/express-app.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

function cov_1he4mr49qp() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\express-app.js";
  var hash = "1da8db417fa8787da4f69ddd4b117717822c5539";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\express-app.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 13
        },
        end: {
          line: 1,
          column: 28
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 24,
          column: 2
        }
      },
      "2": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 5,
          column: 21
        }
      },
      "3": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 21
        }
      },
      "4": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 44
        }
      },
      "5": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 34
        }
      },
      "6": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 11,
          column: 5
        }
      },
      "7": {
        start: {
          line: 10,
          column: 6
        },
        end: {
          line: 10,
          column: 88
        }
      },
      "8": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 14,
          column: 5
        }
      },
      "9": {
        start: {
          line: 13,
          column: 6
        },
        end: {
          line: 13,
          column: 96
        }
      },
      "10": {
        start: {
          line: 17,
          column: 2
        },
        end: {
          line: 19,
          column: 4
        }
      },
      "11": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 36
        }
      },
      "12": {
        start: {
          line: 21,
          column: 2
        },
        end: {
          line: 21,
          column: 32
        }
      },
      "13": {
        start: {
          line: 22,
          column: 2
        },
        end: {
          line: 22,
          column: 30
        }
      },
      "14": {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 23,
          column: 13
        }
      }
    },
    fnMap: {
      "0": {
        name: "express",
        decl: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 33
          }
        },
        loc: {
          start: {
            line: 3,
            column: 44
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 3
      },
      "1": {
        name: "NunjucksView",
        decl: {
          start: {
            line: 4,
            column: 11
          },
          end: {
            line: 4,
            column: 23
          }
        },
        loc: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 15,
            column: 3
          }
        },
        line: 4
      },
      "2": {
        name: "render",
        decl: {
          start: {
            line: 17,
            column: 43
          },
          end: {
            line: 17,
            column: 49
          }
        },
        loc: {
          start: {
            line: 17,
            column: 60
          },
          end: {
            line: 19,
            column: 3
          }
        },
        line: 17
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 17
          }
        }, {
          start: {
            line: 9,
            column: 21
          },
          end: {
            line: 9,
            column: 40
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "3": {
        loc: {
          start: {
            line: 13,
            column: 32
          },
          end: {
            line: 13,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 64
          },
          end: {
            line: 13,
            column: 67
          }
        }, {
          start: {
            line: 13,
            column: 70
          },
          end: {
            line: 13,
            column: 72
          }
        }],
        line: 13
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1da8db417fa8787da4f69ddd4b117717822c5539"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1he4mr49qp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1he4mr49qp();
const path = (cov_1he4mr49qp().s[0]++, __webpack_require__(/*! path */ 7975));
cov_1he4mr49qp().s[1]++;
module.exports = function express(env, app) {
  cov_1he4mr49qp().f[0]++;
  function NunjucksView(name, opts) {
    cov_1he4mr49qp().f[1]++;
    cov_1he4mr49qp().s[2]++;
    this.name = name;
    cov_1he4mr49qp().s[3]++;
    this.path = name;
    cov_1he4mr49qp().s[4]++;
    this.defaultEngine = opts.defaultEngine;
    cov_1he4mr49qp().s[5]++;
    this.ext = path.extname(name);
    cov_1he4mr49qp().s[6]++;
    if ((cov_1he4mr49qp().b[1][0]++, !this.ext) && (cov_1he4mr49qp().b[1][1]++, !this.defaultEngine)) {
      cov_1he4mr49qp().b[0][0]++;
      cov_1he4mr49qp().s[7]++;
      throw new Error('No default engine was specified and no extension was provided.');
    } else {
      cov_1he4mr49qp().b[0][1]++;
    }
    cov_1he4mr49qp().s[8]++;
    if (!this.ext) {
      cov_1he4mr49qp().b[2][0]++;
      cov_1he4mr49qp().s[9]++;
      this.name += this.ext = (this.defaultEngine[0] !== '.' ? (cov_1he4mr49qp().b[3][0]++, '.') : (cov_1he4mr49qp().b[3][1]++, '')) + this.defaultEngine;
    } else {
      cov_1he4mr49qp().b[2][1]++;
    }
  }
  cov_1he4mr49qp().s[10]++;
  NunjucksView.prototype.render = function render(opts, cb) {
    cov_1he4mr49qp().f[2]++;
    cov_1he4mr49qp().s[11]++;
    env.render(this.name, opts, cb);
  };
  cov_1he4mr49qp().s[12]++;
  app.set('view', NunjucksView);
  cov_1he4mr49qp().s[13]++;
  app.set('nunjucksEnv', env);
  cov_1he4mr49qp().s[14]++;
  return env;
};

/***/ }),

/***/ 1153:
/*!*********************************!*\
  !*** ./nunjucks/src/filters.js ***!
  \*********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function cov_199zi7e4qy() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\filters.js";
  var hash = "6812549a0e922a75e71f301d414591238022d4fa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\filters.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 10
        },
        end: {
          line: 3,
          column: 26
        }
      },
      "1": {
        start: {
          line: 4,
          column: 8
        },
        end: {
          line: 4,
          column: 28
        }
      },
      "2": {
        start: {
          line: 6,
          column: 14
        },
        end: {
          line: 6,
          column: 33
        }
      },
      "3": {
        start: {
          line: 9,
          column: 2
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "4": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 24
        }
      },
      "5": {
        start: {
          line: 12,
          column: 2
        },
        end: {
          line: 12,
          column: 15
        }
      },
      "6": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 23
        }
      },
      "7": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 18,
          column: 21
        }
      },
      "8": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 14
        }
      },
      "9": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 14
        }
      },
      "10": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 33,
          column: 3
        }
      },
      "11": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "12": {
        start: {
          line: 28,
          column: 6
        },
        end: {
          line: 28,
          column: 20
        }
      },
      "13": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 29,
          column: 15
        }
      },
      "14": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 21
        }
      },
      "15": {
        start: {
          line: 35,
          column: 2
        },
        end: {
          line: 43,
          column: 3
        }
      },
      "16": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "17": {
        start: {
          line: 37,
          column: 6
        },
        end: {
          line: 39,
          column: 7
        }
      },
      "18": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 27
        }
      },
      "19": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 18
        }
      },
      "20": {
        start: {
          line: 45,
          column: 2
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "21": {
        start: {
          line: 48,
          column: 0
        },
        end: {
          line: 48,
          column: 22
        }
      },
      "22": {
        start: {
          line: 51,
          column: 2
        },
        end: {
          line: 51,
          column: 27
        }
      },
      "23": {
        start: {
          line: 52,
          column: 14
        },
        end: {
          line: 52,
          column: 31
        }
      },
      "24": {
        start: {
          line: 53,
          column: 2
        },
        end: {
          line: 53,
          column: 73
        }
      },
      "25": {
        start: {
          line: 56,
          column: 0
        },
        end: {
          line: 56,
          column: 32
        }
      },
      "26": {
        start: {
          line: 59,
          column: 2
        },
        end: {
          line: 59,
          column: 27
        }
      },
      "27": {
        start: {
          line: 60,
          column: 2
        },
        end: {
          line: 60,
          column: 22
        }
      },
      "28": {
        start: {
          line: 62,
          column: 2
        },
        end: {
          line: 64,
          column: 3
        }
      },
      "29": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 15
        }
      },
      "30": {
        start: {
          line: 66,
          column: 17
        },
        end: {
          line: 66,
          column: 35
        }
      },
      "31": {
        start: {
          line: 67,
          column: 14
        },
        end: {
          line: 67,
          column: 58
        }
      },
      "32": {
        start: {
          line: 68,
          column: 15
        },
        end: {
          line: 68,
          column: 42
        }
      },
      "33": {
        start: {
          line: 69,
          column: 2
        },
        end: {
          line: 69,
          column: 47
        }
      },
      "34": {
        start: {
          line: 72,
          column: 0
        },
        end: {
          line: 72,
          column: 24
        }
      },
      "35": {
        start: {
          line: 75,
          column: 2
        },
        end: {
          line: 79,
          column: 3
        }
      },
      "36": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 22
        }
      },
      "37": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 78,
          column: 43
        }
      },
      "38": {
        start: {
          line: 83,
          column: 0
        },
        end: {
          line: 83,
          column: 30
        }
      },
      "39": {
        start: {
          line: 86,
          column: 2
        },
        end: {
          line: 88,
          column: 3
        }
      },
      "40": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 74
        }
      },
      "41": {
        start: {
          line: 90,
          column: 14
        },
        end: {
          line: 90,
          column: 16
        }
      },
      "42": {
        start: {
          line: 92,
          column: 2
        },
        end: {
          line: 94,
          column: 3
        }
      },
      "43": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 28
        }
      },
      "44": {
        start: {
          line: 97,
          column: 2
        },
        end: {
          line: 104,
          column: 3
        }
      },
      "45": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 11
        }
      },
      "46": {
        start: {
          line: 99,
          column: 9
        },
        end: {
          line: 104,
          column: 3
        }
      },
      "47": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 100,
          column: 11
        }
      },
      "48": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 103,
          column: 67
        }
      },
      "49": {
        start: {
          line: 106,
          column: 2
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "50": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 18
        }
      },
      "51": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 18
        }
      },
      "52": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "53": {
        start: {
          line: 111,
          column: 6
        },
        end: {
          line: 113,
          column: 7
        }
      },
      "54": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 28
        }
      },
      "55": {
        start: {
          line: 114,
          column: 6
        },
        end: {
          line: 116,
          column: 7
        }
      },
      "56": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 28
        }
      },
      "57": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 119,
          column: 42
        }
      },
      "58": {
        start: {
          line: 122,
          column: 2
        },
        end: {
          line: 122,
          column: 15
        }
      },
      "59": {
        start: {
          line: 125,
          column: 0
        },
        end: {
          line: 125,
          column: 28
        }
      },
      "60": {
        start: {
          line: 128,
          column: 2
        },
        end: {
          line: 128,
          column: 43
        }
      },
      "61": {
        start: {
          line: 131,
          column: 0
        },
        end: {
          line: 131,
          column: 20
        }
      },
      "62": {
        start: {
          line: 134,
          column: 2
        },
        end: {
          line: 136,
          column: 3
        }
      },
      "63": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 135,
          column: 15
        }
      },
      "64": {
        start: {
          line: 137,
          column: 2
        },
        end: {
          line: 137,
          column: 55
        }
      },
      "65": {
        start: {
          line: 138,
          column: 2
        },
        end: {
          line: 138,
          column: 48
        }
      },
      "66": {
        start: {
          line: 141,
          column: 0
        },
        end: {
          line: 141,
          column: 24
        }
      },
      "67": {
        start: {
          line: 144,
          column: 2
        },
        end: {
          line: 146,
          column: 3
        }
      },
      "68": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 145,
          column: 15
        }
      },
      "69": {
        start: {
          line: 147,
          column: 2
        },
        end: {
          line: 147,
          column: 55
        }
      },
      "70": {
        start: {
          line: 148,
          column: 2
        },
        end: {
          line: 148,
          column: 36
        }
      },
      "71": {
        start: {
          line: 151,
          column: 0
        },
        end: {
          line: 151,
          column: 20
        }
      },
      "72": {
        start: {
          line: 154,
          column: 2
        },
        end: {
          line: 154,
          column: 16
        }
      },
      "73": {
        start: {
          line: 157,
          column: 0
        },
        end: {
          line: 157,
          column: 22
        }
      },
      "74": {
        start: {
          line: 160,
          column: 2
        },
        end: {
          line: 160,
          column: 55
        }
      },
      "75": {
        start: {
          line: 161,
          column: 2
        },
        end: {
          line: 161,
          column: 48
        }
      },
      "76": {
        start: {
          line: 164,
          column: 0
        },
        end: {
          line: 164,
          column: 34
        }
      },
      "77": {
        start: {
          line: 167,
          column: 2
        },
        end: {
          line: 167,
          column: 64
        }
      },
      "78": {
        start: {
          line: 170,
          column: 0
        },
        end: {
          line: 170,
          column: 26
        }
      },
      "79": {
        start: {
          line: 173,
          column: 2
        },
        end: {
          line: 173,
          column: 27
        }
      },
      "80": {
        start: {
          line: 175,
          column: 2
        },
        end: {
          line: 177,
          column: 3
        }
      },
      "81": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 176,
          column: 14
        }
      },
      "82": {
        start: {
          line: 179,
          column: 2
        },
        end: {
          line: 179,
          column: 21
        }
      },
      "83": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 181,
          column: 31
        }
      },
      "84": {
        start: {
          line: 182,
          column: 13
        },
        end: {
          line: 182,
          column: 35
        }
      },
      "85": {
        start: {
          line: 184,
          column: 14
        },
        end: {
          line: 186,
          column: 15
        }
      },
      "86": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 185,
          column: 55
        }
      },
      "87": {
        start: {
          line: 188,
          column: 2
        },
        end: {
          line: 188,
          column: 34
        }
      },
      "88": {
        start: {
          line: 191,
          column: 0
        },
        end: {
          line: 191,
          column: 24
        }
      },
      "89": {
        start: {
          line: 194,
          column: 2
        },
        end: {
          line: 194,
          column: 18
        }
      },
      "90": {
        start: {
          line: 196,
          column: 2
        },
        end: {
          line: 198,
          column: 3
        }
      },
      "91": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 197,
          column: 39
        }
      },
      "92": {
        start: {
          line: 197,
          column: 30
        },
        end: {
          line: 197,
          column: 37
        }
      },
      "93": {
        start: {
          line: 200,
          column: 2
        },
        end: {
          line: 200,
          column: 23
        }
      },
      "94": {
        start: {
          line: 203,
          column: 0
        },
        end: {
          line: 203,
          column: 20
        }
      },
      "95": {
        start: {
          line: 206,
          column: 2
        },
        end: {
          line: 206,
          column: 29
        }
      },
      "96": {
        start: {
          line: 209,
          column: 0
        },
        end: {
          line: 209,
          column: 20
        }
      },
      "97": {
        start: {
          line: 212,
          column: 14
        },
        end: {
          line: 212,
          column: 32
        }
      },
      "98": {
        start: {
          line: 214,
          column: 2
        },
        end: {
          line: 227,
          column: 3
        }
      },
      "99": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 221,
          column: 5
        }
      },
      "100": {
        start: {
          line: 220,
          column: 6
        },
        end: {
          line: 220,
          column: 24
        }
      },
      "101": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 225,
          column: 5
        }
      },
      "102": {
        start: {
          line: 224,
          column: 6
        },
        end: {
          line: 224,
          column: 36
        }
      },
      "103": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 226,
          column: 24
        }
      },
      "104": {
        start: {
          line: 228,
          column: 2
        },
        end: {
          line: 228,
          column: 11
        }
      },
      "105": {
        start: {
          line: 231,
          column: 0
        },
        end: {
          line: 231,
          column: 30
        }
      },
      "106": {
        start: {
          line: 234,
          column: 2
        },
        end: {
          line: 242,
          column: 3
        }
      },
      "107": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 235,
          column: 25
        }
      },
      "108": {
        start: {
          line: 236,
          column: 9
        },
        end: {
          line: 242,
          column: 3
        }
      },
      "109": {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 237,
          column: 73
        }
      },
      "110": {
        start: {
          line: 237,
          column: 58
        },
        end: {
          line: 237,
          column: 70
        }
      },
      "111": {
        start: {
          line: 238,
          column: 9
        },
        end: {
          line: 242,
          column: 3
        }
      },
      "112": {
        start: {
          line: 239,
          column: 4
        },
        end: {
          line: 239,
          column: 15
        }
      },
      "113": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 241,
          column: 66
        }
      },
      "114": {
        start: {
          line: 245,
          column: 0
        },
        end: {
          line: 245,
          column: 20
        }
      },
      "115": {
        start: {
          line: 248,
          column: 2
        },
        end: {
          line: 248,
          column: 27
        }
      },
      "116": {
        start: {
          line: 249,
          column: 2
        },
        end: {
          line: 249,
          column: 27
        }
      },
      "117": {
        start: {
          line: 252,
          column: 0
        },
        end: {
          line: 252,
          column: 22
        }
      },
      "118": {
        start: {
          line: 255,
          column: 2
        },
        end: {
          line: 257,
          column: 3
        }
      },
      "119": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 256,
          column: 14
        }
      },
      "120": {
        start: {
          line: 258,
          column: 2
        },
        end: {
          line: 258,
          column: 66
        }
      },
      "121": {
        start: {
          line: 261,
          column: 0
        },
        end: {
          line: 261,
          column: 22
        }
      },
      "122": {
        start: {
          line: 264,
          column: 2
        },
        end: {
          line: 264,
          column: 53
        }
      },
      "123": {
        start: {
          line: 267,
          column: 0
        },
        end: {
          line: 267,
          column: 24
        }
      },
      "124": {
        start: {
          line: 277,
          column: 20
        },
        end: {
          line: 277,
          column: 24
        }
      },
      "125": {
        start: {
          line: 278,
          column: 17
        },
        end: {
          line: 278,
          column: 46
        }
      },
      "126": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 282,
          column: 7
        }
      },
      "127": {
        start: {
          line: 281,
          column: 6
        },
        end: {
          line: 281,
          column: 72
        }
      },
      "128": {
        start: {
          line: 285,
          column: 2
        },
        end: {
          line: 285,
          column: 16
        }
      },
      "129": {
        start: {
          line: 288,
          column: 0
        },
        end: {
          line: 288,
          column: 42
        }
      },
      "130": {
        start: {
          line: 291,
          column: 2
        },
        end: {
          line: 291,
          column: 43
        }
      },
      "131": {
        start: {
          line: 291,
          column: 30
        },
        end: {
          line: 291,
          column: 41
        }
      },
      "132": {
        start: {
          line: 294,
          column: 0
        },
        end: {
          line: 294,
          column: 32
        }
      },
      "133": {
        start: {
          line: 296,
          column: 0
        },
        end: {
          line: 296,
          column: 41
        }
      },
      "134": {
        start: {
          line: 299,
          column: 2
        },
        end: {
          line: 299,
          column: 44
        }
      },
      "135": {
        start: {
          line: 299,
          column: 30
        },
        end: {
          line: 299,
          column: 42
        }
      },
      "136": {
        start: {
          line: 302,
          column: 0
        },
        end: {
          line: 302,
          column: 32
        }
      },
      "137": {
        start: {
          line: 305,
          column: 20
        },
        end: {
          line: 305,
          column: 23
        }
      },
      "138": {
        start: {
          line: 307,
          column: 2
        },
        end: {
          line: 309,
          column: 3
        }
      },
      "139": {
        start: {
          line: 308,
          column: 4
        },
        end: {
          line: 308,
          column: 34
        }
      },
      "140": {
        start: {
          line: 311,
          column: 2
        },
        end: {
          line: 313,
          column: 3
        }
      },
      "141": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 312,
          column: 18
        }
      },
      "142": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 14
        }
      },
      "143": {
        start: {
          line: 318,
          column: 2
        },
        end: {
          line: 324,
          column: 3
        }
      },
      "144": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 319,
          column: 19
        }
      },
      "145": {
        start: {
          line: 320,
          column: 9
        },
        end: {
          line: 324,
          column: 3
        }
      },
      "146": {
        start: {
          line: 323,
          column: 4
        },
        end: {
          line: 323,
          column: 15
        }
      },
      "147": {
        start: {
          line: 327,
          column: 2
        },
        end: {
          line: 329,
          column: 3
        }
      },
      "148": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 328,
          column: 19
        }
      },
      "149": {
        start: {
          line: 332,
          column: 2
        },
        end: {
          line: 334,
          column: 3
        }
      },
      "150": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 333,
          column: 15
        }
      },
      "151": {
        start: {
          line: 337,
          column: 2
        },
        end: {
          line: 342,
          column: 3
        }
      },
      "152": {
        start: {
          line: 340,
          column: 4
        },
        end: {
          line: 340,
          column: 49
        }
      },
      "153": {
        start: {
          line: 341,
          column: 4
        },
        end: {
          line: 341,
          column: 36
        }
      },
      "154": {
        start: {
          line: 344,
          column: 18
        },
        end: {
          line: 344,
          column: 34
        }
      },
      "155": {
        start: {
          line: 347,
          column: 2
        },
        end: {
          line: 349,
          column: 3
        }
      },
      "156": {
        start: {
          line: 348,
          column: 4
        },
        end: {
          line: 348,
          column: 15
        }
      },
      "157": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 13
        }
      },
      "158": {
        start: {
          line: 352,
          column: 14
        },
        end: {
          line: 352,
          column: 15
        }
      },
      "159": {
        start: {
          line: 354,
          column: 2
        },
        end: {
          line: 363,
          column: 3
        }
      },
      "160": {
        start: {
          line: 357,
          column: 4
        },
        end: {
          line: 357,
          column: 48
        }
      },
      "161": {
        start: {
          line: 359,
          column: 4
        },
        end: {
          line: 359,
          column: 33
        }
      },
      "162": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 360,
          column: 12
        }
      },
      "163": {
        start: {
          line: 362,
          column: 4
        },
        end: {
          line: 362,
          column: 38
        }
      },
      "164": {
        start: {
          line: 367,
          column: 2
        },
        end: {
          line: 369,
          column: 3
        }
      },
      "165": {
        start: {
          line: 368,
          column: 4
        },
        end: {
          line: 368,
          column: 30
        }
      },
      "166": {
        start: {
          line: 371,
          column: 2
        },
        end: {
          line: 371,
          column: 42
        }
      },
      "167": {
        start: {
          line: 374,
          column: 0
        },
        end: {
          line: 374,
          column: 26
        }
      },
      "168": {
        start: {
          line: 378,
          column: 2
        },
        end: {
          line: 383,
          column: 3
        }
      },
      "169": {
        start: {
          line: 379,
          column: 4
        },
        end: {
          line: 379,
          column: 20
        }
      },
      "170": {
        start: {
          line: 382,
          column: 4
        },
        end: {
          line: 382,
          column: 31
        }
      },
      "171": {
        start: {
          line: 382,
          column: 28
        },
        end: {
          line: 382,
          column: 29
        }
      },
      "172": {
        start: {
          line: 385,
          column: 2
        },
        end: {
          line: 385,
          column: 16
        }
      },
      "173": {
        start: {
          line: 387,
          column: 2
        },
        end: {
          line: 389,
          column: 3
        }
      },
      "174": {
        start: {
          line: 388,
          column: 4
        },
        end: {
          line: 388,
          column: 45
        }
      },
      "175": {
        start: {
          line: 390,
          column: 2
        },
        end: {
          line: 390,
          column: 13
        }
      },
      "176": {
        start: {
          line: 393,
          column: 0
        },
        end: {
          line: 393,
          column: 26
        }
      },
      "177": {
        start: {
          line: 396,
          column: 2
        },
        end: {
          line: 396,
          column: 29
        }
      },
      "178": {
        start: {
          line: 397,
          column: 17
        },
        end: {
          line: 397,
          column: 40
        }
      },
      "179": {
        start: {
          line: 400,
          column: 2
        },
        end: {
          line: 406,
          column: 3
        }
      },
      "180": {
        start: {
          line: 401,
          column: 4
        },
        end: {
          line: 401,
          column: 24
        }
      },
      "181": {
        start: {
          line: 402,
          column: 9
        },
        end: {
          line: 406,
          column: 3
        }
      },
      "182": {
        start: {
          line: 403,
          column: 4
        },
        end: {
          line: 403,
          column: 25
        }
      },
      "183": {
        start: {
          line: 405,
          column: 4
        },
        end: {
          line: 405,
          column: 25
        }
      },
      "184": {
        start: {
          line: 408,
          column: 2
        },
        end: {
          line: 408,
          column: 40
        }
      },
      "185": {
        start: {
          line: 411,
          column: 0
        },
        end: {
          line: 411,
          column: 22
        }
      },
      "186": {
        start: {
          line: 414,
          column: 22
        },
        end: {
          line: 414,
          column: 53
        }
      },
      "187": {
        start: {
          line: 415,
          column: 16
        },
        end: {
          line: 415,
          column: 35
        }
      },
      "188": {
        start: {
          line: 416,
          column: 14
        },
        end: {
          line: 416,
          column: 16
        }
      },
      "189": {
        start: {
          line: 417,
          column: 15
        },
        end: {
          line: 417,
          column: 16
        }
      },
      "190": {
        start: {
          line: 419,
          column: 2
        },
        end: {
          line: 431,
          column: 3
        }
      },
      "191": {
        start: {
          line: 419,
          column: 15
        },
        end: {
          line: 419,
          column: 16
        }
      },
      "192": {
        start: {
          line: 420,
          column: 18
        },
        end: {
          line: 420,
          column: 44
        }
      },
      "193": {
        start: {
          line: 421,
          column: 4
        },
        end: {
          line: 423,
          column: 5
        }
      },
      "194": {
        start: {
          line: 422,
          column: 6
        },
        end: {
          line: 422,
          column: 15
        }
      },
      "195": {
        start: {
          line: 424,
          column: 16
        },
        end: {
          line: 424,
          column: 48
        }
      },
      "196": {
        start: {
          line: 426,
          column: 22
        },
        end: {
          line: 426,
          column: 43
        }
      },
      "197": {
        start: {
          line: 427,
          column: 4
        },
        end: {
          line: 429,
          column: 5
        }
      },
      "198": {
        start: {
          line: 428,
          column: 6
        },
        end: {
          line: 428,
          column: 31
        }
      },
      "199": {
        start: {
          line: 430,
          column: 4
        },
        end: {
          line: 430,
          column: 24
        }
      },
      "200": {
        start: {
          line: 433,
          column: 2
        },
        end: {
          line: 433,
          column: 13
        }
      },
      "201": {
        start: {
          line: 436,
          column: 0
        },
        end: {
          line: 436,
          column: 22
        }
      },
      "202": {
        start: {
          line: 439,
          column: 2
        },
        end: {
          line: 441,
          column: 3
        }
      },
      "203": {
        start: {
          line: 440,
          column: 4
        },
        end: {
          line: 440,
          column: 39
        }
      },
      "204": {
        start: {
          line: 440,
          column: 30
        },
        end: {
          line: 440,
          column: 37
        }
      },
      "205": {
        start: {
          line: 443,
          column: 2
        },
        end: {
          line: 443,
          column: 48
        }
      },
      "206": {
        start: {
          line: 443,
          column: 38
        },
        end: {
          line: 443,
          column: 43
        }
      },
      "207": {
        start: {
          line: 446,
          column: 0
        },
        end: {
          line: 446,
          column: 18
        }
      },
      "208": {
        start: {
          line: 448,
          column: 0
        },
        end: {
          line: 481,
          column: 5
        }
      },
      "209": {
        start: {
          line: 452,
          column: 16
        },
        end: {
          line: 452,
          column: 36
        }
      },
      "210": {
        start: {
          line: 452,
          column: 34
        },
        end: {
          line: 452,
          column: 35
        }
      },
      "211": {
        start: {
          line: 453,
          column: 23
        },
        end: {
          line: 453,
          column: 46
        }
      },
      "212": {
        start: {
          line: 455,
          column: 4
        },
        end: {
          line: 478,
          column: 7
        }
      },
      "213": {
        start: {
          line: 456,
          column: 14
        },
        end: {
          line: 456,
          column: 42
        }
      },
      "214": {
        start: {
          line: 457,
          column: 14
        },
        end: {
          line: 457,
          column: 42
        }
      },
      "215": {
        start: {
          line: 459,
          column: 6
        },
        end: {
          line: 464,
          column: 7
        }
      },
      "216": {
        start: {
          line: 463,
          column: 8
        },
        end: {
          line: 463,
          column: 79
        }
      },
      "217": {
        start: {
          line: 466,
          column: 6
        },
        end: {
          line: 469,
          column: 7
        }
      },
      "218": {
        start: {
          line: 467,
          column: 8
        },
        end: {
          line: 467,
          column: 28
        }
      },
      "219": {
        start: {
          line: 468,
          column: 8
        },
        end: {
          line: 468,
          column: 28
        }
      },
      "220": {
        start: {
          line: 471,
          column: 6
        },
        end: {
          line: 477,
          column: 7
        }
      },
      "221": {
        start: {
          line: 472,
          column: 8
        },
        end: {
          line: 472,
          column: 33
        }
      },
      "222": {
        start: {
          line: 473,
          column: 13
        },
        end: {
          line: 477,
          column: 7
        }
      },
      "223": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 474,
          column: 33
        }
      },
      "224": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 476,
          column: 17
        }
      },
      "225": {
        start: {
          line: 480,
          column: 4
        },
        end: {
          line: 480,
          column: 17
        }
      },
      "226": {
        start: {
          line: 484,
          column: 2
        },
        end: {
          line: 484,
          column: 34
        }
      },
      "227": {
        start: {
          line: 487,
          column: 0
        },
        end: {
          line: 487,
          column: 24
        }
      },
      "228": {
        start: {
          line: 490,
          column: 2
        },
        end: {
          line: 490,
          column: 31
        }
      },
      "229": {
        start: {
          line: 491,
          column: 13
        },
        end: {
          line: 491,
          column: 61
        }
      },
      "230": {
        start: {
          line: 492,
          column: 21
        },
        end: {
          line: 492,
          column: 50
        }
      },
      "231": {
        start: {
          line: 493,
          column: 12
        },
        end: {
          line: 493,
          column: 14
        }
      },
      "232": {
        start: {
          line: 494,
          column: 2
        },
        end: {
          line: 502,
          column: 3
        }
      },
      "233": {
        start: {
          line: 495,
          column: 4
        },
        end: {
          line: 499,
          column: 35
        }
      },
      "234": {
        start: {
          line: 501,
          column: 4
        },
        end: {
          line: 501,
          column: 45
        }
      },
      "235": {
        start: {
          line: 503,
          column: 2
        },
        end: {
          line: 503,
          column: 36
        }
      },
      "236": {
        start: {
          line: 506,
          column: 0
        },
        end: {
          line: 506,
          column: 30
        }
      },
      "237": {
        start: {
          line: 509,
          column: 2
        },
        end: {
          line: 509,
          column: 27
        }
      },
      "238": {
        start: {
          line: 510,
          column: 14
        },
        end: {
          line: 510,
          column: 58
        }
      },
      "239": {
        start: {
          line: 510,
          column: 41
        },
        end: {
          line: 510,
          column: 57
        }
      },
      "240": {
        start: {
          line: 511,
          column: 2
        },
        end: {
          line: 511,
          column: 46
        }
      },
      "241": {
        start: {
          line: 514,
          column: 0
        },
        end: {
          line: 514,
          column: 22
        }
      },
      "242": {
        start: {
          line: 517,
          column: 2
        },
        end: {
          line: 517,
          column: 60
        }
      },
      "243": {
        start: {
          line: 520,
          column: 0
        },
        end: {
          line: 520,
          column: 20
        }
      },
      "244": {
        start: {
          line: 523,
          column: 13
        },
        end: {
          line: 523,
          column: 18
        }
      },
      "245": {
        start: {
          line: 524,
          column: 2
        },
        end: {
          line: 524,
          column: 31
        }
      },
      "246": {
        start: {
          line: 525,
          column: 2
        },
        end: {
          line: 525,
          column: 25
        }
      },
      "247": {
        start: {
          line: 527,
          column: 2
        },
        end: {
          line: 529,
          column: 3
        }
      },
      "248": {
        start: {
          line: 528,
          column: 4
        },
        end: {
          line: 528,
          column: 17
        }
      },
      "249": {
        start: {
          line: 531,
          column: 2
        },
        end: {
          line: 540,
          column: 3
        }
      },
      "250": {
        start: {
          line: 532,
          column: 4
        },
        end: {
          line: 532,
          column: 39
        }
      },
      "251": {
        start: {
          line: 534,
          column: 14
        },
        end: {
          line: 534,
          column: 44
        }
      },
      "252": {
        start: {
          line: 535,
          column: 4
        },
        end: {
          line: 537,
          column: 5
        }
      },
      "253": {
        start: {
          line: 536,
          column: 6
        },
        end: {
          line: 536,
          column: 19
        }
      },
      "254": {
        start: {
          line: 539,
          column: 4
        },
        end: {
          line: 539,
          column: 36
        }
      },
      "255": {
        start: {
          line: 542,
          column: 2
        },
        end: {
          line: 542,
          column: 61
        }
      },
      "256": {
        start: {
          line: 543,
          column: 2
        },
        end: {
          line: 543,
          column: 37
        }
      },
      "257": {
        start: {
          line: 546,
          column: 0
        },
        end: {
          line: 546,
          column: 28
        }
      },
      "258": {
        start: {
          line: 549,
          column: 2
        },
        end: {
          line: 549,
          column: 27
        }
      },
      "259": {
        start: {
          line: 550,
          column: 2
        },
        end: {
          line: 550,
          column: 27
        }
      },
      "260": {
        start: {
          line: 553,
          column: 0
        },
        end: {
          line: 553,
          column: 22
        }
      },
      "261": {
        start: {
          line: 556,
          column: 12
        },
        end: {
          line: 556,
          column: 30
        }
      },
      "262": {
        start: {
          line: 557,
          column: 2
        },
        end: {
          line: 562,
          column: 3
        }
      },
      "263": {
        start: {
          line: 558,
          column: 4
        },
        end: {
          line: 558,
          column: 20
        }
      },
      "264": {
        start: {
          line: 560,
          column: 18
        },
        end: {
          line: 560,
          column: 62
        }
      },
      "265": {
        start: {
          line: 561,
          column: 4
        },
        end: {
          line: 561,
          column: 68
        }
      },
      "266": {
        start: {
          line: 561,
          column: 35
        },
        end: {
          line: 561,
          column: 56
        }
      },
      "267": {
        start: {
          line: 565,
          column: 0
        },
        end: {
          line: 565,
          column: 30
        }
      },
      "268": {
        start: {
          line: 569,
          column: 15
        },
        end: {
          line: 569,
          column: 58
        }
      },
      "269": {
        start: {
          line: 571,
          column: 16
        },
        end: {
          line: 571,
          column: 74
        }
      },
      "270": {
        start: {
          line: 572,
          column: 20
        },
        end: {
          line: 572,
          column: 37
        }
      },
      "271": {
        start: {
          line: 573,
          column: 14
        },
        end: {
          line: 573,
          column: 22
        }
      },
      "272": {
        start: {
          line: 574,
          column: 14
        },
        end: {
          line: 574,
          column: 44
        }
      },
      "273": {
        start: {
          line: 577,
          column: 2
        },
        end: {
          line: 579,
          column: 3
        }
      },
      "274": {
        start: {
          line: 578,
          column: 4
        },
        end: {
          line: 578,
          column: 22
        }
      },
      "275": {
        start: {
          line: 581,
          column: 24
        },
        end: {
          line: 581,
          column: 66
        }
      },
      "276": {
        start: {
          line: 583,
          column: 16
        },
        end: {
          line: 613,
          column: 4
        }
      },
      "277": {
        start: {
          line: 586,
          column: 4
        },
        end: {
          line: 586,
          column: 31
        }
      },
      "278": {
        start: {
          line: 588,
          column: 18
        },
        end: {
          line: 588,
          column: 36
        }
      },
      "279": {
        start: {
          line: 589,
          column: 22
        },
        end: {
          line: 589,
          column: 51
        }
      },
      "280": {
        start: {
          line: 590,
          column: 19
        },
        end: {
          line: 590,
          column: 48
        }
      },
      "281": {
        start: {
          line: 593,
          column: 4
        },
        end: {
          line: 595,
          column: 5
        }
      },
      "282": {
        start: {
          line: 594,
          column: 6
        },
        end: {
          line: 594,
          column: 71
        }
      },
      "283": {
        start: {
          line: 598,
          column: 4
        },
        end: {
          line: 600,
          column: 5
        }
      },
      "284": {
        start: {
          line: 599,
          column: 6
        },
        end: {
          line: 599,
          column: 78
        }
      },
      "285": {
        start: {
          line: 603,
          column: 4
        },
        end: {
          line: 605,
          column: 5
        }
      },
      "286": {
        start: {
          line: 604,
          column: 6
        },
        end: {
          line: 604,
          column: 66
        }
      },
      "287": {
        start: {
          line: 608,
          column: 4
        },
        end: {
          line: 610,
          column: 5
        }
      },
      "288": {
        start: {
          line: 609,
          column: 6
        },
        end: {
          line: 609,
          column: 78
        }
      },
      "289": {
        start: {
          line: 612,
          column: 4
        },
        end: {
          line: 612,
          column: 16
        }
      },
      "290": {
        start: {
          line: 615,
          column: 2
        },
        end: {
          line: 615,
          column: 24
        }
      },
      "291": {
        start: {
          line: 618,
          column: 0
        },
        end: {
          line: 618,
          column: 24
        }
      },
      "292": {
        start: {
          line: 621,
          column: 2
        },
        end: {
          line: 621,
          column: 27
        }
      },
      "293": {
        start: {
          line: 622,
          column: 16
        },
        end: {
          line: 622,
          column: 48
        }
      },
      "294": {
        start: {
          line: 623,
          column: 2
        },
        end: {
          line: 623,
          column: 39
        }
      },
      "295": {
        start: {
          line: 626,
          column: 0
        },
        end: {
          line: 626,
          column: 30
        }
      },
      "296": {
        start: {
          line: 629,
          column: 12
        },
        end: {
          line: 629,
          column: 27
        }
      },
      "297": {
        start: {
          line: 630,
          column: 2
        },
        end: {
          line: 630,
          column: 34
        }
      },
      "298": {
        start: {
          line: 633,
          column: 0
        },
        end: {
          line: 633,
          column: 22
        }
      },
      "299": {
        start: {
          line: 635,
          column: 18
        },
        end: {
          line: 642,
          column: 1
        }
      },
      "300": {
        start: {
          line: 639,
          column: 14
        },
        end: {
          line: 639,
          column: 35
        }
      },
      "301": {
        start: {
          line: 640,
          column: 4
        },
        end: {
          line: 640,
          column: 45
        }
      },
      "302": {
        start: {
          line: 644,
          column: 0
        },
        end: {
          line: 644,
          column: 24
        }
      },
      "303": {
        start: {
          line: 647,
          column: 0
        },
        end: {
          line: 647,
          column: 28
        }
      },
      "304": {
        start: {
          line: 648,
          column: 0
        },
        end: {
          line: 648,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "normalize",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 18
          }
        },
        loc: {
          start: {
            line: 8,
            column: 40
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "isNaN",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 14
          }
        },
        loc: {
          start: {
            line: 17,
            column: 20
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "batch",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 14
          }
        },
        loc: {
          start: {
            line: 21,
            column: 41
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 21
      },
      "3": {
        name: "capitalize",
        decl: {
          start: {
            line: 50,
            column: 9
          },
          end: {
            line: 50,
            column: 19
          }
        },
        loc: {
          start: {
            line: 50,
            column: 25
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 50
      },
      "4": {
        name: "center",
        decl: {
          start: {
            line: 58,
            column: 9
          },
          end: {
            line: 58,
            column: 15
          }
        },
        loc: {
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 70,
            column: 1
          }
        },
        line: 58
      },
      "5": {
        name: "default_",
        decl: {
          start: {
            line: 74,
            column: 9
          },
          end: {
            line: 74,
            column: 17
          }
        },
        loc: {
          start: {
            line: 74,
            column: 34
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 74
      },
      "6": {
        name: "dictsort",
        decl: {
          start: {
            line: 85,
            column: 9
          },
          end: {
            line: 85,
            column: 17
          }
        },
        loc: {
          start: {
            line: 85,
            column: 42
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 85
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 106,
            column: 13
          },
          end: {
            line: 106,
            column: 14
          }
        },
        loc: {
          start: {
            line: 106,
            column: 25
          },
          end: {
            line: 120,
            column: 3
          }
        },
        line: 106
      },
      "8": {
        name: "dump",
        decl: {
          start: {
            line: 127,
            column: 9
          },
          end: {
            line: 127,
            column: 13
          }
        },
        loc: {
          start: {
            line: 127,
            column: 27
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 127
      },
      "9": {
        name: "escape",
        decl: {
          start: {
            line: 133,
            column: 9
          },
          end: {
            line: 133,
            column: 15
          }
        },
        loc: {
          start: {
            line: 133,
            column: 21
          },
          end: {
            line: 139,
            column: 1
          }
        },
        line: 133
      },
      "10": {
        name: "safe",
        decl: {
          start: {
            line: 143,
            column: 9
          },
          end: {
            line: 143,
            column: 13
          }
        },
        loc: {
          start: {
            line: 143,
            column: 19
          },
          end: {
            line: 149,
            column: 1
          }
        },
        line: 143
      },
      "11": {
        name: "first",
        decl: {
          start: {
            line: 153,
            column: 9
          },
          end: {
            line: 153,
            column: 14
          }
        },
        loc: {
          start: {
            line: 153,
            column: 20
          },
          end: {
            line: 155,
            column: 1
          }
        },
        line: 153
      },
      "12": {
        name: "forceescape",
        decl: {
          start: {
            line: 159,
            column: 9
          },
          end: {
            line: 159,
            column: 20
          }
        },
        loc: {
          start: {
            line: 159,
            column: 26
          },
          end: {
            line: 162,
            column: 1
          }
        },
        line: 159
      },
      "13": {
        name: "groupby",
        decl: {
          start: {
            line: 166,
            column: 9
          },
          end: {
            line: 166,
            column: 16
          }
        },
        loc: {
          start: {
            line: 166,
            column: 28
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 166
      },
      "14": {
        name: "indent",
        decl: {
          start: {
            line: 172,
            column: 9
          },
          end: {
            line: 172,
            column: 15
          }
        },
        loc: {
          start: {
            line: 172,
            column: 41
          },
          end: {
            line: 189,
            column: 1
          }
        },
        line: 172
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 184,
            column: 24
          },
          end: {
            line: 184,
            column: 25
          }
        },
        loc: {
          start: {
            line: 184,
            column: 34
          },
          end: {
            line: 186,
            column: 3
          }
        },
        line: 184
      },
      "16": {
        name: "join",
        decl: {
          start: {
            line: 193,
            column: 9
          },
          end: {
            line: 193,
            column: 13
          }
        },
        loc: {
          start: {
            line: 193,
            column: 30
          },
          end: {
            line: 201,
            column: 1
          }
        },
        line: 193
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 197,
            column: 23
          },
          end: {
            line: 197,
            column: 24
          }
        },
        loc: {
          start: {
            line: 197,
            column: 30
          },
          end: {
            line: 197,
            column: 37
          }
        },
        line: 197
      },
      "18": {
        name: "last",
        decl: {
          start: {
            line: 205,
            column: 9
          },
          end: {
            line: 205,
            column: 13
          }
        },
        loc: {
          start: {
            line: 205,
            column: 19
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 205
      },
      "19": {
        name: "lengthFilter",
        decl: {
          start: {
            line: 211,
            column: 9
          },
          end: {
            line: 211,
            column: 21
          }
        },
        loc: {
          start: {
            line: 211,
            column: 27
          },
          end: {
            line: 229,
            column: 1
          }
        },
        line: 211
      },
      "20": {
        name: "list",
        decl: {
          start: {
            line: 233,
            column: 9
          },
          end: {
            line: 233,
            column: 13
          }
        },
        loc: {
          start: {
            line: 233,
            column: 19
          },
          end: {
            line: 243,
            column: 1
          }
        },
        line: 233
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 237,
            column: 39
          },
          end: {
            line: 237,
            column: 40
          }
        },
        loc: {
          start: {
            line: 237,
            column: 58
          },
          end: {
            line: 237,
            column: 70
          }
        },
        line: 237
      },
      "22": {
        name: "lower",
        decl: {
          start: {
            line: 247,
            column: 9
          },
          end: {
            line: 247,
            column: 14
          }
        },
        loc: {
          start: {
            line: 247,
            column: 20
          },
          end: {
            line: 250,
            column: 1
          }
        },
        line: 247
      },
      "23": {
        name: "nl2br",
        decl: {
          start: {
            line: 254,
            column: 9
          },
          end: {
            line: 254,
            column: 14
          }
        },
        loc: {
          start: {
            line: 254,
            column: 20
          },
          end: {
            line: 259,
            column: 1
          }
        },
        line: 254
      },
      "24": {
        name: "random",
        decl: {
          start: {
            line: 263,
            column: 9
          },
          end: {
            line: 263,
            column: 15
          }
        },
        loc: {
          start: {
            line: 263,
            column: 21
          },
          end: {
            line: 265,
            column: 1
          }
        },
        line: 263
      },
      "25": {
        name: "getSelectOrReject",
        decl: {
          start: {
            line: 275,
            column: 9
          },
          end: {
            line: 275,
            column: 26
          }
        },
        loc: {
          start: {
            line: 275,
            column: 47
          },
          end: {
            line: 286,
            column: 1
          }
        },
        line: 275
      },
      "26": {
        name: "filter",
        decl: {
          start: {
            line: 276,
            column: 11
          },
          end: {
            line: 276,
            column: 17
          }
        },
        loc: {
          start: {
            line: 276,
            column: 55
          },
          end: {
            line: 283,
            column: 3
          }
        },
        line: 276
      },
      "27": {
        name: "examineTestResult",
        decl: {
          start: {
            line: 280,
            column: 44
          },
          end: {
            line: 280,
            column: 61
          }
        },
        loc: {
          start: {
            line: 280,
            column: 68
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 280
      },
      "28": {
        name: "rejectattr",
        decl: {
          start: {
            line: 290,
            column: 9
          },
          end: {
            line: 290,
            column: 19
          }
        },
        loc: {
          start: {
            line: 290,
            column: 31
          },
          end: {
            line: 292,
            column: 1
          }
        },
        line: 290
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 291,
            column: 20
          },
          end: {
            line: 291,
            column: 21
          }
        },
        loc: {
          start: {
            line: 291,
            column: 30
          },
          end: {
            line: 291,
            column: 41
          }
        },
        line: 291
      },
      "30": {
        name: "selectattr",
        decl: {
          start: {
            line: 298,
            column: 9
          },
          end: {
            line: 298,
            column: 19
          }
        },
        loc: {
          start: {
            line: 298,
            column: 31
          },
          end: {
            line: 300,
            column: 1
          }
        },
        line: 298
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 299,
            column: 20
          },
          end: {
            line: 299,
            column: 21
          }
        },
        loc: {
          start: {
            line: 299,
            column: 30
          },
          end: {
            line: 299,
            column: 42
          }
        },
        line: 299
      },
      "32": {
        name: "replace",
        decl: {
          start: {
            line: 304,
            column: 9
          },
          end: {
            line: 304,
            column: 16
          }
        },
        loc: {
          start: {
            line: 304,
            column: 43
          },
          end: {
            line: 372,
            column: 1
          }
        },
        line: 304
      },
      "33": {
        name: "reverse",
        decl: {
          start: {
            line: 376,
            column: 9
          },
          end: {
            line: 376,
            column: 16
          }
        },
        loc: {
          start: {
            line: 376,
            column: 22
          },
          end: {
            line: 391,
            column: 1
          }
        },
        line: 376
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 382,
            column: 23
          },
          end: {
            line: 382,
            column: 24
          }
        },
        loc: {
          start: {
            line: 382,
            column: 28
          },
          end: {
            line: 382,
            column: 29
          }
        },
        line: 382
      },
      "35": {
        name: "round",
        decl: {
          start: {
            line: 395,
            column: 9
          },
          end: {
            line: 395,
            column: 14
          }
        },
        loc: {
          start: {
            line: 395,
            column: 39
          },
          end: {
            line: 409,
            column: 1
          }
        },
        line: 395
      },
      "36": {
        name: "slice",
        decl: {
          start: {
            line: 413,
            column: 9
          },
          end: {
            line: 413,
            column: 14
          }
        },
        loc: {
          start: {
            line: 413,
            column: 38
          },
          end: {
            line: 434,
            column: 1
          }
        },
        line: 413
      },
      "37": {
        name: "sum",
        decl: {
          start: {
            line: 438,
            column: 9
          },
          end: {
            line: 438,
            column: 12
          }
        },
        loc: {
          start: {
            line: 438,
            column: 35
          },
          end: {
            line: 444,
            column: 1
          }
        },
        line: 438
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 440,
            column: 23
          },
          end: {
            line: 440,
            column: 24
          }
        },
        loc: {
          start: {
            line: 440,
            column: 30
          },
          end: {
            line: 440,
            column: 37
          }
        },
        line: 440
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 443,
            column: 28
          },
          end: {
            line: 443,
            column: 29
          }
        },
        loc: {
          start: {
            line: 443,
            column: 38
          },
          end: {
            line: 443,
            column: 43
          }
        },
        line: 443
      },
      "40": {
        name: "sortFilter",
        decl: {
          start: {
            line: 450,
            column: 11
          },
          end: {
            line: 450,
            column: 21
          }
        },
        loc: {
          start: {
            line: 450,
            column: 53
          },
          end: {
            line: 481,
            column: 3
          }
        },
        line: 450
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 452,
            column: 29
          },
          end: {
            line: 452,
            column: 30
          }
        },
        loc: {
          start: {
            line: 452,
            column: 34
          },
          end: {
            line: 452,
            column: 35
          }
        },
        line: 452
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 455,
            column: 15
          },
          end: {
            line: 455,
            column: 16
          }
        },
        loc: {
          start: {
            line: 455,
            column: 25
          },
          end: {
            line: 478,
            column: 5
          }
        },
        line: 455
      },
      "43": {
        name: "string",
        decl: {
          start: {
            line: 483,
            column: 9
          },
          end: {
            line: 483,
            column: 15
          }
        },
        loc: {
          start: {
            line: 483,
            column: 21
          },
          end: {
            line: 485,
            column: 1
          }
        },
        line: 483
      },
      "44": {
        name: "striptags",
        decl: {
          start: {
            line: 489,
            column: 9
          },
          end: {
            line: 489,
            column: 18
          }
        },
        loc: {
          start: {
            line: 489,
            column: 46
          },
          end: {
            line: 504,
            column: 1
          }
        },
        line: 489
      },
      "45": {
        name: "title",
        decl: {
          start: {
            line: 508,
            column: 9
          },
          end: {
            line: 508,
            column: 14
          }
        },
        loc: {
          start: {
            line: 508,
            column: 20
          },
          end: {
            line: 512,
            column: 1
          }
        },
        line: 508
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 510,
            column: 33
          },
          end: {
            line: 510,
            column: 34
          }
        },
        loc: {
          start: {
            line: 510,
            column: 41
          },
          end: {
            line: 510,
            column: 57
          }
        },
        line: 510
      },
      "47": {
        name: "trim",
        decl: {
          start: {
            line: 516,
            column: 9
          },
          end: {
            line: 516,
            column: 13
          }
        },
        loc: {
          start: {
            line: 516,
            column: 19
          },
          end: {
            line: 518,
            column: 1
          }
        },
        line: 516
      },
      "48": {
        name: "truncate",
        decl: {
          start: {
            line: 522,
            column: 9
          },
          end: {
            line: 522,
            column: 17
          }
        },
        loc: {
          start: {
            line: 522,
            column: 49
          },
          end: {
            line: 544,
            column: 1
          }
        },
        line: 522
      },
      "49": {
        name: "upper",
        decl: {
          start: {
            line: 548,
            column: 9
          },
          end: {
            line: 548,
            column: 14
          }
        },
        loc: {
          start: {
            line: 548,
            column: 20
          },
          end: {
            line: 551,
            column: 1
          }
        },
        line: 548
      },
      "50": {
        name: "urlencode",
        decl: {
          start: {
            line: 555,
            column: 9
          },
          end: {
            line: 555,
            column: 18
          }
        },
        loc: {
          start: {
            line: 555,
            column: 24
          },
          end: {
            line: 563,
            column: 1
          }
        },
        line: 555
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 561,
            column: 23
          },
          end: {
            line: 561,
            column: 24
          }
        },
        loc: {
          start: {
            line: 561,
            column: 35
          },
          end: {
            line: 561,
            column: 56
          }
        },
        line: 561
      },
      "52": {
        name: "urlize",
        decl: {
          start: {
            line: 576,
            column: 9
          },
          end: {
            line: 576,
            column: 15
          }
        },
        loc: {
          start: {
            line: 576,
            column: 39
          },
          end: {
            line: 616,
            column: 1
          }
        },
        line: 576
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 583,
            column: 42
          },
          end: {
            line: 583,
            column: 43
          }
        },
        loc: {
          start: {
            line: 583,
            column: 52
          },
          end: {
            line: 587,
            column: 3
          }
        },
        line: 583
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 587,
            column: 9
          },
          end: {
            line: 587,
            column: 10
          }
        },
        loc: {
          start: {
            line: 587,
            column: 19
          },
          end: {
            line: 613,
            column: 3
          }
        },
        line: 587
      },
      "55": {
        name: "wordcount",
        decl: {
          start: {
            line: 620,
            column: 9
          },
          end: {
            line: 620,
            column: 18
          }
        },
        loc: {
          start: {
            line: 620,
            column: 24
          },
          end: {
            line: 624,
            column: 1
          }
        },
        line: 620
      },
      "56": {
        name: "float",
        decl: {
          start: {
            line: 628,
            column: 9
          },
          end: {
            line: 628,
            column: 14
          }
        },
        loc: {
          start: {
            line: 628,
            column: 25
          },
          end: {
            line: 631,
            column: 1
          }
        },
        line: 628
      },
      "57": {
        name: "doInt",
        decl: {
          start: {
            line: 638,
            column: 11
          },
          end: {
            line: 638,
            column: 16
          }
        },
        loc: {
          start: {
            line: 638,
            column: 49
          },
          end: {
            line: 641,
            column: 3
          }
        },
        line: 638
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 11,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 11,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 20
          }
        }, {
          start: {
            line: 9,
            column: 24
          },
          end: {
            line: 9,
            column: 43
          }
        }, {
          start: {
            line: 9,
            column: 47
          },
          end: {
            line: 9,
            column: 62
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 27
          }
        }, {
          start: {
            line: 27,
            column: 31
          },
          end: {
            line: 27,
            column: 41
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 43,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 43,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 10
          },
          end: {
            line: 60,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 10
          },
          end: {
            line: 60,
            column: 15
          }
        }, {
          start: {
            line: 60,
            column: 19
          },
          end: {
            line: 60,
            column: 21
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 62,
            column: 2
          },
          end: {
            line: 64,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 2
          },
          end: {
            line: 64,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "8": {
        loc: {
          start: {
            line: 75,
            column: 2
          },
          end: {
            line: 79,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 2
          },
          end: {
            line: 79,
            column: 3
          }
        }, {
          start: {
            line: 77,
            column: 9
          },
          end: {
            line: 79,
            column: 3
          }
        }],
        line: 75
      },
      "9": {
        loc: {
          start: {
            line: 76,
            column: 11
          },
          end: {
            line: 76,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 11
          },
          end: {
            line: 76,
            column: 14
          }
        }, {
          start: {
            line: 76,
            column: 18
          },
          end: {
            line: 76,
            column: 21
          }
        }],
        line: 76
      },
      "10": {
        loc: {
          start: {
            line: 78,
            column: 11
          },
          end: {
            line: 78,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 78,
            column: 33
          },
          end: {
            line: 78,
            column: 36
          }
        }, {
          start: {
            line: 78,
            column: 39
          },
          end: {
            line: 78,
            column: 42
          }
        }],
        line: 78
      },
      "11": {
        loc: {
          start: {
            line: 86,
            column: 2
          },
          end: {
            line: 88,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 2
          },
          end: {
            line: 88,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "12": {
        loc: {
          start: {
            line: 97,
            column: 2
          },
          end: {
            line: 104,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 2
          },
          end: {
            line: 104,
            column: 3
          }
        }, {
          start: {
            line: 99,
            column: 9
          },
          end: {
            line: 104,
            column: 3
          }
        }],
        line: 97
      },
      "13": {
        loc: {
          start: {
            line: 97,
            column: 6
          },
          end: {
            line: 97,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 6
          },
          end: {
            line: 97,
            column: 22
          }
        }, {
          start: {
            line: 97,
            column: 26
          },
          end: {
            line: 97,
            column: 38
          }
        }],
        line: 97
      },
      "14": {
        loc: {
          start: {
            line: 99,
            column: 9
          },
          end: {
            line: 104,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 9
          },
          end: {
            line: 104,
            column: 3
          }
        }, {
          start: {
            line: 101,
            column: 9
          },
          end: {
            line: 104,
            column: 3
          }
        }],
        line: 99
      },
      "15": {
        loc: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "16": {
        loc: {
          start: {
            line: 111,
            column: 6
          },
          end: {
            line: 113,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 6
          },
          end: {
            line: 113,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "17": {
        loc: {
          start: {
            line: 114,
            column: 6
          },
          end: {
            line: 116,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 6
          },
          end: {
            line: 116,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "18": {
        loc: {
          start: {
            line: 119,
            column: 11
          },
          end: {
            line: 119,
            column: 41
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 119,
            column: 19
          },
          end: {
            line: 119,
            column: 20
          }
        }, {
          start: {
            line: 119,
            column: 24
          },
          end: {
            line: 119,
            column: 40
          }
        }],
        line: 119
      },
      "19": {
        loc: {
          start: {
            line: 119,
            column: 24
          },
          end: {
            line: 119,
            column: 40
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 119,
            column: 34
          },
          end: {
            line: 119,
            column: 35
          }
        }, {
          start: {
            line: 119,
            column: 38
          },
          end: {
            line: 119,
            column: 40
          }
        }],
        line: 119
      },
      "20": {
        loc: {
          start: {
            line: 134,
            column: 2
          },
          end: {
            line: 136,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 2
          },
          end: {
            line: 136,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "21": {
        loc: {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 137,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 46
          },
          end: {
            line: 137,
            column: 48
          }
        }, {
          start: {
            line: 137,
            column: 51
          },
          end: {
            line: 137,
            column: 54
          }
        }],
        line: 137
      },
      "22": {
        loc: {
          start: {
            line: 137,
            column: 9
          },
          end: {
            line: 137,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 9
          },
          end: {
            line: 137,
            column: 21
          }
        }, {
          start: {
            line: 137,
            column: 25
          },
          end: {
            line: 137,
            column: 42
          }
        }],
        line: 137
      },
      "23": {
        loc: {
          start: {
            line: 144,
            column: 2
          },
          end: {
            line: 146,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 2
          },
          end: {
            line: 146,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "24": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 147,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 147,
            column: 46
          },
          end: {
            line: 147,
            column: 48
          }
        }, {
          start: {
            line: 147,
            column: 51
          },
          end: {
            line: 147,
            column: 54
          }
        }],
        line: 147
      },
      "25": {
        loc: {
          start: {
            line: 147,
            column: 9
          },
          end: {
            line: 147,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 9
          },
          end: {
            line: 147,
            column: 21
          }
        }, {
          start: {
            line: 147,
            column: 25
          },
          end: {
            line: 147,
            column: 42
          }
        }],
        line: 147
      },
      "26": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 160,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 160,
            column: 46
          },
          end: {
            line: 160,
            column: 48
          }
        }, {
          start: {
            line: 160,
            column: 51
          },
          end: {
            line: 160,
            column: 54
          }
        }],
        line: 160
      },
      "27": {
        loc: {
          start: {
            line: 160,
            column: 9
          },
          end: {
            line: 160,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 9
          },
          end: {
            line: 160,
            column: 21
          }
        }, {
          start: {
            line: 160,
            column: 25
          },
          end: {
            line: 160,
            column: 42
          }
        }],
        line: 160
      },
      "28": {
        loc: {
          start: {
            line: 175,
            column: 2
          },
          end: {
            line: 177,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 2
          },
          end: {
            line: 177,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "29": {
        loc: {
          start: {
            line: 179,
            column: 10
          },
          end: {
            line: 179,
            column: 20
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 10
          },
          end: {
            line: 179,
            column: 15
          }
        }, {
          start: {
            line: 179,
            column: 19
          },
          end: {
            line: 179,
            column: 20
          }
        }],
        line: 179
      },
      "30": {
        loc: {
          start: {
            line: 185,
            column: 11
          },
          end: {
            line: 185,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 185,
            column: 39
          },
          end: {
            line: 185,
            column: 40
          }
        }, {
          start: {
            line: 185,
            column: 43
          },
          end: {
            line: 185,
            column: 54
          }
        }],
        line: 185
      },
      "31": {
        loc: {
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 185,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 185,
            column: 19
          }
        }, {
          start: {
            line: 185,
            column: 23
          },
          end: {
            line: 185,
            column: 35
          }
        }],
        line: 185
      },
      "32": {
        loc: {
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 194,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 194,
            column: 11
          }
        }, {
          start: {
            line: 194,
            column: 15
          },
          end: {
            line: 194,
            column: 17
          }
        }],
        line: 194
      },
      "33": {
        loc: {
          start: {
            line: 196,
            column: 2
          },
          end: {
            line: 198,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 2
          },
          end: {
            line: 198,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "34": {
        loc: {
          start: {
            line: 214,
            column: 2
          },
          end: {
            line: 227,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 2
          },
          end: {
            line: 227,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "35": {
        loc: {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "36": {
        loc: {
          start: {
            line: 216,
            column: 6
          },
          end: {
            line: 217,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 216,
            column: 7
          },
          end: {
            line: 216,
            column: 32
          }
        }, {
          start: {
            line: 216,
            column: 36
          },
          end: {
            line: 216,
            column: 56
          }
        }, {
          start: {
            line: 217,
            column: 7
          },
          end: {
            line: 217,
            column: 32
          }
        }, {
          start: {
            line: 217,
            column: 36
          },
          end: {
            line: 217,
            column: 56
          }
        }],
        line: 216
      },
      "37": {
        loc: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "38": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 222,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 222,
            column: 27
          }
        }, {
          start: {
            line: 222,
            column: 31
          },
          end: {
            line: 222,
            column: 63
          }
        }],
        line: 222
      },
      "39": {
        loc: {
          start: {
            line: 234,
            column: 2
          },
          end: {
            line: 242,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 2
          },
          end: {
            line: 242,
            column: 3
          }
        }, {
          start: {
            line: 236,
            column: 9
          },
          end: {
            line: 242,
            column: 3
          }
        }],
        line: 234
      },
      "40": {
        loc: {
          start: {
            line: 236,
            column: 9
          },
          end: {
            line: 242,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 9
          },
          end: {
            line: 242,
            column: 3
          }
        }, {
          start: {
            line: 238,
            column: 9
          },
          end: {
            line: 242,
            column: 3
          }
        }],
        line: 236
      },
      "41": {
        loc: {
          start: {
            line: 237,
            column: 24
          },
          end: {
            line: 237,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 24
          },
          end: {
            line: 237,
            column: 27
          }
        }, {
          start: {
            line: 237,
            column: 31
          },
          end: {
            line: 237,
            column: 33
          }
        }],
        line: 237
      },
      "42": {
        loc: {
          start: {
            line: 238,
            column: 9
          },
          end: {
            line: 242,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 9
          },
          end: {
            line: 242,
            column: 3
          }
        }, {
          start: {
            line: 240,
            column: 9
          },
          end: {
            line: 242,
            column: 3
          }
        }],
        line: 238
      },
      "43": {
        loc: {
          start: {
            line: 255,
            column: 2
          },
          end: {
            line: 257,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 2
          },
          end: {
            line: 257,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "44": {
        loc: {
          start: {
            line: 255,
            column: 6
          },
          end: {
            line: 255,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 6
          },
          end: {
            line: 255,
            column: 18
          }
        }, {
          start: {
            line: 255,
            column: 22
          },
          end: {
            line: 255,
            column: 39
          }
        }],
        line: 255
      },
      "45": {
        loc: {
          start: {
            line: 276,
            column: 23
          },
          end: {
            line: 276,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 276,
            column: 34
          },
          end: {
            line: 276,
            column: 42
          }
        }],
        line: 276
      },
      "46": {
        loc: {
          start: {
            line: 307,
            column: 2
          },
          end: {
            line: 309,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 2
          },
          end: {
            line: 309,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 307
      },
      "47": {
        loc: {
          start: {
            line: 311,
            column: 2
          },
          end: {
            line: 313,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 2
          },
          end: {
            line: 313,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "48": {
        loc: {
          start: {
            line: 318,
            column: 2
          },
          end: {
            line: 324,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 318,
            column: 2
          },
          end: {
            line: 324,
            column: 3
          }
        }, {
          start: {
            line: 320,
            column: 9
          },
          end: {
            line: 324,
            column: 3
          }
        }],
        line: 318
      },
      "49": {
        loc: {
          start: {
            line: 320,
            column: 9
          },
          end: {
            line: 324,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 9
          },
          end: {
            line: 324,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 320
      },
      "50": {
        loc: {
          start: {
            line: 327,
            column: 2
          },
          end: {
            line: 329,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 2
          },
          end: {
            line: 329,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "51": {
        loc: {
          start: {
            line: 332,
            column: 2
          },
          end: {
            line: 334,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 2
          },
          end: {
            line: 334,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "52": {
        loc: {
          start: {
            line: 332,
            column: 6
          },
          end: {
            line: 332,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 332,
            column: 6
          },
          end: {
            line: 332,
            column: 29
          }
        }, {
          start: {
            line: 332,
            column: 33
          },
          end: {
            line: 332,
            column: 63
          }
        }],
        line: 332
      },
      "53": {
        loc: {
          start: {
            line: 337,
            column: 2
          },
          end: {
            line: 342,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 337,
            column: 2
          },
          end: {
            line: 342,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 337
      },
      "54": {
        loc: {
          start: {
            line: 347,
            column: 2
          },
          end: {
            line: 349,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 2
          },
          end: {
            line: 349,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 347
      },
      "55": {
        loc: {
          start: {
            line: 347,
            column: 6
          },
          end: {
            line: 347,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 347,
            column: 6
          },
          end: {
            line: 347,
            column: 20
          }
        }, {
          start: {
            line: 347,
            column: 24
          },
          end: {
            line: 347,
            column: 40
          }
        }],
        line: 347
      },
      "56": {
        loc: {
          start: {
            line: 354,
            column: 9
          },
          end: {
            line: 354,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 354,
            column: 9
          },
          end: {
            line: 354,
            column: 23
          }
        }, {
          start: {
            line: 354,
            column: 28
          },
          end: {
            line: 354,
            column: 43
          }
        }, {
          start: {
            line: 354,
            column: 47
          },
          end: {
            line: 354,
            column: 63
          }
        }],
        line: 354
      },
      "57": {
        loc: {
          start: {
            line: 367,
            column: 2
          },
          end: {
            line: 369,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 2
          },
          end: {
            line: 369,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "58": {
        loc: {
          start: {
            line: 378,
            column: 2
          },
          end: {
            line: 383,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 378,
            column: 2
          },
          end: {
            line: 383,
            column: 3
          }
        }, {
          start: {
            line: 380,
            column: 9
          },
          end: {
            line: 383,
            column: 3
          }
        }],
        line: 378
      },
      "59": {
        loc: {
          start: {
            line: 387,
            column: 2
          },
          end: {
            line: 389,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 387,
            column: 2
          },
          end: {
            line: 389,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 387
      },
      "60": {
        loc: {
          start: {
            line: 396,
            column: 14
          },
          end: {
            line: 396,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 396,
            column: 14
          },
          end: {
            line: 396,
            column: 23
          }
        }, {
          start: {
            line: 396,
            column: 27
          },
          end: {
            line: 396,
            column: 28
          }
        }],
        line: 396
      },
      "61": {
        loc: {
          start: {
            line: 400,
            column: 2
          },
          end: {
            line: 406,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 400,
            column: 2
          },
          end: {
            line: 406,
            column: 3
          }
        }, {
          start: {
            line: 402,
            column: 9
          },
          end: {
            line: 406,
            column: 3
          }
        }],
        line: 400
      },
      "62": {
        loc: {
          start: {
            line: 402,
            column: 9
          },
          end: {
            line: 406,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 402,
            column: 9
          },
          end: {
            line: 406,
            column: 3
          }
        }, {
          start: {
            line: 404,
            column: 9
          },
          end: {
            line: 406,
            column: 3
          }
        }],
        line: 402
      },
      "63": {
        loc: {
          start: {
            line: 421,
            column: 4
          },
          end: {
            line: 423,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 4
          },
          end: {
            line: 423,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 421
      },
      "64": {
        loc: {
          start: {
            line: 427,
            column: 4
          },
          end: {
            line: 429,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 427,
            column: 4
          },
          end: {
            line: 429,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 427
      },
      "65": {
        loc: {
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 427,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 427,
            column: 16
          }
        }, {
          start: {
            line: 427,
            column: 20
          },
          end: {
            line: 427,
            column: 30
          }
        }],
        line: 427
      },
      "66": {
        loc: {
          start: {
            line: 438,
            column: 24
          },
          end: {
            line: 438,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 438,
            column: 32
          },
          end: {
            line: 438,
            column: 33
          }
        }],
        line: 438
      },
      "67": {
        loc: {
          start: {
            line: 439,
            column: 2
          },
          end: {
            line: 441,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 439,
            column: 2
          },
          end: {
            line: 441,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 439
      },
      "68": {
        loc: {
          start: {
            line: 456,
            column: 14
          },
          end: {
            line: 456,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 456,
            column: 23
          },
          end: {
            line: 456,
            column: 38
          }
        }, {
          start: {
            line: 456,
            column: 41
          },
          end: {
            line: 456,
            column: 42
          }
        }],
        line: 456
      },
      "69": {
        loc: {
          start: {
            line: 457,
            column: 14
          },
          end: {
            line: 457,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 457,
            column: 23
          },
          end: {
            line: 457,
            column: 38
          }
        }, {
          start: {
            line: 457,
            column: 41
          },
          end: {
            line: 457,
            column: 42
          }
        }],
        line: 457
      },
      "70": {
        loc: {
          start: {
            line: 459,
            column: 6
          },
          end: {
            line: 464,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 459,
            column: 6
          },
          end: {
            line: 464,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 459
      },
      "71": {
        loc: {
          start: {
            line: 460,
            column: 8
          },
          end: {
            line: 461,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 460,
            column: 8
          },
          end: {
            line: 460,
            column: 38
          }
        }, {
          start: {
            line: 461,
            column: 8
          },
          end: {
            line: 461,
            column: 12
          }
        }, {
          start: {
            line: 461,
            column: 17
          },
          end: {
            line: 461,
            column: 32
          }
        }, {
          start: {
            line: 461,
            column: 36
          },
          end: {
            line: 461,
            column: 51
          }
        }],
        line: 460
      },
      "72": {
        loc: {
          start: {
            line: 466,
            column: 6
          },
          end: {
            line: 469,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 466,
            column: 6
          },
          end: {
            line: 469,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 466
      },
      "73": {
        loc: {
          start: {
            line: 466,
            column: 10
          },
          end: {
            line: 466,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 466,
            column: 10
          },
          end: {
            line: 466,
            column: 19
          }
        }, {
          start: {
            line: 466,
            column: 23
          },
          end: {
            line: 466,
            column: 38
          }
        }, {
          start: {
            line: 466,
            column: 42
          },
          end: {
            line: 466,
            column: 57
          }
        }],
        line: 466
      },
      "74": {
        loc: {
          start: {
            line: 471,
            column: 6
          },
          end: {
            line: 477,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 471,
            column: 6
          },
          end: {
            line: 477,
            column: 7
          }
        }, {
          start: {
            line: 473,
            column: 13
          },
          end: {
            line: 477,
            column: 7
          }
        }],
        line: 471
      },
      "75": {
        loc: {
          start: {
            line: 472,
            column: 15
          },
          end: {
            line: 472,
            column: 32
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 472,
            column: 26
          },
          end: {
            line: 472,
            column: 27
          }
        }, {
          start: {
            line: 472,
            column: 30
          },
          end: {
            line: 472,
            column: 32
          }
        }],
        line: 472
      },
      "76": {
        loc: {
          start: {
            line: 473,
            column: 13
          },
          end: {
            line: 477,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 473,
            column: 13
          },
          end: {
            line: 477,
            column: 7
          }
        }, {
          start: {
            line: 475,
            column: 13
          },
          end: {
            line: 477,
            column: 7
          }
        }],
        line: 473
      },
      "77": {
        loc: {
          start: {
            line: 474,
            column: 15
          },
          end: {
            line: 474,
            column: 32
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 474,
            column: 26
          },
          end: {
            line: 474,
            column: 28
          }
        }, {
          start: {
            line: 474,
            column: 31
          },
          end: {
            line: 474,
            column: 32
          }
        }],
        line: 474
      },
      "78": {
        loc: {
          start: {
            line: 494,
            column: 2
          },
          end: {
            line: 502,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 494,
            column: 2
          },
          end: {
            line: 502,
            column: 3
          }
        }, {
          start: {
            line: 500,
            column: 9
          },
          end: {
            line: 502,
            column: 3
          }
        }],
        line: 494
      },
      "79": {
        loc: {
          start: {
            line: 525,
            column: 11
          },
          end: {
            line: 525,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 525,
            column: 11
          },
          end: {
            line: 525,
            column: 17
          }
        }, {
          start: {
            line: 525,
            column: 21
          },
          end: {
            line: 525,
            column: 24
          }
        }],
        line: 525
      },
      "80": {
        loc: {
          start: {
            line: 527,
            column: 2
          },
          end: {
            line: 529,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 527,
            column: 2
          },
          end: {
            line: 529,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 527
      },
      "81": {
        loc: {
          start: {
            line: 531,
            column: 2
          },
          end: {
            line: 540,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 531,
            column: 2
          },
          end: {
            line: 540,
            column: 3
          }
        }, {
          start: {
            line: 533,
            column: 9
          },
          end: {
            line: 540,
            column: 3
          }
        }],
        line: 531
      },
      "82": {
        loc: {
          start: {
            line: 535,
            column: 4
          },
          end: {
            line: 537,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 535,
            column: 4
          },
          end: {
            line: 537,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 535
      },
      "83": {
        loc: {
          start: {
            line: 542,
            column: 11
          },
          end: {
            line: 542,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 542,
            column: 49
          },
          end: {
            line: 542,
            column: 52
          }
        }, {
          start: {
            line: 542,
            column: 55
          },
          end: {
            line: 542,
            column: 60
          }
        }],
        line: 542
      },
      "84": {
        loc: {
          start: {
            line: 542,
            column: 12
          },
          end: {
            line: 542,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 542,
            column: 12
          },
          end: {
            line: 542,
            column: 29
          }
        }, {
          start: {
            line: 542,
            column: 33
          },
          end: {
            line: 542,
            column: 45
          }
        }],
        line: 542
      },
      "85": {
        loc: {
          start: {
            line: 557,
            column: 2
          },
          end: {
            line: 562,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 557,
            column: 2
          },
          end: {
            line: 562,
            column: 3
          }
        }, {
          start: {
            line: 559,
            column: 9
          },
          end: {
            line: 562,
            column: 3
          }
        }],
        line: 557
      },
      "86": {
        loc: {
          start: {
            line: 560,
            column: 18
          },
          end: {
            line: 560,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 560,
            column: 39
          },
          end: {
            line: 560,
            column: 42
          }
        }, {
          start: {
            line: 560,
            column: 45
          },
          end: {
            line: 560,
            column: 62
          }
        }],
        line: 560
      },
      "87": {
        loc: {
          start: {
            line: 577,
            column: 2
          },
          end: {
            line: 579,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 577,
            column: 2
          },
          end: {
            line: 579,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 577
      },
      "88": {
        loc: {
          start: {
            line: 581,
            column: 24
          },
          end: {
            line: 581,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 581,
            column: 44
          },
          end: {
            line: 581,
            column: 61
          }
        }, {
          start: {
            line: 581,
            column: 64
          },
          end: {
            line: 581,
            column: 66
          }
        }],
        line: 581
      },
      "89": {
        loc: {
          start: {
            line: 586,
            column: 11
          },
          end: {
            line: 586,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 586,
            column: 11
          },
          end: {
            line: 586,
            column: 15
          }
        }, {
          start: {
            line: 586,
            column: 19
          },
          end: {
            line: 586,
            column: 30
          }
        }],
        line: 586
      },
      "90": {
        loc: {
          start: {
            line: 589,
            column: 22
          },
          end: {
            line: 589,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 589,
            column: 34
          },
          end: {
            line: 589,
            column: 44
          }
        }, {
          start: {
            line: 589,
            column: 47
          },
          end: {
            line: 589,
            column: 51
          }
        }],
        line: 589
      },
      "91": {
        loc: {
          start: {
            line: 593,
            column: 4
          },
          end: {
            line: 595,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 593,
            column: 4
          },
          end: {
            line: 595,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 593
      },
      "92": {
        loc: {
          start: {
            line: 598,
            column: 4
          },
          end: {
            line: 600,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 598,
            column: 4
          },
          end: {
            line: 600,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 598
      },
      "93": {
        loc: {
          start: {
            line: 603,
            column: 4
          },
          end: {
            line: 605,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 603,
            column: 4
          },
          end: {
            line: 605,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 603
      },
      "94": {
        loc: {
          start: {
            line: 608,
            column: 4
          },
          end: {
            line: 610,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 608,
            column: 4
          },
          end: {
            line: 610,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 608
      },
      "95": {
        loc: {
          start: {
            line: 622,
            column: 16
          },
          end: {
            line: 622,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 622,
            column: 24
          },
          end: {
            line: 622,
            column: 41
          }
        }, {
          start: {
            line: 622,
            column: 44
          },
          end: {
            line: 622,
            column: 48
          }
        }],
        line: 622
      },
      "96": {
        loc: {
          start: {
            line: 623,
            column: 9
          },
          end: {
            line: 623,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 623,
            column: 19
          },
          end: {
            line: 623,
            column: 31
          }
        }, {
          start: {
            line: 623,
            column: 34
          },
          end: {
            line: 623,
            column: 38
          }
        }],
        line: 623
      },
      "97": {
        loc: {
          start: {
            line: 630,
            column: 9
          },
          end: {
            line: 630,
            column: 33
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 630,
            column: 24
          },
          end: {
            line: 630,
            column: 27
          }
        }, {
          start: {
            line: 630,
            column: 30
          },
          end: {
            line: 630,
            column: 33
          }
        }],
        line: 630
      },
      "98": {
        loc: {
          start: {
            line: 638,
            column: 38
          },
          end: {
            line: 638,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 638,
            column: 45
          },
          end: {
            line: 638,
            column: 47
          }
        }],
        line: 638
      },
      "99": {
        loc: {
          start: {
            line: 640,
            column: 11
          },
          end: {
            line: 640,
            column: 44
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 640,
            column: 26
          },
          end: {
            line: 640,
            column: 38
          }
        }, {
          start: {
            line: 640,
            column: 41
          },
          end: {
            line: 640,
            column: 44
          }
        }],
        line: 640
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0, 0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0, 0, 0],
      "72": [0, 0],
      "73": [0, 0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0],
      "99": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6812549a0e922a75e71f301d414591238022d4fa"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_199zi7e4qy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_199zi7e4qy();
var lib = (cov_199zi7e4qy().s[0]++, __webpack_require__(/*! ./lib */ 449));
var r = (cov_199zi7e4qy().s[1]++, __webpack_require__(/*! ./runtime */ 5434));
var exports = (cov_199zi7e4qy().s[2]++, module.exports = {});
function normalize(value, defaultValue) {
  cov_199zi7e4qy().f[0]++;
  cov_199zi7e4qy().s[3]++;
  if ((cov_199zi7e4qy().b[1][0]++, value === null) || (cov_199zi7e4qy().b[1][1]++, value === undefined) || (cov_199zi7e4qy().b[1][2]++, value === false)) {
    cov_199zi7e4qy().b[0][0]++;
    cov_199zi7e4qy().s[4]++;
    return defaultValue;
  } else {
    cov_199zi7e4qy().b[0][1]++;
  }
  cov_199zi7e4qy().s[5]++;
  return value;
}
cov_199zi7e4qy().s[6]++;
exports.abs = Math.abs;
function isNaN(num) {
  cov_199zi7e4qy().f[1]++;
  cov_199zi7e4qy().s[7]++;
  return num !== num; // eslint-disable-line no-self-compare
}
function batch(arr, linecount, fillWith) {
  cov_199zi7e4qy().f[2]++;
  var i;
  var res = (cov_199zi7e4qy().s[8]++, []);
  var tmp = (cov_199zi7e4qy().s[9]++, []);
  cov_199zi7e4qy().s[10]++;
  for (i = 0; i < arr.length; i++) {
    cov_199zi7e4qy().s[11]++;
    if ((cov_199zi7e4qy().b[3][0]++, i % linecount === 0) && (cov_199zi7e4qy().b[3][1]++, tmp.length)) {
      cov_199zi7e4qy().b[2][0]++;
      cov_199zi7e4qy().s[12]++;
      res.push(tmp);
      cov_199zi7e4qy().s[13]++;
      tmp = [];
    } else {
      cov_199zi7e4qy().b[2][1]++;
    }
    cov_199zi7e4qy().s[14]++;
    tmp.push(arr[i]);
  }
  cov_199zi7e4qy().s[15]++;
  if (tmp.length) {
    cov_199zi7e4qy().b[4][0]++;
    cov_199zi7e4qy().s[16]++;
    if (fillWith) {
      cov_199zi7e4qy().b[5][0]++;
      cov_199zi7e4qy().s[17]++;
      for (i = tmp.length; i < linecount; i++) {
        cov_199zi7e4qy().s[18]++;
        tmp.push(fillWith);
      }
    } else {
      cov_199zi7e4qy().b[5][1]++;
    }
    cov_199zi7e4qy().s[19]++;
    res.push(tmp);
  } else {
    cov_199zi7e4qy().b[4][1]++;
  }
  cov_199zi7e4qy().s[20]++;
  return res;
}
cov_199zi7e4qy().s[21]++;
exports.batch = batch;
function capitalize(str) {
  cov_199zi7e4qy().f[3]++;
  cov_199zi7e4qy().s[22]++;
  str = normalize(str, '');
  const ret = (cov_199zi7e4qy().s[23]++, str.toLowerCase());
  cov_199zi7e4qy().s[24]++;
  return r.copySafeness(str, ret.charAt(0).toUpperCase() + ret.slice(1));
}
cov_199zi7e4qy().s[25]++;
exports.capitalize = capitalize;
function center(str, width) {
  cov_199zi7e4qy().f[4]++;
  cov_199zi7e4qy().s[26]++;
  str = normalize(str, '');
  cov_199zi7e4qy().s[27]++;
  width = (cov_199zi7e4qy().b[6][0]++, width) || (cov_199zi7e4qy().b[6][1]++, 80);
  cov_199zi7e4qy().s[28]++;
  if (str.length >= width) {
    cov_199zi7e4qy().b[7][0]++;
    cov_199zi7e4qy().s[29]++;
    return str;
  } else {
    cov_199zi7e4qy().b[7][1]++;
  }
  const spaces = (cov_199zi7e4qy().s[30]++, width - str.length);
  const pre = (cov_199zi7e4qy().s[31]++, lib.repeat(' ', spaces / 2 - spaces % 2));
  const post = (cov_199zi7e4qy().s[32]++, lib.repeat(' ', spaces / 2));
  cov_199zi7e4qy().s[33]++;
  return r.copySafeness(str, pre + str + post);
}
cov_199zi7e4qy().s[34]++;
exports.center = center;
function default_(val, def, bool) {
  cov_199zi7e4qy().f[5]++;
  cov_199zi7e4qy().s[35]++;
  if (bool) {
    cov_199zi7e4qy().b[8][0]++;
    cov_199zi7e4qy().s[36]++;
    return (cov_199zi7e4qy().b[9][0]++, val) || (cov_199zi7e4qy().b[9][1]++, def);
  } else {
    cov_199zi7e4qy().b[8][1]++;
    cov_199zi7e4qy().s[37]++;
    return val !== undefined ? (cov_199zi7e4qy().b[10][0]++, val) : (cov_199zi7e4qy().b[10][1]++, def);
  }
}

// TODO: it is confusing to export something called 'default'
cov_199zi7e4qy().s[38]++;
exports['default'] = default_; // eslint-disable-line dot-notation

function dictsort(val, caseSensitive, by) {
  cov_199zi7e4qy().f[6]++;
  cov_199zi7e4qy().s[39]++;
  if (!lib.isObject(val)) {
    cov_199zi7e4qy().b[11][0]++;
    cov_199zi7e4qy().s[40]++;
    throw new lib.TemplateError('dictsort filter: val must be an object');
  } else {
    cov_199zi7e4qy().b[11][1]++;
  }
  let array = (cov_199zi7e4qy().s[41]++, []);
  // deliberately include properties from the object's prototype
  cov_199zi7e4qy().s[42]++;
  for (let k in val) {
    cov_199zi7e4qy().s[43]++;
    // eslint-disable-line guard-for-in, no-restricted-syntax
    array.push([k, val[k]]);
  }
  let si;
  cov_199zi7e4qy().s[44]++;
  if ((cov_199zi7e4qy().b[13][0]++, by === undefined) || (cov_199zi7e4qy().b[13][1]++, by === 'key')) {
    cov_199zi7e4qy().b[12][0]++;
    cov_199zi7e4qy().s[45]++;
    si = 0;
  } else {
    cov_199zi7e4qy().b[12][1]++;
    cov_199zi7e4qy().s[46]++;
    if (by === 'value') {
      cov_199zi7e4qy().b[14][0]++;
      cov_199zi7e4qy().s[47]++;
      si = 1;
    } else {
      cov_199zi7e4qy().b[14][1]++;
      cov_199zi7e4qy().s[48]++;
      throw new lib.TemplateError('dictsort filter: You can only sort by either key or value');
    }
  }
  cov_199zi7e4qy().s[49]++;
  array.sort((t1, t2) => {
    cov_199zi7e4qy().f[7]++;
    var a = (cov_199zi7e4qy().s[50]++, t1[si]);
    var b = (cov_199zi7e4qy().s[51]++, t2[si]);
    cov_199zi7e4qy().s[52]++;
    if (!caseSensitive) {
      cov_199zi7e4qy().b[15][0]++;
      cov_199zi7e4qy().s[53]++;
      if (lib.isString(a)) {
        cov_199zi7e4qy().b[16][0]++;
        cov_199zi7e4qy().s[54]++;
        a = a.toUpperCase();
      } else {
        cov_199zi7e4qy().b[16][1]++;
      }
      cov_199zi7e4qy().s[55]++;
      if (lib.isString(b)) {
        cov_199zi7e4qy().b[17][0]++;
        cov_199zi7e4qy().s[56]++;
        b = b.toUpperCase();
      } else {
        cov_199zi7e4qy().b[17][1]++;
      }
    } else {
      cov_199zi7e4qy().b[15][1]++;
    }
    cov_199zi7e4qy().s[57]++;
    return a > b ? (cov_199zi7e4qy().b[18][0]++, 1) : (cov_199zi7e4qy().b[18][1]++, a === b ? (cov_199zi7e4qy().b[19][0]++, 0) : (cov_199zi7e4qy().b[19][1]++, -1)); // eslint-disable-line no-nested-ternary
  });
  cov_199zi7e4qy().s[58]++;
  return array;
}
cov_199zi7e4qy().s[59]++;
exports.dictsort = dictsort;
function dump(obj, spaces) {
  cov_199zi7e4qy().f[8]++;
  cov_199zi7e4qy().s[60]++;
  return JSON.stringify(obj, null, spaces);
}
cov_199zi7e4qy().s[61]++;
exports.dump = dump;
function escape(str) {
  cov_199zi7e4qy().f[9]++;
  cov_199zi7e4qy().s[62]++;
  if (str instanceof r.SafeString) {
    cov_199zi7e4qy().b[20][0]++;
    cov_199zi7e4qy().s[63]++;
    return str;
  } else {
    cov_199zi7e4qy().b[20][1]++;
  }
  cov_199zi7e4qy().s[64]++;
  str = (cov_199zi7e4qy().b[22][0]++, str === null) || (cov_199zi7e4qy().b[22][1]++, str === undefined) ? (cov_199zi7e4qy().b[21][0]++, '') : (cov_199zi7e4qy().b[21][1]++, str);
  cov_199zi7e4qy().s[65]++;
  return r.markSafe(lib.escape(str.toString()));
}
cov_199zi7e4qy().s[66]++;
exports.escape = escape;
function safe(str) {
  cov_199zi7e4qy().f[10]++;
  cov_199zi7e4qy().s[67]++;
  if (str instanceof r.SafeString) {
    cov_199zi7e4qy().b[23][0]++;
    cov_199zi7e4qy().s[68]++;
    return str;
  } else {
    cov_199zi7e4qy().b[23][1]++;
  }
  cov_199zi7e4qy().s[69]++;
  str = (cov_199zi7e4qy().b[25][0]++, str === null) || (cov_199zi7e4qy().b[25][1]++, str === undefined) ? (cov_199zi7e4qy().b[24][0]++, '') : (cov_199zi7e4qy().b[24][1]++, str);
  cov_199zi7e4qy().s[70]++;
  return r.markSafe(str.toString());
}
cov_199zi7e4qy().s[71]++;
exports.safe = safe;
function first(arr) {
  cov_199zi7e4qy().f[11]++;
  cov_199zi7e4qy().s[72]++;
  return arr[0];
}
cov_199zi7e4qy().s[73]++;
exports.first = first;
function forceescape(str) {
  cov_199zi7e4qy().f[12]++;
  cov_199zi7e4qy().s[74]++;
  str = (cov_199zi7e4qy().b[27][0]++, str === null) || (cov_199zi7e4qy().b[27][1]++, str === undefined) ? (cov_199zi7e4qy().b[26][0]++, '') : (cov_199zi7e4qy().b[26][1]++, str);
  cov_199zi7e4qy().s[75]++;
  return r.markSafe(lib.escape(str.toString()));
}
cov_199zi7e4qy().s[76]++;
exports.forceescape = forceescape;
function groupby(arr, attr) {
  cov_199zi7e4qy().f[13]++;
  cov_199zi7e4qy().s[77]++;
  return lib.groupBy(arr, attr, this.env.opts.throwOnUndefined);
}
cov_199zi7e4qy().s[78]++;
exports.groupby = groupby;
function indent(str, width, indentfirst) {
  cov_199zi7e4qy().f[14]++;
  cov_199zi7e4qy().s[79]++;
  str = normalize(str, '');
  cov_199zi7e4qy().s[80]++;
  if (str === '') {
    cov_199zi7e4qy().b[28][0]++;
    cov_199zi7e4qy().s[81]++;
    return '';
  } else {
    cov_199zi7e4qy().b[28][1]++;
  }
  cov_199zi7e4qy().s[82]++;
  width = (cov_199zi7e4qy().b[29][0]++, width) || (cov_199zi7e4qy().b[29][1]++, 4);
  // let res = '';
  const lines = (cov_199zi7e4qy().s[83]++, str.split('\n'));
  const sp = (cov_199zi7e4qy().s[84]++, lib.repeat(' ', width));
  const res = (cov_199zi7e4qy().s[85]++, lines.map((l, i) => {
    cov_199zi7e4qy().f[15]++;
    cov_199zi7e4qy().s[86]++;
    return (cov_199zi7e4qy().b[31][0]++, i === 0) && (cov_199zi7e4qy().b[31][1]++, !indentfirst) ? (cov_199zi7e4qy().b[30][0]++, l) : (cov_199zi7e4qy().b[30][1]++, `${sp}${l}`);
  }).join('\n'));
  cov_199zi7e4qy().s[87]++;
  return r.copySafeness(str, res);
}
cov_199zi7e4qy().s[88]++;
exports.indent = indent;
function join(arr, del, attr) {
  cov_199zi7e4qy().f[16]++;
  cov_199zi7e4qy().s[89]++;
  del = (cov_199zi7e4qy().b[32][0]++, del) || (cov_199zi7e4qy().b[32][1]++, '');
  cov_199zi7e4qy().s[90]++;
  if (attr) {
    cov_199zi7e4qy().b[33][0]++;
    cov_199zi7e4qy().s[91]++;
    arr = lib.map(arr, v => {
      cov_199zi7e4qy().f[17]++;
      cov_199zi7e4qy().s[92]++;
      return v[attr];
    });
  } else {
    cov_199zi7e4qy().b[33][1]++;
  }
  cov_199zi7e4qy().s[93]++;
  return arr.join(del);
}
cov_199zi7e4qy().s[94]++;
exports.join = join;
function last(arr) {
  cov_199zi7e4qy().f[18]++;
  cov_199zi7e4qy().s[95]++;
  return arr[arr.length - 1];
}
cov_199zi7e4qy().s[96]++;
exports.last = last;
function lengthFilter(val) {
  cov_199zi7e4qy().f[19]++;
  var value = (cov_199zi7e4qy().s[97]++, normalize(val, ''));
  cov_199zi7e4qy().s[98]++;
  if (value !== undefined) {
    cov_199zi7e4qy().b[34][0]++;
    cov_199zi7e4qy().s[99]++;
    if ((cov_199zi7e4qy().b[36][0]++, typeof Map === 'function') && (cov_199zi7e4qy().b[36][1]++, value instanceof Map) || (cov_199zi7e4qy().b[36][2]++, typeof Set === 'function') && (cov_199zi7e4qy().b[36][3]++, value instanceof Set)) {
      cov_199zi7e4qy().b[35][0]++;
      cov_199zi7e4qy().s[100]++;
      // ECMAScript 2015 Maps and Sets
      return value.size;
    } else {
      cov_199zi7e4qy().b[35][1]++;
    }
    cov_199zi7e4qy().s[101]++;
    if ((cov_199zi7e4qy().b[38][0]++, lib.isObject(value)) && (cov_199zi7e4qy().b[38][1]++, !(value instanceof r.SafeString))) {
      cov_199zi7e4qy().b[37][0]++;
      cov_199zi7e4qy().s[102]++;
      // Objects (besides SafeStrings), non-primative Arrays
      return lib.keys(value).length;
    } else {
      cov_199zi7e4qy().b[37][1]++;
    }
    cov_199zi7e4qy().s[103]++;
    return value.length;
  } else {
    cov_199zi7e4qy().b[34][1]++;
  }
  cov_199zi7e4qy().s[104]++;
  return 0;
}
cov_199zi7e4qy().s[105]++;
exports.length = lengthFilter;
function list(val) {
  cov_199zi7e4qy().f[20]++;
  cov_199zi7e4qy().s[106]++;
  if (lib.isString(val)) {
    cov_199zi7e4qy().b[39][0]++;
    cov_199zi7e4qy().s[107]++;
    return val.split('');
  } else {
    cov_199zi7e4qy().b[39][1]++;
    cov_199zi7e4qy().s[108]++;
    if (lib.isObject(val)) {
      cov_199zi7e4qy().b[40][0]++;
      cov_199zi7e4qy().s[109]++;
      return lib._entries((cov_199zi7e4qy().b[41][0]++, val) || (cov_199zi7e4qy().b[41][1]++, {})).map(_ref => {
        let [key, value] = _ref;
        cov_199zi7e4qy().f[21]++;
        cov_199zi7e4qy().s[110]++;
        return {
          key,
          value
        };
      });
    } else {
      cov_199zi7e4qy().b[40][1]++;
      cov_199zi7e4qy().s[111]++;
      if (lib.isArray(val)) {
        cov_199zi7e4qy().b[42][0]++;
        cov_199zi7e4qy().s[112]++;
        return val;
      } else {
        cov_199zi7e4qy().b[42][1]++;
        cov_199zi7e4qy().s[113]++;
        throw new lib.TemplateError('list filter: type not iterable');
      }
    }
  }
}
cov_199zi7e4qy().s[114]++;
exports.list = list;
function lower(str) {
  cov_199zi7e4qy().f[22]++;
  cov_199zi7e4qy().s[115]++;
  str = normalize(str, '');
  cov_199zi7e4qy().s[116]++;
  return str.toLowerCase();
}
cov_199zi7e4qy().s[117]++;
exports.lower = lower;
function nl2br(str) {
  cov_199zi7e4qy().f[23]++;
  cov_199zi7e4qy().s[118]++;
  if ((cov_199zi7e4qy().b[44][0]++, str === null) || (cov_199zi7e4qy().b[44][1]++, str === undefined)) {
    cov_199zi7e4qy().b[43][0]++;
    cov_199zi7e4qy().s[119]++;
    return '';
  } else {
    cov_199zi7e4qy().b[43][1]++;
  }
  cov_199zi7e4qy().s[120]++;
  return r.copySafeness(str, str.replace(/\r\n|\n/g, '<br />\n'));
}
cov_199zi7e4qy().s[121]++;
exports.nl2br = nl2br;
function random(arr) {
  cov_199zi7e4qy().f[24]++;
  cov_199zi7e4qy().s[122]++;
  return arr[Math.floor(Math.random() * arr.length)];
}
cov_199zi7e4qy().s[123]++;
exports.random = random;

/**
 * Construct select or reject filter
 *
 * @param {boolean} expectedTestResult
 * @returns {function(array, string, *): array}
 */
function getSelectOrReject(expectedTestResult) {
  cov_199zi7e4qy().f[25]++;
  function filter(arr, testName, secondArg) {
    if (testName === void 0) {
      testName = (cov_199zi7e4qy().b[45][0]++, 'truthy');
    }
    cov_199zi7e4qy().f[26]++;
    const context = (cov_199zi7e4qy().s[124]++, this);
    const test = (cov_199zi7e4qy().s[125]++, context.env.getTest(testName));
    cov_199zi7e4qy().s[126]++;
    return lib.toArray(arr).filter(function examineTestResult(item) {
      cov_199zi7e4qy().f[27]++;
      cov_199zi7e4qy().s[127]++;
      return test.call(context, item, secondArg) === expectedTestResult;
    });
  }
  cov_199zi7e4qy().s[128]++;
  return filter;
}
cov_199zi7e4qy().s[129]++;
exports.reject = getSelectOrReject(false);
function rejectattr(arr, attr) {
  cov_199zi7e4qy().f[28]++;
  cov_199zi7e4qy().s[130]++;
  return arr.filter(item => {
    cov_199zi7e4qy().f[29]++;
    cov_199zi7e4qy().s[131]++;
    return !item[attr];
  });
}
cov_199zi7e4qy().s[132]++;
exports.rejectattr = rejectattr;
cov_199zi7e4qy().s[133]++;
exports.select = getSelectOrReject(true);
function selectattr(arr, attr) {
  cov_199zi7e4qy().f[30]++;
  cov_199zi7e4qy().s[134]++;
  return arr.filter(item => {
    cov_199zi7e4qy().f[31]++;
    cov_199zi7e4qy().s[135]++;
    return !!item[attr];
  });
}
cov_199zi7e4qy().s[136]++;
exports.selectattr = selectattr;
function replace(str, old, new_, maxCount) {
  cov_199zi7e4qy().f[32]++;
  var originalStr = (cov_199zi7e4qy().s[137]++, str);
  cov_199zi7e4qy().s[138]++;
  if (old instanceof RegExp) {
    cov_199zi7e4qy().b[46][0]++;
    cov_199zi7e4qy().s[139]++;
    return str.replace(old, new_);
  } else {
    cov_199zi7e4qy().b[46][1]++;
  }
  cov_199zi7e4qy().s[140]++;
  if (typeof maxCount === 'undefined') {
    cov_199zi7e4qy().b[47][0]++;
    cov_199zi7e4qy().s[141]++;
    maxCount = -1;
  } else {
    cov_199zi7e4qy().b[47][1]++;
  }
  let res = (cov_199zi7e4qy().s[142]++, ''); // Output

  // Cast Numbers in the search term to string
  cov_199zi7e4qy().s[143]++;
  if (typeof old === 'number') {
    cov_199zi7e4qy().b[48][0]++;
    cov_199zi7e4qy().s[144]++;
    old = '' + old;
  } else {
    cov_199zi7e4qy().b[48][1]++;
    cov_199zi7e4qy().s[145]++;
    if (typeof old !== 'string') {
      cov_199zi7e4qy().b[49][0]++;
      cov_199zi7e4qy().s[146]++;
      // If it is something other than number or string,
      // return the original string
      return str;
    } else {
      cov_199zi7e4qy().b[49][1]++;
    }
  }

  // Cast numbers in the replacement to string
  cov_199zi7e4qy().s[147]++;
  if (typeof str === 'number') {
    cov_199zi7e4qy().b[50][0]++;
    cov_199zi7e4qy().s[148]++;
    str = '' + str;
  } else {
    cov_199zi7e4qy().b[50][1]++;
  }

  // If by now, we don't have a string, throw it back
  cov_199zi7e4qy().s[149]++;
  if ((cov_199zi7e4qy().b[52][0]++, typeof str !== 'string') && (cov_199zi7e4qy().b[52][1]++, !(str instanceof r.SafeString))) {
    cov_199zi7e4qy().b[51][0]++;
    cov_199zi7e4qy().s[150]++;
    return str;
  } else {
    cov_199zi7e4qy().b[51][1]++;
  }

  // ShortCircuits
  cov_199zi7e4qy().s[151]++;
  if (old === '') {
    cov_199zi7e4qy().b[53][0]++;
    cov_199zi7e4qy().s[152]++;
    // Mimic the python behaviour: empty string is replaced
    // by replacement e.g. "abc"|replace("", ".") -> .a.b.c.
    res = new_ + str.split('').join(new_) + new_;
    cov_199zi7e4qy().s[153]++;
    return r.copySafeness(str, res);
  } else {
    cov_199zi7e4qy().b[53][1]++;
  }
  let nextIndex = (cov_199zi7e4qy().s[154]++, str.indexOf(old));
  // if # of replacements to perform is 0, or the string to does
  // not contain the old value, return the string
  cov_199zi7e4qy().s[155]++;
  if ((cov_199zi7e4qy().b[55][0]++, maxCount === 0) || (cov_199zi7e4qy().b[55][1]++, nextIndex === -1)) {
    cov_199zi7e4qy().b[54][0]++;
    cov_199zi7e4qy().s[156]++;
    return str;
  } else {
    cov_199zi7e4qy().b[54][1]++;
  }
  let pos = (cov_199zi7e4qy().s[157]++, 0);
  let count = (cov_199zi7e4qy().s[158]++, 0); // # of replacements made
  cov_199zi7e4qy().s[159]++;
  while ((cov_199zi7e4qy().b[56][0]++, nextIndex > -1) && ((cov_199zi7e4qy().b[56][1]++, maxCount === -1) || (cov_199zi7e4qy().b[56][2]++, count < maxCount))) {
    cov_199zi7e4qy().s[160]++;
    // Grab the next chunk of src string and add it with the
    // replacement, to the result
    res += str.substring(pos, nextIndex) + new_;
    // Increment our pointer in the src string
    cov_199zi7e4qy().s[161]++;
    pos = nextIndex + old.length;
    cov_199zi7e4qy().s[162]++;
    count++;
    // See if there are any more replacements to be made
    cov_199zi7e4qy().s[163]++;
    nextIndex = str.indexOf(old, pos);
  }

  // We've either reached the end, or done the max # of
  // replacements, tack on any remaining string
  cov_199zi7e4qy().s[164]++;
  if (pos < str.length) {
    cov_199zi7e4qy().b[57][0]++;
    cov_199zi7e4qy().s[165]++;
    res += str.substring(pos);
  } else {
    cov_199zi7e4qy().b[57][1]++;
  }
  cov_199zi7e4qy().s[166]++;
  return r.copySafeness(originalStr, res);
}
cov_199zi7e4qy().s[167]++;
exports.replace = replace;
function reverse(val) {
  cov_199zi7e4qy().f[33]++;
  var arr;
  cov_199zi7e4qy().s[168]++;
  if (lib.isString(val)) {
    cov_199zi7e4qy().b[58][0]++;
    cov_199zi7e4qy().s[169]++;
    arr = list(val);
  } else {
    cov_199zi7e4qy().b[58][1]++;
    cov_199zi7e4qy().s[170]++;
    // Copy it
    arr = lib.map(val, v => {
      cov_199zi7e4qy().f[34]++;
      cov_199zi7e4qy().s[171]++;
      return v;
    });
  }
  cov_199zi7e4qy().s[172]++;
  arr.reverse();
  cov_199zi7e4qy().s[173]++;
  if (lib.isString(val)) {
    cov_199zi7e4qy().b[59][0]++;
    cov_199zi7e4qy().s[174]++;
    return r.copySafeness(val, arr.join(''));
  } else {
    cov_199zi7e4qy().b[59][1]++;
  }
  cov_199zi7e4qy().s[175]++;
  return arr;
}
cov_199zi7e4qy().s[176]++;
exports.reverse = reverse;
function round(val, precision, method) {
  cov_199zi7e4qy().f[35]++;
  cov_199zi7e4qy().s[177]++;
  precision = (cov_199zi7e4qy().b[60][0]++, precision) || (cov_199zi7e4qy().b[60][1]++, 0);
  const factor = (cov_199zi7e4qy().s[178]++, Math.pow(10, precision));
  let rounder;
  cov_199zi7e4qy().s[179]++;
  if (method === 'ceil') {
    cov_199zi7e4qy().b[61][0]++;
    cov_199zi7e4qy().s[180]++;
    rounder = Math.ceil;
  } else {
    cov_199zi7e4qy().b[61][1]++;
    cov_199zi7e4qy().s[181]++;
    if (method === 'floor') {
      cov_199zi7e4qy().b[62][0]++;
      cov_199zi7e4qy().s[182]++;
      rounder = Math.floor;
    } else {
      cov_199zi7e4qy().b[62][1]++;
      cov_199zi7e4qy().s[183]++;
      rounder = Math.round;
    }
  }
  cov_199zi7e4qy().s[184]++;
  return rounder(val * factor) / factor;
}
cov_199zi7e4qy().s[185]++;
exports.round = round;
function slice(arr, slices, fillWith) {
  cov_199zi7e4qy().f[36]++;
  const sliceLength = (cov_199zi7e4qy().s[186]++, Math.floor(arr.length / slices));
  const extra = (cov_199zi7e4qy().s[187]++, arr.length % slices);
  const res = (cov_199zi7e4qy().s[188]++, []);
  let offset = (cov_199zi7e4qy().s[189]++, 0);
  cov_199zi7e4qy().s[190]++;
  for (let i = (cov_199zi7e4qy().s[191]++, 0); i < slices; i++) {
    const start = (cov_199zi7e4qy().s[192]++, offset + i * sliceLength);
    cov_199zi7e4qy().s[193]++;
    if (i < extra) {
      cov_199zi7e4qy().b[63][0]++;
      cov_199zi7e4qy().s[194]++;
      offset++;
    } else {
      cov_199zi7e4qy().b[63][1]++;
    }
    const end = (cov_199zi7e4qy().s[195]++, offset + (i + 1) * sliceLength);
    const currSlice = (cov_199zi7e4qy().s[196]++, arr.slice(start, end));
    cov_199zi7e4qy().s[197]++;
    if ((cov_199zi7e4qy().b[65][0]++, fillWith) && (cov_199zi7e4qy().b[65][1]++, i >= extra)) {
      cov_199zi7e4qy().b[64][0]++;
      cov_199zi7e4qy().s[198]++;
      currSlice.push(fillWith);
    } else {
      cov_199zi7e4qy().b[64][1]++;
    }
    cov_199zi7e4qy().s[199]++;
    res.push(currSlice);
  }
  cov_199zi7e4qy().s[200]++;
  return res;
}
cov_199zi7e4qy().s[201]++;
exports.slice = slice;
function sum(arr, attr, start) {
  if (start === void 0) {
    start = (cov_199zi7e4qy().b[66][0]++, 0);
  }
  cov_199zi7e4qy().f[37]++;
  cov_199zi7e4qy().s[202]++;
  if (attr) {
    cov_199zi7e4qy().b[67][0]++;
    cov_199zi7e4qy().s[203]++;
    arr = lib.map(arr, v => {
      cov_199zi7e4qy().f[38]++;
      cov_199zi7e4qy().s[204]++;
      return v[attr];
    });
  } else {
    cov_199zi7e4qy().b[67][1]++;
  }
  cov_199zi7e4qy().s[205]++;
  return start + arr.reduce((a, b) => {
    cov_199zi7e4qy().f[39]++;
    cov_199zi7e4qy().s[206]++;
    return a + b;
  }, 0);
}
cov_199zi7e4qy().s[207]++;
exports.sum = sum;
cov_199zi7e4qy().s[208]++;
exports.sort = r.makeMacro(['value', 'reverse', 'case_sensitive', 'attribute'], [], function sortFilter(arr, reversed, caseSens, attr) {
  cov_199zi7e4qy().f[40]++;
  // Copy it
  let array = (cov_199zi7e4qy().s[209]++, lib.map(arr, v => {
    cov_199zi7e4qy().f[41]++;
    cov_199zi7e4qy().s[210]++;
    return v;
  }));
  let getAttribute = (cov_199zi7e4qy().s[211]++, lib.getAttrGetter(attr));
  cov_199zi7e4qy().s[212]++;
  array.sort((a, b) => {
    cov_199zi7e4qy().f[42]++;
    let x = (cov_199zi7e4qy().s[213]++, attr ? (cov_199zi7e4qy().b[68][0]++, getAttribute(a)) : (cov_199zi7e4qy().b[68][1]++, a));
    let y = (cov_199zi7e4qy().s[214]++, attr ? (cov_199zi7e4qy().b[69][0]++, getAttribute(b)) : (cov_199zi7e4qy().b[69][1]++, b));
    cov_199zi7e4qy().s[215]++;
    if ((cov_199zi7e4qy().b[71][0]++, this.env.opts.throwOnUndefined) && (cov_199zi7e4qy().b[71][1]++, attr) && ((cov_199zi7e4qy().b[71][2]++, x === undefined) || (cov_199zi7e4qy().b[71][3]++, y === undefined))) {
      cov_199zi7e4qy().b[70][0]++;
      cov_199zi7e4qy().s[216]++;
      throw new TypeError(`sort: attribute "${attr}" resolved to undefined`);
    } else {
      cov_199zi7e4qy().b[70][1]++;
    }
    cov_199zi7e4qy().s[217]++;
    if ((cov_199zi7e4qy().b[73][0]++, !caseSens) && (cov_199zi7e4qy().b[73][1]++, lib.isString(x)) && (cov_199zi7e4qy().b[73][2]++, lib.isString(y))) {
      cov_199zi7e4qy().b[72][0]++;
      cov_199zi7e4qy().s[218]++;
      x = x.toLowerCase();
      cov_199zi7e4qy().s[219]++;
      y = y.toLowerCase();
    } else {
      cov_199zi7e4qy().b[72][1]++;
    }
    cov_199zi7e4qy().s[220]++;
    if (x < y) {
      cov_199zi7e4qy().b[74][0]++;
      cov_199zi7e4qy().s[221]++;
      return reversed ? (cov_199zi7e4qy().b[75][0]++, 1) : (cov_199zi7e4qy().b[75][1]++, -1);
    } else {
      cov_199zi7e4qy().b[74][1]++;
      cov_199zi7e4qy().s[222]++;
      if (x > y) {
        cov_199zi7e4qy().b[76][0]++;
        cov_199zi7e4qy().s[223]++;
        return reversed ? (cov_199zi7e4qy().b[77][0]++, -1) : (cov_199zi7e4qy().b[77][1]++, 1);
      } else {
        cov_199zi7e4qy().b[76][1]++;
        cov_199zi7e4qy().s[224]++;
        return 0;
      }
    }
  });
  cov_199zi7e4qy().s[225]++;
  return array;
});
function string(obj) {
  cov_199zi7e4qy().f[43]++;
  cov_199zi7e4qy().s[226]++;
  return r.copySafeness(obj, obj);
}
cov_199zi7e4qy().s[227]++;
exports.string = string;
function striptags(input, preserveLinebreaks) {
  cov_199zi7e4qy().f[44]++;
  cov_199zi7e4qy().s[228]++;
  input = normalize(input, '');
  let tags = (cov_199zi7e4qy().s[229]++, /<\/?([a-z][a-z0-9]*)\b[^>]*>|<!--[\s\S]*?-->/gi);
  let trimmedInput = (cov_199zi7e4qy().s[230]++, trim(input.replace(tags, '')));
  let res = (cov_199zi7e4qy().s[231]++, '');
  cov_199zi7e4qy().s[232]++;
  if (preserveLinebreaks) {
    cov_199zi7e4qy().b[78][0]++;
    cov_199zi7e4qy().s[233]++;
    res = trimmedInput.replace(/^ +| +$/gm, '') // remove leading and trailing spaces
    .replace(/ +/g, ' ') // squash adjacent spaces
    .replace(/(\r\n)/g, '\n') // normalize linebreaks (CRLF -> LF)
    .replace(/\n\n\n+/g, '\n\n'); // squash abnormal adjacent linebreaks
  } else {
    cov_199zi7e4qy().b[78][1]++;
    cov_199zi7e4qy().s[234]++;
    res = trimmedInput.replace(/\s+/gi, ' ');
  }
  cov_199zi7e4qy().s[235]++;
  return r.copySafeness(input, res);
}
cov_199zi7e4qy().s[236]++;
exports.striptags = striptags;
function title(str) {
  cov_199zi7e4qy().f[45]++;
  cov_199zi7e4qy().s[237]++;
  str = normalize(str, '');
  let words = (cov_199zi7e4qy().s[238]++, str.split(' ').map(word => {
    cov_199zi7e4qy().f[46]++;
    cov_199zi7e4qy().s[239]++;
    return capitalize(word);
  }));
  cov_199zi7e4qy().s[240]++;
  return r.copySafeness(str, words.join(' '));
}
cov_199zi7e4qy().s[241]++;
exports.title = title;
function trim(str) {
  cov_199zi7e4qy().f[47]++;
  cov_199zi7e4qy().s[242]++;
  return r.copySafeness(str, str.replace(/^\s*|\s*$/g, ''));
}
cov_199zi7e4qy().s[243]++;
exports.trim = trim;
function truncate(input, length, killwords, end) {
  cov_199zi7e4qy().f[48]++;
  var orig = (cov_199zi7e4qy().s[244]++, input);
  cov_199zi7e4qy().s[245]++;
  input = normalize(input, '');
  cov_199zi7e4qy().s[246]++;
  length = (cov_199zi7e4qy().b[79][0]++, length) || (cov_199zi7e4qy().b[79][1]++, 255);
  cov_199zi7e4qy().s[247]++;
  if (input.length <= length) {
    cov_199zi7e4qy().b[80][0]++;
    cov_199zi7e4qy().s[248]++;
    return input;
  } else {
    cov_199zi7e4qy().b[80][1]++;
  }
  cov_199zi7e4qy().s[249]++;
  if (killwords) {
    cov_199zi7e4qy().b[81][0]++;
    cov_199zi7e4qy().s[250]++;
    input = input.substring(0, length);
  } else {
    cov_199zi7e4qy().b[81][1]++;
    let idx = (cov_199zi7e4qy().s[251]++, input.lastIndexOf(' ', length));
    cov_199zi7e4qy().s[252]++;
    if (idx === -1) {
      cov_199zi7e4qy().b[82][0]++;
      cov_199zi7e4qy().s[253]++;
      idx = length;
    } else {
      cov_199zi7e4qy().b[82][1]++;
    }
    cov_199zi7e4qy().s[254]++;
    input = input.substring(0, idx);
  }
  cov_199zi7e4qy().s[255]++;
  input += (cov_199zi7e4qy().b[84][0]++, end !== undefined) && (cov_199zi7e4qy().b[84][1]++, end !== null) ? (cov_199zi7e4qy().b[83][0]++, end) : (cov_199zi7e4qy().b[83][1]++, '...');
  cov_199zi7e4qy().s[256]++;
  return r.copySafeness(orig, input);
}
cov_199zi7e4qy().s[257]++;
exports.truncate = truncate;
function upper(str) {
  cov_199zi7e4qy().f[49]++;
  cov_199zi7e4qy().s[258]++;
  str = normalize(str, '');
  cov_199zi7e4qy().s[259]++;
  return str.toUpperCase();
}
cov_199zi7e4qy().s[260]++;
exports.upper = upper;
function urlencode(obj) {
  cov_199zi7e4qy().f[50]++;
  var enc = (cov_199zi7e4qy().s[261]++, encodeURIComponent);
  cov_199zi7e4qy().s[262]++;
  if (lib.isString(obj)) {
    cov_199zi7e4qy().b[85][0]++;
    cov_199zi7e4qy().s[263]++;
    return enc(obj);
  } else {
    cov_199zi7e4qy().b[85][1]++;
    let keyvals = (cov_199zi7e4qy().s[264]++, lib.isArray(obj) ? (cov_199zi7e4qy().b[86][0]++, obj) : (cov_199zi7e4qy().b[86][1]++, lib._entries(obj)));
    cov_199zi7e4qy().s[265]++;
    return keyvals.map(_ref2 => {
      let [k, v] = _ref2;
      cov_199zi7e4qy().f[51]++;
      cov_199zi7e4qy().s[266]++;
      return `${enc(k)}=${enc(v)}`;
    }).join('&');
  }
}
cov_199zi7e4qy().s[267]++;
exports.urlencode = urlencode;

// For the jinja regexp, see
// https://github.com/mitsuhiko/jinja2/blob/f15b814dcba6aa12bc74d1f7d0c881d55f7126be/jinja2/utils.py#L20-L23
const puncRe = (cov_199zi7e4qy().s[268]++, /^(?:\(|<|&lt;)?(.*?)(?:\.|,|\)|\n|&gt;)?$/);
// from http://blog.gerv.net/2011/05/html5_email_address_regexp/
const emailRe = (cov_199zi7e4qy().s[269]++, /^[\w.!#$%&'*+\-\/=?\^`{|}~]+@[a-z\d\-]+(\.[a-z\d\-]+)+$/i);
const httpHttpsRe = (cov_199zi7e4qy().s[270]++, /^https?:\/\/.*$/);
const wwwRe = (cov_199zi7e4qy().s[271]++, /^www\./);
const tldRe = (cov_199zi7e4qy().s[272]++, /\.(?:org|net|com)(?:\:|\/|$)/);
function urlize(str, length, nofollow) {
  cov_199zi7e4qy().f[52]++;
  cov_199zi7e4qy().s[273]++;
  if (isNaN(length)) {
    cov_199zi7e4qy().b[87][0]++;
    cov_199zi7e4qy().s[274]++;
    length = Infinity;
  } else {
    cov_199zi7e4qy().b[87][1]++;
  }
  const noFollowAttr = (cov_199zi7e4qy().s[275]++, nofollow === true ? (cov_199zi7e4qy().b[88][0]++, ' rel="nofollow"') : (cov_199zi7e4qy().b[88][1]++, ''));
  const words = (cov_199zi7e4qy().s[276]++, str.split(/(\s+)/).filter(word => {
    cov_199zi7e4qy().f[53]++;
    cov_199zi7e4qy().s[277]++;
    // If the word has no length, bail. This can happen for str with
    // trailing whitespace.
    return (cov_199zi7e4qy().b[89][0]++, word) && (cov_199zi7e4qy().b[89][1]++, word.length);
  }).map(word => {
    cov_199zi7e4qy().f[54]++;
    var matches = (cov_199zi7e4qy().s[278]++, word.match(puncRe));
    var possibleUrl = (cov_199zi7e4qy().s[279]++, matches ? (cov_199zi7e4qy().b[90][0]++, matches[1]) : (cov_199zi7e4qy().b[90][1]++, word));
    var shortUrl = (cov_199zi7e4qy().s[280]++, possibleUrl.substr(0, length));

    // url that starts with http or https
    cov_199zi7e4qy().s[281]++;
    if (httpHttpsRe.test(possibleUrl)) {
      cov_199zi7e4qy().b[91][0]++;
      cov_199zi7e4qy().s[282]++;
      return `<a href="${possibleUrl}"${noFollowAttr}>${shortUrl}</a>`;
    } else {
      cov_199zi7e4qy().b[91][1]++;
    }

    // url that starts with www.
    cov_199zi7e4qy().s[283]++;
    if (wwwRe.test(possibleUrl)) {
      cov_199zi7e4qy().b[92][0]++;
      cov_199zi7e4qy().s[284]++;
      return `<a href="http://${possibleUrl}"${noFollowAttr}>${shortUrl}</a>`;
    } else {
      cov_199zi7e4qy().b[92][1]++;
    }

    // an email address of the form username@domain.tld
    cov_199zi7e4qy().s[285]++;
    if (emailRe.test(possibleUrl)) {
      cov_199zi7e4qy().b[93][0]++;
      cov_199zi7e4qy().s[286]++;
      return `<a href="mailto:${possibleUrl}">${possibleUrl}</a>`;
    } else {
      cov_199zi7e4qy().b[93][1]++;
    }

    // url that ends in .com, .org or .net that is not an email address
    cov_199zi7e4qy().s[287]++;
    if (tldRe.test(possibleUrl)) {
      cov_199zi7e4qy().b[94][0]++;
      cov_199zi7e4qy().s[288]++;
      return `<a href="http://${possibleUrl}"${noFollowAttr}>${shortUrl}</a>`;
    } else {
      cov_199zi7e4qy().b[94][1]++;
    }
    cov_199zi7e4qy().s[289]++;
    return word;
  }));
  cov_199zi7e4qy().s[290]++;
  return words.join('');
}
cov_199zi7e4qy().s[291]++;
exports.urlize = urlize;
function wordcount(str) {
  cov_199zi7e4qy().f[55]++;
  cov_199zi7e4qy().s[292]++;
  str = normalize(str, '');
  const words = (cov_199zi7e4qy().s[293]++, str ? (cov_199zi7e4qy().b[95][0]++, str.match(/\w+/g)) : (cov_199zi7e4qy().b[95][1]++, null));
  cov_199zi7e4qy().s[294]++;
  return words ? (cov_199zi7e4qy().b[96][0]++, words.length) : (cov_199zi7e4qy().b[96][1]++, null);
}
cov_199zi7e4qy().s[295]++;
exports.wordcount = wordcount;
function float(val, def) {
  cov_199zi7e4qy().f[56]++;
  var res = (cov_199zi7e4qy().s[296]++, parseFloat(val));
  cov_199zi7e4qy().s[297]++;
  return isNaN(res) ? (cov_199zi7e4qy().b[97][0]++, def) : (cov_199zi7e4qy().b[97][1]++, res);
}
cov_199zi7e4qy().s[298]++;
exports.float = float;
const intFilter = (cov_199zi7e4qy().s[299]++, r.makeMacro(['value', 'default', 'base'], [], function doInt(value, defaultValue, base) {
  if (base === void 0) {
    base = (cov_199zi7e4qy().b[98][0]++, 10);
  }
  cov_199zi7e4qy().f[57]++;
  var res = (cov_199zi7e4qy().s[300]++, parseInt(value, base));
  cov_199zi7e4qy().s[301]++;
  return isNaN(res) ? (cov_199zi7e4qy().b[99][0]++, defaultValue) : (cov_199zi7e4qy().b[99][1]++, res);
}));
cov_199zi7e4qy().s[302]++;
exports.int = intFilter;

// Aliases
cov_199zi7e4qy().s[303]++;
exports.d = exports.default;
cov_199zi7e4qy().s[304]++;
exports.e = exports.escape;

/***/ }),

/***/ 5790:
/*!*********************************!*\
  !*** ./nunjucks/src/globals.js ***!
  \*********************************/
/***/ ((module) => {

"use strict";


function cov_2m9o5ev3pm() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\globals.js";
  var hash = "da26e78c65362d70debd66f68d677bb188341948";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\globals.js",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 14
        },
        end: {
          line: 4,
          column: 16
        }
      },
      "1": {
        start: {
          line: 6,
          column: 2
        },
        end: {
          line: 22,
          column: 4
        }
      },
      "2": {
        start: {
          line: 9,
          column: 6
        },
        end: {
          line: 9,
          column: 17
        }
      },
      "3": {
        start: {
          line: 10,
          column: 6
        },
        end: {
          line: 10,
          column: 26
        }
      },
      "4": {
        start: {
          line: 14,
          column: 6
        },
        end: {
          line: 14,
          column: 14
        }
      },
      "5": {
        start: {
          line: 15,
          column: 6
        },
        end: {
          line: 17,
          column: 7
        }
      },
      "6": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 18
        }
      },
      "7": {
        start: {
          line: 19,
          column: 6
        },
        end: {
          line: 19,
          column: 34
        }
      },
      "8": {
        start: {
          line: 20,
          column: 6
        },
        end: {
          line: 20,
          column: 26
        }
      },
      "9": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 26,
          column: 19
        }
      },
      "10": {
        start: {
          line: 27,
          column: 14
        },
        end: {
          line: 27,
          column: 18
        }
      },
      "11": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 33,
          column: 4
        }
      },
      "12": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 32
        }
      },
      "13": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 18
        }
      },
      "14": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 15
        }
      },
      "15": {
        start: {
          line: 40,
          column: 2
        },
        end: {
          line: 70,
          column: 4
        }
      },
      "16": {
        start: {
          line: 42,
          column: 6
        },
        end: {
          line: 48,
          column: 7
        }
      },
      "17": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 21
        }
      },
      "18": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 18
        }
      },
      "19": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 17
        }
      },
      "20": {
        start: {
          line: 46,
          column: 13
        },
        end: {
          line: 48,
          column: 7
        }
      },
      "21": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 17
        }
      },
      "22": {
        start: {
          line: 50,
          column: 18
        },
        end: {
          line: 50,
          column: 20
        }
      },
      "23": {
        start: {
          line: 51,
          column: 6
        },
        end: {
          line: 59,
          column: 7
        }
      },
      "24": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "25": {
        start: {
          line: 52,
          column: 21
        },
        end: {
          line: 52,
          column: 26
        }
      },
      "26": {
        start: {
          line: 53,
          column: 10
        },
        end: {
          line: 53,
          column: 22
        }
      },
      "27": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "28": {
        start: {
          line: 56,
          column: 21
        },
        end: {
          line: 56,
          column: 26
        }
      },
      "29": {
        start: {
          line: 57,
          column: 10
        },
        end: {
          line: 57,
          column: 22
        }
      },
      "30": {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 60,
          column: 17
        }
      },
      "31": {
        start: {
          line: 64,
          column: 6
        },
        end: {
          line: 64,
          column: 59
        }
      },
      "32": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 68,
          column: 25
        }
      },
      "33": {
        start: {
          line: 73,
          column: 0
        },
        end: {
          line: 73,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "cycler",
        decl: {
          start: {
            line: 3,
            column: 9
          },
          end: {
            line: 3,
            column: 15
          }
        },
        loc: {
          start: {
            line: 3,
            column: 23
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 3
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 12
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 11
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 13
      },
      "3": {
        name: "joiner",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 15
          }
        },
        loc: {
          start: {
            line: 25,
            column: 21
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 10
          }
        },
        loc: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 33,
            column: 3
          }
        },
        line: 29
      },
      "5": {
        name: "globals",
        decl: {
          start: {
            line: 39,
            column: 9
          },
          end: {
            line: 39,
            column: 16
          }
        },
        loc: {
          start: {
            line: 39,
            column: 19
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 39
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 29
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 41
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 13
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 63
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 16
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 67
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 17,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 17,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 11
          }
        }, {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 18
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 32
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 30,
            column: 26
          }
        }, {
          start: {
            line: 30,
            column: 29
          },
          end: {
            line: 30,
            column: 32
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 6
          },
          end: {
            line: 48,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 6
          },
          end: {
            line: 48,
            column: 7
          }
        }, {
          start: {
            line: 46,
            column: 13
          },
          end: {
            line: 48,
            column: 7
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 46,
            column: 13
          },
          end: {
            line: 48,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 13
          },
          end: {
            line: 48,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "5": {
        loc: {
          start: {
            line: 51,
            column: 6
          },
          end: {
            line: 59,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 6
          },
          end: {
            line: 59,
            column: 7
          }
        }, {
          start: {
            line: 55,
            column: 13
          },
          end: {
            line: 59,
            column: 7
          }
        }],
        line: 51
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "da26e78c65362d70debd66f68d677bb188341948"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2m9o5ev3pm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2m9o5ev3pm();
function cycler(items) {
  cov_2m9o5ev3pm().f[0]++;
  var index = (cov_2m9o5ev3pm().s[0]++, -1);
  cov_2m9o5ev3pm().s[1]++;
  return {
    current: null,
    reset() {
      cov_2m9o5ev3pm().f[1]++;
      cov_2m9o5ev3pm().s[2]++;
      index = -1;
      cov_2m9o5ev3pm().s[3]++;
      this.current = null;
    },
    next() {
      cov_2m9o5ev3pm().f[2]++;
      cov_2m9o5ev3pm().s[4]++;
      index++;
      cov_2m9o5ev3pm().s[5]++;
      if (index >= items.length) {
        cov_2m9o5ev3pm().b[0][0]++;
        cov_2m9o5ev3pm().s[6]++;
        index = 0;
      } else {
        cov_2m9o5ev3pm().b[0][1]++;
      }
      cov_2m9o5ev3pm().s[7]++;
      this.current = items[index];
      cov_2m9o5ev3pm().s[8]++;
      return this.current;
    }
  };
}
function joiner(sep) {
  cov_2m9o5ev3pm().f[3]++;
  cov_2m9o5ev3pm().s[9]++;
  sep = (cov_2m9o5ev3pm().b[1][0]++, sep) || (cov_2m9o5ev3pm().b[1][1]++, ',');
  let first = (cov_2m9o5ev3pm().s[10]++, true);
  cov_2m9o5ev3pm().s[11]++;
  return () => {
    cov_2m9o5ev3pm().f[4]++;
    const val = (cov_2m9o5ev3pm().s[12]++, first ? (cov_2m9o5ev3pm().b[2][0]++, '') : (cov_2m9o5ev3pm().b[2][1]++, sep));
    cov_2m9o5ev3pm().s[13]++;
    first = false;
    cov_2m9o5ev3pm().s[14]++;
    return val;
  };
}

// Making this a function instead so it returns a new object
// each time it's called. That way, if something like an environment
// uses it, they will each have their own copy.
function globals() {
  cov_2m9o5ev3pm().f[5]++;
  cov_2m9o5ev3pm().s[15]++;
  return {
    range(start, stop, step) {
      cov_2m9o5ev3pm().f[6]++;
      cov_2m9o5ev3pm().s[16]++;
      if (typeof stop === 'undefined') {
        cov_2m9o5ev3pm().b[3][0]++;
        cov_2m9o5ev3pm().s[17]++;
        stop = start;
        cov_2m9o5ev3pm().s[18]++;
        start = 0;
        cov_2m9o5ev3pm().s[19]++;
        step = 1;
      } else {
        cov_2m9o5ev3pm().b[3][1]++;
        cov_2m9o5ev3pm().s[20]++;
        if (!step) {
          cov_2m9o5ev3pm().b[4][0]++;
          cov_2m9o5ev3pm().s[21]++;
          step = 1;
        } else {
          cov_2m9o5ev3pm().b[4][1]++;
        }
      }
      const arr = (cov_2m9o5ev3pm().s[22]++, []);
      cov_2m9o5ev3pm().s[23]++;
      if (step > 0) {
        cov_2m9o5ev3pm().b[5][0]++;
        cov_2m9o5ev3pm().s[24]++;
        for (let i = (cov_2m9o5ev3pm().s[25]++, start); i < stop; i += step) {
          cov_2m9o5ev3pm().s[26]++;
          arr.push(i);
        }
      } else {
        cov_2m9o5ev3pm().b[5][1]++;
        cov_2m9o5ev3pm().s[27]++;
        for (let i = (cov_2m9o5ev3pm().s[28]++, start); i > stop; i += step) {
          cov_2m9o5ev3pm().s[29]++;
          // eslint-disable-line for-direction
          arr.push(i);
        }
      }
      cov_2m9o5ev3pm().s[30]++;
      return arr;
    },
    cycler() {
      cov_2m9o5ev3pm().f[7]++;
      cov_2m9o5ev3pm().s[31]++;
      return cycler(Array.prototype.slice.call(arguments));
    },
    joiner(sep) {
      cov_2m9o5ev3pm().f[8]++;
      cov_2m9o5ev3pm().s[32]++;
      return joiner(sep);
    }
  };
}
cov_2m9o5ev3pm().s[33]++;
module.exports = globals;

/***/ }),

/***/ 433:
/*!**************************************!*\
  !*** ./nunjucks/src/jinja-compat.js ***!
  \**************************************/
/***/ ((module) => {

function cov_1d8b674bnm() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\jinja-compat.js";
  var hash = "ada4df06f3bd3b349aebad90ddefbc375ab925f9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\jinja-compat.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 28
        }
      },
      "1": {
        start: {
          line: 9,
          column: 12
        },
        end: {
          line: 9,
          column: 20
        }
      },
      "2": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "3": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 33
        }
      },
      "4": {
        start: {
          line: 13,
          column: 14
        },
        end: {
          line: 13,
          column: 24
        }
      },
      "5": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 24
        }
      },
      "6": {
        start: {
          line: 16,
          column: 34
        },
        end: {
          line: 16,
          column: 62
        }
      },
      "7": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "8": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "9": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 61
        }
      },
      "10": {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "11": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 65
        }
      },
      "12": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 61
        }
      },
      "13": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 45
        }
      },
      "14": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "15": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 31,
          column: 63
        }
      },
      "16": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "17": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 34,
          column: 67
        }
      },
      "18": {
        start: {
          line: 38,
          column: 2
        },
        end: {
          line: 53,
          column: 4
        }
      },
      "19": {
        start: {
          line: 39,
          column: 14
        },
        end: {
          line: 39,
          column: 62
        }
      },
      "20": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "21": {
        start: {
          line: 41,
          column: 6
        },
        end: {
          line: 41,
          column: 17
        }
      },
      "22": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "23": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 20
        }
      },
      "24": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 21
        }
      },
      "25": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 20
        }
      },
      "26": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 25
        }
      },
      "27": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 60,
          column: 6
        }
      },
      "28": {
        start: {
          line: 63,
          column: 2
        },
        end: {
          line: 146,
          column: 3
        }
      },
      "29": {
        start: {
          line: 64,
          column: 18
        },
        end: {
          line: 72,
          column: 6
        }
      },
      "30": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 64
        }
      },
      "31": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 62
        }
      },
      "32": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 59
        }
      },
      "33": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 54
        }
      },
      "34": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 79,
          column: 6
        }
      },
      "35": {
        start: {
          line: 75,
          column: 6
        },
        end: {
          line: 77,
          column: 7
        }
      },
      "36": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 15
        }
      },
      "37": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 78,
          column: 54
        }
      },
      "38": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 88,
          column: 6
        }
      },
      "39": {
        start: {
          line: 81,
          column: 6
        },
        end: {
          line: 81,
          column: 22
        }
      },
      "40": {
        start: {
          line: 82,
          column: 6
        },
        end: {
          line: 82,
          column: 49
        }
      },
      "41": {
        start: {
          line: 83,
          column: 6
        },
        end: {
          line: 83,
          column: 24
        }
      },
      "42": {
        start: {
          line: 84,
          column: 6
        },
        end: {
          line: 84,
          column: 48
        }
      },
      "43": {
        start: {
          line: 85,
          column: 6
        },
        end: {
          line: 85,
          column: 24
        }
      },
      "44": {
        start: {
          line: 86,
          column: 6
        },
        end: {
          line: 86,
          column: 48
        }
      },
      "45": {
        start: {
          line: 87,
          column: 6
        },
        end: {
          line: 87,
          column: 22
        }
      },
      "46": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 145,
          column: 6
        }
      },
      "47": {
        start: {
          line: 91,
          column: 22
        },
        end: {
          line: 91,
          column: 49
        }
      },
      "48": {
        start: {
          line: 93,
          column: 6
        },
        end: {
          line: 93,
          column: 24
        }
      },
      "49": {
        start: {
          line: 94,
          column: 6
        },
        end: {
          line: 94,
          column: 24
        }
      },
      "50": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 144,
          column: 7
        }
      },
      "51": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 54
        }
      },
      "52": {
        start: {
          line: 98,
          column: 25
        },
        end: {
          line: 98,
          column: 52
        }
      },
      "53": {
        start: {
          line: 99,
          column: 24
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "54": {
        start: {
          line: 100,
          column: 10
        },
        end: {
          line: 100,
          column: 45
        }
      },
      "55": {
        start: {
          line: 101,
          column: 10
        },
        end: {
          line: 101,
          column: 19
        }
      },
      "56": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 44
        }
      },
      "57": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 28
        }
      },
      "58": {
        start: {
          line: 108,
          column: 20
        },
        end: {
          line: 108,
          column: 36
        }
      },
      "59": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "60": {
        start: {
          line: 110,
          column: 10
        },
        end: {
          line: 110,
          column: 26
        }
      },
      "61": {
        start: {
          line: 112,
          column: 10
        },
        end: {
          line: 112,
          column: 27
        }
      },
      "62": {
        start: {
          line: 115,
          column: 21
        },
        end: {
          line: 115,
          column: 53
        }
      },
      "63": {
        start: {
          line: 119,
          column: 22
        },
        end: {
          line: 119,
          column: 27
        }
      },
      "64": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "65": {
        start: {
          line: 121,
          column: 21
        },
        end: {
          line: 121,
          column: 22
        }
      },
      "66": {
        start: {
          line: 122,
          column: 10
        },
        end: {
          line: 124,
          column: 11
        }
      },
      "67": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 18
        }
      },
      "68": {
        start: {
          line: 125,
          column: 10
        },
        end: {
          line: 131,
          column: 11
        }
      },
      "69": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 130,
          column: 13
        }
      },
      "70": {
        start: {
          line: 127,
          column: 14
        },
        end: {
          line: 127,
          column: 88
        }
      },
      "71": {
        start: {
          line: 129,
          column: 14
        },
        end: {
          line: 129,
          column: 20
        }
      },
      "72": {
        start: {
          line: 132,
          column: 10
        },
        end: {
          line: 138,
          column: 11
        }
      },
      "73": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 27
        }
      },
      "74": {
        start: {
          line: 135,
          column: 26
        },
        end: {
          line: 135,
          column: 40
        }
      },
      "75": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 49
        }
      },
      "76": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 62
        }
      },
      "77": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "78": {
        start: {
          line: 141,
          column: 10
        },
        end: {
          line: 141,
          column: 26
        }
      },
      "79": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 62
        }
      },
      "80": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 149,
          column: 20
        }
      },
      "81": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "82": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 151,
          column: 48
        }
      },
      "83": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "84": {
        start: {
          line: 154,
          column: 6
        },
        end: {
          line: 154,
          column: 42
        }
      },
      "85": {
        start: {
          line: 155,
          column: 11
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "86": {
        start: {
          line: 156,
          column: 6
        },
        end: {
          line: 156,
          column: 25
        }
      },
      "87": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 161,
          column: 5
        }
      },
      "88": {
        start: {
          line: 160,
          column: 6
        },
        end: {
          line: 160,
          column: 26
        }
      },
      "89": {
        start: {
          line: 163,
          column: 20
        },
        end: {
          line: 163,
          column: 22
        }
      },
      "90": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 176,
          column: 5
        }
      },
      "91": {
        start: {
          line: 165,
          column: 17
        },
        end: {
          line: 165,
          column: 22
        }
      },
      "92": {
        start: {
          line: 166,
          column: 6
        },
        end: {
          line: 168,
          column: 7
        }
      },
      "93": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 14
        }
      },
      "94": {
        start: {
          line: 169,
          column: 6
        },
        end: {
          line: 171,
          column: 7
        }
      },
      "95": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 14
        }
      },
      "96": {
        start: {
          line: 172,
          column: 6
        },
        end: {
          line: 174,
          column: 7
        }
      },
      "97": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 14
        }
      },
      "98": {
        start: {
          line: 175,
          column: 6
        },
        end: {
          line: 175,
          column: 49
        }
      },
      "99": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 177,
          column: 19
        }
      },
      "100": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 181,
          column: 58
        }
      },
      "101": {
        start: {
          line: 184,
          column: 24
        },
        end: {
          line: 227,
          column: 3
        }
      },
      "102": {
        start: {
          line: 186,
          column: 6
        },
        end: {
          line: 188,
          column: 7
        }
      },
      "103": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 26
        }
      },
      "104": {
        start: {
          line: 189,
          column: 6
        },
        end: {
          line: 191,
          column: 7
        }
      },
      "105": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 36
        }
      },
      "106": {
        start: {
          line: 192,
          column: 6
        },
        end: {
          line: 192,
          column: 35
        }
      },
      "107": {
        start: {
          line: 195,
          column: 6
        },
        end: {
          line: 195,
          column: 32
        }
      },
      "108": {
        start: {
          line: 198,
          column: 6
        },
        end: {
          line: 202,
          column: 7
        }
      },
      "109": {
        start: {
          line: 198,
          column: 19
        },
        end: {
          line: 198,
          column: 20
        }
      },
      "110": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "111": {
        start: {
          line: 200,
          column: 10
        },
        end: {
          line: 200,
          column: 35
        }
      },
      "112": {
        start: {
          line: 203,
          column: 6
        },
        end: {
          line: 203,
          column: 36
        }
      },
      "113": {
        start: {
          line: 206,
          column: 18
        },
        end: {
          line: 206,
          column: 19
        }
      },
      "114": {
        start: {
          line: 207,
          column: 6
        },
        end: {
          line: 211,
          column: 7
        }
      },
      "115": {
        start: {
          line: 207,
          column: 19
        },
        end: {
          line: 207,
          column: 20
        }
      },
      "116": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "117": {
        start: {
          line: 209,
          column: 10
        },
        end: {
          line: 209,
          column: 18
        }
      },
      "118": {
        start: {
          line: 212,
          column: 6
        },
        end: {
          line: 212,
          column: 19
        }
      },
      "119": {
        start: {
          line: 216,
          column: 6
        },
        end: {
          line: 218,
          column: 7
        }
      },
      "120": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 38
        }
      },
      "121": {
        start: {
          line: 219,
          column: 6
        },
        end: {
          line: 219,
          column: 15
        }
      },
      "122": {
        start: {
          line: 222,
          column: 6
        },
        end: {
          line: 222,
          column: 35
        }
      },
      "123": {
        start: {
          line: 225,
          column: 6
        },
        end: {
          line: 225,
          column: 41
        }
      },
      "124": {
        start: {
          line: 228,
          column: 25
        },
        end: {
          line: 279,
          column: 3
        }
      },
      "125": {
        start: {
          line: 230,
          column: 6
        },
        end: {
          line: 230,
          column: 32
        }
      },
      "126": {
        start: {
          line: 233,
          column: 6
        },
        end: {
          line: 233,
          column: 31
        }
      },
      "127": {
        start: {
          line: 236,
          column: 6
        },
        end: {
          line: 236,
          column: 28
        }
      },
      "128": {
        start: {
          line: 239,
          column: 19
        },
        end: {
          line: 239,
          column: 28
        }
      },
      "129": {
        start: {
          line: 240,
          column: 6
        },
        end: {
          line: 242,
          column: 7
        }
      },
      "130": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 241,
          column: 21
        }
      },
      "131": {
        start: {
          line: 243,
          column: 6
        },
        end: {
          line: 243,
          column: 20
        }
      },
      "132": {
        start: {
          line: 246,
          column: 6
        },
        end: {
          line: 246,
          column: 35
        }
      },
      "133": {
        start: {
          line: 249,
          column: 19
        },
        end: {
          line: 249,
          column: 28
        }
      },
      "134": {
        start: {
          line: 250,
          column: 6
        },
        end: {
          line: 256,
          column: 7
        }
      },
      "135": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 21
        }
      },
      "136": {
        start: {
          line: 252,
          column: 13
        },
        end: {
          line: 256,
          column: 7
        }
      },
      "137": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 36
        }
      },
      "138": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 255,
          column: 25
        }
      },
      "139": {
        start: {
          line: 257,
          column: 6
        },
        end: {
          line: 257,
          column: 20
        }
      },
      "140": {
        start: {
          line: 260,
          column: 19
        },
        end: {
          line: 260,
          column: 33
        }
      },
      "141": {
        start: {
          line: 261,
          column: 6
        },
        end: {
          line: 263,
          column: 7
        }
      },
      "142": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 36
        }
      },
      "143": {
        start: {
          line: 264,
          column: 16
        },
        end: {
          line: 264,
          column: 23
        }
      },
      "144": {
        start: {
          line: 265,
          column: 18
        },
        end: {
          line: 265,
          column: 25
        }
      },
      "145": {
        start: {
          line: 266,
          column: 6
        },
        end: {
          line: 266,
          column: 21
        }
      },
      "146": {
        start: {
          line: 267,
          column: 6
        },
        end: {
          line: 267,
          column: 22
        }
      },
      "147": {
        start: {
          line: 270,
          column: 6
        },
        end: {
          line: 272,
          column: 7
        }
      },
      "148": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 24
        }
      },
      "149": {
        start: {
          line: 273,
          column: 6
        },
        end: {
          line: 273,
          column: 23
        }
      },
      "150": {
        start: {
          line: 276,
          column: 6
        },
        end: {
          line: 276,
          column: 32
        }
      },
      "151": {
        start: {
          line: 277,
          column: 6
        },
        end: {
          line: 277,
          column: 18
        }
      },
      "152": {
        start: {
          line: 280,
          column: 2
        },
        end: {
          line: 280,
          column: 50
        }
      },
      "153": {
        start: {
          line: 281,
          column: 2
        },
        end: {
          line: 281,
          column: 52
        }
      },
      "154": {
        start: {
          line: 282,
          column: 2
        },
        end: {
          line: 282,
          column: 48
        }
      },
      "155": {
        start: {
          line: 284,
          column: 2
        },
        end: {
          line: 300,
          column: 4
        }
      },
      "156": {
        start: {
          line: 285,
          column: 4
        },
        end: {
          line: 287,
          column: 5
        }
      },
      "157": {
        start: {
          line: 286,
          column: 6
        },
        end: {
          line: 286,
          column: 48
        }
      },
      "158": {
        start: {
          line: 288,
          column: 4
        },
        end: {
          line: 288,
          column: 20
        }
      },
      "159": {
        start: {
          line: 292,
          column: 4
        },
        end: {
          line: 294,
          column: 5
        }
      },
      "160": {
        start: {
          line: 293,
          column: 6
        },
        end: {
          line: 293,
          column: 42
        }
      },
      "161": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 297,
          column: 5
        }
      },
      "162": {
        start: {
          line: 296,
          column: 6
        },
        end: {
          line: 296,
          column: 43
        }
      },
      "163": {
        start: {
          line: 299,
          column: 4
        },
        end: {
          line: 299,
          column: 52
        }
      },
      "164": {
        start: {
          line: 302,
          column: 2
        },
        end: {
          line: 302,
          column: 19
        }
      },
      "165": {
        start: {
          line: 305,
          column: 0
        },
        end: {
          line: 305,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "installCompat",
        decl: {
          start: {
            line: 1,
            column: 9
          },
          end: {
            line: 1,
            column: 22
          }
        },
        loc: {
          start: {
            line: 1,
            column: 25
          },
          end: {
            line: 303,
            column: 1
          }
        },
        line: 1
      },
      "1": {
        name: "uninstall",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 20
          }
        },
        loc: {
          start: {
            line: 27,
            column: 23
          },
          end: {
            line: 36,
            column: 3
          }
        },
        line: 27
      },
      "2": {
        name: "contextOrFrameLookup",
        decl: {
          start: {
            line: 38,
            column: 42
          },
          end: {
            line: 38,
            column: 62
          }
        },
        loc: {
          start: {
            line: 38,
            column: 84
          },
          end: {
            line: 53,
            column: 3
          }
        },
        line: 38
      },
      "3": {
        name: "getTokensState",
        decl: {
          start: {
            line: 55,
            column: 11
          },
          end: {
            line: 55,
            column: 25
          }
        },
        loc: {
          start: {
            line: 55,
            column: 34
          },
          end: {
            line: 61,
            column: 3
          }
        },
        line: 55
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 66,
            column: 6
          },
          end: {
            line: 66,
            column: 7
          }
        },
        loc: {
          start: {
            line: 66,
            column: 45
          },
          end: {
            line: 71,
            column: 7
          }
        },
        line: 66
      },
      "5": {
        name: "assertType",
        decl: {
          start: {
            line: 74,
            column: 45
          },
          end: {
            line: 74,
            column: 55
          }
        },
        loc: {
          start: {
            line: 74,
            column: 62
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 74
      },
      "6": {
        name: "compileSlice",
        decl: {
          start: {
            line: 80,
            column: 47
          },
          end: {
            line: 80,
            column: 59
          }
        },
        loc: {
          start: {
            line: 80,
            column: 73
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 80
      },
      "7": {
        name: "parseAggregate",
        decl: {
          start: {
            line: 90,
            column: 47
          },
          end: {
            line: 90,
            column: 61
          }
        },
        loc: {
          start: {
            line: 90,
            column: 64
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 90
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 99,
            column: 24
          },
          end: {
            line: 99,
            column: 25
          }
        },
        loc: {
          start: {
            line: 99,
            column: 30
          },
          end: {
            line: 102,
            column: 9
          }
        },
        line: 99
      },
      "9": {
        name: "sliceLookup",
        decl: {
          start: {
            line: 148,
            column: 11
          },
          end: {
            line: 148,
            column: 22
          }
        },
        loc: {
          start: {
            line: 148,
            column: 47
          },
          end: {
            line: 178,
            column: 3
          }
        },
        line: 148
      },
      "10": {
        name: "hasOwnProp",
        decl: {
          start: {
            line: 180,
            column: 11
          },
          end: {
            line: 180,
            column: 21
          }
        },
        loc: {
          start: {
            line: 180,
            column: 32
          },
          end: {
            line: 182,
            column: 3
          }
        },
        line: 180
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        loc: {
          start: {
            line: 185,
            column: 15
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 185
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 194,
            column: 5
          }
        },
        loc: {
          start: {
            line: 194,
            column: 20
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 194
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        },
        loc: {
          start: {
            line: 197,
            column: 20
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 197
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 205,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        },
        loc: {
          start: {
            line: 205,
            column: 19
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 205
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        },
        loc: {
          start: {
            line: 214,
            column: 19
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 214
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        },
        loc: {
          start: {
            line: 221,
            column: 18
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 221
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        loc: {
          start: {
            line: 224,
            column: 24
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 224
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        loc: {
          start: {
            line: 229,
            column: 12
          },
          end: {
            line: 231,
            column: 5
          }
        },
        line: 229
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        loc: {
          start: {
            line: 232,
            column: 13
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 232
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        },
        loc: {
          start: {
            line: 235,
            column: 11
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 235
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 238,
            column: 4
          },
          end: {
            line: 238,
            column: 5
          }
        },
        loc: {
          start: {
            line: 238,
            column: 18
          },
          end: {
            line: 244,
            column: 5
          }
        },
        line: 238
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 245,
            column: 5
          }
        },
        loc: {
          start: {
            line: 245,
            column: 17
          },
          end: {
            line: 247,
            column: 5
          }
        },
        line: 245
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 248,
            column: 5
          }
        },
        loc: {
          start: {
            line: 248,
            column: 18
          },
          end: {
            line: 258,
            column: 5
          }
        },
        line: 248
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 259,
            column: 5
          }
        },
        loc: {
          start: {
            line: 259,
            column: 14
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 259
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        loc: {
          start: {
            line: 269,
            column: 32
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 269
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        },
        loc: {
          start: {
            line: 275,
            column: 19
          },
          end: {
            line: 278,
            column: 5
          }
        },
        line: 275
      },
      "27": {
        name: "memberLookup",
        decl: {
          start: {
            line: 284,
            column: 34
          },
          end: {
            line: 284,
            column: 46
          }
        },
        loc: {
          start: {
            line: 284,
            column: 69
          },
          end: {
            line: 300,
            column: 3
          }
        },
        line: 284
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 2
          },
          end: {
            line: 22,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 2
          },
          end: {
            line: 22,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "5": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 44,
            column: 6
          },
          end: {
            line: 45,
            column: 20
          }
        }, {
          start: {
            line: 46,
            column: 6
          },
          end: {
            line: 47,
            column: 21
          }
        }, {
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 49,
            column: 20
          }
        }, {
          start: {
            line: 50,
            column: 6
          },
          end: {
            line: 51,
            column: 25
          }
        }],
        line: 43
      },
      "6": {
        loc: {
          start: {
            line: 63,
            column: 2
          },
          end: {
            line: 146,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 2
          },
          end: {
            line: 146,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "7": {
        loc: {
          start: {
            line: 63,
            column: 6
          },
          end: {
            line: 63,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 6
          },
          end: {
            line: 63,
            column: 39
          }
        }, {
          start: {
            line: 63,
            column: 43
          },
          end: {
            line: 63,
            column: 48
          }
        }, {
          start: {
            line: 63,
            column: 52
          },
          end: {
            line: 63,
            column: 60
          }
        }, {
          start: {
            line: 63,
            column: 64
          },
          end: {
            line: 63,
            column: 70
          }
        }],
        line: 63
      },
      "8": {
        loc: {
          start: {
            line: 67,
            column: 16
          },
          end: {
            line: 67,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 16
          },
          end: {
            line: 67,
            column: 21
          }
        }, {
          start: {
            line: 67,
            column: 25
          },
          end: {
            line: 67,
            column: 63
          }
        }],
        line: 67
      },
      "9": {
        loc: {
          start: {
            line: 68,
            column: 15
          },
          end: {
            line: 68,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 15
          },
          end: {
            line: 68,
            column: 19
          }
        }, {
          start: {
            line: 68,
            column: 23
          },
          end: {
            line: 68,
            column: 61
          }
        }],
        line: 68
      },
      "10": {
        loc: {
          start: {
            line: 69,
            column: 15
          },
          end: {
            line: 69,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 15
          },
          end: {
            line: 69,
            column: 19
          }
        }, {
          start: {
            line: 69,
            column: 23
          },
          end: {
            line: 69,
            column: 58
          }
        }],
        line: 69
      },
      "11": {
        loc: {
          start: {
            line: 75,
            column: 6
          },
          end: {
            line: 77,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 6
          },
          end: {
            line: 77,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "12": {
        loc: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: 111,
            column: 15
          },
          end: {
            line: 113,
            column: 9
          }
        }],
        line: 109
      },
      "13": {
        loc: {
          start: {
            line: 122,
            column: 10
          },
          end: {
            line: 124,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 10
          },
          end: {
            line: 124,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "14": {
        loc: {
          start: {
            line: 125,
            column: 10
          },
          end: {
            line: 131,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 10
          },
          end: {
            line: 131,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "15": {
        loc: {
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 130,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 130,
            column: 13
          }
        }, {
          start: {
            line: 128,
            column: 19
          },
          end: {
            line: 130,
            column: 13
          }
        }],
        line: 126
      },
      "16": {
        loc: {
          start: {
            line: 132,
            column: 10
          },
          end: {
            line: 138,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 10
          },
          end: {
            line: 138,
            column: 11
          }
        }, {
          start: {
            line: 134,
            column: 17
          },
          end: {
            line: 138,
            column: 11
          }
        }],
        line: 132
      },
      "17": {
        loc: {
          start: {
            line: 137,
            column: 22
          },
          end: {
            line: 137,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 22
          },
          end: {
            line: 137,
            column: 50
          }
        }, {
          start: {
            line: 137,
            column: 54
          },
          end: {
            line: 137,
            column: 61
          }
        }],
        line: 137
      },
      "18": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "19": {
        loc: {
          start: {
            line: 149,
            column: 10
          },
          end: {
            line: 149,
            column: 19
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 10
          },
          end: {
            line: 149,
            column: 13
          }
        }, {
          start: {
            line: 149,
            column: 17
          },
          end: {
            line: 149,
            column: 19
          }
        }],
        line: 149
      },
      "20": {
        loc: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "21": {
        loc: {
          start: {
            line: 151,
            column: 14
          },
          end: {
            line: 151,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 151,
            column: 28
          },
          end: {
            line: 151,
            column: 42
          }
        }, {
          start: {
            line: 151,
            column: 46
          },
          end: {
            line: 151,
            column: 47
          }
        }],
        line: 151
      },
      "22": {
        loc: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        }, {
          start: {
            line: 155,
            column: 11
          },
          end: {
            line: 157,
            column: 5
          }
        }],
        line: 153
      },
      "23": {
        loc: {
          start: {
            line: 154,
            column: 13
          },
          end: {
            line: 154,
            column: 41
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 154,
            column: 26
          },
          end: {
            line: 154,
            column: 28
          }
        }, {
          start: {
            line: 154,
            column: 31
          },
          end: {
            line: 154,
            column: 41
          }
        }],
        line: 154
      },
      "24": {
        loc: {
          start: {
            line: 155,
            column: 11
          },
          end: {
            line: 157,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 11
          },
          end: {
            line: 157,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "25": {
        loc: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "26": {
        loc: {
          start: {
            line: 166,
            column: 6
          },
          end: {
            line: 168,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 6
          },
          end: {
            line: 168,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "27": {
        loc: {
          start: {
            line: 166,
            column: 10
          },
          end: {
            line: 166,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 10
          },
          end: {
            line: 166,
            column: 15
          }
        }, {
          start: {
            line: 166,
            column: 19
          },
          end: {
            line: 166,
            column: 33
          }
        }],
        line: 166
      },
      "28": {
        loc: {
          start: {
            line: 169,
            column: 6
          },
          end: {
            line: 171,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 6
          },
          end: {
            line: 171,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "29": {
        loc: {
          start: {
            line: 169,
            column: 10
          },
          end: {
            line: 169,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 10
          },
          end: {
            line: 169,
            column: 18
          }
        }, {
          start: {
            line: 169,
            column: 22
          },
          end: {
            line: 169,
            column: 31
          }
        }],
        line: 169
      },
      "30": {
        loc: {
          start: {
            line: 172,
            column: 6
          },
          end: {
            line: 174,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 6
          },
          end: {
            line: 174,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "31": {
        loc: {
          start: {
            line: 172,
            column: 10
          },
          end: {
            line: 172,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 10
          },
          end: {
            line: 172,
            column: 18
          }
        }, {
          start: {
            line: 172,
            column: 22
          },
          end: {
            line: 172,
            column: 31
          }
        }],
        line: 172
      },
      "32": {
        loc: {
          start: {
            line: 186,
            column: 6
          },
          end: {
            line: 188,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 6
          },
          end: {
            line: 188,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "33": {
        loc: {
          start: {
            line: 189,
            column: 6
          },
          end: {
            line: 191,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 6
          },
          end: {
            line: 191,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "34": {
        loc: {
          start: {
            line: 189,
            column: 10
          },
          end: {
            line: 189,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 10
          },
          end: {
            line: 189,
            column: 30
          }
        }, {
          start: {
            line: 189,
            column: 34
          },
          end: {
            line: 189,
            column: 43
          }
        }],
        line: 189
      },
      "35": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "36": {
        loc: {
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "37": {
        loc: {
          start: {
            line: 216,
            column: 6
          },
          end: {
            line: 218,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 6
          },
          end: {
            line: 218,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "38": {
        loc: {
          start: {
            line: 240,
            column: 6
          },
          end: {
            line: 242,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 6
          },
          end: {
            line: 242,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "39": {
        loc: {
          start: {
            line: 250,
            column: 6
          },
          end: {
            line: 256,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 6
          },
          end: {
            line: 256,
            column: 7
          }
        }, {
          start: {
            line: 252,
            column: 13
          },
          end: {
            line: 256,
            column: 7
          }
        }],
        line: 250
      },
      "40": {
        loc: {
          start: {
            line: 250,
            column: 10
          },
          end: {
            line: 250,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 10
          },
          end: {
            line: 250,
            column: 30
          }
        }, {
          start: {
            line: 250,
            column: 34
          },
          end: {
            line: 250,
            column: 51
          }
        }],
        line: 250
      },
      "41": {
        loc: {
          start: {
            line: 252,
            column: 13
          },
          end: {
            line: 256,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 13
          },
          end: {
            line: 256,
            column: 7
          }
        }, {
          start: {
            line: 254,
            column: 13
          },
          end: {
            line: 256,
            column: 7
          }
        }],
        line: 252
      },
      "42": {
        loc: {
          start: {
            line: 261,
            column: 6
          },
          end: {
            line: 263,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 6
          },
          end: {
            line: 263,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 261
      },
      "43": {
        loc: {
          start: {
            line: 269,
            column: 20
          },
          end: {
            line: 269,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 269,
            column: 26
          },
          end: {
            line: 269,
            column: 30
          }
        }],
        line: 269
      },
      "44": {
        loc: {
          start: {
            line: 270,
            column: 6
          },
          end: {
            line: 272,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 6
          },
          end: {
            line: 272,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "45": {
        loc: {
          start: {
            line: 285,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      },
      "46": {
        loc: {
          start: {
            line: 288,
            column: 10
          },
          end: {
            line: 288,
            column: 19
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 10
          },
          end: {
            line: 288,
            column: 13
          }
        }, {
          start: {
            line: 288,
            column: 17
          },
          end: {
            line: 288,
            column: 19
          }
        }],
        line: 288
      },
      "47": {
        loc: {
          start: {
            line: 292,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "48": {
        loc: {
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 292,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 292,
            column: 24
          }
        }, {
          start: {
            line: 292,
            column: 28
          },
          end: {
            line: 292,
            column: 58
          }
        }],
        line: 292
      },
      "49": {
        loc: {
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "50": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 295,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 295,
            column: 25
          }
        }, {
          start: {
            line: 295,
            column: 29
          },
          end: {
            line: 295,
            column: 60
          }
        }],
        line: 295
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ada4df06f3bd3b349aebad90ddefbc375ab925f9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1d8b674bnm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1d8b674bnm();
function installCompat() {
  'use strict';

  /* eslint-disable camelcase */

  // This must be called like `nunjucks.installCompat` so that `this`
  // references the nunjucks instance
  cov_1d8b674bnm().f[0]++;
  var runtime = (cov_1d8b674bnm().s[0]++, this.runtime);
  var lib = (cov_1d8b674bnm().s[1]++, this.lib);
  // Handle slim case where these 'modules' are excluded from the built source
  var Compiler = (cov_1d8b674bnm().s[2]++, this.compiler.Compiler);
  var Parser = (cov_1d8b674bnm().s[3]++, this.parser.Parser);
  var nodes = (cov_1d8b674bnm().s[4]++, this.nodes);
  var lexer = (cov_1d8b674bnm().s[5]++, this.lexer);
  var orig_contextOrFrameLookup = (cov_1d8b674bnm().s[6]++, runtime.contextOrFrameLookup);
  var orig_memberLookup = (cov_1d8b674bnm().s[7]++, runtime.memberLookup);
  var orig_Compiler_assertType;
  var orig_Parser_parseAggregate;
  cov_1d8b674bnm().s[8]++;
  if (Compiler) {
    cov_1d8b674bnm().b[0][0]++;
    cov_1d8b674bnm().s[9]++;
    orig_Compiler_assertType = Compiler.prototype.assertType;
  } else {
    cov_1d8b674bnm().b[0][1]++;
  }
  cov_1d8b674bnm().s[10]++;
  if (Parser) {
    cov_1d8b674bnm().b[1][0]++;
    cov_1d8b674bnm().s[11]++;
    orig_Parser_parseAggregate = Parser.prototype.parseAggregate;
  } else {
    cov_1d8b674bnm().b[1][1]++;
  }
  function uninstall() {
    cov_1d8b674bnm().f[1]++;
    cov_1d8b674bnm().s[12]++;
    runtime.contextOrFrameLookup = orig_contextOrFrameLookup;
    cov_1d8b674bnm().s[13]++;
    runtime.memberLookup = orig_memberLookup;
    cov_1d8b674bnm().s[14]++;
    if (Compiler) {
      cov_1d8b674bnm().b[2][0]++;
      cov_1d8b674bnm().s[15]++;
      Compiler.prototype.assertType = orig_Compiler_assertType;
    } else {
      cov_1d8b674bnm().b[2][1]++;
    }
    cov_1d8b674bnm().s[16]++;
    if (Parser) {
      cov_1d8b674bnm().b[3][0]++;
      cov_1d8b674bnm().s[17]++;
      Parser.prototype.parseAggregate = orig_Parser_parseAggregate;
    } else {
      cov_1d8b674bnm().b[3][1]++;
    }
  }
  cov_1d8b674bnm().s[18]++;
  runtime.contextOrFrameLookup = function contextOrFrameLookup(context, frame, key) {
    cov_1d8b674bnm().f[2]++;
    var val = (cov_1d8b674bnm().s[19]++, orig_contextOrFrameLookup.apply(this, arguments));
    cov_1d8b674bnm().s[20]++;
    if (val !== undefined) {
      cov_1d8b674bnm().b[4][0]++;
      cov_1d8b674bnm().s[21]++;
      return val;
    } else {
      cov_1d8b674bnm().b[4][1]++;
    }
    cov_1d8b674bnm().s[22]++;
    switch (key) {
      case 'True':
        cov_1d8b674bnm().b[5][0]++;
        cov_1d8b674bnm().s[23]++;
        return true;
      case 'False':
        cov_1d8b674bnm().b[5][1]++;
        cov_1d8b674bnm().s[24]++;
        return false;
      case 'None':
        cov_1d8b674bnm().b[5][2]++;
        cov_1d8b674bnm().s[25]++;
        return null;
      default:
        cov_1d8b674bnm().b[5][3]++;
        cov_1d8b674bnm().s[26]++;
        return undefined;
    }
  };
  function getTokensState(tokens) {
    cov_1d8b674bnm().f[3]++;
    cov_1d8b674bnm().s[27]++;
    return {
      index: tokens.index,
      lineno: tokens.lineno,
      colno: tokens.colno
    };
  }
  cov_1d8b674bnm().s[28]++;
  if ((cov_1d8b674bnm().b[7][0]++, process.env.BUILD_TYPE !== 'SLIM') && (cov_1d8b674bnm().b[7][1]++, nodes) && (cov_1d8b674bnm().b[7][2]++, Compiler) && (cov_1d8b674bnm().b[7][3]++, Parser)) {
    cov_1d8b674bnm().b[6][0]++;
    // i.e., not slim mode
    const Slice = (cov_1d8b674bnm().s[29]++, nodes.Node.extend('Slice', {
      fields: ['start', 'stop', 'step'],
      init(lineno, colno, start, stop, step) {
        cov_1d8b674bnm().f[4]++;
        cov_1d8b674bnm().s[30]++;
        start = (cov_1d8b674bnm().b[8][0]++, start) || (cov_1d8b674bnm().b[8][1]++, new nodes.Literal(lineno, colno, null));
        cov_1d8b674bnm().s[31]++;
        stop = (cov_1d8b674bnm().b[9][0]++, stop) || (cov_1d8b674bnm().b[9][1]++, new nodes.Literal(lineno, colno, null));
        cov_1d8b674bnm().s[32]++;
        step = (cov_1d8b674bnm().b[10][0]++, step) || (cov_1d8b674bnm().b[10][1]++, new nodes.Literal(lineno, colno, 1));
        cov_1d8b674bnm().s[33]++;
        this.parent(lineno, colno, start, stop, step);
      }
    }));
    cov_1d8b674bnm().s[34]++;
    Compiler.prototype.assertType = function assertType(node) {
      cov_1d8b674bnm().f[5]++;
      cov_1d8b674bnm().s[35]++;
      if (node instanceof Slice) {
        cov_1d8b674bnm().b[11][0]++;
        cov_1d8b674bnm().s[36]++;
        return;
      } else {
        cov_1d8b674bnm().b[11][1]++;
      }
      cov_1d8b674bnm().s[37]++;
      orig_Compiler_assertType.apply(this, arguments);
    };
    cov_1d8b674bnm().s[38]++;
    Compiler.prototype.compileSlice = function compileSlice(node, frame) {
      cov_1d8b674bnm().f[6]++;
      cov_1d8b674bnm().s[39]++;
      this._emit('(');
      cov_1d8b674bnm().s[40]++;
      this._compileExpression(node.start, frame);
      cov_1d8b674bnm().s[41]++;
      this._emit('),(');
      cov_1d8b674bnm().s[42]++;
      this._compileExpression(node.stop, frame);
      cov_1d8b674bnm().s[43]++;
      this._emit('),(');
      cov_1d8b674bnm().s[44]++;
      this._compileExpression(node.step, frame);
      cov_1d8b674bnm().s[45]++;
      this._emit(')');
    };
    cov_1d8b674bnm().s[46]++;
    Parser.prototype.parseAggregate = function parseAggregate() {
      cov_1d8b674bnm().f[7]++;
      var origState = (cov_1d8b674bnm().s[47]++, getTokensState(this.tokens));
      // Set back one accounting for opening bracket/parens
      cov_1d8b674bnm().s[48]++;
      origState.colno--;
      cov_1d8b674bnm().s[49]++;
      origState.index--;
      cov_1d8b674bnm().s[50]++;
      try {
        cov_1d8b674bnm().s[51]++;
        return orig_Parser_parseAggregate.apply(this);
      } catch (e) {
        const errState = (cov_1d8b674bnm().s[52]++, getTokensState(this.tokens));
        cov_1d8b674bnm().s[53]++;
        const rethrow = () => {
          cov_1d8b674bnm().f[8]++;
          cov_1d8b674bnm().s[54]++;
          lib._assign(this.tokens, errState);
          cov_1d8b674bnm().s[55]++;
          return e;
        };

        // Reset to state before original parseAggregate called
        cov_1d8b674bnm().s[56]++;
        lib._assign(this.tokens, origState);
        cov_1d8b674bnm().s[57]++;
        this.peeked = false;
        const tok = (cov_1d8b674bnm().s[58]++, this.peekToken());
        cov_1d8b674bnm().s[59]++;
        if (tok.type !== lexer.TOKEN_LEFT_BRACKET) {
          cov_1d8b674bnm().b[12][0]++;
          cov_1d8b674bnm().s[60]++;
          throw rethrow();
        } else {
          cov_1d8b674bnm().b[12][1]++;
          cov_1d8b674bnm().s[61]++;
          this.nextToken();
        }
        const node = (cov_1d8b674bnm().s[62]++, new Slice(tok.lineno, tok.colno));

        // If we don't encounter a colon while parsing, this is not a slice,
        // so re-raise the original exception.
        let isSlice = (cov_1d8b674bnm().s[63]++, false);
        cov_1d8b674bnm().s[64]++;
        for (let i = (cov_1d8b674bnm().s[65]++, 0); i <= node.fields.length; i++) {
          cov_1d8b674bnm().s[66]++;
          if (this.skip(lexer.TOKEN_RIGHT_BRACKET)) {
            cov_1d8b674bnm().b[13][0]++;
            cov_1d8b674bnm().s[67]++;
            break;
          } else {
            cov_1d8b674bnm().b[13][1]++;
          }
          cov_1d8b674bnm().s[68]++;
          if (i === node.fields.length) {
            cov_1d8b674bnm().b[14][0]++;
            cov_1d8b674bnm().s[69]++;
            if (isSlice) {
              cov_1d8b674bnm().b[15][0]++;
              cov_1d8b674bnm().s[70]++;
              this.fail('parseSlice: too many slice components', tok.lineno, tok.colno);
            } else {
              cov_1d8b674bnm().b[15][1]++;
              cov_1d8b674bnm().s[71]++;
              break;
            }
          } else {
            cov_1d8b674bnm().b[14][1]++;
          }
          cov_1d8b674bnm().s[72]++;
          if (this.skip(lexer.TOKEN_COLON)) {
            cov_1d8b674bnm().b[16][0]++;
            cov_1d8b674bnm().s[73]++;
            isSlice = true;
          } else {
            cov_1d8b674bnm().b[16][1]++;
            const field = (cov_1d8b674bnm().s[74]++, node.fields[i]);
            cov_1d8b674bnm().s[75]++;
            node[field] = this.parseExpression();
            cov_1d8b674bnm().s[76]++;
            isSlice = (cov_1d8b674bnm().b[17][0]++, this.skip(lexer.TOKEN_COLON)) || (cov_1d8b674bnm().b[17][1]++, isSlice);
          }
        }
        cov_1d8b674bnm().s[77]++;
        if (!isSlice) {
          cov_1d8b674bnm().b[18][0]++;
          cov_1d8b674bnm().s[78]++;
          throw rethrow();
        } else {
          cov_1d8b674bnm().b[18][1]++;
        }
        cov_1d8b674bnm().s[79]++;
        return new nodes.Array(tok.lineno, tok.colno, [node]);
      }
    };
  } else {
    cov_1d8b674bnm().b[6][1]++;
  }
  function sliceLookup(obj, start, stop, step) {
    cov_1d8b674bnm().f[9]++;
    cov_1d8b674bnm().s[80]++;
    obj = (cov_1d8b674bnm().b[19][0]++, obj) || (cov_1d8b674bnm().b[19][1]++, []);
    cov_1d8b674bnm().s[81]++;
    if (start === null) {
      cov_1d8b674bnm().b[20][0]++;
      cov_1d8b674bnm().s[82]++;
      start = step < 0 ? (cov_1d8b674bnm().b[21][0]++, obj.length - 1) : (cov_1d8b674bnm().b[21][1]++, 0);
    } else {
      cov_1d8b674bnm().b[20][1]++;
    }
    cov_1d8b674bnm().s[83]++;
    if (stop === null) {
      cov_1d8b674bnm().b[22][0]++;
      cov_1d8b674bnm().s[84]++;
      stop = step < 0 ? (cov_1d8b674bnm().b[23][0]++, -1) : (cov_1d8b674bnm().b[23][1]++, obj.length);
    } else {
      cov_1d8b674bnm().b[22][1]++;
      cov_1d8b674bnm().s[85]++;
      if (stop < 0) {
        cov_1d8b674bnm().b[24][0]++;
        cov_1d8b674bnm().s[86]++;
        stop += obj.length;
      } else {
        cov_1d8b674bnm().b[24][1]++;
      }
    }
    cov_1d8b674bnm().s[87]++;
    if (start < 0) {
      cov_1d8b674bnm().b[25][0]++;
      cov_1d8b674bnm().s[88]++;
      start += obj.length;
    } else {
      cov_1d8b674bnm().b[25][1]++;
    }
    const results = (cov_1d8b674bnm().s[89]++, []);
    cov_1d8b674bnm().s[90]++;
    for (let i = (cov_1d8b674bnm().s[91]++, start);; i += step) {
      cov_1d8b674bnm().s[92]++;
      if ((cov_1d8b674bnm().b[27][0]++, i < 0) || (cov_1d8b674bnm().b[27][1]++, i > obj.length)) {
        cov_1d8b674bnm().b[26][0]++;
        cov_1d8b674bnm().s[93]++;
        break;
      } else {
        cov_1d8b674bnm().b[26][1]++;
      }
      cov_1d8b674bnm().s[94]++;
      if ((cov_1d8b674bnm().b[29][0]++, step > 0) && (cov_1d8b674bnm().b[29][1]++, i >= stop)) {
        cov_1d8b674bnm().b[28][0]++;
        cov_1d8b674bnm().s[95]++;
        break;
      } else {
        cov_1d8b674bnm().b[28][1]++;
      }
      cov_1d8b674bnm().s[96]++;
      if ((cov_1d8b674bnm().b[31][0]++, step < 0) && (cov_1d8b674bnm().b[31][1]++, i <= stop)) {
        cov_1d8b674bnm().b[30][0]++;
        cov_1d8b674bnm().s[97]++;
        break;
      } else {
        cov_1d8b674bnm().b[30][1]++;
      }
      cov_1d8b674bnm().s[98]++;
      results.push(runtime.memberLookup(obj, i));
    }
    cov_1d8b674bnm().s[99]++;
    return results;
  }
  function hasOwnProp(obj, key) {
    cov_1d8b674bnm().f[10]++;
    cov_1d8b674bnm().s[100]++;
    return Object.prototype.hasOwnProperty.call(obj, key);
  }
  const ARRAY_MEMBERS = (cov_1d8b674bnm().s[101]++, {
    pop(index) {
      cov_1d8b674bnm().f[11]++;
      cov_1d8b674bnm().s[102]++;
      if (index === undefined) {
        cov_1d8b674bnm().b[32][0]++;
        cov_1d8b674bnm().s[103]++;
        return this.pop();
      } else {
        cov_1d8b674bnm().b[32][1]++;
      }
      cov_1d8b674bnm().s[104]++;
      if ((cov_1d8b674bnm().b[34][0]++, index >= this.length) || (cov_1d8b674bnm().b[34][1]++, index < 0)) {
        cov_1d8b674bnm().b[33][0]++;
        cov_1d8b674bnm().s[105]++;
        throw new Error('KeyError');
      } else {
        cov_1d8b674bnm().b[33][1]++;
      }
      cov_1d8b674bnm().s[106]++;
      return this.splice(index, 1);
    },
    append(element) {
      cov_1d8b674bnm().f[12]++;
      cov_1d8b674bnm().s[107]++;
      return this.push(element);
    },
    remove(element) {
      cov_1d8b674bnm().f[13]++;
      cov_1d8b674bnm().s[108]++;
      for (let i = (cov_1d8b674bnm().s[109]++, 0); i < this.length; i++) {
        cov_1d8b674bnm().s[110]++;
        if (this[i] === element) {
          cov_1d8b674bnm().b[35][0]++;
          cov_1d8b674bnm().s[111]++;
          return this.splice(i, 1);
        } else {
          cov_1d8b674bnm().b[35][1]++;
        }
      }
      cov_1d8b674bnm().s[112]++;
      throw new Error('ValueError');
    },
    count(element) {
      cov_1d8b674bnm().f[14]++;
      var count = (cov_1d8b674bnm().s[113]++, 0);
      cov_1d8b674bnm().s[114]++;
      for (let i = (cov_1d8b674bnm().s[115]++, 0); i < this.length; i++) {
        cov_1d8b674bnm().s[116]++;
        if (this[i] === element) {
          cov_1d8b674bnm().b[36][0]++;
          cov_1d8b674bnm().s[117]++;
          count++;
        } else {
          cov_1d8b674bnm().b[36][1]++;
        }
      }
      cov_1d8b674bnm().s[118]++;
      return count;
    },
    index(element) {
      cov_1d8b674bnm().f[15]++;
      var i;
      cov_1d8b674bnm().s[119]++;
      if ((i = this.indexOf(element)) === -1) {
        cov_1d8b674bnm().b[37][0]++;
        cov_1d8b674bnm().s[120]++;
        throw new Error('ValueError');
      } else {
        cov_1d8b674bnm().b[37][1]++;
      }
      cov_1d8b674bnm().s[121]++;
      return i;
    },
    find(element) {
      cov_1d8b674bnm().f[16]++;
      cov_1d8b674bnm().s[122]++;
      return this.indexOf(element);
    },
    insert(index, elem) {
      cov_1d8b674bnm().f[17]++;
      cov_1d8b674bnm().s[123]++;
      return this.splice(index, 0, elem);
    }
  });
  const OBJECT_MEMBERS = (cov_1d8b674bnm().s[124]++, {
    items() {
      cov_1d8b674bnm().f[18]++;
      cov_1d8b674bnm().s[125]++;
      return lib._entries(this);
    },
    values() {
      cov_1d8b674bnm().f[19]++;
      cov_1d8b674bnm().s[126]++;
      return lib._values(this);
    },
    keys() {
      cov_1d8b674bnm().f[20]++;
      cov_1d8b674bnm().s[127]++;
      return lib.keys(this);
    },
    get(key, def) {
      cov_1d8b674bnm().f[21]++;
      var output = (cov_1d8b674bnm().s[128]++, this[key]);
      cov_1d8b674bnm().s[129]++;
      if (output === undefined) {
        cov_1d8b674bnm().b[38][0]++;
        cov_1d8b674bnm().s[130]++;
        output = def;
      } else {
        cov_1d8b674bnm().b[38][1]++;
      }
      cov_1d8b674bnm().s[131]++;
      return output;
    },
    has_key(key) {
      cov_1d8b674bnm().f[22]++;
      cov_1d8b674bnm().s[132]++;
      return hasOwnProp(this, key);
    },
    pop(key, def) {
      cov_1d8b674bnm().f[23]++;
      var output = (cov_1d8b674bnm().s[133]++, this[key]);
      cov_1d8b674bnm().s[134]++;
      if ((cov_1d8b674bnm().b[40][0]++, output === undefined) && (cov_1d8b674bnm().b[40][1]++, def !== undefined)) {
        cov_1d8b674bnm().b[39][0]++;
        cov_1d8b674bnm().s[135]++;
        output = def;
      } else {
        cov_1d8b674bnm().b[39][1]++;
        cov_1d8b674bnm().s[136]++;
        if (output === undefined) {
          cov_1d8b674bnm().b[41][0]++;
          cov_1d8b674bnm().s[137]++;
          throw new Error('KeyError');
        } else {
          cov_1d8b674bnm().b[41][1]++;
          cov_1d8b674bnm().s[138]++;
          delete this[key];
        }
      }
      cov_1d8b674bnm().s[139]++;
      return output;
    },
    popitem() {
      cov_1d8b674bnm().f[24]++;
      const keys = (cov_1d8b674bnm().s[140]++, lib.keys(this));
      cov_1d8b674bnm().s[141]++;
      if (!keys.length) {
        cov_1d8b674bnm().b[42][0]++;
        cov_1d8b674bnm().s[142]++;
        throw new Error('KeyError');
      } else {
        cov_1d8b674bnm().b[42][1]++;
      }
      const k = (cov_1d8b674bnm().s[143]++, keys[0]);
      const val = (cov_1d8b674bnm().s[144]++, this[k]);
      cov_1d8b674bnm().s[145]++;
      delete this[k];
      cov_1d8b674bnm().s[146]++;
      return [k, val];
    },
    setdefault(key, def) {
      if (def === void 0) {
        def = (cov_1d8b674bnm().b[43][0]++, null);
      }
      cov_1d8b674bnm().f[25]++;
      cov_1d8b674bnm().s[147]++;
      if (!(key in this)) {
        cov_1d8b674bnm().b[44][0]++;
        cov_1d8b674bnm().s[148]++;
        this[key] = def;
      } else {
        cov_1d8b674bnm().b[44][1]++;
      }
      cov_1d8b674bnm().s[149]++;
      return this[key];
    },
    update(kwargs) {
      cov_1d8b674bnm().f[26]++;
      cov_1d8b674bnm().s[150]++;
      lib._assign(this, kwargs);
      cov_1d8b674bnm().s[151]++;
      return null; // Always returns None
    }
  });
  cov_1d8b674bnm().s[152]++;
  OBJECT_MEMBERS.iteritems = OBJECT_MEMBERS.items;
  cov_1d8b674bnm().s[153]++;
  OBJECT_MEMBERS.itervalues = OBJECT_MEMBERS.values;
  cov_1d8b674bnm().s[154]++;
  OBJECT_MEMBERS.iterkeys = OBJECT_MEMBERS.keys;
  cov_1d8b674bnm().s[155]++;
  runtime.memberLookup = function memberLookup(obj, val, autoescape) {
    cov_1d8b674bnm().f[27]++;
    cov_1d8b674bnm().s[156]++;
    if (arguments.length === 4) {
      cov_1d8b674bnm().b[45][0]++;
      cov_1d8b674bnm().s[157]++;
      return sliceLookup.apply(this, arguments);
    } else {
      cov_1d8b674bnm().b[45][1]++;
    }
    cov_1d8b674bnm().s[158]++;
    obj = (cov_1d8b674bnm().b[46][0]++, obj) || (cov_1d8b674bnm().b[46][1]++, {});

    // If the object is an object, return any of the methods that Python would
    // otherwise provide.
    cov_1d8b674bnm().s[159]++;
    if ((cov_1d8b674bnm().b[48][0]++, lib.isArray(obj)) && (cov_1d8b674bnm().b[48][1]++, hasOwnProp(ARRAY_MEMBERS, val))) {
      cov_1d8b674bnm().b[47][0]++;
      cov_1d8b674bnm().s[160]++;
      return ARRAY_MEMBERS[val].bind(obj);
    } else {
      cov_1d8b674bnm().b[47][1]++;
    }
    cov_1d8b674bnm().s[161]++;
    if ((cov_1d8b674bnm().b[50][0]++, lib.isObject(obj)) && (cov_1d8b674bnm().b[50][1]++, hasOwnProp(OBJECT_MEMBERS, val))) {
      cov_1d8b674bnm().b[49][0]++;
      cov_1d8b674bnm().s[162]++;
      return OBJECT_MEMBERS[val].bind(obj);
    } else {
      cov_1d8b674bnm().b[49][1]++;
    }
    cov_1d8b674bnm().s[163]++;
    return orig_memberLookup.apply(this, arguments);
  };
  cov_1d8b674bnm().s[164]++;
  return uninstall;
}
cov_1d8b674bnm().s[165]++;
module.exports = installCompat;

/***/ }),

/***/ 3608:
/*!*******************************!*\
  !*** ./nunjucks/src/lexer.js ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function cov_1acdglsjse() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\lexer.js";
  var hash = "f471e5959b889c9a62df28abb6644f61dce236ed";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\lexer.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "1": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 37
        }
      },
      "2": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 40
        }
      },
      "3": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 27
        }
      },
      "4": {
        start: {
          line: 9,
          column: 18
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "5": {
        start: {
          line: 10,
          column: 16
        },
        end: {
          line: 10,
          column: 20
        }
      },
      "6": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 25
        }
      },
      "7": {
        start: {
          line: 12,
          column: 19
        },
        end: {
          line: 12,
          column: 23
        }
      },
      "8": {
        start: {
          line: 13,
          column: 20
        },
        end: {
          line: 13,
          column: 24
        }
      },
      "9": {
        start: {
          line: 14,
          column: 18
        },
        end: {
          line: 14,
          column: 22
        }
      },
      "10": {
        start: {
          line: 16,
          column: 19
        },
        end: {
          line: 16,
          column: 27
        }
      },
      "11": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 17,
          column: 35
        }
      },
      "12": {
        start: {
          line: 18,
          column: 17
        },
        end: {
          line: 18,
          column: 23
        }
      },
      "13": {
        start: {
          line: 19,
          column: 24
        },
        end: {
          line: 19,
          column: 37
        }
      },
      "14": {
        start: {
          line: 20,
          column: 22
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "15": {
        start: {
          line: 21,
          column: 27
        },
        end: {
          line: 21,
          column: 43
        }
      },
      "16": {
        start: {
          line: 22,
          column: 25
        },
        end: {
          line: 22,
          column: 39
        }
      },
      "17": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 29
        }
      },
      "18": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 35
        }
      },
      "19": {
        start: {
          line: 25,
          column: 24
        },
        end: {
          line: 25,
          column: 37
        }
      },
      "20": {
        start: {
          line: 26,
          column: 25
        },
        end: {
          line: 26,
          column: 39
        }
      },
      "21": {
        start: {
          line: 27,
          column: 26
        },
        end: {
          line: 27,
          column: 41
        }
      },
      "22": {
        start: {
          line: 28,
          column: 23
        },
        end: {
          line: 28,
          column: 35
        }
      },
      "23": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 29,
          column: 37
        }
      },
      "24": {
        start: {
          line: 30,
          column: 21
        },
        end: {
          line: 30,
          column: 31
        }
      },
      "25": {
        start: {
          line: 31,
          column: 18
        },
        end: {
          line: 31,
          column: 25
        }
      },
      "26": {
        start: {
          line: 32,
          column: 18
        },
        end: {
          line: 32,
          column: 25
        }
      },
      "27": {
        start: {
          line: 33,
          column: 18
        },
        end: {
          line: 33,
          column: 25
        }
      },
      "28": {
        start: {
          line: 34,
          column: 17
        },
        end: {
          line: 34,
          column: 23
        }
      },
      "29": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 21
        }
      },
      "30": {
        start: {
          line: 36,
          column: 18
        },
        end: {
          line: 36,
          column: 25
        }
      },
      "31": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 37,
          column: 29
        }
      },
      "32": {
        start: {
          line: 38,
          column: 17
        },
        end: {
          line: 38,
          column: 23
        }
      },
      "33": {
        start: {
          line: 39,
          column: 19
        },
        end: {
          line: 39,
          column: 27
        }
      },
      "34": {
        start: {
          line: 40,
          column: 20
        },
        end: {
          line: 40,
          column: 29
        }
      },
      "35": {
        start: {
          line: 41,
          column: 18
        },
        end: {
          line: 41,
          column: 25
        }
      },
      "36": {
        start: {
          line: 44,
          column: 2
        },
        end: {
          line: 49,
          column: 4
        }
      },
      "37": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 19
        }
      },
      "38": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 19
        }
      },
      "39": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 26
        }
      },
      "40": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 20
        }
      },
      "41": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 19
        }
      },
      "42": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 25
        }
      },
      "43": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 22
        }
      },
      "44": {
        start: {
          line: 64,
          column: 15
        },
        end: {
          line: 64,
          column: 30
        }
      },
      "45": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 72,
          column: 6
        }
      },
      "46": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 40
        }
      },
      "47": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 44
        }
      },
      "48": {
        start: {
          line: 79,
          column: 17
        },
        end: {
          line: 79,
          column: 28
        }
      },
      "49": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 26
        }
      },
      "50": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 330,
          column: 5
        }
      },
      "51": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 30
        }
      },
      "52": {
        start: {
          line: 87,
          column: 6
        },
        end: {
          line: 247,
          column: 7
        }
      },
      "53": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 20
        }
      },
      "54": {
        start: {
          line: 90,
          column: 13
        },
        end: {
          line: 247,
          column: 7
        }
      },
      "55": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 74
        }
      },
      "56": {
        start: {
          line: 93,
          column: 13
        },
        end: {
          line: 247,
          column: 7
        }
      },
      "57": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 59
        }
      },
      "58": {
        start: {
          line: 96,
          column: 13
        },
        end: {
          line: 247,
          column: 7
        }
      },
      "59": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 29
        }
      },
      "60": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "61": {
        start: {
          line: 106,
          column: 10
        },
        end: {
          line: 106,
          column: 31
        }
      },
      "62": {
        start: {
          line: 107,
          column: 10
        },
        end: {
          line: 120,
          column: 11
        }
      },
      "63": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 27
        }
      },
      "64": {
        start: {
          line: 110,
          column: 17
        },
        end: {
          line: 120,
          column: 11
        }
      },
      "65": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 27
        }
      },
      "66": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 33
        }
      },
      "67": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 119,
          column: 13
        }
      },
      "68": {
        start: {
          line: 115,
          column: 14
        },
        end: {
          line: 115,
          column: 29
        }
      },
      "69": {
        start: {
          line: 118,
          column: 14
        },
        end: {
          line: 118,
          column: 26
        }
      },
      "70": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 58
        }
      },
      "71": {
        start: {
          line: 123,
          column: 13
        },
        end: {
          line: 247,
          column: 7
        }
      },
      "72": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 29
        }
      },
      "73": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 61
        }
      },
      "74": {
        start: {
          line: 128,
          column: 13
        },
        end: {
          line: 247,
          column: 7
        }
      },
      "75": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 25
        }
      },
      "76": {
        start: {
          line: 133,
          column: 24
        },
        end: {
          line: 133,
          column: 26
        }
      },
      "77": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "78": {
        start: {
          line: 135,
          column: 10
        },
        end: {
          line: 141,
          column: 11
        }
      },
      "79": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 27
        }
      },
      "80": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 18
        }
      },
      "81": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 40
        }
      },
      "82": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 27
        }
      },
      "83": {
        start: {
          line: 146,
          column: 29
        },
        end: {
          line: 146,
          column: 49
        }
      },
      "84": {
        start: {
          line: 147,
          column: 25
        },
        end: {
          line: 147,
          column: 27
        }
      },
      "85": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "86": {
        start: {
          line: 149,
          column: 31
        },
        end: {
          line: 149,
          column: 76
        }
      },
      "87": {
        start: {
          line: 150,
          column: 10
        },
        end: {
          line: 155,
          column: 11
        }
      },
      "88": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 41
        }
      },
      "89": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 27
        }
      },
      "90": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 18
        }
      },
      "91": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 161,
          column: 26
        }
      },
      "92": {
        start: {
          line: 162,
          column: 13
        },
        end: {
          line: 247,
          column: 7
        }
      },
      "93": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 23
        }
      },
      "94": {
        start: {
          line: 165,
          column: 25
        },
        end: {
          line: 165,
          column: 75
        }
      },
      "95": {
        start: {
          line: 166,
          column: 25
        },
        end: {
          line: 166,
          column: 45
        }
      },
      "96": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "97": {
        start: {
          line: 170,
          column: 10
        },
        end: {
          line: 170,
          column: 25
        }
      },
      "98": {
        start: {
          line: 171,
          column: 10
        },
        end: {
          line: 171,
          column: 27
        }
      },
      "99": {
        start: {
          line: 174,
          column: 10
        },
        end: {
          line: 177,
          column: 11
        }
      },
      "100": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 46
        }
      },
      "101": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 27
        }
      },
      "102": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "103": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 36
        }
      },
      "104": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 18
        }
      },
      "105": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 37
        }
      },
      "106": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 18
        }
      },
      "107": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 38
        }
      },
      "108": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 18
        }
      },
      "109": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 39
        }
      },
      "110": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 18
        }
      },
      "111": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 36
        }
      },
      "112": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 18
        }
      },
      "113": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 37
        }
      },
      "114": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 18
        }
      },
      "115": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 31
        }
      },
      "116": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 18
        }
      },
      "117": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 31
        }
      },
      "118": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 18
        }
      },
      "119": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 31
        }
      },
      "120": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 18
        }
      },
      "121": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 30
        }
      },
      "122": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 18
        }
      },
      "123": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 34
        }
      },
      "124": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 47
        }
      },
      "125": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 63
        }
      },
      "126": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "127": {
        start: {
          line: 222,
          column: 10
        },
        end: {
          line: 228,
          column: 11
        }
      },
      "128": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 27
        }
      },
      "129": {
        start: {
          line: 224,
          column: 22
        },
        end: {
          line: 224,
          column: 45
        }
      },
      "130": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 70
        }
      },
      "131": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 56
        }
      },
      "132": {
        start: {
          line: 229,
          column: 15
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "133": {
        start: {
          line: 230,
          column: 10
        },
        end: {
          line: 230,
          column: 58
        }
      },
      "134": {
        start: {
          line: 231,
          column: 15
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "135": {
        start: {
          line: 232,
          column: 10
        },
        end: {
          line: 232,
          column: 55
        }
      },
      "136": {
        start: {
          line: 240,
          column: 15
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "137": {
        start: {
          line: 241,
          column: 10
        },
        end: {
          line: 241,
          column: 55
        }
      },
      "138": {
        start: {
          line: 242,
          column: 15
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "139": {
        start: {
          line: 243,
          column: 10
        },
        end: {
          line: 243,
          column: 57
        }
      },
      "140": {
        start: {
          line: 245,
          column: 10
        },
        end: {
          line: 245,
          column: 68
        }
      },
      "141": {
        start: {
          line: 252,
          column: 24
        },
        end: {
          line: 255,
          column: 37
        }
      },
      "142": {
        start: {
          line: 257,
          column: 6
        },
        end: {
          line: 329,
          column: 7
        }
      },
      "143": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 258,
          column: 20
        }
      },
      "144": {
        start: {
          line: 259,
          column: 13
        },
        end: {
          line: 329,
          column: 7
        }
      },
      "145": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 28
        }
      },
      "146": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 60
        }
      },
      "147": {
        start: {
          line: 263,
          column: 13
        },
        end: {
          line: 329,
          column: 7
        }
      },
      "148": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 28
        }
      },
      "149": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 63
        }
      },
      "150": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 17
        }
      },
      "151": {
        start: {
          line: 270,
          column: 24
        },
        end: {
          line: 270,
          column: 29
        }
      },
      "152": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 275,
          column: 9
        }
      },
      "153": {
        start: {
          line: 273,
          column: 10
        },
        end: {
          line: 273,
          column: 27
        }
      },
      "154": {
        start: {
          line: 274,
          column: 10
        },
        end: {
          line: 274,
          column: 61
        }
      },
      "155": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 319,
          column: 9
        }
      },
      "156": {
        start: {
          line: 284,
          column: 10
        },
        end: {
          line: 284,
          column: 22
        }
      },
      "157": {
        start: {
          line: 286,
          column: 10
        },
        end: {
          line: 318,
          column: 11
        }
      },
      "158": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 304,
          column: 13
        }
      },
      "159": {
        start: {
          line: 294,
          column: 29
        },
        end: {
          line: 294,
          column: 51
        }
      },
      "160": {
        start: {
          line: 295,
          column: 14
        },
        end: {
          line: 303,
          column: 15
        }
      },
      "161": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 297,
          column: 48
        }
      },
      "162": {
        start: {
          line: 298,
          column: 16
        },
        end: {
          line: 302,
          column: 17
        }
      },
      "163": {
        start: {
          line: 301,
          column: 18
        },
        end: {
          line: 301,
          column: 42
        }
      },
      "164": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 18
        }
      },
      "165": {
        start: {
          line: 307,
          column: 17
        },
        end: {
          line: 318,
          column: 11
        }
      },
      "166": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 310,
          column: 13
        }
      },
      "167": {
        start: {
          line: 309,
          column: 14
        },
        end: {
          line: 309,
          column: 59
        }
      },
      "168": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 311,
          column: 62
        }
      },
      "169": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 18
        }
      },
      "170": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 34
        }
      },
      "171": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 27
        }
      },
      "172": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 323,
          column: 9
        }
      },
      "173": {
        start: {
          line: 322,
          column: 10
        },
        end: {
          line: 322,
          column: 70
        }
      },
      "174": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 328,
          column: 17
        }
      },
      "175": {
        start: {
          line: 334,
          column: 4
        },
        end: {
          line: 334,
          column: 19
        }
      },
      "176": {
        start: {
          line: 336,
          column: 14
        },
        end: {
          line: 336,
          column: 16
        }
      },
      "177": {
        start: {
          line: 338,
          column: 4
        },
        end: {
          line: 361,
          column: 5
        }
      },
      "178": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 339,
          column: 30
        }
      },
      "179": {
        start: {
          line: 341,
          column: 6
        },
        end: {
          line: 360,
          column: 7
        }
      },
      "180": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 342,
          column: 23
        }
      },
      "181": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 355,
          column: 9
        }
      },
      "182": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 24
        }
      },
      "183": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 346,
          column: 18
        }
      },
      "184": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 24
        }
      },
      "185": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 18
        }
      },
      "186": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 24
        }
      },
      "187": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 352,
          column: 18
        }
      },
      "188": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 354,
          column: 34
        }
      },
      "189": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 356,
          column: 23
        }
      },
      "190": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 19
        }
      },
      "191": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 359,
          column: 23
        }
      },
      "192": {
        start: {
          line: 363,
          column: 4
        },
        end: {
          line: 363,
          column: 19
        }
      },
      "193": {
        start: {
          line: 364,
          column: 4
        },
        end: {
          line: 364,
          column: 15
        }
      },
      "194": {
        start: {
          line: 368,
          column: 4
        },
        end: {
          line: 370,
          column: 5
        }
      },
      "195": {
        start: {
          line: 369,
          column: 6
        },
        end: {
          line: 369,
          column: 18
        }
      },
      "196": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 63
        }
      },
      "197": {
        start: {
          line: 373,
          column: 4
        },
        end: {
          line: 373,
          column: 21
        }
      },
      "198": {
        start: {
          line: 377,
          column: 4
        },
        end: {
          line: 380,
          column: 5
        }
      },
      "199": {
        start: {
          line: 378,
          column: 6
        },
        end: {
          line: 378,
          column: 32
        }
      },
      "200": {
        start: {
          line: 379,
          column: 6
        },
        end: {
          line: 379,
          column: 17
        }
      },
      "201": {
        start: {
          line: 381,
          column: 4
        },
        end: {
          line: 381,
          column: 16
        }
      },
      "202": {
        start: {
          line: 387,
          column: 4
        },
        end: {
          line: 387,
          column: 57
        }
      },
      "203": {
        start: {
          line: 393,
          column: 4
        },
        end: {
          line: 393,
          column: 52
        }
      },
      "204": {
        start: {
          line: 401,
          column: 4
        },
        end: {
          line: 403,
          column: 5
        }
      },
      "205": {
        start: {
          line: 402,
          column: 6
        },
        end: {
          line: 402,
          column: 18
        }
      },
      "206": {
        start: {
          line: 405,
          column: 16
        },
        end: {
          line: 405,
          column: 50
        }
      },
      "207": {
        start: {
          line: 408,
          column: 4
        },
        end: {
          line: 426,
          column: 5
        }
      },
      "208": {
        start: {
          line: 410,
          column: 14
        },
        end: {
          line: 410,
          column: 28
        }
      },
      "209": {
        start: {
          line: 411,
          column: 6
        },
        end: {
          line: 411,
          column: 21
        }
      },
      "210": {
        start: {
          line: 415,
          column: 16
        },
        end: {
          line: 415,
          column: 50
        }
      },
      "211": {
        start: {
          line: 417,
          column: 6
        },
        end: {
          line: 423,
          column: 7
        }
      },
      "212": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 419,
          column: 28
        }
      },
      "213": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 420,
          column: 23
        }
      },
      "214": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 422,
          column: 49
        }
      },
      "215": {
        start: {
          line: 425,
          column: 6
        },
        end: {
          line: 425,
          column: 15
        }
      },
      "216": {
        start: {
          line: 428,
          column: 4
        },
        end: {
          line: 428,
          column: 14
        }
      },
      "217": {
        start: {
          line: 432,
          column: 18
        },
        end: {
          line: 432,
          column: 48
        }
      },
      "218": {
        start: {
          line: 433,
          column: 4
        },
        end: {
          line: 435,
          column: 5
        }
      },
      "219": {
        start: {
          line: 434,
          column: 6
        },
        end: {
          line: 434,
          column: 18
        }
      },
      "220": {
        start: {
          line: 438,
          column: 4
        },
        end: {
          line: 438,
          column: 37
        }
      },
      "221": {
        start: {
          line: 440,
          column: 4
        },
        end: {
          line: 440,
          column: 19
        }
      },
      "222": {
        start: {
          line: 444,
          column: 4
        },
        end: {
          line: 444,
          column: 34
        }
      },
      "223": {
        start: {
          line: 448,
          column: 4
        },
        end: {
          line: 450,
          column: 5
        }
      },
      "224": {
        start: {
          line: 448,
          column: 17
        },
        end: {
          line: 448,
          column: 18
        }
      },
      "225": {
        start: {
          line: 449,
          column: 6
        },
        end: {
          line: 449,
          column: 21
        }
      },
      "226": {
        start: {
          line: 454,
          column: 4
        },
        end: {
          line: 454,
          column: 17
        }
      },
      "227": {
        start: {
          line: 456,
          column: 4
        },
        end: {
          line: 461,
          column: 5
        }
      },
      "228": {
        start: {
          line: 457,
          column: 6
        },
        end: {
          line: 457,
          column: 20
        }
      },
      "229": {
        start: {
          line: 458,
          column: 6
        },
        end: {
          line: 458,
          column: 21
        }
      },
      "230": {
        start: {
          line: 460,
          column: 6
        },
        end: {
          line: 460,
          column: 19
        }
      },
      "231": {
        start: {
          line: 465,
          column: 4
        },
        end: {
          line: 467,
          column: 5
        }
      },
      "232": {
        start: {
          line: 465,
          column: 17
        },
        end: {
          line: 465,
          column: 18
        }
      },
      "233": {
        start: {
          line: 466,
          column: 6
        },
        end: {
          line: 466,
          column: 18
        }
      },
      "234": {
        start: {
          line: 471,
          column: 4
        },
        end: {
          line: 471,
          column: 17
        }
      },
      "235": {
        start: {
          line: 473,
          column: 4
        },
        end: {
          line: 484,
          column: 5
        }
      },
      "236": {
        start: {
          line: 474,
          column: 6
        },
        end: {
          line: 474,
          column: 20
        }
      },
      "237": {
        start: {
          line: 476,
          column: 16
        },
        end: {
          line: 476,
          column: 58
        }
      },
      "238": {
        start: {
          line: 477,
          column: 6
        },
        end: {
          line: 481,
          column: 7
        }
      },
      "239": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 478,
          column: 32
        }
      },
      "240": {
        start: {
          line: 480,
          column: 8
        },
        end: {
          line: 480,
          column: 38
        }
      },
      "241": {
        start: {
          line: 483,
          column: 6
        },
        end: {
          line: 483,
          column: 19
        }
      },
      "242": {
        start: {
          line: 489,
          column: 4
        },
        end: {
          line: 491,
          column: 5
        }
      },
      "243": {
        start: {
          line: 490,
          column: 6
        },
        end: {
          line: 490,
          column: 41
        }
      },
      "244": {
        start: {
          line: 492,
          column: 4
        },
        end: {
          line: 492,
          column: 14
        }
      },
      "245": {
        start: {
          line: 497,
          column: 4
        },
        end: {
          line: 499,
          column: 5
        }
      },
      "246": {
        start: {
          line: 498,
          column: 6
        },
        end: {
          line: 498,
          column: 41
        }
      },
      "247": {
        start: {
          line: 500,
          column: 4
        },
        end: {
          line: 500,
          column: 14
        }
      },
      "248": {
        start: {
          line: 504,
          column: 4
        },
        end: {
          line: 504,
          column: 43
        }
      },
      "249": {
        start: {
          line: 508,
          column: 0
        },
        end: {
          line: 539,
          column: 2
        }
      },
      "250": {
        start: {
          line: 510,
          column: 4
        },
        end: {
          line: 510,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "token",
        decl: {
          start: {
            line: 43,
            column: 9
          },
          end: {
            line: 43,
            column: 14
          }
        },
        loc: {
          start: {
            line: 43,
            column: 43
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 43
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 53,
            column: 2
          },
          end: {
            line: 53,
            column: 3
          }
        },
        loc: {
          start: {
            line: 53,
            column: 25
          },
          end: {
            line: 76,
            column: 3
          }
        },
        line: 53
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 78,
            column: 2
          },
          end: {
            line: 78,
            column: 3
          }
        },
        loc: {
          start: {
            line: 78,
            column: 14
          },
          end: {
            line: 331,
            column: 3
          }
        },
        line: 78
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 333,
            column: 2
          },
          end: {
            line: 333,
            column: 3
          }
        },
        loc: {
          start: {
            line: 333,
            column: 26
          },
          end: {
            line: 365,
            column: 3
          }
        },
        line: 333
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 367,
            column: 2
          },
          end: {
            line: 367,
            column: 3
          }
        },
        loc: {
          start: {
            line: 367,
            column: 16
          },
          end: {
            line: 374,
            column: 3
          }
        },
        line: 367
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 376,
            column: 2
          },
          end: {
            line: 376,
            column: 3
          }
        },
        loc: {
          start: {
            line: 376,
            column: 22
          },
          end: {
            line: 382,
            column: 3
          }
        },
        line: 376
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 384,
            column: 2
          },
          end: {
            line: 384,
            column: 3
          }
        },
        loc: {
          start: {
            line: 384,
            column: 28
          },
          end: {
            line: 388,
            column: 3
          }
        },
        line: 384
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 390,
            column: 2
          },
          end: {
            line: 390,
            column: 3
          }
        },
        loc: {
          start: {
            line: 390,
            column: 23
          },
          end: {
            line: 394,
            column: 3
          }
        },
        line: 390
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 396,
            column: 2
          },
          end: {
            line: 396,
            column: 3
          }
        },
        loc: {
          start: {
            line: 396,
            column: 45
          },
          end: {
            line: 429,
            column: 3
          }
        },
        line: 396
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 431,
            column: 2
          },
          end: {
            line: 431,
            column: 3
          }
        },
        loc: {
          start: {
            line: 431,
            column: 23
          },
          end: {
            line: 441,
            column: 3
          }
        },
        line: 431
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 443,
            column: 2
          },
          end: {
            line: 443,
            column: 3
          }
        },
        loc: {
          start: {
            line: 443,
            column: 15
          },
          end: {
            line: 445,
            column: 3
          }
        },
        line: 443
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 447,
            column: 2
          },
          end: {
            line: 447,
            column: 3
          }
        },
        loc: {
          start: {
            line: 447,
            column: 14
          },
          end: {
            line: 451,
            column: 3
          }
        },
        line: 447
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 453,
            column: 2
          },
          end: {
            line: 453,
            column: 3
          }
        },
        loc: {
          start: {
            line: 453,
            column: 12
          },
          end: {
            line: 462,
            column: 3
          }
        },
        line: 453
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 464,
            column: 2
          },
          end: {
            line: 464,
            column: 3
          }
        },
        loc: {
          start: {
            line: 464,
            column: 11
          },
          end: {
            line: 468,
            column: 3
          }
        },
        line: 464
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 470,
            column: 2
          },
          end: {
            line: 470,
            column: 3
          }
        },
        loc: {
          start: {
            line: 470,
            column: 9
          },
          end: {
            line: 485,
            column: 3
          }
        },
        line: 470
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 488,
            column: 2
          },
          end: {
            line: 488,
            column: 3
          }
        },
        loc: {
          start: {
            line: 488,
            column: 12
          },
          end: {
            line: 493,
            column: 3
          }
        },
        line: 488
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 496,
            column: 2
          },
          end: {
            line: 496,
            column: 3
          }
        },
        loc: {
          start: {
            line: 496,
            column: 15
          },
          end: {
            line: 501,
            column: 3
          }
        },
        line: 496
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 503,
            column: 2
          },
          end: {
            line: 503,
            column: 3
          }
        },
        loc: {
          start: {
            line: 503,
            column: 13
          },
          end: {
            line: 505,
            column: 3
          }
        },
        line: 503
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 509,
            column: 2
          },
          end: {
            line: 509,
            column: 3
          }
        },
        loc: {
          start: {
            line: 509,
            column: 17
          },
          end: {
            line: 511,
            column: 3
          }
        },
        line: 509
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 62,
            column: 11
          },
          end: {
            line: 62,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 11
          },
          end: {
            line: 62,
            column: 15
          }
        }, {
          start: {
            line: 62,
            column: 19
          },
          end: {
            line: 62,
            column: 21
          }
        }],
        line: 62
      },
      "1": {
        loc: {
          start: {
            line: 64,
            column: 15
          },
          end: {
            line: 64,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 15
          },
          end: {
            line: 64,
            column: 24
          }
        }, {
          start: {
            line: 64,
            column: 28
          },
          end: {
            line: 64,
            column: 30
          }
        }],
        line: 64
      },
      "2": {
        loc: {
          start: {
            line: 66,
            column: 19
          },
          end: {
            line: 66,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 19
          },
          end: {
            line: 66,
            column: 34
          }
        }, {
          start: {
            line: 66,
            column: 38
          },
          end: {
            line: 66,
            column: 49
          }
        }],
        line: 66
      },
      "3": {
        loc: {
          start: {
            line: 67,
            column: 17
          },
          end: {
            line: 67,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 17
          },
          end: {
            line: 67,
            column: 30
          }
        }, {
          start: {
            line: 67,
            column: 34
          },
          end: {
            line: 67,
            column: 43
          }
        }],
        line: 67
      },
      "4": {
        loc: {
          start: {
            line: 68,
            column: 22
          },
          end: {
            line: 68,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 22
          },
          end: {
            line: 68,
            column: 40
          }
        }, {
          start: {
            line: 68,
            column: 44
          },
          end: {
            line: 68,
            column: 58
          }
        }],
        line: 68
      },
      "5": {
        loc: {
          start: {
            line: 69,
            column: 20
          },
          end: {
            line: 69,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 20
          },
          end: {
            line: 69,
            column: 36
          }
        }, {
          start: {
            line: 69,
            column: 40
          },
          end: {
            line: 69,
            column: 52
          }
        }],
        line: 69
      },
      "6": {
        loc: {
          start: {
            line: 70,
            column: 21
          },
          end: {
            line: 70,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 21
          },
          end: {
            line: 70,
            column: 38
          }
        }, {
          start: {
            line: 70,
            column: 42
          },
          end: {
            line: 70,
            column: 55
          }
        }],
        line: 70
      },
      "7": {
        loc: {
          start: {
            line: 71,
            column: 19
          },
          end: {
            line: 71,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 19
          },
          end: {
            line: 71,
            column: 34
          }
        }, {
          start: {
            line: 71,
            column: 38
          },
          end: {
            line: 71,
            column: 49
          }
        }],
        line: 71
      },
      "8": {
        loc: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        }, {
          start: {
            line: 248,
            column: 11
          },
          end: {
            line: 330,
            column: 5
          }
        }],
        line: 83
      },
      "9": {
        loc: {
          start: {
            line: 87,
            column: 6
          },
          end: {
            line: 247,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 6
          },
          end: {
            line: 247,
            column: 7
          }
        }, {
          start: {
            line: 90,
            column: 13
          },
          end: {
            line: 247,
            column: 7
          }
        }],
        line: 87
      },
      "10": {
        loc: {
          start: {
            line: 90,
            column: 13
          },
          end: {
            line: 247,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 13
          },
          end: {
            line: 247,
            column: 7
          }
        }, {
          start: {
            line: 93,
            column: 13
          },
          end: {
            line: 247,
            column: 7
          }
        }],
        line: 90
      },
      "11": {
        loc: {
          start: {
            line: 90,
            column: 17
          },
          end: {
            line: 90,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 17
          },
          end: {
            line: 90,
            column: 28
          }
        }, {
          start: {
            line: 90,
            column: 32
          },
          end: {
            line: 90,
            column: 44
          }
        }],
        line: 90
      },
      "12": {
        loc: {
          start: {
            line: 93,
            column: 13
          },
          end: {
            line: 247,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 13
          },
          end: {
            line: 247,
            column: 7
          }
        }, {
          start: {
            line: 96,
            column: 13
          },
          end: {
            line: 247,
            column: 7
          }
        }],
        line: 93
      },
      "13": {
        loc: {
          start: {
            line: 96,
            column: 13
          },
          end: {
            line: 247,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 13
          },
          end: {
            line: 247,
            column: 7
          }
        }, {
          start: {
            line: 123,
            column: 13
          },
          end: {
            line: 247,
            column: 7
          }
        }],
        line: 96
      },
      "14": {
        loc: {
          start: {
            line: 96,
            column: 17
          },
          end: {
            line: 97,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 18
          },
          end: {
            line: 96,
            column: 64
          }
        }, {
          start: {
            line: 97,
            column: 9
          },
          end: {
            line: 97,
            column: 61
          }
        }],
        line: 96
      },
      "15": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "16": {
        loc: {
          start: {
            line: 107,
            column: 10
          },
          end: {
            line: 120,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 10
          },
          end: {
            line: 120,
            column: 11
          }
        }, {
          start: {
            line: 110,
            column: 17
          },
          end: {
            line: 120,
            column: 11
          }
        }],
        line: 107
      },
      "17": {
        loc: {
          start: {
            line: 110,
            column: 17
          },
          end: {
            line: 120,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 17
          },
          end: {
            line: 120,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "18": {
        loc: {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        }, {
          start: {
            line: 116,
            column: 19
          },
          end: {
            line: 119,
            column: 13
          }
        }],
        line: 114
      },
      "19": {
        loc: {
          start: {
            line: 123,
            column: 13
          },
          end: {
            line: 247,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 13
          },
          end: {
            line: 247,
            column: 7
          }
        }, {
          start: {
            line: 128,
            column: 13
          },
          end: {
            line: 247,
            column: 7
          }
        }],
        line: 123
      },
      "20": {
        loc: {
          start: {
            line: 123,
            column: 17
          },
          end: {
            line: 124,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 18
          },
          end: {
            line: 123,
            column: 67
          }
        }, {
          start: {
            line: 124,
            column: 9
          },
          end: {
            line: 124,
            column: 64
          }
        }],
        line: 123
      },
      "21": {
        loc: {
          start: {
            line: 128,
            column: 13
          },
          end: {
            line: 247,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 13
          },
          end: {
            line: 247,
            column: 7
          }
        }, {
          start: {
            line: 162,
            column: 13
          },
          end: {
            line: 247,
            column: 7
          }
        }],
        line: 128
      },
      "22": {
        loc: {
          start: {
            line: 128,
            column: 17
          },
          end: {
            line: 128,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 17
          },
          end: {
            line: 128,
            column: 28
          }
        }, {
          start: {
            line: 128,
            column: 32
          },
          end: {
            line: 128,
            column: 71
          }
        }],
        line: 128
      },
      "23": {
        loc: {
          start: {
            line: 135,
            column: 10
          },
          end: {
            line: 141,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 10
          },
          end: {
            line: 141,
            column: 11
          }
        }, {
          start: {
            line: 138,
            column: 17
          },
          end: {
            line: 141,
            column: 11
          }
        }],
        line: 135
      },
      "24": {
        loc: {
          start: {
            line: 135,
            column: 14
          },
          end: {
            line: 135,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 14
          },
          end: {
            line: 135,
            column: 36
          }
        }, {
          start: {
            line: 135,
            column: 40
          },
          end: {
            line: 135,
            column: 64
          }
        }],
        line: 135
      },
      "25": {
        loc: {
          start: {
            line: 150,
            column: 10
          },
          end: {
            line: 155,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 10
          },
          end: {
            line: 155,
            column: 11
          }
        }, {
          start: {
            line: 153,
            column: 17
          },
          end: {
            line: 155,
            column: 11
          }
        }],
        line: 150
      },
      "26": {
        loc: {
          start: {
            line: 162,
            column: 13
          },
          end: {
            line: 247,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 13
          },
          end: {
            line: 247,
            column: 7
          }
        }, {
          start: {
            line: 216,
            column: 13
          },
          end: {
            line: 247,
            column: 7
          }
        }],
        line: 162
      },
      "27": {
        loc: {
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "28": {
        loc: {
          start: {
            line: 174,
            column: 10
          },
          end: {
            line: 177,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 10
          },
          end: {
            line: 177,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "29": {
        loc: {
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 181,
            column: 10
          },
          end: {
            line: 183,
            column: 18
          }
        }, {
          start: {
            line: 184,
            column: 10
          },
          end: {
            line: 186,
            column: 18
          }
        }, {
          start: {
            line: 187,
            column: 10
          },
          end: {
            line: 189,
            column: 18
          }
        }, {
          start: {
            line: 190,
            column: 10
          },
          end: {
            line: 192,
            column: 18
          }
        }, {
          start: {
            line: 193,
            column: 10
          },
          end: {
            line: 195,
            column: 18
          }
        }, {
          start: {
            line: 196,
            column: 10
          },
          end: {
            line: 198,
            column: 18
          }
        }, {
          start: {
            line: 199,
            column: 10
          },
          end: {
            line: 201,
            column: 18
          }
        }, {
          start: {
            line: 202,
            column: 10
          },
          end: {
            line: 204,
            column: 18
          }
        }, {
          start: {
            line: 205,
            column: 10
          },
          end: {
            line: 207,
            column: 18
          }
        }, {
          start: {
            line: 208,
            column: 10
          },
          end: {
            line: 210,
            column: 18
          }
        }, {
          start: {
            line: 211,
            column: 10
          },
          end: {
            line: 212,
            column: 34
          }
        }],
        line: 180
      },
      "30": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        }, {
          start: {
            line: 229,
            column: 15
          },
          end: {
            line: 246,
            column: 9
          }
        }],
        line: 221
      },
      "31": {
        loc: {
          start: {
            line: 222,
            column: 10
          },
          end: {
            line: 228,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 10
          },
          end: {
            line: 228,
            column: 11
          }
        }, {
          start: {
            line: 226,
            column: 17
          },
          end: {
            line: 228,
            column: 11
          }
        }],
        line: 222
      },
      "32": {
        loc: {
          start: {
            line: 229,
            column: 15
          },
          end: {
            line: 246,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 15
          },
          end: {
            line: 246,
            column: 9
          }
        }, {
          start: {
            line: 231,
            column: 15
          },
          end: {
            line: 246,
            column: 9
          }
        }],
        line: 229
      },
      "33": {
        loc: {
          start: {
            line: 231,
            column: 15
          },
          end: {
            line: 246,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 15
          },
          end: {
            line: 246,
            column: 9
          }
        }, {
          start: {
            line: 240,
            column: 15
          },
          end: {
            line: 246,
            column: 9
          }
        }],
        line: 231
      },
      "34": {
        loc: {
          start: {
            line: 240,
            column: 15
          },
          end: {
            line: 246,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 15
          },
          end: {
            line: 246,
            column: 9
          }
        }, {
          start: {
            line: 242,
            column: 15
          },
          end: {
            line: 246,
            column: 9
          }
        }],
        line: 240
      },
      "35": {
        loc: {
          start: {
            line: 242,
            column: 15
          },
          end: {
            line: 246,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 15
          },
          end: {
            line: 246,
            column: 9
          }
        }, {
          start: {
            line: 244,
            column: 15
          },
          end: {
            line: 246,
            column: 9
          }
        }],
        line: 242
      },
      "36": {
        loc: {
          start: {
            line: 257,
            column: 6
          },
          end: {
            line: 329,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 6
          },
          end: {
            line: 329,
            column: 7
          }
        }, {
          start: {
            line: 259,
            column: 13
          },
          end: {
            line: 329,
            column: 7
          }
        }],
        line: 257
      },
      "37": {
        loc: {
          start: {
            line: 259,
            column: 13
          },
          end: {
            line: 329,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 13
          },
          end: {
            line: 329,
            column: 7
          }
        }, {
          start: {
            line: 263,
            column: 13
          },
          end: {
            line: 329,
            column: 7
          }
        }],
        line: 259
      },
      "38": {
        loc: {
          start: {
            line: 259,
            column: 17
          },
          end: {
            line: 260,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 259,
            column: 18
          },
          end: {
            line: 259,
            column: 72
          }
        }, {
          start: {
            line: 260,
            column: 9
          },
          end: {
            line: 260,
            column: 57
          }
        }],
        line: 259
      },
      "39": {
        loc: {
          start: {
            line: 263,
            column: 13
          },
          end: {
            line: 329,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 13
          },
          end: {
            line: 329,
            column: 7
          }
        }, {
          start: {
            line: 267,
            column: 13
          },
          end: {
            line: 329,
            column: 7
          }
        }],
        line: 263
      },
      "40": {
        loc: {
          start: {
            line: 263,
            column: 17
          },
          end: {
            line: 264,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 263,
            column: 18
          },
          end: {
            line: 263,
            column: 75
          }
        }, {
          start: {
            line: 264,
            column: 9
          },
          end: {
            line: 264,
            column: 60
          }
        }],
        line: 263
      },
      "41": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "42": {
        loc: {
          start: {
            line: 286,
            column: 10
          },
          end: {
            line: 318,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 10
          },
          end: {
            line: 318,
            column: 11
          }
        }, {
          start: {
            line: 307,
            column: 17
          },
          end: {
            line: 318,
            column: 11
          }
        }],
        line: 286
      },
      "43": {
        loc: {
          start: {
            line: 286,
            column: 14
          },
          end: {
            line: 289,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 286,
            column: 15
          },
          end: {
            line: 286,
            column: 51
          }
        }, {
          start: {
            line: 287,
            column: 12
          },
          end: {
            line: 287,
            column: 51
          }
        }, {
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 288,
            column: 50
          }
        }, {
          start: {
            line: 289,
            column: 12
          },
          end: {
            line: 289,
            column: 22
          }
        }],
        line: 286
      },
      "44": {
        loc: {
          start: {
            line: 290,
            column: 12
          },
          end: {
            line: 304,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 12
          },
          end: {
            line: 304,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "45": {
        loc: {
          start: {
            line: 290,
            column: 16
          },
          end: {
            line: 293,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 16
          },
          end: {
            line: 290,
            column: 33
          }
        }, {
          start: {
            line: 291,
            column: 14
          },
          end: {
            line: 291,
            column: 50
          }
        }, {
          start: {
            line: 292,
            column: 14
          },
          end: {
            line: 292,
            column: 28
          }
        }, {
          start: {
            line: 293,
            column: 14
          },
          end: {
            line: 293,
            column: 38
          }
        }],
        line: 290
      },
      "46": {
        loc: {
          start: {
            line: 295,
            column: 14
          },
          end: {
            line: 303,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 14
          },
          end: {
            line: 303,
            column: 15
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "47": {
        loc: {
          start: {
            line: 298,
            column: 16
          },
          end: {
            line: 302,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 16
          },
          end: {
            line: 302,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "48": {
        loc: {
          start: {
            line: 307,
            column: 17
          },
          end: {
            line: 318,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 17
          },
          end: {
            line: 318,
            column: 11
          }
        }, {
          start: {
            line: 313,
            column: 17
          },
          end: {
            line: 318,
            column: 11
          }
        }],
        line: 307
      },
      "49": {
        loc: {
          start: {
            line: 308,
            column: 12
          },
          end: {
            line: 310,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 308,
            column: 12
          },
          end: {
            line: 310,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 308
      },
      "50": {
        loc: {
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 323,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 323,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 321
      },
      "51": {
        loc: {
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 321,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 321,
            column: 25
          }
        }, {
          start: {
            line: 321,
            column: 29
          },
          end: {
            line: 321,
            column: 38
          }
        }],
        line: 321
      },
      "52": {
        loc: {
          start: {
            line: 325,
            column: 21
          },
          end: {
            line: 325,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 325,
            column: 33
          },
          end: {
            line: 325,
            column: 46
          }
        }, {
          start: {
            line: 325,
            column: 49
          },
          end: {
            line: 325,
            column: 59
          }
        }],
        line: 325
      },
      "53": {
        loc: {
          start: {
            line: 338,
            column: 11
          },
          end: {
            line: 338,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 338,
            column: 11
          },
          end: {
            line: 338,
            column: 29
          }
        }, {
          start: {
            line: 338,
            column: 33
          },
          end: {
            line: 338,
            column: 61
          }
        }],
        line: 338
      },
      "54": {
        loc: {
          start: {
            line: 341,
            column: 6
          },
          end: {
            line: 360,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 341,
            column: 6
          },
          end: {
            line: 360,
            column: 7
          }
        }, {
          start: {
            line: 357,
            column: 13
          },
          end: {
            line: 360,
            column: 7
          }
        }],
        line: 341
      },
      "55": {
        loc: {
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 355,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 344,
            column: 10
          },
          end: {
            line: 346,
            column: 18
          }
        }, {
          start: {
            line: 347,
            column: 10
          },
          end: {
            line: 349,
            column: 18
          }
        }, {
          start: {
            line: 350,
            column: 10
          },
          end: {
            line: 352,
            column: 18
          }
        }, {
          start: {
            line: 353,
            column: 10
          },
          end: {
            line: 354,
            column: 34
          }
        }],
        line: 343
      },
      "56": {
        loc: {
          start: {
            line: 368,
            column: 4
          },
          end: {
            line: 370,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 368,
            column: 4
          },
          end: {
            line: 370,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 368
      },
      "57": {
        loc: {
          start: {
            line: 377,
            column: 4
          },
          end: {
            line: 380,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 377,
            column: 4
          },
          end: {
            line: 380,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 377
      },
      "58": {
        loc: {
          start: {
            line: 387,
            column: 39
          },
          end: {
            line: 387,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 387,
            column: 39
          },
          end: {
            line: 387,
            column: 49
          }
        }, {
          start: {
            line: 387,
            column: 53
          },
          end: {
            line: 387,
            column: 55
          }
        }],
        line: 387
      },
      "59": {
        loc: {
          start: {
            line: 401,
            column: 4
          },
          end: {
            line: 403,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 401,
            column: 4
          },
          end: {
            line: 403,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 401
      },
      "60": {
        loc: {
          start: {
            line: 408,
            column: 4
          },
          end: {
            line: 426,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 408,
            column: 4
          },
          end: {
            line: 426,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 408
      },
      "61": {
        loc: {
          start: {
            line: 408,
            column: 8
          },
          end: {
            line: 409,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 408,
            column: 9
          },
          end: {
            line: 408,
            column: 21
          }
        }, {
          start: {
            line: 408,
            column: 25
          },
          end: {
            line: 408,
            column: 37
          }
        }, {
          start: {
            line: 409,
            column: 7
          },
          end: {
            line: 409,
            column: 20
          }
        }, {
          start: {
            line: 409,
            column: 24
          },
          end: {
            line: 409,
            column: 36
          }
        }],
        line: 408
      },
      "62": {
        loc: {
          start: {
            line: 417,
            column: 13
          },
          end: {
            line: 418,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 15
          },
          end: {
            line: 417,
            column: 27
          }
        }, {
          start: {
            line: 417,
            column: 31
          },
          end: {
            line: 417,
            column: 41
          }
        }, {
          start: {
            line: 418,
            column: 9
          },
          end: {
            line: 418,
            column: 22
          }
        }, {
          start: {
            line: 418,
            column: 26
          },
          end: {
            line: 418,
            column: 36
          }
        }, {
          start: {
            line: 418,
            column: 42
          },
          end: {
            line: 418,
            column: 60
          }
        }],
        line: 417
      },
      "63": {
        loc: {
          start: {
            line: 433,
            column: 4
          },
          end: {
            line: 435,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 433,
            column: 4
          },
          end: {
            line: 435,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 433
      },
      "64": {
        loc: {
          start: {
            line: 456,
            column: 4
          },
          end: {
            line: 461,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 456,
            column: 4
          },
          end: {
            line: 461,
            column: 5
          }
        }, {
          start: {
            line: 459,
            column: 11
          },
          end: {
            line: 461,
            column: 5
          }
        }],
        line: 456
      },
      "65": {
        loc: {
          start: {
            line: 473,
            column: 4
          },
          end: {
            line: 484,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 473,
            column: 4
          },
          end: {
            line: 484,
            column: 5
          }
        }, {
          start: {
            line: 482,
            column: 11
          },
          end: {
            line: 484,
            column: 5
          }
        }],
        line: 473
      },
      "66": {
        loc: {
          start: {
            line: 477,
            column: 6
          },
          end: {
            line: 481,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 477,
            column: 6
          },
          end: {
            line: 481,
            column: 7
          }
        }, {
          start: {
            line: 479,
            column: 13
          },
          end: {
            line: 481,
            column: 7
          }
        }],
        line: 477
      },
      "67": {
        loc: {
          start: {
            line: 489,
            column: 4
          },
          end: {
            line: 491,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 4
          },
          end: {
            line: 491,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 489
      },
      "68": {
        loc: {
          start: {
            line: 497,
            column: 4
          },
          end: {
            line: 499,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 497,
            column: 4
          },
          end: {
            line: 499,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 497
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0, 0, 0],
      "44": [0, 0],
      "45": [0, 0, 0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0, 0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0, 0, 0],
      "62": [0, 0, 0, 0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f471e5959b889c9a62df28abb6644f61dce236ed"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1acdglsjse = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1acdglsjse();
const lib = (cov_1acdglsjse().s[0]++, __webpack_require__(/*! ./lib */ 449));
let whitespaceChars = (cov_1acdglsjse().s[1]++, ' \n\t\r\u00A0');
let delimChars = (cov_1acdglsjse().s[2]++, '()[]{}%*-+~/#,:|.<>=!');
let intChars = (cov_1acdglsjse().s[3]++, '0123456789');
let BLOCK_START = (cov_1acdglsjse().s[4]++, '{%');
let BLOCK_END = (cov_1acdglsjse().s[5]++, '%}');
let VARIABLE_START = (cov_1acdglsjse().s[6]++, '{{');
let VARIABLE_END = (cov_1acdglsjse().s[7]++, '}}');
let COMMENT_START = (cov_1acdglsjse().s[8]++, '{#');
let COMMENT_END = (cov_1acdglsjse().s[9]++, '#}');
let TOKEN_STRING = (cov_1acdglsjse().s[10]++, 'string');
let TOKEN_WHITESPACE = (cov_1acdglsjse().s[11]++, 'whitespace');
let TOKEN_DATA = (cov_1acdglsjse().s[12]++, 'data');
let TOKEN_BLOCK_START = (cov_1acdglsjse().s[13]++, 'block-start');
let TOKEN_BLOCK_END = (cov_1acdglsjse().s[14]++, 'block-end');
let TOKEN_VARIABLE_START = (cov_1acdglsjse().s[15]++, 'variable-start');
let TOKEN_VARIABLE_END = (cov_1acdglsjse().s[16]++, 'variable-end');
let TOKEN_COMMENT = (cov_1acdglsjse().s[17]++, 'comment');
let TOKEN_LEFT_PAREN = (cov_1acdglsjse().s[18]++, 'left-paren');
let TOKEN_RIGHT_PAREN = (cov_1acdglsjse().s[19]++, 'right-paren');
let TOKEN_LEFT_BRACKET = (cov_1acdglsjse().s[20]++, 'left-bracket');
let TOKEN_RIGHT_BRACKET = (cov_1acdglsjse().s[21]++, 'right-bracket');
let TOKEN_LEFT_CURLY = (cov_1acdglsjse().s[22]++, 'left-curly');
let TOKEN_RIGHT_CURLY = (cov_1acdglsjse().s[23]++, 'right-curly');
let TOKEN_OPERATOR = (cov_1acdglsjse().s[24]++, 'operator');
let TOKEN_COMMA = (cov_1acdglsjse().s[25]++, 'comma');
let TOKEN_COLON = (cov_1acdglsjse().s[26]++, 'colon');
let TOKEN_TILDE = (cov_1acdglsjse().s[27]++, 'tilde');
let TOKEN_PIPE = (cov_1acdglsjse().s[28]++, 'pipe');
let TOKEN_INT = (cov_1acdglsjse().s[29]++, 'int');
let TOKEN_FLOAT = (cov_1acdglsjse().s[30]++, 'float');
let TOKEN_BOOLEAN = (cov_1acdglsjse().s[31]++, 'boolean');
let TOKEN_NONE = (cov_1acdglsjse().s[32]++, 'none');
let TOKEN_SYMBOL = (cov_1acdglsjse().s[33]++, 'symbol');
let TOKEN_SPECIAL = (cov_1acdglsjse().s[34]++, 'special');
let TOKEN_REGEX = (cov_1acdglsjse().s[35]++, 'regex');
function token(type, value, lineno, colno) {
  cov_1acdglsjse().f[0]++;
  cov_1acdglsjse().s[36]++;
  return {
    type: type,
    value: value,
    lineno: lineno,
    colno: colno
  };
}
class Tokenizer {
  constructor(str, opts) {
    cov_1acdglsjse().f[1]++;
    cov_1acdglsjse().s[37]++;
    this.str = str;
    cov_1acdglsjse().s[38]++;
    this.index = 0;
    cov_1acdglsjse().s[39]++;
    this.len = str.length;
    cov_1acdglsjse().s[40]++;
    this.lineno = 0;
    cov_1acdglsjse().s[41]++;
    this.colno = 0;
    cov_1acdglsjse().s[42]++;
    this.in_code = false;
    cov_1acdglsjse().s[43]++;
    opts = (cov_1acdglsjse().b[0][0]++, opts) || (cov_1acdglsjse().b[0][1]++, {});
    let tags = (cov_1acdglsjse().s[44]++, (cov_1acdglsjse().b[1][0]++, opts.tags) || (cov_1acdglsjse().b[1][1]++, {}));
    cov_1acdglsjse().s[45]++;
    this.tags = {
      BLOCK_START: (cov_1acdglsjse().b[2][0]++, tags.blockStart) || (cov_1acdglsjse().b[2][1]++, BLOCK_START),
      BLOCK_END: (cov_1acdglsjse().b[3][0]++, tags.blockEnd) || (cov_1acdglsjse().b[3][1]++, BLOCK_END),
      VARIABLE_START: (cov_1acdglsjse().b[4][0]++, tags.variableStart) || (cov_1acdglsjse().b[4][1]++, VARIABLE_START),
      VARIABLE_END: (cov_1acdglsjse().b[5][0]++, tags.variableEnd) || (cov_1acdglsjse().b[5][1]++, VARIABLE_END),
      COMMENT_START: (cov_1acdglsjse().b[6][0]++, tags.commentStart) || (cov_1acdglsjse().b[6][1]++, COMMENT_START),
      COMMENT_END: (cov_1acdglsjse().b[7][0]++, tags.commentEnd) || (cov_1acdglsjse().b[7][1]++, COMMENT_END)
    };
    cov_1acdglsjse().s[46]++;
    this.trimBlocks = !!opts.trimBlocks;
    cov_1acdglsjse().s[47]++;
    this.lstripBlocks = !!opts.lstripBlocks;
  }
  nextToken() {
    cov_1acdglsjse().f[2]++;
    let lineno = (cov_1acdglsjse().s[48]++, this.lineno);
    let colno = (cov_1acdglsjse().s[49]++, this.colno);
    let tok;
    cov_1acdglsjse().s[50]++;
    if (this.in_code) {
      cov_1acdglsjse().b[8][0]++;
      // Otherwise, if we are in a block parse it as code
      let cur = (cov_1acdglsjse().s[51]++, this.current());
      cov_1acdglsjse().s[52]++;
      if (this.isFinished()) {
        cov_1acdglsjse().b[9][0]++;
        cov_1acdglsjse().s[53]++;
        // We have nothing else to parse
        return null;
      } else {
        cov_1acdglsjse().b[9][1]++;
        cov_1acdglsjse().s[54]++;
        if ((cov_1acdglsjse().b[11][0]++, cur === '"') || (cov_1acdglsjse().b[11][1]++, cur === '\'')) {
          cov_1acdglsjse().b[10][0]++;
          cov_1acdglsjse().s[55]++;
          // We've hit a string
          return token(TOKEN_STRING, this._parseString(cur), lineno, colno);
        } else {
          cov_1acdglsjse().b[10][1]++;
          cov_1acdglsjse().s[56]++;
          if (tok = this._extract(whitespaceChars)) {
            cov_1acdglsjse().b[12][0]++;
            cov_1acdglsjse().s[57]++;
            // We hit some whitespace
            return token(TOKEN_WHITESPACE, tok, lineno, colno);
          } else {
            cov_1acdglsjse().b[12][1]++;
            cov_1acdglsjse().s[58]++;
            if ((cov_1acdglsjse().b[14][0]++, tok = this._extractString(this.tags.BLOCK_END)) || (cov_1acdglsjse().b[14][1]++, tok = this._extractString('-' + this.tags.BLOCK_END))) {
              cov_1acdglsjse().b[13][0]++;
              cov_1acdglsjse().s[59]++;
              // Special check for the block end tag
              //
              // It is a requirement that start and end tags are composed of
              // delimiter characters (%{}[] etc), and our code always
              // breaks on delimiters so we can assume the token parsing
              // doesn't consume these elsewhere
              this.in_code = false;
              cov_1acdglsjse().s[60]++;
              if (this.trimBlocks) {
                cov_1acdglsjse().b[15][0]++;
                cov_1acdglsjse().s[61]++;
                cur = this.current();
                cov_1acdglsjse().s[62]++;
                if (cur === '\n') {
                  cov_1acdglsjse().b[16][0]++;
                  cov_1acdglsjse().s[63]++;
                  // Skip newline
                  this.forward();
                } else {
                  cov_1acdglsjse().b[16][1]++;
                  cov_1acdglsjse().s[64]++;
                  if (cur === '\r') {
                    cov_1acdglsjse().b[17][0]++;
                    cov_1acdglsjse().s[65]++;
                    // Skip CRLF newline
                    this.forward();
                    cov_1acdglsjse().s[66]++;
                    cur = this.current();
                    cov_1acdglsjse().s[67]++;
                    if (cur === '\n') {
                      cov_1acdglsjse().b[18][0]++;
                      cov_1acdglsjse().s[68]++;
                      this.forward();
                    } else {
                      cov_1acdglsjse().b[18][1]++;
                      cov_1acdglsjse().s[69]++;
                      // Was not a CRLF, so go back
                      this.back();
                    }
                  } else {
                    cov_1acdglsjse().b[17][1]++;
                  }
                }
              } else {
                cov_1acdglsjse().b[15][1]++;
              }
              cov_1acdglsjse().s[70]++;
              return token(TOKEN_BLOCK_END, tok, lineno, colno);
            } else {
              cov_1acdglsjse().b[13][1]++;
              cov_1acdglsjse().s[71]++;
              if ((cov_1acdglsjse().b[20][0]++, tok = this._extractString(this.tags.VARIABLE_END)) || (cov_1acdglsjse().b[20][1]++, tok = this._extractString('-' + this.tags.VARIABLE_END))) {
                cov_1acdglsjse().b[19][0]++;
                cov_1acdglsjse().s[72]++;
                // Special check for variable end tag (see above)
                this.in_code = false;
                cov_1acdglsjse().s[73]++;
                return token(TOKEN_VARIABLE_END, tok, lineno, colno);
              } else {
                cov_1acdglsjse().b[19][1]++;
                cov_1acdglsjse().s[74]++;
                if ((cov_1acdglsjse().b[22][0]++, cur === 'r') && (cov_1acdglsjse().b[22][1]++, this.str.charAt(this.index + 1) === '/')) {
                  cov_1acdglsjse().b[21][0]++;
                  cov_1acdglsjse().s[75]++;
                  // Skip past 'r/'.
                  this.forwardN(2);

                  // Extract until the end of the regex -- / ends it, \/ does not.
                  let regexBody = (cov_1acdglsjse().s[76]++, '');
                  cov_1acdglsjse().s[77]++;
                  while (!this.isFinished()) {
                    cov_1acdglsjse().s[78]++;
                    if ((cov_1acdglsjse().b[24][0]++, this.current() === '/') && (cov_1acdglsjse().b[24][1]++, this.previous() !== '\\')) {
                      cov_1acdglsjse().b[23][0]++;
                      cov_1acdglsjse().s[79]++;
                      this.forward();
                      cov_1acdglsjse().s[80]++;
                      break;
                    } else {
                      cov_1acdglsjse().b[23][1]++;
                      cov_1acdglsjse().s[81]++;
                      regexBody += this.current();
                      cov_1acdglsjse().s[82]++;
                      this.forward();
                    }
                  }

                  // Check for flags.
                  // The possible flags are according to https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/RegExp)
                  let POSSIBLE_FLAGS = (cov_1acdglsjse().s[83]++, ['g', 'i', 'm', 'y']);
                  let regexFlags = (cov_1acdglsjse().s[84]++, '');
                  cov_1acdglsjse().s[85]++;
                  while (!this.isFinished()) {
                    let isCurrentAFlag = (cov_1acdglsjse().s[86]++, POSSIBLE_FLAGS.indexOf(this.current()) !== -1);
                    cov_1acdglsjse().s[87]++;
                    if (isCurrentAFlag) {
                      cov_1acdglsjse().b[25][0]++;
                      cov_1acdglsjse().s[88]++;
                      regexFlags += this.current();
                      cov_1acdglsjse().s[89]++;
                      this.forward();
                    } else {
                      cov_1acdglsjse().b[25][1]++;
                      cov_1acdglsjse().s[90]++;
                      break;
                    }
                  }
                  cov_1acdglsjse().s[91]++;
                  return token(TOKEN_REGEX, {
                    body: regexBody,
                    flags: regexFlags
                  }, lineno, colno);
                } else {
                  cov_1acdglsjse().b[21][1]++;
                  cov_1acdglsjse().s[92]++;
                  if (delimChars.indexOf(cur) !== -1) {
                    cov_1acdglsjse().b[26][0]++;
                    cov_1acdglsjse().s[93]++;
                    // We've hit a delimiter (a special char like a bracket)
                    this.forward();
                    let complexOps = (cov_1acdglsjse().s[94]++, ['==', '===', '!=', '!==', '<=', '>=', '//', '**']);
                    let curComplex = (cov_1acdglsjse().s[95]++, cur + this.current());
                    let type;
                    cov_1acdglsjse().s[96]++;
                    if (lib.indexOf(complexOps, curComplex) !== -1) {
                      cov_1acdglsjse().b[27][0]++;
                      cov_1acdglsjse().s[97]++;
                      this.forward();
                      cov_1acdglsjse().s[98]++;
                      cur = curComplex;

                      // See if this is a strict equality/inequality comparator
                      cov_1acdglsjse().s[99]++;
                      if (lib.indexOf(complexOps, curComplex + this.current()) !== -1) {
                        cov_1acdglsjse().b[28][0]++;
                        cov_1acdglsjse().s[100]++;
                        cur = curComplex + this.current();
                        cov_1acdglsjse().s[101]++;
                        this.forward();
                      } else {
                        cov_1acdglsjse().b[28][1]++;
                      }
                    } else {
                      cov_1acdglsjse().b[27][1]++;
                    }
                    cov_1acdglsjse().s[102]++;
                    switch (cur) {
                      case '(':
                        cov_1acdglsjse().b[29][0]++;
                        cov_1acdglsjse().s[103]++;
                        type = TOKEN_LEFT_PAREN;
                        cov_1acdglsjse().s[104]++;
                        break;
                      case ')':
                        cov_1acdglsjse().b[29][1]++;
                        cov_1acdglsjse().s[105]++;
                        type = TOKEN_RIGHT_PAREN;
                        cov_1acdglsjse().s[106]++;
                        break;
                      case '[':
                        cov_1acdglsjse().b[29][2]++;
                        cov_1acdglsjse().s[107]++;
                        type = TOKEN_LEFT_BRACKET;
                        cov_1acdglsjse().s[108]++;
                        break;
                      case ']':
                        cov_1acdglsjse().b[29][3]++;
                        cov_1acdglsjse().s[109]++;
                        type = TOKEN_RIGHT_BRACKET;
                        cov_1acdglsjse().s[110]++;
                        break;
                      case '{':
                        cov_1acdglsjse().b[29][4]++;
                        cov_1acdglsjse().s[111]++;
                        type = TOKEN_LEFT_CURLY;
                        cov_1acdglsjse().s[112]++;
                        break;
                      case '}':
                        cov_1acdglsjse().b[29][5]++;
                        cov_1acdglsjse().s[113]++;
                        type = TOKEN_RIGHT_CURLY;
                        cov_1acdglsjse().s[114]++;
                        break;
                      case ',':
                        cov_1acdglsjse().b[29][6]++;
                        cov_1acdglsjse().s[115]++;
                        type = TOKEN_COMMA;
                        cov_1acdglsjse().s[116]++;
                        break;
                      case ':':
                        cov_1acdglsjse().b[29][7]++;
                        cov_1acdglsjse().s[117]++;
                        type = TOKEN_COLON;
                        cov_1acdglsjse().s[118]++;
                        break;
                      case '~':
                        cov_1acdglsjse().b[29][8]++;
                        cov_1acdglsjse().s[119]++;
                        type = TOKEN_TILDE;
                        cov_1acdglsjse().s[120]++;
                        break;
                      case '|':
                        cov_1acdglsjse().b[29][9]++;
                        cov_1acdglsjse().s[121]++;
                        type = TOKEN_PIPE;
                        cov_1acdglsjse().s[122]++;
                        break;
                      default:
                        cov_1acdglsjse().b[29][10]++;
                        cov_1acdglsjse().s[123]++;
                        type = TOKEN_OPERATOR;
                    }
                    cov_1acdglsjse().s[124]++;
                    return token(type, cur, lineno, colno);
                  } else {
                    cov_1acdglsjse().b[26][1]++;
                    cov_1acdglsjse().s[125]++;
                    // We are not at whitespace or a delimiter, so extract the
                    // text and parse it
                    tok = this._extractUntil(whitespaceChars + delimChars);
                    cov_1acdglsjse().s[126]++;
                    if (tok.match(/^[-+]?[0-9]+$/)) {
                      cov_1acdglsjse().b[30][0]++;
                      cov_1acdglsjse().s[127]++;
                      if (this.current() === '.') {
                        cov_1acdglsjse().b[31][0]++;
                        cov_1acdglsjse().s[128]++;
                        this.forward();
                        let dec = (cov_1acdglsjse().s[129]++, this._extract(intChars));
                        cov_1acdglsjse().s[130]++;
                        return token(TOKEN_FLOAT, tok + '.' + dec, lineno, colno);
                      } else {
                        cov_1acdglsjse().b[31][1]++;
                        cov_1acdglsjse().s[131]++;
                        return token(TOKEN_INT, tok, lineno, colno);
                      }
                    } else {
                      cov_1acdglsjse().b[30][1]++;
                      cov_1acdglsjse().s[132]++;
                      if (tok.match(/^(true|false)$/)) {
                        cov_1acdglsjse().b[32][0]++;
                        cov_1acdglsjse().s[133]++;
                        return token(TOKEN_BOOLEAN, tok, lineno, colno);
                      } else {
                        cov_1acdglsjse().b[32][1]++;
                        cov_1acdglsjse().s[134]++;
                        if (tok === 'none') {
                          cov_1acdglsjse().b[33][0]++;
                          cov_1acdglsjse().s[135]++;
                          return token(TOKEN_NONE, tok, lineno, colno);
                          /*
                           * Added to make the test `null is null` evaluate truthily.
                           * Otherwise, Nunjucks will look up null in the context and
                           * return `undefined`, which is not what we want. This *may* have
                           * consequences is someone is using null in their templates as a
                           * variable.
                           */
                        } else {
                          cov_1acdglsjse().b[33][1]++;
                          cov_1acdglsjse().s[136]++;
                          if (tok === 'null') {
                            cov_1acdglsjse().b[34][0]++;
                            cov_1acdglsjse().s[137]++;
                            return token(TOKEN_NONE, tok, lineno, colno);
                          } else {
                            cov_1acdglsjse().b[34][1]++;
                            cov_1acdglsjse().s[138]++;
                            if (tok) {
                              cov_1acdglsjse().b[35][0]++;
                              cov_1acdglsjse().s[139]++;
                              return token(TOKEN_SYMBOL, tok, lineno, colno);
                            } else {
                              cov_1acdglsjse().b[35][1]++;
                              cov_1acdglsjse().s[140]++;
                              throw new Error('Unexpected value while parsing: ' + tok);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    } else {
      cov_1acdglsjse().b[8][1]++;
      // Parse out the template text, breaking on tag
      // delimiters because we need to look for block/variable start
      // tags (don't use the full delimChars for optimization)
      let beginChars = (cov_1acdglsjse().s[141]++, this.tags.BLOCK_START.charAt(0) + this.tags.VARIABLE_START.charAt(0) + this.tags.COMMENT_START.charAt(0) + this.tags.COMMENT_END.charAt(0));
      cov_1acdglsjse().s[142]++;
      if (this.isFinished()) {
        cov_1acdglsjse().b[36][0]++;
        cov_1acdglsjse().s[143]++;
        return null;
      } else {
        cov_1acdglsjse().b[36][1]++;
        cov_1acdglsjse().s[144]++;
        if ((cov_1acdglsjse().b[38][0]++, tok = this._extractString(this.tags.BLOCK_START + '-')) || (cov_1acdglsjse().b[38][1]++, tok = this._extractString(this.tags.BLOCK_START))) {
          cov_1acdglsjse().b[37][0]++;
          cov_1acdglsjse().s[145]++;
          this.in_code = true;
          cov_1acdglsjse().s[146]++;
          return token(TOKEN_BLOCK_START, tok, lineno, colno);
        } else {
          cov_1acdglsjse().b[37][1]++;
          cov_1acdglsjse().s[147]++;
          if ((cov_1acdglsjse().b[40][0]++, tok = this._extractString(this.tags.VARIABLE_START + '-')) || (cov_1acdglsjse().b[40][1]++, tok = this._extractString(this.tags.VARIABLE_START))) {
            cov_1acdglsjse().b[39][0]++;
            cov_1acdglsjse().s[148]++;
            this.in_code = true;
            cov_1acdglsjse().s[149]++;
            return token(TOKEN_VARIABLE_START, tok, lineno, colno);
          } else {
            cov_1acdglsjse().b[39][1]++;
            cov_1acdglsjse().s[150]++;
            tok = '';
            let data;
            let inComment = (cov_1acdglsjse().s[151]++, false);
            cov_1acdglsjse().s[152]++;
            if (this._matches(this.tags.COMMENT_START)) {
              cov_1acdglsjse().b[41][0]++;
              cov_1acdglsjse().s[153]++;
              inComment = true;
              cov_1acdglsjse().s[154]++;
              tok = this._extractString(this.tags.COMMENT_START);
            } else {
              cov_1acdglsjse().b[41][1]++;
            }

            // Continually consume text, breaking on the tag delimiter
            // characters and checking to see if it's a start tag.
            //
            // We could hit the end of the template in the middle of
            // our looping, so check for the null return value from
            // _extractUntil
            cov_1acdglsjse().s[155]++;
            while ((data = this._extractUntil(beginChars)) !== null) {
              cov_1acdglsjse().s[156]++;
              tok += data;
              cov_1acdglsjse().s[157]++;
              if (((cov_1acdglsjse().b[43][0]++, this._matches(this.tags.BLOCK_START)) || (cov_1acdglsjse().b[43][1]++, this._matches(this.tags.VARIABLE_START)) || (cov_1acdglsjse().b[43][2]++, this._matches(this.tags.COMMENT_START))) && (cov_1acdglsjse().b[43][3]++, !inComment)) {
                cov_1acdglsjse().b[42][0]++;
                cov_1acdglsjse().s[158]++;
                if ((cov_1acdglsjse().b[45][0]++, this.lstripBlocks) && (cov_1acdglsjse().b[45][1]++, this._matches(this.tags.BLOCK_START)) && (cov_1acdglsjse().b[45][2]++, this.colno > 0) && (cov_1acdglsjse().b[45][3]++, this.colno <= tok.length)) {
                  cov_1acdglsjse().b[44][0]++;
                  let lastLine = (cov_1acdglsjse().s[159]++, tok.slice(-this.colno));
                  cov_1acdglsjse().s[160]++;
                  if (/^\s+$/.test(lastLine)) {
                    cov_1acdglsjse().b[46][0]++;
                    cov_1acdglsjse().s[161]++;
                    // Remove block leading whitespace from beginning of the string
                    tok = tok.slice(0, -this.colno);
                    cov_1acdglsjse().s[162]++;
                    if (!tok.length) {
                      cov_1acdglsjse().b[47][0]++;
                      cov_1acdglsjse().s[163]++;
                      // All data removed, collapse to avoid unnecessary nodes
                      // by returning next token (block start)
                      return this.nextToken();
                    } else {
                      cov_1acdglsjse().b[47][1]++;
                    }
                  } else {
                    cov_1acdglsjse().b[46][1]++;
                  }
                } else {
                  cov_1acdglsjse().b[44][1]++;
                }
                // If it is a start tag, stop looping
                cov_1acdglsjse().s[164]++;
                break;
              } else {
                cov_1acdglsjse().b[42][1]++;
                cov_1acdglsjse().s[165]++;
                if (this._matches(this.tags.COMMENT_END)) {
                  cov_1acdglsjse().b[48][0]++;
                  cov_1acdglsjse().s[166]++;
                  if (!inComment) {
                    cov_1acdglsjse().b[49][0]++;
                    cov_1acdglsjse().s[167]++;
                    throw new Error('unexpected end of comment');
                  } else {
                    cov_1acdglsjse().b[49][1]++;
                  }
                  cov_1acdglsjse().s[168]++;
                  tok += this._extractString(this.tags.COMMENT_END);
                  cov_1acdglsjse().s[169]++;
                  break;
                } else {
                  cov_1acdglsjse().b[48][1]++;
                  cov_1acdglsjse().s[170]++;
                  // It does not match any tag, so add the character and
                  // carry on
                  tok += this.current();
                  cov_1acdglsjse().s[171]++;
                  this.forward();
                }
              }
            }
            cov_1acdglsjse().s[172]++;
            if ((cov_1acdglsjse().b[51][0]++, data === null) && (cov_1acdglsjse().b[51][1]++, inComment)) {
              cov_1acdglsjse().b[50][0]++;
              cov_1acdglsjse().s[173]++;
              throw new Error('expected end of comment, got end of file');
            } else {
              cov_1acdglsjse().b[50][1]++;
            }
            cov_1acdglsjse().s[174]++;
            return token(inComment ? (cov_1acdglsjse().b[52][0]++, TOKEN_COMMENT) : (cov_1acdglsjse().b[52][1]++, TOKEN_DATA), tok, lineno, colno);
          }
        }
      }
    }
  }
  _parseString(delimiter) {
    cov_1acdglsjse().f[3]++;
    cov_1acdglsjse().s[175]++;
    this.forward();
    let str = (cov_1acdglsjse().s[176]++, '');
    cov_1acdglsjse().s[177]++;
    while ((cov_1acdglsjse().b[53][0]++, !this.isFinished()) && (cov_1acdglsjse().b[53][1]++, this.current() !== delimiter)) {
      let cur = (cov_1acdglsjse().s[178]++, this.current());
      cov_1acdglsjse().s[179]++;
      if (cur === '\\') {
        cov_1acdglsjse().b[54][0]++;
        cov_1acdglsjse().s[180]++;
        this.forward();
        cov_1acdglsjse().s[181]++;
        switch (this.current()) {
          case 'n':
            cov_1acdglsjse().b[55][0]++;
            cov_1acdglsjse().s[182]++;
            str += '\n';
            cov_1acdglsjse().s[183]++;
            break;
          case 't':
            cov_1acdglsjse().b[55][1]++;
            cov_1acdglsjse().s[184]++;
            str += '\t';
            cov_1acdglsjse().s[185]++;
            break;
          case 'r':
            cov_1acdglsjse().b[55][2]++;
            cov_1acdglsjse().s[186]++;
            str += '\r';
            cov_1acdglsjse().s[187]++;
            break;
          default:
            cov_1acdglsjse().b[55][3]++;
            cov_1acdglsjse().s[188]++;
            str += this.current();
        }
        cov_1acdglsjse().s[189]++;
        this.forward();
      } else {
        cov_1acdglsjse().b[54][1]++;
        cov_1acdglsjse().s[190]++;
        str += cur;
        cov_1acdglsjse().s[191]++;
        this.forward();
      }
    }
    cov_1acdglsjse().s[192]++;
    this.forward();
    cov_1acdglsjse().s[193]++;
    return str;
  }
  _matches(str) {
    cov_1acdglsjse().f[4]++;
    cov_1acdglsjse().s[194]++;
    if (this.index + str.length > this.len) {
      cov_1acdglsjse().b[56][0]++;
      cov_1acdglsjse().s[195]++;
      return null;
    } else {
      cov_1acdglsjse().b[56][1]++;
    }
    let m = (cov_1acdglsjse().s[196]++, this.str.slice(this.index, this.index + str.length));
    cov_1acdglsjse().s[197]++;
    return m === str;
  }
  _extractString(str) {
    cov_1acdglsjse().f[5]++;
    cov_1acdglsjse().s[198]++;
    if (this._matches(str)) {
      cov_1acdglsjse().b[57][0]++;
      cov_1acdglsjse().s[199]++;
      this.forwardN(str.length);
      cov_1acdglsjse().s[200]++;
      return str;
    } else {
      cov_1acdglsjse().b[57][1]++;
    }
    cov_1acdglsjse().s[201]++;
    return null;
  }
  _extractUntil(charString) {
    cov_1acdglsjse().f[6]++;
    cov_1acdglsjse().s[202]++;
    // Extract all non-matching chars, with the default matching set
    // to everything
    return this._extractMatching(true, (cov_1acdglsjse().b[58][0]++, charString) || (cov_1acdglsjse().b[58][1]++, ''));
  }
  _extract(charString) {
    cov_1acdglsjse().f[7]++;
    cov_1acdglsjse().s[203]++;
    // Extract all matching chars (no default, so charString must be
    // explicit)
    return this._extractMatching(false, charString);
  }
  _extractMatching(breakOnMatch, charString) {
    cov_1acdglsjse().f[8]++;
    cov_1acdglsjse().s[204]++;
    // Pull out characters until a breaking char is hit.
    // If breakOnMatch is false, a non-matching char stops it.
    // If breakOnMatch is true, a matching char stops it.

    if (this.isFinished()) {
      cov_1acdglsjse().b[59][0]++;
      cov_1acdglsjse().s[205]++;
      return null;
    } else {
      cov_1acdglsjse().b[59][1]++;
    }
    let first = (cov_1acdglsjse().s[206]++, charString.indexOf(this.current()));

    // Only proceed if the first character doesn't meet our condition
    cov_1acdglsjse().s[207]++;
    if ((cov_1acdglsjse().b[61][0]++, breakOnMatch) && (cov_1acdglsjse().b[61][1]++, first === -1) || (cov_1acdglsjse().b[61][2]++, !breakOnMatch) && (cov_1acdglsjse().b[61][3]++, first !== -1)) {
      cov_1acdglsjse().b[60][0]++;
      let t = (cov_1acdglsjse().s[208]++, this.current());
      cov_1acdglsjse().s[209]++;
      this.forward();

      // And pull out all the chars one at a time until we hit a
      // breaking char
      let idx = (cov_1acdglsjse().s[210]++, charString.indexOf(this.current()));
      cov_1acdglsjse().s[211]++;
      while (((cov_1acdglsjse().b[62][0]++, breakOnMatch) && (cov_1acdglsjse().b[62][1]++, idx === -1) || (cov_1acdglsjse().b[62][2]++, !breakOnMatch) && (cov_1acdglsjse().b[62][3]++, idx !== -1)) && (cov_1acdglsjse().b[62][4]++, !this.isFinished())) {
        cov_1acdglsjse().s[212]++;
        t += this.current();
        cov_1acdglsjse().s[213]++;
        this.forward();
        cov_1acdglsjse().s[214]++;
        idx = charString.indexOf(this.current());
      }
      cov_1acdglsjse().s[215]++;
      return t;
    } else {
      cov_1acdglsjse().b[60][1]++;
    }
    cov_1acdglsjse().s[216]++;
    return '';
  }
  _extractRegex(regex) {
    cov_1acdglsjse().f[9]++;
    let matches = (cov_1acdglsjse().s[217]++, this.currentStr().match(regex));
    cov_1acdglsjse().s[218]++;
    if (!matches) {
      cov_1acdglsjse().b[63][0]++;
      cov_1acdglsjse().s[219]++;
      return null;
    } else {
      cov_1acdglsjse().b[63][1]++;
    }

    // Move forward whatever was matched
    cov_1acdglsjse().s[220]++;
    this.forwardN(matches[0].length);
    cov_1acdglsjse().s[221]++;
    return matches;
  }
  isFinished() {
    cov_1acdglsjse().f[10]++;
    cov_1acdglsjse().s[222]++;
    return this.index >= this.len;
  }
  forwardN(n) {
    cov_1acdglsjse().f[11]++;
    cov_1acdglsjse().s[223]++;
    for (let i = (cov_1acdglsjse().s[224]++, 0); i < n; i++) {
      cov_1acdglsjse().s[225]++;
      this.forward();
    }
  }
  forward() {
    cov_1acdglsjse().f[12]++;
    cov_1acdglsjse().s[226]++;
    this.index++;
    cov_1acdglsjse().s[227]++;
    if (this.previous() === '\n') {
      cov_1acdglsjse().b[64][0]++;
      cov_1acdglsjse().s[228]++;
      this.lineno++;
      cov_1acdglsjse().s[229]++;
      this.colno = 0;
    } else {
      cov_1acdglsjse().b[64][1]++;
      cov_1acdglsjse().s[230]++;
      this.colno++;
    }
  }
  backN(n) {
    cov_1acdglsjse().f[13]++;
    cov_1acdglsjse().s[231]++;
    for (let i = (cov_1acdglsjse().s[232]++, 0); i < n; i++) {
      cov_1acdglsjse().s[233]++;
      this.back();
    }
  }
  back() {
    cov_1acdglsjse().f[14]++;
    cov_1acdglsjse().s[234]++;
    this.index--;
    cov_1acdglsjse().s[235]++;
    if (this.current() === '\n') {
      cov_1acdglsjse().b[65][0]++;
      cov_1acdglsjse().s[236]++;
      this.lineno--;
      let idx = (cov_1acdglsjse().s[237]++, this.src.lastIndexOf('\n', this.index - 1));
      cov_1acdglsjse().s[238]++;
      if (idx === -1) {
        cov_1acdglsjse().b[66][0]++;
        cov_1acdglsjse().s[239]++;
        this.colno = this.index;
      } else {
        cov_1acdglsjse().b[66][1]++;
        cov_1acdglsjse().s[240]++;
        this.colno = this.index - idx;
      }
    } else {
      cov_1acdglsjse().b[65][1]++;
      cov_1acdglsjse().s[241]++;
      this.colno--;
    }
  }

  // current returns current character
  current() {
    cov_1acdglsjse().f[15]++;
    cov_1acdglsjse().s[242]++;
    if (!this.isFinished()) {
      cov_1acdglsjse().b[67][0]++;
      cov_1acdglsjse().s[243]++;
      return this.str.charAt(this.index);
    } else {
      cov_1acdglsjse().b[67][1]++;
    }
    cov_1acdglsjse().s[244]++;
    return '';
  }

  // currentStr returns what's left of the unparsed string
  currentStr() {
    cov_1acdglsjse().f[16]++;
    cov_1acdglsjse().s[245]++;
    if (!this.isFinished()) {
      cov_1acdglsjse().b[68][0]++;
      cov_1acdglsjse().s[246]++;
      return this.str.substr(this.index);
    } else {
      cov_1acdglsjse().b[68][1]++;
    }
    cov_1acdglsjse().s[247]++;
    return '';
  }
  previous() {
    cov_1acdglsjse().f[17]++;
    cov_1acdglsjse().s[248]++;
    return this.str.charAt(this.index - 1);
  }
}
cov_1acdglsjse().s[249]++;
module.exports = {
  lex(src, opts) {
    cov_1acdglsjse().f[18]++;
    cov_1acdglsjse().s[250]++;
    return new Tokenizer(src, opts);
  },
  TOKEN_STRING: TOKEN_STRING,
  TOKEN_WHITESPACE: TOKEN_WHITESPACE,
  TOKEN_DATA: TOKEN_DATA,
  TOKEN_BLOCK_START: TOKEN_BLOCK_START,
  TOKEN_BLOCK_END: TOKEN_BLOCK_END,
  TOKEN_VARIABLE_START: TOKEN_VARIABLE_START,
  TOKEN_VARIABLE_END: TOKEN_VARIABLE_END,
  TOKEN_COMMENT: TOKEN_COMMENT,
  TOKEN_LEFT_PAREN: TOKEN_LEFT_PAREN,
  TOKEN_RIGHT_PAREN: TOKEN_RIGHT_PAREN,
  TOKEN_LEFT_BRACKET: TOKEN_LEFT_BRACKET,
  TOKEN_RIGHT_BRACKET: TOKEN_RIGHT_BRACKET,
  TOKEN_LEFT_CURLY: TOKEN_LEFT_CURLY,
  TOKEN_RIGHT_CURLY: TOKEN_RIGHT_CURLY,
  TOKEN_OPERATOR: TOKEN_OPERATOR,
  TOKEN_COMMA: TOKEN_COMMA,
  TOKEN_COLON: TOKEN_COLON,
  TOKEN_TILDE: TOKEN_TILDE,
  TOKEN_PIPE: TOKEN_PIPE,
  TOKEN_INT: TOKEN_INT,
  TOKEN_FLOAT: TOKEN_FLOAT,
  TOKEN_BOOLEAN: TOKEN_BOOLEAN,
  TOKEN_NONE: TOKEN_NONE,
  TOKEN_SYMBOL: TOKEN_SYMBOL,
  TOKEN_SPECIAL: TOKEN_SPECIAL,
  TOKEN_REGEX: TOKEN_REGEX
};

/***/ }),

/***/ 449:
/*!*****************************!*\
  !*** ./nunjucks/src/lib.js ***!
  \*****************************/
/***/ ((module) => {

"use strict";


function cov_bylwlz088() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\lib.js";
  var hash = "399e01e6530f0bd3778cce799ddcfea826cea206";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\lib.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 17
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "1": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 31
        }
      },
      "2": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "3": {
        start: {
          line: 15,
          column: 18
        },
        end: {
          line: 15,
          column: 30
        }
      },
      "4": {
        start: {
          line: 17,
          column: 14
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "5": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 20,
          column: 46
        }
      },
      "6": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 32
        }
      },
      "7": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 26,
          column: 23
        }
      },
      "8": {
        start: {
          line: 30,
          column: 2
        },
        end: {
          line: 33,
          column: 3
        }
      },
      "9": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 41
        }
      },
      "10": {
        start: {
          line: 34,
          column: 2
        },
        end: {
          line: 34,
          column: 19
        }
      },
      "11": {
        start: {
          line: 37,
          column: 2
        },
        end: {
          line: 41,
          column: 3
        }
      },
      "12": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 19
        }
      },
      "13": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 33
        }
      },
      "14": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 24
        }
      },
      "15": {
        start: {
          line: 43,
          column: 2
        },
        end: {
          line: 43,
          column: 13
        }
      },
      "16": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 46,
          column: 40
        }
      },
      "17": {
        start: {
          line: 52,
          column: 2
        },
        end: {
          line: 55,
          column: 3
        }
      },
      "18": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 20
        }
      },
      "19": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 48
        }
      },
      "20": {
        start: {
          line: 57,
          column: 2
        },
        end: {
          line: 67,
          column: 3
        }
      },
      "21": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 29
        }
      },
      "22": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 56
        }
      },
      "23": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 15
        }
      },
      "24": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 66,
          column: 7
        }
      },
      "25": {
        start: {
          line: 69,
          column: 2
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "26": {
        start: {
          line: 73,
          column: 2
        },
        end: {
          line: 75,
          column: 3
        }
      },
      "27": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 51
        }
      },
      "28": {
        start: {
          line: 79,
          column: 2
        },
        end: {
          line: 88,
          column: 3
        }
      },
      "29": {
        start: {
          line: 80,
          column: 28
        },
        end: {
          line: 80,
          column: 75
        }
      },
      "30": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 89
        }
      },
      "31": {
        start: {
          line: 81,
          column: 65
        },
        end: {
          line: 81,
          column: 86
        }
      },
      "32": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "33": {
        start: {
          line: 83,
          column: 6
        },
        end: {
          line: 83,
          column: 35
        }
      },
      "34": {
        start: {
          line: 83,
          column: 23
        },
        end: {
          line: 83,
          column: 34
        }
      },
      "35": {
        start: {
          line: 86,
          column: 18
        },
        end: {
          line: 86,
          column: 44
        }
      },
      "36": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 29
        }
      },
      "37": {
        start: {
          line: 87,
          column: 22
        },
        end: {
          line: 87,
          column: 27
        }
      },
      "38": {
        start: {
          line: 90,
          column: 2
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "39": {
        start: {
          line: 91,
          column: 15
        },
        end: {
          line: 91,
          column: 33
        }
      },
      "40": {
        start: {
          line: 94,
          column: 2
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "41": {
        start: {
          line: 98,
          column: 2
        },
        end: {
          line: 98,
          column: 22
        }
      },
      "42": {
        start: {
          line: 99,
          column: 2
        },
        end: {
          line: 99,
          column: 20
        }
      },
      "43": {
        start: {
          line: 100,
          column: 2
        },
        end: {
          line: 100,
          column: 25
        }
      },
      "44": {
        start: {
          line: 102,
          column: 2
        },
        end: {
          line: 123,
          column: 4
        }
      },
      "45": {
        start: {
          line: 103,
          column: 14
        },
        end: {
          line: 103,
          column: 50
        }
      },
      "46": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "47": {
        start: {
          line: 108,
          column: 6
        },
        end: {
          line: 112,
          column: 7
        }
      },
      "48": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 62
        }
      },
      "49": {
        start: {
          line: 110,
          column: 13
        },
        end: {
          line: 112,
          column: 7
        }
      },
      "50": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 40
        }
      },
      "51": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 17
        }
      },
      "52": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "53": {
        start: {
          line: 117,
          column: 6
        },
        end: {
          line: 117,
          column: 17
        }
      },
      "54": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 120,
          column: 46
        }
      },
      "55": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 121,
          column: 29
        }
      },
      "56": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 122,
          column: 16
        }
      },
      "57": {
        start: {
          line: 125,
          column: 2
        },
        end: {
          line: 125,
          column: 13
        }
      },
      "58": {
        start: {
          line: 129,
          column: 0
        },
        end: {
          line: 137,
          column: 1
        }
      },
      "59": {
        start: {
          line: 130,
          column: 2
        },
        end: {
          line: 130,
          column: 66
        }
      },
      "60": {
        start: {
          line: 132,
          column: 2
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "61": {
        start: {
          line: 139,
          column: 0
        },
        end: {
          line: 139,
          column: 38
        }
      },
      "62": {
        start: {
          line: 142,
          column: 2
        },
        end: {
          line: 142,
          column: 48
        }
      },
      "63": {
        start: {
          line: 145,
          column: 0
        },
        end: {
          line: 145,
          column: 24
        }
      },
      "64": {
        start: {
          line: 148,
          column: 2
        },
        end: {
          line: 148,
          column: 61
        }
      },
      "65": {
        start: {
          line: 151,
          column: 0
        },
        end: {
          line: 151,
          column: 32
        }
      },
      "66": {
        start: {
          line: 154,
          column: 2
        },
        end: {
          line: 154,
          column: 58
        }
      },
      "67": {
        start: {
          line: 157,
          column: 0
        },
        end: {
          line: 157,
          column: 26
        }
      },
      "68": {
        start: {
          line: 160,
          column: 2
        },
        end: {
          line: 160,
          column: 59
        }
      },
      "69": {
        start: {
          line: 163,
          column: 0
        },
        end: {
          line: 163,
          column: 28
        }
      },
      "70": {
        start: {
          line: 166,
          column: 2
        },
        end: {
          line: 166,
          column: 59
        }
      },
      "71": {
        start: {
          line: 169,
          column: 0
        },
        end: {
          line: 169,
          column: 28
        }
      },
      "72": {
        start: {
          line: 177,
          column: 2
        },
        end: {
          line: 179,
          column: 3
        }
      },
      "73": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 178,
          column: 14
        }
      },
      "74": {
        start: {
          line: 181,
          column: 2
        },
        end: {
          line: 183,
          column: 3
        }
      },
      "75": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 182,
          column: 27
        }
      },
      "76": {
        start: {
          line: 185,
          column: 2
        },
        end: {
          line: 185,
          column: 16
        }
      },
      "77": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 49
        }
      },
      "78": {
        start: {
          line: 195,
          column: 2
        },
        end: {
          line: 211,
          column: 4
        }
      },
      "79": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 196,
          column: 20
        }
      },
      "80": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 208,
          column: 5
        }
      },
      "81": {
        start: {
          line: 198,
          column: 17
        },
        end: {
          line: 198,
          column: 18
        }
      },
      "82": {
        start: {
          line: 199,
          column: 19
        },
        end: {
          line: 199,
          column: 27
        }
      },
      "83": {
        start: {
          line: 203,
          column: 6
        },
        end: {
          line: 207,
          column: 7
        }
      },
      "84": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 28
        }
      },
      "85": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 25
        }
      },
      "86": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 210,
          column: 17
        }
      },
      "87": {
        start: {
          line: 214,
          column: 0
        },
        end: {
          line: 214,
          column: 38
        }
      },
      "88": {
        start: {
          line: 217,
          column: 17
        },
        end: {
          line: 217,
          column: 19
        }
      },
      "89": {
        start: {
          line: 218,
          column: 19
        },
        end: {
          line: 218,
          column: 61
        }
      },
      "90": {
        start: {
          line: 219,
          column: 2
        },
        end: {
          line: 226,
          column: 3
        }
      },
      "91": {
        start: {
          line: 219,
          column: 15
        },
        end: {
          line: 219,
          column: 16
        }
      },
      "92": {
        start: {
          line: 220,
          column: 18
        },
        end: {
          line: 220,
          column: 24
        }
      },
      "93": {
        start: {
          line: 221,
          column: 16
        },
        end: {
          line: 221,
          column: 34
        }
      },
      "94": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 224,
          column: 5
        }
      },
      "95": {
        start: {
          line: 223,
          column: 6
        },
        end: {
          line: 223,
          column: 79
        }
      },
      "96": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 225,
          column: 52
        }
      },
      "97": {
        start: {
          line: 227,
          column: 2
        },
        end: {
          line: 227,
          column: 16
        }
      },
      "98": {
        start: {
          line: 230,
          column: 0
        },
        end: {
          line: 230,
          column: 26
        }
      },
      "99": {
        start: {
          line: 233,
          column: 2
        },
        end: {
          line: 233,
          column: 41
        }
      },
      "100": {
        start: {
          line: 236,
          column: 0
        },
        end: {
          line: 236,
          column: 26
        }
      },
      "101": {
        start: {
          line: 239,
          column: 17
        },
        end: {
          line: 239,
          column: 19
        }
      },
      "102": {
        start: {
          line: 240,
          column: 2
        },
        end: {
          line: 242,
          column: 3
        }
      },
      "103": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 241,
          column: 18
        }
      },
      "104": {
        start: {
          line: 243,
          column: 17
        },
        end: {
          line: 243,
          column: 29
        }
      },
      "105": {
        start: {
          line: 244,
          column: 19
        },
        end: {
          line: 244,
          column: 46
        }
      },
      "106": {
        start: {
          line: 245,
          column: 14
        },
        end: {
          line: 245,
          column: 16
        }
      },
      "107": {
        start: {
          line: 247,
          column: 2
        },
        end: {
          line: 251,
          column: 3
        }
      },
      "108": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 250,
          column: 5
        }
      },
      "109": {
        start: {
          line: 249,
          column: 6
        },
        end: {
          line: 249,
          column: 32
        }
      },
      "110": {
        start: {
          line: 252,
          column: 2
        },
        end: {
          line: 252,
          column: 16
        }
      },
      "111": {
        start: {
          line: 255,
          column: 0
        },
        end: {
          line: 255,
          column: 26
        }
      },
      "112": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 14
        }
      },
      "113": {
        start: {
          line: 259,
          column: 2
        },
        end: {
          line: 261,
          column: 3
        }
      },
      "114": {
        start: {
          line: 259,
          column: 15
        },
        end: {
          line: 259,
          column: 16
        }
      },
      "115": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 260,
          column: 17
        }
      },
      "116": {
        start: {
          line: 262,
          column: 2
        },
        end: {
          line: 262,
          column: 13
        }
      },
      "117": {
        start: {
          line: 265,
          column: 0
        },
        end: {
          line: 265,
          column: 24
        }
      },
      "118": {
        start: {
          line: 268,
          column: 2
        },
        end: {
          line: 270,
          column: 3
        }
      },
      "119": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 269,
          column: 11
        }
      },
      "120": {
        start: {
          line: 272,
          column: 2
        },
        end: {
          line: 278,
          column: 3
        }
      },
      "121": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 273,
          column: 31
        }
      },
      "122": {
        start: {
          line: 274,
          column: 9
        },
        end: {
          line: 278,
          column: 3
        }
      },
      "123": {
        start: {
          line: 275,
          column: 4
        },
        end: {
          line: 277,
          column: 5
        }
      },
      "124": {
        start: {
          line: 275,
          column: 17
        },
        end: {
          line: 275,
          column: 18
        }
      },
      "125": {
        start: {
          line: 275,
          column: 24
        },
        end: {
          line: 275,
          column: 34
        }
      },
      "126": {
        start: {
          line: 276,
          column: 6
        },
        end: {
          line: 276,
          column: 41
        }
      },
      "127": {
        start: {
          line: 281,
          column: 0
        },
        end: {
          line: 281,
          column: 20
        }
      },
      "128": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 284,
          column: 18
        }
      },
      "129": {
        start: {
          line: 285,
          column: 2
        },
        end: {
          line: 287,
          column: 3
        }
      },
      "130": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 286,
          column: 19
        }
      },
      "131": {
        start: {
          line: 289,
          column: 2
        },
        end: {
          line: 291,
          column: 3
        }
      },
      "132": {
        start: {
          line: 290,
          column: 4
        },
        end: {
          line: 290,
          column: 25
        }
      },
      "133": {
        start: {
          line: 293,
          column: 2
        },
        end: {
          line: 295,
          column: 3
        }
      },
      "134": {
        start: {
          line: 293,
          column: 15
        },
        end: {
          line: 293,
          column: 16
        }
      },
      "135": {
        start: {
          line: 294,
          column: 4
        },
        end: {
          line: 294,
          column: 46
        }
      },
      "136": {
        start: {
          line: 297,
          column: 2
        },
        end: {
          line: 299,
          column: 3
        }
      },
      "137": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 298,
          column: 32
        }
      },
      "138": {
        start: {
          line: 301,
          column: 2
        },
        end: {
          line: 301,
          column: 17
        }
      },
      "139": {
        start: {
          line: 304,
          column: 0
        },
        end: {
          line: 304,
          column: 18
        }
      },
      "140": {
        start: {
          line: 307,
          column: 10
        },
        end: {
          line: 307,
          column: 12
        }
      },
      "141": {
        start: {
          line: 310,
          column: 4
        },
        end: {
          line: 310,
          column: 8
        }
      },
      "142": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 316,
          column: 5
        }
      },
      "143": {
        start: {
          line: 313,
          column: 6
        },
        end: {
          line: 313,
          column: 32
        }
      },
      "144": {
        start: {
          line: 315,
          column: 6
        },
        end: {
          line: 315,
          column: 11
        }
      },
      "145": {
        start: {
          line: 319,
          column: 2
        },
        end: {
          line: 319,
          column: 9
        }
      },
      "146": {
        start: {
          line: 322,
          column: 0
        },
        end: {
          line: 322,
          column: 30
        }
      },
      "147": {
        start: {
          line: 325,
          column: 15
        },
        end: {
          line: 325,
          column: 31
        }
      },
      "148": {
        start: {
          line: 326,
          column: 14
        },
        end: {
          line: 326,
          column: 25
        }
      },
      "149": {
        start: {
          line: 327,
          column: 10
        },
        end: {
          line: 327,
          column: 12
        }
      },
      "150": {
        start: {
          line: 330,
          column: 4
        },
        end: {
          line: 330,
          column: 8
        }
      },
      "151": {
        start: {
          line: 331,
          column: 14
        },
        end: {
          line: 331,
          column: 21
        }
      },
      "152": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 337,
          column: 5
        }
      },
      "153": {
        start: {
          line: 334,
          column: 6
        },
        end: {
          line: 334,
          column: 36
        }
      },
      "154": {
        start: {
          line: 336,
          column: 6
        },
        end: {
          line: 336,
          column: 11
        }
      },
      "155": {
        start: {
          line: 340,
          column: 2
        },
        end: {
          line: 340,
          column: 9
        }
      },
      "156": {
        start: {
          line: 343,
          column: 0
        },
        end: {
          line: 343,
          column: 28
        }
      },
      "157": {
        start: {
          line: 346,
          column: 2
        },
        end: {
          line: 346,
          column: 75
        }
      },
      "158": {
        start: {
          line: 349,
          column: 0
        },
        end: {
          line: 349,
          column: 26
        }
      },
      "159": {
        start: {
          line: 353,
          column: 14
        },
        end: {
          line: 353,
          column: 16
        }
      },
      "160": {
        start: {
          line: 354,
          column: 2
        },
        end: {
          line: 358,
          column: 3
        }
      },
      "161": {
        start: {
          line: 355,
          column: 4
        },
        end: {
          line: 357,
          column: 5
        }
      },
      "162": {
        start: {
          line: 356,
          column: 6
        },
        end: {
          line: 356,
          column: 18
        }
      },
      "163": {
        start: {
          line: 359,
          column: 2
        },
        end: {
          line: 359,
          column: 13
        }
      },
      "164": {
        start: {
          line: 362,
          column: 0
        },
        end: {
          line: 362,
          column: 21
        }
      },
      "165": {
        start: {
          line: 365,
          column: 2
        },
        end: {
          line: 365,
          column: 44
        }
      },
      "166": {
        start: {
          line: 365,
          column: 31
        },
        end: {
          line: 365,
          column: 42
        }
      },
      "167": {
        start: {
          line: 368,
          column: 0
        },
        end: {
          line: 368,
          column: 28
        }
      },
      "168": {
        start: {
          line: 371,
          column: 2
        },
        end: {
          line: 371,
          column: 39
        }
      },
      "169": {
        start: {
          line: 371,
          column: 31
        },
        end: {
          line: 371,
          column: 37
        }
      },
      "170": {
        start: {
          line: 374,
          column: 0
        },
        end: {
          line: 374,
          column: 26
        }
      },
      "171": {
        start: {
          line: 377,
          column: 2
        },
        end: {
          line: 377,
          column: 20
        }
      },
      "172": {
        start: {
          line: 378,
          column: 2
        },
        end: {
          line: 380,
          column: 5
        }
      },
      "173": {
        start: {
          line: 379,
          column: 4
        },
        end: {
          line: 379,
          column: 22
        }
      },
      "174": {
        start: {
          line: 381,
          column: 2
        },
        end: {
          line: 381,
          column: 14
        }
      },
      "175": {
        start: {
          line: 384,
          column: 0
        },
        end: {
          line: 384,
          column: 42
        }
      },
      "176": {
        start: {
          line: 387,
          column: 2
        },
        end: {
          line: 391,
          column: 3
        }
      },
      "177": {
        start: {
          line: 388,
          column: 4
        },
        end: {
          line: 388,
          column: 35
        }
      },
      "178": {
        start: {
          line: 389,
          column: 9
        },
        end: {
          line: 391,
          column: 3
        }
      },
      "179": {
        start: {
          line: 390,
          column: 4
        },
        end: {
          line: 390,
          column: 22
        }
      },
      "180": {
        start: {
          line: 392,
          column: 2
        },
        end: {
          line: 393,
          column: 38
        }
      },
      "181": {
        start: {
          line: 396,
          column: 0
        },
        end: {
          line: 396,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "hasOwnProp",
        decl: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 28
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "lookupEscape",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 21
          }
        },
        loc: {
          start: {
            line: 25,
            column: 26
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 25
      },
      "2": {
        name: "_prettifyError",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 23
          }
        },
        loc: {
          start: {
            line: 29,
            column: 50
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 29
      },
      "3": {
        name: "TemplateError",
        decl: {
          start: {
            line: 48,
            column: 9
          },
          end: {
            line: 48,
            column: 22
          }
        },
        loc: {
          start: {
            line: 48,
            column: 47
          },
          end: {
            line: 126,
            column: 1
          }
        },
        line: 48
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 81,
            column: 59
          },
          end: {
            line: 81,
            column: 60
          }
        },
        loc: {
          start: {
            line: 81,
            column: 65
          },
          end: {
            line: 81,
            column: 86
          }
        },
        line: 81
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 83,
            column: 17
          },
          end: {
            line: 83,
            column: 18
          }
        },
        loc: {
          start: {
            line: 83,
            column: 23
          },
          end: {
            line: 83,
            column: 34
          }
        },
        line: 83
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 87,
            column: 17
          }
        },
        loc: {
          start: {
            line: 87,
            column: 22
          },
          end: {
            line: 87,
            column: 27
          }
        },
        line: 87
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 91,
            column: 9
          },
          end: {
            line: 91,
            column: 10
          }
        },
        loc: {
          start: {
            line: 91,
            column: 15
          },
          end: {
            line: 91,
            column: 33
          }
        },
        line: 91
      },
      "8": {
        name: "Update",
        decl: {
          start: {
            line: 102,
            column: 24
          },
          end: {
            line: 102,
            column: 30
          }
        },
        loc: {
          start: {
            line: 102,
            column: 37
          },
          end: {
            line: 123,
            column: 3
          }
        },
        line: 102
      },
      "9": {
        name: "escape",
        decl: {
          start: {
            line: 141,
            column: 9
          },
          end: {
            line: 141,
            column: 15
          }
        },
        loc: {
          start: {
            line: 141,
            column: 21
          },
          end: {
            line: 143,
            column: 1
          }
        },
        line: 141
      },
      "10": {
        name: "isFunction",
        decl: {
          start: {
            line: 147,
            column: 9
          },
          end: {
            line: 147,
            column: 19
          }
        },
        loc: {
          start: {
            line: 147,
            column: 25
          },
          end: {
            line: 149,
            column: 1
          }
        },
        line: 147
      },
      "11": {
        name: "isArray",
        decl: {
          start: {
            line: 153,
            column: 9
          },
          end: {
            line: 153,
            column: 16
          }
        },
        loc: {
          start: {
            line: 153,
            column: 22
          },
          end: {
            line: 155,
            column: 1
          }
        },
        line: 153
      },
      "12": {
        name: "isString",
        decl: {
          start: {
            line: 159,
            column: 9
          },
          end: {
            line: 159,
            column: 17
          }
        },
        loc: {
          start: {
            line: 159,
            column: 23
          },
          end: {
            line: 161,
            column: 1
          }
        },
        line: 159
      },
      "13": {
        name: "isObject",
        decl: {
          start: {
            line: 165,
            column: 9
          },
          end: {
            line: 165,
            column: 17
          }
        },
        loc: {
          start: {
            line: 165,
            column: 23
          },
          end: {
            line: 167,
            column: 1
          }
        },
        line: 165
      },
      "14": {
        name: "_prepareAttributeParts",
        decl: {
          start: {
            line: 176,
            column: 9
          },
          end: {
            line: 176,
            column: 31
          }
        },
        loc: {
          start: {
            line: 176,
            column: 38
          },
          end: {
            line: 186,
            column: 1
          }
        },
        line: 176
      },
      "15": {
        name: "getAttrGetter",
        decl: {
          start: {
            line: 192,
            column: 9
          },
          end: {
            line: 192,
            column: 22
          }
        },
        loc: {
          start: {
            line: 192,
            column: 34
          },
          end: {
            line: 212,
            column: 1
          }
        },
        line: 192
      },
      "16": {
        name: "attrGetter",
        decl: {
          start: {
            line: 195,
            column: 18
          },
          end: {
            line: 195,
            column: 28
          }
        },
        loc: {
          start: {
            line: 195,
            column: 35
          },
          end: {
            line: 211,
            column: 3
          }
        },
        line: 195
      },
      "17": {
        name: "groupBy",
        decl: {
          start: {
            line: 216,
            column: 9
          },
          end: {
            line: 216,
            column: 16
          }
        },
        loc: {
          start: {
            line: 216,
            column: 45
          },
          end: {
            line: 228,
            column: 1
          }
        },
        line: 216
      },
      "18": {
        name: "toArray",
        decl: {
          start: {
            line: 232,
            column: 9
          },
          end: {
            line: 232,
            column: 16
          }
        },
        loc: {
          start: {
            line: 232,
            column: 22
          },
          end: {
            line: 234,
            column: 1
          }
        },
        line: 232
      },
      "19": {
        name: "without",
        decl: {
          start: {
            line: 238,
            column: 9
          },
          end: {
            line: 238,
            column: 16
          }
        },
        loc: {
          start: {
            line: 238,
            column: 24
          },
          end: {
            line: 253,
            column: 1
          }
        },
        line: 238
      },
      "20": {
        name: "repeat",
        decl: {
          start: {
            line: 257,
            column: 9
          },
          end: {
            line: 257,
            column: 15
          }
        },
        loc: {
          start: {
            line: 257,
            column: 26
          },
          end: {
            line: 263,
            column: 1
          }
        },
        line: 257
      },
      "21": {
        name: "each",
        decl: {
          start: {
            line: 267,
            column: 9
          },
          end: {
            line: 267,
            column: 13
          }
        },
        loc: {
          start: {
            line: 267,
            column: 34
          },
          end: {
            line: 279,
            column: 1
          }
        },
        line: 267
      },
      "22": {
        name: "map",
        decl: {
          start: {
            line: 283,
            column: 9
          },
          end: {
            line: 283,
            column: 12
          }
        },
        loc: {
          start: {
            line: 283,
            column: 24
          },
          end: {
            line: 302,
            column: 1
          }
        },
        line: 283
      },
      "23": {
        name: "asyncIter",
        decl: {
          start: {
            line: 306,
            column: 9
          },
          end: {
            line: 306,
            column: 18
          }
        },
        loc: {
          start: {
            line: 306,
            column: 34
          },
          end: {
            line: 320,
            column: 1
          }
        },
        line: 306
      },
      "24": {
        name: "next",
        decl: {
          start: {
            line: 309,
            column: 11
          },
          end: {
            line: 309,
            column: 15
          }
        },
        loc: {
          start: {
            line: 309,
            column: 18
          },
          end: {
            line: 317,
            column: 3
          }
        },
        line: 309
      },
      "25": {
        name: "asyncFor",
        decl: {
          start: {
            line: 324,
            column: 9
          },
          end: {
            line: 324,
            column: 17
          }
        },
        loc: {
          start: {
            line: 324,
            column: 33
          },
          end: {
            line: 341,
            column: 1
          }
        },
        line: 324
      },
      "26": {
        name: "next",
        decl: {
          start: {
            line: 329,
            column: 11
          },
          end: {
            line: 329,
            column: 15
          }
        },
        loc: {
          start: {
            line: 329,
            column: 18
          },
          end: {
            line: 338,
            column: 3
          }
        },
        line: 329
      },
      "27": {
        name: "indexOf",
        decl: {
          start: {
            line: 345,
            column: 9
          },
          end: {
            line: 345,
            column: 16
          }
        },
        loc: {
          start: {
            line: 345,
            column: 48
          },
          end: {
            line: 347,
            column: 1
          }
        },
        line: 345
      },
      "28": {
        name: "keys_",
        decl: {
          start: {
            line: 351,
            column: 9
          },
          end: {
            line: 351,
            column: 14
          }
        },
        loc: {
          start: {
            line: 351,
            column: 20
          },
          end: {
            line: 360,
            column: 1
          }
        },
        line: 351
      },
      "29": {
        name: "_entries",
        decl: {
          start: {
            line: 364,
            column: 9
          },
          end: {
            line: 364,
            column: 17
          }
        },
        loc: {
          start: {
            line: 364,
            column: 23
          },
          end: {
            line: 366,
            column: 1
          }
        },
        line: 364
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 365,
            column: 24
          },
          end: {
            line: 365,
            column: 25
          }
        },
        loc: {
          start: {
            line: 365,
            column: 31
          },
          end: {
            line: 365,
            column: 42
          }
        },
        line: 365
      },
      "31": {
        name: "_values",
        decl: {
          start: {
            line: 370,
            column: 9
          },
          end: {
            line: 370,
            column: 16
          }
        },
        loc: {
          start: {
            line: 370,
            column: 22
          },
          end: {
            line: 372,
            column: 1
          }
        },
        line: 370
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 371,
            column: 24
          },
          end: {
            line: 371,
            column: 25
          }
        },
        loc: {
          start: {
            line: 371,
            column: 31
          },
          end: {
            line: 371,
            column: 37
          }
        },
        line: 371
      },
      "33": {
        name: "extend",
        decl: {
          start: {
            line: 376,
            column: 9
          },
          end: {
            line: 376,
            column: 15
          }
        },
        loc: {
          start: {
            line: 376,
            column: 28
          },
          end: {
            line: 382,
            column: 1
          }
        },
        line: 376
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 378,
            column: 22
          },
          end: {
            line: 378,
            column: 23
          }
        },
        loc: {
          start: {
            line: 378,
            column: 27
          },
          end: {
            line: 380,
            column: 3
          }
        },
        line: 378
      },
      "35": {
        name: "inOperator",
        decl: {
          start: {
            line: 386,
            column: 9
          },
          end: {
            line: 386,
            column: 19
          }
        },
        loc: {
          start: {
            line: 386,
            column: 30
          },
          end: {
            line: 394,
            column: 1
          }
        },
        line: 386
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 2
          },
          end: {
            line: 41,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 2
          },
          end: {
            line: 41,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "2": {
        loc: {
          start: {
            line: 52,
            column: 2
          },
          end: {
            line: 55,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 2
          },
          end: {
            line: 55,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "3": {
        loc: {
          start: {
            line: 57,
            column: 2
          },
          end: {
            line: 67,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 2
          },
          end: {
            line: 67,
            column: 3
          }
        }, {
          start: {
            line: 60,
            column: 9
          },
          end: {
            line: 67,
            column: 3
          }
        }],
        line: 57
      },
      "4": {
        loc: {
          start: {
            line: 73,
            column: 2
          },
          end: {
            line: 75,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 2
          },
          end: {
            line: 75,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "5": {
        loc: {
          start: {
            line: 79,
            column: 2
          },
          end: {
            line: 88,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 2
          },
          end: {
            line: 88,
            column: 3
          }
        }, {
          start: {
            line: 85,
            column: 9
          },
          end: {
            line: 88,
            column: 3
          }
        }],
        line: 79
      },
      "6": {
        loc: {
          start: {
            line: 81,
            column: 15
          },
          end: {
            line: 81,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 15
          },
          end: {
            line: 81,
            column: 30
          }
        }, {
          start: {
            line: 81,
            column: 35
          },
          end: {
            line: 81,
            column: 54
          }
        }, {
          start: {
            line: 81,
            column: 59
          },
          end: {
            line: 81,
            column: 86
          }
        }],
        line: 81
      },
      "7": {
        loc: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "8": {
        loc: {
          start: {
            line: 103,
            column: 21
          },
          end: {
            line: 103,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 21
          },
          end: {
            line: 103,
            column: 25
          }
        }, {
          start: {
            line: 103,
            column: 29
          },
          end: {
            line: 103,
            column: 43
          }
        }],
        line: 103
      },
      "9": {
        loc: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "10": {
        loc: {
          start: {
            line: 108,
            column: 6
          },
          end: {
            line: 112,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 6
          },
          end: {
            line: 112,
            column: 7
          }
        }, {
          start: {
            line: 110,
            column: 13
          },
          end: {
            line: 112,
            column: 7
          }
        }],
        line: 108
      },
      "11": {
        loc: {
          start: {
            line: 108,
            column: 10
          },
          end: {
            line: 108,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 10
          },
          end: {
            line: 108,
            column: 21
          }
        }, {
          start: {
            line: 108,
            column: 25
          },
          end: {
            line: 108,
            column: 35
          }
        }],
        line: 108
      },
      "12": {
        loc: {
          start: {
            line: 110,
            column: 13
          },
          end: {
            line: 112,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 13
          },
          end: {
            line: 112,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "13": {
        loc: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "14": {
        loc: {
          start: {
            line: 120,
            column: 26
          },
          end: {
            line: 120,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 26
          },
          end: {
            line: 120,
            column: 38
          }
        }, {
          start: {
            line: 120,
            column: 42
          },
          end: {
            line: 120,
            column: 44
          }
        }],
        line: 120
      },
      "15": {
        loc: {
          start: {
            line: 129,
            column: 0
          },
          end: {
            line: 137,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 0
          },
          end: {
            line: 137,
            column: 1
          }
        }, {
          start: {
            line: 131,
            column: 7
          },
          end: {
            line: 137,
            column: 1
          }
        }],
        line: 129
      },
      "16": {
        loc: {
          start: {
            line: 177,
            column: 2
          },
          end: {
            line: 179,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 2
          },
          end: {
            line: 179,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "17": {
        loc: {
          start: {
            line: 181,
            column: 2
          },
          end: {
            line: 183,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 2
          },
          end: {
            line: 183,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "18": {
        loc: {
          start: {
            line: 203,
            column: 6
          },
          end: {
            line: 207,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 6
          },
          end: {
            line: 207,
            column: 7
          }
        }, {
          start: {
            line: 205,
            column: 13
          },
          end: {
            line: 207,
            column: 7
          }
        }],
        line: 203
      },
      "19": {
        loc: {
          start: {
            line: 218,
            column: 19
          },
          end: {
            line: 218,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 218,
            column: 37
          },
          end: {
            line: 218,
            column: 40
          }
        }, {
          start: {
            line: 218,
            column: 43
          },
          end: {
            line: 218,
            column: 61
          }
        }],
        line: 218
      },
      "20": {
        loc: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "21": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 222,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 222,
            column: 25
          }
        }, {
          start: {
            line: 222,
            column: 29
          },
          end: {
            line: 222,
            column: 54
          }
        }],
        line: 222
      },
      "22": {
        loc: {
          start: {
            line: 225,
            column: 5
          },
          end: {
            line: 225,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 5
          },
          end: {
            line: 225,
            column: 16
          }
        }, {
          start: {
            line: 225,
            column: 21
          },
          end: {
            line: 225,
            column: 37
          }
        }],
        line: 225
      },
      "23": {
        loc: {
          start: {
            line: 240,
            column: 2
          },
          end: {
            line: 242,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 2
          },
          end: {
            line: 242,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "24": {
        loc: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "25": {
        loc: {
          start: {
            line: 268,
            column: 2
          },
          end: {
            line: 270,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 2
          },
          end: {
            line: 270,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "26": {
        loc: {
          start: {
            line: 272,
            column: 2
          },
          end: {
            line: 278,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 2
          },
          end: {
            line: 278,
            column: 3
          }
        }, {
          start: {
            line: 274,
            column: 9
          },
          end: {
            line: 278,
            column: 3
          }
        }],
        line: 272
      },
      "27": {
        loc: {
          start: {
            line: 272,
            column: 6
          },
          end: {
            line: 272,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 272,
            column: 6
          },
          end: {
            line: 272,
            column: 24
          }
        }, {
          start: {
            line: 272,
            column: 28
          },
          end: {
            line: 272,
            column: 62
          }
        }],
        line: 272
      },
      "28": {
        loc: {
          start: {
            line: 274,
            column: 9
          },
          end: {
            line: 278,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 9
          },
          end: {
            line: 278,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "29": {
        loc: {
          start: {
            line: 285,
            column: 2
          },
          end: {
            line: 287,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 2
          },
          end: {
            line: 287,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      },
      "30": {
        loc: {
          start: {
            line: 289,
            column: 2
          },
          end: {
            line: 291,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 2
          },
          end: {
            line: 291,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "31": {
        loc: {
          start: {
            line: 289,
            column: 6
          },
          end: {
            line: 289,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 289,
            column: 6
          },
          end: {
            line: 289,
            column: 20
          }
        }, {
          start: {
            line: 289,
            column: 24
          },
          end: {
            line: 289,
            column: 50
          }
        }],
        line: 289
      },
      "32": {
        loc: {
          start: {
            line: 297,
            column: 2
          },
          end: {
            line: 299,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 2
          },
          end: {
            line: 299,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 297
      },
      "33": {
        loc: {
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 316,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 316,
            column: 5
          }
        }, {
          start: {
            line: 314,
            column: 11
          },
          end: {
            line: 316,
            column: 5
          }
        }],
        line: 312
      },
      "34": {
        loc: {
          start: {
            line: 325,
            column: 21
          },
          end: {
            line: 325,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 325,
            column: 21
          },
          end: {
            line: 325,
            column: 24
          }
        }, {
          start: {
            line: 325,
            column: 28
          },
          end: {
            line: 325,
            column: 30
          }
        }],
        line: 325
      },
      "35": {
        loc: {
          start: {
            line: 333,
            column: 4
          },
          end: {
            line: 337,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 4
          },
          end: {
            line: 337,
            column: 5
          }
        }, {
          start: {
            line: 335,
            column: 11
          },
          end: {
            line: 337,
            column: 5
          }
        }],
        line: 333
      },
      "36": {
        loc: {
          start: {
            line: 346,
            column: 38
          },
          end: {
            line: 346,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 346,
            column: 38
          },
          end: {
            line: 346,
            column: 41
          }
        }, {
          start: {
            line: 346,
            column: 45
          },
          end: {
            line: 346,
            column: 47
          }
        }],
        line: 346
      },
      "37": {
        loc: {
          start: {
            line: 355,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 355
      },
      "38": {
        loc: {
          start: {
            line: 377,
            column: 9
          },
          end: {
            line: 377,
            column: 19
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 377,
            column: 9
          },
          end: {
            line: 377,
            column: 13
          }
        }, {
          start: {
            line: 377,
            column: 17
          },
          end: {
            line: 377,
            column: 19
          }
        }],
        line: 377
      },
      "39": {
        loc: {
          start: {
            line: 387,
            column: 2
          },
          end: {
            line: 391,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 387,
            column: 2
          },
          end: {
            line: 391,
            column: 3
          }
        }, {
          start: {
            line: 389,
            column: 9
          },
          end: {
            line: 391,
            column: 3
          }
        }],
        line: 387
      },
      "40": {
        loc: {
          start: {
            line: 387,
            column: 6
          },
          end: {
            line: 387,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 387,
            column: 6
          },
          end: {
            line: 387,
            column: 18
          }
        }, {
          start: {
            line: 387,
            column: 22
          },
          end: {
            line: 387,
            column: 35
          }
        }],
        line: 387
      },
      "41": {
        loc: {
          start: {
            line: 389,
            column: 9
          },
          end: {
            line: 391,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 9
          },
          end: {
            line: 391,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "399e01e6530f0bd3778cce799ddcfea826cea206"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_bylwlz088 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_bylwlz088();
var ArrayProto = (cov_bylwlz088().s[0]++, Array.prototype);
var ObjProto = (cov_bylwlz088().s[1]++, Object.prototype);
var escapeMap = (cov_bylwlz088().s[2]++, {
  '&': '&amp;',
  '"': '&quot;',
  '\'': '&#39;',
  '<': '&lt;',
  '>': '&gt;',
  '\\': '&#92;'
});
var escapeRegex = (cov_bylwlz088().s[3]++, /[&"'<>\\]/g);
var exports = (cov_bylwlz088().s[4]++, module.exports = {});
function hasOwnProp(obj, k) {
  cov_bylwlz088().f[0]++;
  cov_bylwlz088().s[5]++;
  return ObjProto.hasOwnProperty.call(obj, k);
}
cov_bylwlz088().s[6]++;
exports.hasOwnProp = hasOwnProp;
function lookupEscape(ch) {
  cov_bylwlz088().f[1]++;
  cov_bylwlz088().s[7]++;
  return escapeMap[ch];
}
function _prettifyError(path, withInternals, err) {
  cov_bylwlz088().f[2]++;
  cov_bylwlz088().s[8]++;
  if (!err.Update) {
    cov_bylwlz088().b[0][0]++;
    cov_bylwlz088().s[9]++;
    // not one of ours, cast it
    err = new exports.TemplateError(err);
  } else {
    cov_bylwlz088().b[0][1]++;
  }
  cov_bylwlz088().s[10]++;
  err.Update(path);

  // Unless they marked the dev flag, show them a trace from here
  cov_bylwlz088().s[11]++;
  if (!withInternals) {
    cov_bylwlz088().b[1][0]++;
    const old = (cov_bylwlz088().s[12]++, err);
    cov_bylwlz088().s[13]++;
    err = new Error(old.message);
    cov_bylwlz088().s[14]++;
    err.name = old.name;
  } else {
    cov_bylwlz088().b[1][1]++;
  }
  cov_bylwlz088().s[15]++;
  return err;
}
cov_bylwlz088().s[16]++;
exports._prettifyError = _prettifyError;
function TemplateError(message, lineno, colno) {
  cov_bylwlz088().f[3]++;
  var err;
  var cause;
  cov_bylwlz088().s[17]++;
  if (message instanceof Error) {
    cov_bylwlz088().b[2][0]++;
    cov_bylwlz088().s[18]++;
    cause = message;
    cov_bylwlz088().s[19]++;
    message = `${cause.name}: ${cause.message}`;
  } else {
    cov_bylwlz088().b[2][1]++;
  }
  cov_bylwlz088().s[20]++;
  if (Object.setPrototypeOf) {
    cov_bylwlz088().b[3][0]++;
    cov_bylwlz088().s[21]++;
    err = new Error(message);
    cov_bylwlz088().s[22]++;
    Object.setPrototypeOf(err, TemplateError.prototype);
  } else {
    cov_bylwlz088().b[3][1]++;
    cov_bylwlz088().s[23]++;
    err = this;
    cov_bylwlz088().s[24]++;
    Object.defineProperty(err, 'message', {
      enumerable: false,
      writable: true,
      value: message
    });
  }
  cov_bylwlz088().s[25]++;
  Object.defineProperty(err, 'name', {
    value: 'Template render error'
  });
  cov_bylwlz088().s[26]++;
  if (Error.captureStackTrace) {
    cov_bylwlz088().b[4][0]++;
    cov_bylwlz088().s[27]++;
    Error.captureStackTrace(err, this.constructor);
  } else {
    cov_bylwlz088().b[4][1]++;
  }
  let getStack;
  cov_bylwlz088().s[28]++;
  if (cause) {
    cov_bylwlz088().b[5][0]++;
    const stackDescriptor = (cov_bylwlz088().s[29]++, Object.getOwnPropertyDescriptor(cause, 'stack'));
    cov_bylwlz088().s[30]++;
    getStack = (cov_bylwlz088().b[6][0]++, stackDescriptor) && ((cov_bylwlz088().b[6][1]++, stackDescriptor.get) || (cov_bylwlz088().b[6][2]++, () => {
      cov_bylwlz088().f[4]++;
      cov_bylwlz088().s[31]++;
      return stackDescriptor.value;
    }));
    cov_bylwlz088().s[32]++;
    if (!getStack) {
      cov_bylwlz088().b[7][0]++;
      cov_bylwlz088().s[33]++;
      getStack = () => {
        cov_bylwlz088().f[5]++;
        cov_bylwlz088().s[34]++;
        return cause.stack;
      };
    } else {
      cov_bylwlz088().b[7][1]++;
    }
  } else {
    cov_bylwlz088().b[5][1]++;
    const stack = (cov_bylwlz088().s[35]++, new Error(message).stack);
    cov_bylwlz088().s[36]++;
    getStack = () => {
      cov_bylwlz088().f[6]++;
      cov_bylwlz088().s[37]++;
      return stack;
    };
  }
  cov_bylwlz088().s[38]++;
  Object.defineProperty(err, 'stack', {
    get: () => {
      cov_bylwlz088().f[7]++;
      cov_bylwlz088().s[39]++;
      return getStack.call(err);
    }
  });
  cov_bylwlz088().s[40]++;
  Object.defineProperty(err, 'cause', {
    value: cause
  });
  cov_bylwlz088().s[41]++;
  err.lineno = lineno;
  cov_bylwlz088().s[42]++;
  err.colno = colno;
  cov_bylwlz088().s[43]++;
  err.firstUpdate = true;
  cov_bylwlz088().s[44]++;
  err.Update = function Update(path) {
    cov_bylwlz088().f[8]++;
    let msg = (cov_bylwlz088().s[45]++, '(' + ((cov_bylwlz088().b[8][0]++, path) || (cov_bylwlz088().b[8][1]++, 'unknown path')) + ')');

    // only show lineno + colno next to path of template
    // where error occurred
    cov_bylwlz088().s[46]++;
    if (this.firstUpdate) {
      cov_bylwlz088().b[9][0]++;
      cov_bylwlz088().s[47]++;
      if ((cov_bylwlz088().b[11][0]++, this.lineno) && (cov_bylwlz088().b[11][1]++, this.colno)) {
        cov_bylwlz088().b[10][0]++;
        cov_bylwlz088().s[48]++;
        msg += ` [Line ${this.lineno}, Column ${this.colno}]`;
      } else {
        cov_bylwlz088().b[10][1]++;
        cov_bylwlz088().s[49]++;
        if (this.lineno) {
          cov_bylwlz088().b[12][0]++;
          cov_bylwlz088().s[50]++;
          msg += ` [Line ${this.lineno}]`;
        } else {
          cov_bylwlz088().b[12][1]++;
        }
      }
    } else {
      cov_bylwlz088().b[9][1]++;
    }
    cov_bylwlz088().s[51]++;
    msg += '\n ';
    cov_bylwlz088().s[52]++;
    if (this.firstUpdate) {
      cov_bylwlz088().b[13][0]++;
      cov_bylwlz088().s[53]++;
      msg += ' ';
    } else {
      cov_bylwlz088().b[13][1]++;
    }
    cov_bylwlz088().s[54]++;
    this.message = msg + ((cov_bylwlz088().b[14][0]++, this.message) || (cov_bylwlz088().b[14][1]++, ''));
    cov_bylwlz088().s[55]++;
    this.firstUpdate = false;
    cov_bylwlz088().s[56]++;
    return this;
  };
  cov_bylwlz088().s[57]++;
  return err;
}
cov_bylwlz088().s[58]++;
if (Object.setPrototypeOf) {
  cov_bylwlz088().b[15][0]++;
  cov_bylwlz088().s[59]++;
  Object.setPrototypeOf(TemplateError.prototype, Error.prototype);
} else {
  cov_bylwlz088().b[15][1]++;
  cov_bylwlz088().s[60]++;
  TemplateError.prototype = Object.create(Error.prototype, {
    constructor: {
      value: TemplateError
    }
  });
}
cov_bylwlz088().s[61]++;
exports.TemplateError = TemplateError;
function escape(val) {
  cov_bylwlz088().f[9]++;
  cov_bylwlz088().s[62]++;
  return val.replace(escapeRegex, lookupEscape);
}
cov_bylwlz088().s[63]++;
exports.escape = escape;
function isFunction(obj) {
  cov_bylwlz088().f[10]++;
  cov_bylwlz088().s[64]++;
  return ObjProto.toString.call(obj) === '[object Function]';
}
cov_bylwlz088().s[65]++;
exports.isFunction = isFunction;
function isArray(obj) {
  cov_bylwlz088().f[11]++;
  cov_bylwlz088().s[66]++;
  return ObjProto.toString.call(obj) === '[object Array]';
}
cov_bylwlz088().s[67]++;
exports.isArray = isArray;
function isString(obj) {
  cov_bylwlz088().f[12]++;
  cov_bylwlz088().s[68]++;
  return ObjProto.toString.call(obj) === '[object String]';
}
cov_bylwlz088().s[69]++;
exports.isString = isString;
function isObject(obj) {
  cov_bylwlz088().f[13]++;
  cov_bylwlz088().s[70]++;
  return ObjProto.toString.call(obj) === '[object Object]';
}
cov_bylwlz088().s[71]++;
exports.isObject = isObject;

/**
 * @param {string|number} attr
 * @returns {(string|number)[]}
 * @private
 */
function _prepareAttributeParts(attr) {
  cov_bylwlz088().f[14]++;
  cov_bylwlz088().s[72]++;
  if (!attr) {
    cov_bylwlz088().b[16][0]++;
    cov_bylwlz088().s[73]++;
    return [];
  } else {
    cov_bylwlz088().b[16][1]++;
  }
  cov_bylwlz088().s[74]++;
  if (typeof attr === 'string') {
    cov_bylwlz088().b[17][0]++;
    cov_bylwlz088().s[75]++;
    return attr.split('.');
  } else {
    cov_bylwlz088().b[17][1]++;
  }
  cov_bylwlz088().s[76]++;
  return [attr];
}

/**
 * @param {string}   attribute      Attribute value. Dots allowed.
 * @returns {function(Object): *}
 */
function getAttrGetter(attribute) {
  cov_bylwlz088().f[15]++;
  const parts = (cov_bylwlz088().s[77]++, _prepareAttributeParts(attribute));
  cov_bylwlz088().s[78]++;
  return function attrGetter(item) {
    cov_bylwlz088().f[16]++;
    let _item = (cov_bylwlz088().s[79]++, item);
    cov_bylwlz088().s[80]++;
    for (let i = (cov_bylwlz088().s[81]++, 0); i < parts.length; i++) {
      const part = (cov_bylwlz088().s[82]++, parts[i]);

      // If item is not an object, and we still got parts to handle, it means
      // that something goes wrong. Just roll out to undefined in that case.
      cov_bylwlz088().s[83]++;
      if (hasOwnProp(_item, part)) {
        cov_bylwlz088().b[18][0]++;
        cov_bylwlz088().s[84]++;
        _item = _item[part];
      } else {
        cov_bylwlz088().b[18][1]++;
        cov_bylwlz088().s[85]++;
        return undefined;
      }
    }
    cov_bylwlz088().s[86]++;
    return _item;
  };
}
cov_bylwlz088().s[87]++;
exports.getAttrGetter = getAttrGetter;
function groupBy(obj, val, throwOnUndefined) {
  cov_bylwlz088().f[17]++;
  const result = (cov_bylwlz088().s[88]++, {});
  const iterator = (cov_bylwlz088().s[89]++, isFunction(val) ? (cov_bylwlz088().b[19][0]++, val) : (cov_bylwlz088().b[19][1]++, getAttrGetter(val)));
  cov_bylwlz088().s[90]++;
  for (let i = (cov_bylwlz088().s[91]++, 0); i < obj.length; i++) {
    const value = (cov_bylwlz088().s[92]++, obj[i]);
    const key = (cov_bylwlz088().s[93]++, iterator(value, i));
    cov_bylwlz088().s[94]++;
    if ((cov_bylwlz088().b[21][0]++, key === undefined) && (cov_bylwlz088().b[21][1]++, throwOnUndefined === true)) {
      cov_bylwlz088().b[20][0]++;
      cov_bylwlz088().s[95]++;
      throw new TypeError(`groupby: attribute "${val}" resolved to undefined`);
    } else {
      cov_bylwlz088().b[20][1]++;
    }
    cov_bylwlz088().s[96]++;
    ((cov_bylwlz088().b[22][0]++, result[key]) || (cov_bylwlz088().b[22][1]++, result[key] = [])).push(value);
  }
  cov_bylwlz088().s[97]++;
  return result;
}
cov_bylwlz088().s[98]++;
exports.groupBy = groupBy;
function toArray(obj) {
  cov_bylwlz088().f[18]++;
  cov_bylwlz088().s[99]++;
  return Array.prototype.slice.call(obj);
}
cov_bylwlz088().s[100]++;
exports.toArray = toArray;
function without(array) {
  cov_bylwlz088().f[19]++;
  const result = (cov_bylwlz088().s[101]++, []);
  cov_bylwlz088().s[102]++;
  if (!array) {
    cov_bylwlz088().b[23][0]++;
    cov_bylwlz088().s[103]++;
    return result;
  } else {
    cov_bylwlz088().b[23][1]++;
  }
  const length = (cov_bylwlz088().s[104]++, array.length);
  const contains = (cov_bylwlz088().s[105]++, toArray(arguments).slice(1));
  let index = (cov_bylwlz088().s[106]++, -1);
  cov_bylwlz088().s[107]++;
  while (++index < length) {
    cov_bylwlz088().s[108]++;
    if (indexOf(contains, array[index]) === -1) {
      cov_bylwlz088().b[24][0]++;
      cov_bylwlz088().s[109]++;
      result.push(array[index]);
    } else {
      cov_bylwlz088().b[24][1]++;
    }
  }
  cov_bylwlz088().s[110]++;
  return result;
}
cov_bylwlz088().s[111]++;
exports.without = without;
function repeat(char_, n) {
  cov_bylwlz088().f[20]++;
  var str = (cov_bylwlz088().s[112]++, '');
  cov_bylwlz088().s[113]++;
  for (let i = (cov_bylwlz088().s[114]++, 0); i < n; i++) {
    cov_bylwlz088().s[115]++;
    str += char_;
  }
  cov_bylwlz088().s[116]++;
  return str;
}
cov_bylwlz088().s[117]++;
exports.repeat = repeat;
function each(obj, func, context) {
  cov_bylwlz088().f[21]++;
  cov_bylwlz088().s[118]++;
  if (obj == null) {
    cov_bylwlz088().b[25][0]++;
    cov_bylwlz088().s[119]++;
    return;
  } else {
    cov_bylwlz088().b[25][1]++;
  }
  cov_bylwlz088().s[120]++;
  if ((cov_bylwlz088().b[27][0]++, ArrayProto.forEach) && (cov_bylwlz088().b[27][1]++, obj.forEach === ArrayProto.forEach)) {
    cov_bylwlz088().b[26][0]++;
    cov_bylwlz088().s[121]++;
    obj.forEach(func, context);
  } else {
    cov_bylwlz088().b[26][1]++;
    cov_bylwlz088().s[122]++;
    if (obj.length === +obj.length) {
      cov_bylwlz088().b[28][0]++;
      cov_bylwlz088().s[123]++;
      for (let i = (cov_bylwlz088().s[124]++, 0), l = (cov_bylwlz088().s[125]++, obj.length); i < l; i++) {
        cov_bylwlz088().s[126]++;
        func.call(context, obj[i], i, obj);
      }
    } else {
      cov_bylwlz088().b[28][1]++;
    }
  }
}
cov_bylwlz088().s[127]++;
exports.each = each;
function map(obj, func) {
  cov_bylwlz088().f[22]++;
  var results = (cov_bylwlz088().s[128]++, []);
  cov_bylwlz088().s[129]++;
  if (obj == null) {
    cov_bylwlz088().b[29][0]++;
    cov_bylwlz088().s[130]++;
    return results;
  } else {
    cov_bylwlz088().b[29][1]++;
  }
  cov_bylwlz088().s[131]++;
  if ((cov_bylwlz088().b[31][0]++, ArrayProto.map) && (cov_bylwlz088().b[31][1]++, obj.map === ArrayProto.map)) {
    cov_bylwlz088().b[30][0]++;
    cov_bylwlz088().s[132]++;
    return obj.map(func);
  } else {
    cov_bylwlz088().b[30][1]++;
  }
  cov_bylwlz088().s[133]++;
  for (let i = (cov_bylwlz088().s[134]++, 0); i < obj.length; i++) {
    cov_bylwlz088().s[135]++;
    results[results.length] = func(obj[i], i);
  }
  cov_bylwlz088().s[136]++;
  if (obj.length === +obj.length) {
    cov_bylwlz088().b[32][0]++;
    cov_bylwlz088().s[137]++;
    results.length = obj.length;
  } else {
    cov_bylwlz088().b[32][1]++;
  }
  cov_bylwlz088().s[138]++;
  return results;
}
cov_bylwlz088().s[139]++;
exports.map = map;
function asyncIter(arr, iter, cb) {
  cov_bylwlz088().f[23]++;
  let i = (cov_bylwlz088().s[140]++, -1);
  function next() {
    cov_bylwlz088().f[24]++;
    cov_bylwlz088().s[141]++;
    i++;
    cov_bylwlz088().s[142]++;
    if (i < arr.length) {
      cov_bylwlz088().b[33][0]++;
      cov_bylwlz088().s[143]++;
      iter(arr[i], i, next, cb);
    } else {
      cov_bylwlz088().b[33][1]++;
      cov_bylwlz088().s[144]++;
      cb();
    }
  }
  cov_bylwlz088().s[145]++;
  next();
}
cov_bylwlz088().s[146]++;
exports.asyncIter = asyncIter;
function asyncFor(obj, iter, cb) {
  cov_bylwlz088().f[25]++;
  const keys = (cov_bylwlz088().s[147]++, keys_((cov_bylwlz088().b[34][0]++, obj) || (cov_bylwlz088().b[34][1]++, {})));
  const len = (cov_bylwlz088().s[148]++, keys.length);
  let i = (cov_bylwlz088().s[149]++, -1);
  function next() {
    cov_bylwlz088().f[26]++;
    cov_bylwlz088().s[150]++;
    i++;
    const k = (cov_bylwlz088().s[151]++, keys[i]);
    cov_bylwlz088().s[152]++;
    if (i < len) {
      cov_bylwlz088().b[35][0]++;
      cov_bylwlz088().s[153]++;
      iter(k, obj[k], i, len, next);
    } else {
      cov_bylwlz088().b[35][1]++;
      cov_bylwlz088().s[154]++;
      cb();
    }
  }
  cov_bylwlz088().s[155]++;
  next();
}
cov_bylwlz088().s[156]++;
exports.asyncFor = asyncFor;
function indexOf(arr, searchElement, fromIndex) {
  cov_bylwlz088().f[27]++;
  cov_bylwlz088().s[157]++;
  return Array.prototype.indexOf.call((cov_bylwlz088().b[36][0]++, arr) || (cov_bylwlz088().b[36][1]++, []), searchElement, fromIndex);
}
cov_bylwlz088().s[158]++;
exports.indexOf = indexOf;
function keys_(obj) {
  cov_bylwlz088().f[28]++;
  /* eslint-disable no-restricted-syntax */
  const arr = (cov_bylwlz088().s[159]++, []);
  cov_bylwlz088().s[160]++;
  for (let k in obj) {
    cov_bylwlz088().s[161]++;
    if (hasOwnProp(obj, k)) {
      cov_bylwlz088().b[37][0]++;
      cov_bylwlz088().s[162]++;
      arr.push(k);
    } else {
      cov_bylwlz088().b[37][1]++;
    }
  }
  cov_bylwlz088().s[163]++;
  return arr;
}
cov_bylwlz088().s[164]++;
exports.keys = keys_;
function _entries(obj) {
  cov_bylwlz088().f[29]++;
  cov_bylwlz088().s[165]++;
  return keys_(obj).map(k => {
    cov_bylwlz088().f[30]++;
    cov_bylwlz088().s[166]++;
    return [k, obj[k]];
  });
}
cov_bylwlz088().s[167]++;
exports._entries = _entries;
function _values(obj) {
  cov_bylwlz088().f[31]++;
  cov_bylwlz088().s[168]++;
  return keys_(obj).map(k => {
    cov_bylwlz088().f[32]++;
    cov_bylwlz088().s[169]++;
    return obj[k];
  });
}
cov_bylwlz088().s[170]++;
exports._values = _values;
function extend(obj1, obj2) {
  cov_bylwlz088().f[33]++;
  cov_bylwlz088().s[171]++;
  obj1 = (cov_bylwlz088().b[38][0]++, obj1) || (cov_bylwlz088().b[38][1]++, {});
  cov_bylwlz088().s[172]++;
  keys_(obj2).forEach(k => {
    cov_bylwlz088().f[34]++;
    cov_bylwlz088().s[173]++;
    obj1[k] = obj2[k];
  });
  cov_bylwlz088().s[174]++;
  return obj1;
}
cov_bylwlz088().s[175]++;
exports._assign = exports.extend = extend;
function inOperator(key, val) {
  cov_bylwlz088().f[35]++;
  cov_bylwlz088().s[176]++;
  if ((cov_bylwlz088().b[40][0]++, isArray(val)) || (cov_bylwlz088().b[40][1]++, isString(val))) {
    cov_bylwlz088().b[39][0]++;
    cov_bylwlz088().s[177]++;
    return val.indexOf(key) !== -1;
  } else {
    cov_bylwlz088().b[39][1]++;
    cov_bylwlz088().s[178]++;
    if (isObject(val)) {
      cov_bylwlz088().b[41][0]++;
      cov_bylwlz088().s[179]++;
      return key in val;
    } else {
      cov_bylwlz088().b[41][1]++;
    }
  }
  cov_bylwlz088().s[180]++;
  throw new Error('Cannot use "in" operator to search for "' + key + '" in unexpected types.');
}
cov_bylwlz088().s[181]++;
exports.inOperator = inOperator;

/***/ }),

/***/ 7491:
/*!********************************!*\
  !*** ./nunjucks/src/loader.js ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function cov_15v0gdir9a() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\loader.js";
  var hash = "cb770ecab2c4494b474d29a3e3cbe45987d07f75";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\loader.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 13
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "1": {
        start: {
          line: 4,
          column: 21
        },
        end: {
          line: 4,
          column: 40
        }
      },
      "2": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 14,
          column: 2
        }
      },
      "3": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 75
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 2
          },
          end: {
            line: 7,
            column: 3
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 3
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 11,
            column: 3
          }
        },
        loc: {
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 13,
            column: 3
          }
        },
        line: 11
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 40
          }
        }, {
          start: {
            line: 12,
            column: 44
          },
          end: {
            line: 12,
            column: 73
          }
        }],
        line: 12
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cb770ecab2c4494b474d29a3e3cbe45987d07f75"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_15v0gdir9a = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_15v0gdir9a();
const path = (cov_15v0gdir9a().s[0]++, __webpack_require__(/*! path */ 7975));
const {
  EmitterObj
} = (cov_15v0gdir9a().s[1]++, __webpack_require__(/*! ./object */ 891));
cov_15v0gdir9a().s[2]++;
module.exports = class Loader extends EmitterObj {
  resolve(from, to) {
    cov_15v0gdir9a().f[0]++;
    cov_15v0gdir9a().s[3]++;
    return path.resolve(path.dirname(from), to);
  }
  isRelative(filename) {
    cov_15v0gdir9a().f[1]++;
    cov_15v0gdir9a().s[4]++;
    return (cov_15v0gdir9a().b[0][0]++, filename.indexOf('./') === 0) || (cov_15v0gdir9a().b[0][1]++, filename.indexOf('../') === 0);
  }
};

/***/ }),

/***/ 7494:
/*!*********************************!*\
  !*** ./nunjucks/src/loaders.js ***!
  \*********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

function cov_120bi6rlby() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\loaders.js";
  var hash = "ceabeab8dedd2e5fe5f2c28e558515e7dcbe8563";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\loaders.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 43
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ceabeab8dedd2e5fe5f2c28e558515e7dcbe8563"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_120bi6rlby = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_120bi6rlby();
cov_120bi6rlby().s[0]++;
// This file will automatically be rewired to web-loader.js when
// building for the browser
module.exports = __webpack_require__(/*! ./node-loaders */ 5257);

/***/ }),

/***/ 5257:
/*!**************************************!*\
  !*** ./nunjucks/src/node-loaders.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* eslint-disable no-console */



function cov_11r3pzihnm() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\node-loaders.js";
  var hash = "23f64e021586f3c344c19260662e5043904c4cd2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\node-loaders.js",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 11
        },
        end: {
          line: 5,
          column: 24
        }
      },
      "1": {
        start: {
          line: 6,
          column: 13
        },
        end: {
          line: 6,
          column: 28
        }
      },
      "2": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 34
        }
      },
      "3": {
        start: {
          line: 8,
          column: 28
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "4": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 12
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "6": {
        start: {
          line: 15,
          column: 6
        },
        end: {
          line: 19,
          column: 8
        }
      },
      "7": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 22
        }
      },
      "8": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 27
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 34
        }
      },
      "10": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "11": {
        start: {
          line: 27,
          column: 6
        },
        end: {
          line: 27,
          column: 77
        }
      },
      "12": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 29,
          column: 57
        }
      },
      "13": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 31,
          column: 31
        }
      },
      "14": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "15": {
        start: {
          line: 37,
          column: 6
        },
        end: {
          line: 41,
          column: 7
        }
      },
      "16": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 39
        }
      },
      "17": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 67
        }
      },
      "18": {
        start: {
          line: 42,
          column: 20
        },
        end: {
          line: 42,
          column: 58
        }
      },
      "19": {
        start: {
          line: 43,
          column: 22
        },
        end: {
          line: 43,
          column: 43
        }
      },
      "20": {
        start: {
          line: 44,
          column: 6
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "21": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 42
        }
      },
      "22": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "23": {
        start: {
          line: 47,
          column: 10
        },
        end: {
          line: 47,
          column: 69
        }
      },
      "24": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "25": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 47
        }
      },
      "26": {
        start: {
          line: 57,
          column: 19
        },
        end: {
          line: 57,
          column: 23
        }
      },
      "27": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 32
        }
      },
      "28": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "29": {
        start: {
          line: 60,
          column: 17
        },
        end: {
          line: 60,
          column: 18
        }
      },
      "30": {
        start: {
          line: 61,
          column: 23
        },
        end: {
          line: 61,
          column: 45
        }
      },
      "31": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 44
        }
      },
      "32": {
        start: {
          line: 66,
          column: 6
        },
        end: {
          line: 69,
          column: 7
        }
      },
      "33": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 21
        }
      },
      "34": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 14
        }
      },
      "35": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "36": {
        start: {
          line: 73,
          column: 6
        },
        end: {
          line: 73,
          column: 18
        }
      },
      "37": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 39
        }
      },
      "38": {
        start: {
          line: 78,
          column: 19
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "39": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 36
        }
      },
      "40": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 18
        }
      },
      "41": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 90,
          column: 12
        }
      },
      "42": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 91,
          column: 22
        }
      },
      "43": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 27
        }
      },
      "44": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 34
        }
      },
      "45": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "46": {
        start: {
          line: 96,
          column: 6
        },
        end: {
          line: 100,
          column: 7
        }
      },
      "47": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 39
        }
      },
      "48": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 67
        }
      },
      "49": {
        start: {
          line: 101,
          column: 6
        },
        end: {
          line: 101,
          column: 38
        }
      },
      "50": {
        start: {
          line: 103,
          column: 6
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "51": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 67
        }
      },
      "52": {
        start: {
          line: 106,
          column: 6
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "53": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 47
        }
      },
      "54": {
        start: {
          line: 110,
          column: 6
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "55": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 38
        }
      },
      "56": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "57": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 119,
          column: 18
        }
      },
      "58": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "59": {
        start: {
          line: 122,
          column: 6
        },
        end: {
          line: 122,
          column: 18
        }
      },
      "60": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 131,
          column: 5
        }
      },
      "61": {
        start: {
          line: 128,
          column: 6
        },
        end: {
          line: 128,
          column: 39
        }
      },
      "62": {
        start: {
          line: 130,
          column: 6
        },
        end: {
          line: 130,
          column: 18
        }
      },
      "63": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 133,
          column: 39
        }
      },
      "64": {
        start: {
          line: 135,
          column: 19
        },
        end: {
          line: 139,
          column: 5
        }
      },
      "65": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 141,
          column: 36
        }
      },
      "66": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 142,
          column: 18
        }
      },
      "67": {
        start: {
          line: 146,
          column: 0
        },
        end: {
          line: 150,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 2
          },
          end: {
            line: 12,
            column: 3
          }
        },
        loc: {
          start: {
            line: 12,
            column: 33
          },
          end: {
            line: 54,
            column: 3
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 44,
            column: 24
          },
          end: {
            line: 44,
            column: 25
          }
        },
        loc: {
          start: {
            line: 44,
            column: 45
          },
          end: {
            line: 49,
            column: 7
          }
        },
        line: 44
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 50,
            column: 26
          },
          end: {
            line: 50,
            column: 27
          }
        },
        loc: {
          start: {
            line: 50,
            column: 37
          },
          end: {
            line: 52,
            column: 7
          }
        },
        line: 50
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 56,
            column: 2
          },
          end: {
            line: 56,
            column: 3
          }
        },
        loc: {
          start: {
            line: 56,
            column: 18
          },
          end: {
            line: 85,
            column: 3
          }
        },
        line: 56
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 89,
            column: 2
          },
          end: {
            line: 89,
            column: 3
          }
        },
        loc: {
          start: {
            line: 89,
            column: 20
          },
          end: {
            line: 114,
            column: 3
          }
        },
        line: 89
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 103,
            column: 32
          },
          end: {
            line: 103,
            column: 33
          }
        },
        loc: {
          start: {
            line: 103,
            column: 46
          },
          end: {
            line: 105,
            column: 7
          }
        },
        line: 103
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 106,
            column: 31
          },
          end: {
            line: 106,
            column: 32
          }
        },
        loc: {
          start: {
            line: 106,
            column: 42
          },
          end: {
            line: 108,
            column: 7
          }
        },
        line: 106
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 110,
            column: 22
          },
          end: {
            line: 110,
            column: 23
          }
        },
        loc: {
          start: {
            line: 110,
            column: 40
          },
          end: {
            line: 112,
            column: 7
          }
        },
        line: 110
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 116,
            column: 2
          },
          end: {
            line: 116,
            column: 3
          }
        },
        loc: {
          start: {
            line: 116,
            column: 18
          },
          end: {
            line: 143,
            column: 3
          }
        },
        line: 116
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 22,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 22,
            column: 15
          }
        }, {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 22,
            column: 21
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: 30,
            column: 11
          },
          end: {
            line: 32,
            column: 5
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 20
          },
          end: {
            line: 27,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 49
          },
          end: {
            line: 27,
            column: 60
          }
        }, {
          start: {
            line: 27,
            column: 63
          },
          end: {
            line: 27,
            column: 76
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "5": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "6": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 30
          }
        }, {
          start: {
            line: 46,
            column: 34
          },
          end: {
            line: 46,
            column: 63
          }
        }],
        line: 46
      },
      "7": {
        loc: {
          start: {
            line: 66,
            column: 6
          },
          end: {
            line: 69,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 6
          },
          end: {
            line: 69,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "8": {
        loc: {
          start: {
            line: 66,
            column: 10
          },
          end: {
            line: 66,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 10
          },
          end: {
            line: 66,
            column: 35
          }
        }, {
          start: {
            line: 66,
            column: 39
          },
          end: {
            line: 66,
            column: 55
          }
        }],
        line: 66
      },
      "9": {
        loc: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "10": {
        loc: {
          start: {
            line: 91,
            column: 11
          },
          end: {
            line: 91,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 11
          },
          end: {
            line: 91,
            column: 15
          }
        }, {
          start: {
            line: 91,
            column: 19
          },
          end: {
            line: 91,
            column: 21
          }
        }],
        line: 91
      },
      "11": {
        loc: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "12": {
        loc: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "13": {
        loc: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "23f64e021586f3c344c19260662e5043904c4cd2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_11r3pzihnm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_11r3pzihnm();
const fs = (cov_11r3pzihnm().s[0]++, __webpack_require__(/*! fs */ 231));
const path = (cov_11r3pzihnm().s[1]++, __webpack_require__(/*! path */ 7975));
const Loader = (cov_11r3pzihnm().s[2]++, __webpack_require__(/*! ./loader */ 7491));
const {
  PrecompiledLoader
} = (cov_11r3pzihnm().s[3]++, __webpack_require__(/*! ./precompiled-loader.js */ 2742));
let chokidar;
class FileSystemLoader extends Loader {
  constructor(searchPaths, opts) {
    cov_11r3pzihnm().f[0]++;
    cov_11r3pzihnm().s[4]++;
    super();
    cov_11r3pzihnm().s[5]++;
    if (typeof opts === 'boolean') {
      cov_11r3pzihnm().b[0][0]++;
      cov_11r3pzihnm().s[6]++;
      console.log('[nunjucks] Warning: you passed a boolean as the second ' + 'argument to FileSystemLoader, but it now takes an options ' + 'object. See http://mozilla.github.io/nunjucks/api.html#filesystemloader');
    } else {
      cov_11r3pzihnm().b[0][1]++;
    }
    cov_11r3pzihnm().s[7]++;
    opts = (cov_11r3pzihnm().b[1][0]++, opts) || (cov_11r3pzihnm().b[1][1]++, {});
    cov_11r3pzihnm().s[8]++;
    this.pathsToNames = {};
    cov_11r3pzihnm().s[9]++;
    this.noCache = !!opts.noCache;
    cov_11r3pzihnm().s[10]++;
    if (searchPaths) {
      cov_11r3pzihnm().b[2][0]++;
      cov_11r3pzihnm().s[11]++;
      searchPaths = Array.isArray(searchPaths) ? (cov_11r3pzihnm().b[3][0]++, searchPaths) : (cov_11r3pzihnm().b[3][1]++, [searchPaths]);
      // For windows, convert to forward slashes
      cov_11r3pzihnm().s[12]++;
      this.searchPaths = searchPaths.map(path.normalize);
    } else {
      cov_11r3pzihnm().b[2][1]++;
      cov_11r3pzihnm().s[13]++;
      this.searchPaths = ['.'];
    }
    cov_11r3pzihnm().s[14]++;
    if (opts.watch) {
      cov_11r3pzihnm().b[4][0]++;
      cov_11r3pzihnm().s[15]++;
      // Watch all the templates in the paths and fire an event when
      // they change
      try {
        cov_11r3pzihnm().s[16]++;
        chokidar = __webpack_require__(/*! chokidar */ 158); // eslint-disable-line global-require
      } catch (e) {
        cov_11r3pzihnm().s[17]++;
        throw new Error('watch requires chokidar to be installed');
      }
      const paths = (cov_11r3pzihnm().s[18]++, this.searchPaths.filter(fs.existsSync));
      const watcher = (cov_11r3pzihnm().s[19]++, chokidar.watch(paths));
      cov_11r3pzihnm().s[20]++;
      watcher.on('all', (event, fullname) => {
        cov_11r3pzihnm().f[1]++;
        cov_11r3pzihnm().s[21]++;
        fullname = path.resolve(fullname);
        cov_11r3pzihnm().s[22]++;
        if ((cov_11r3pzihnm().b[6][0]++, event === 'change') && (cov_11r3pzihnm().b[6][1]++, fullname in this.pathsToNames)) {
          cov_11r3pzihnm().b[5][0]++;
          cov_11r3pzihnm().s[23]++;
          this.emit('update', this.pathsToNames[fullname], fullname);
        } else {
          cov_11r3pzihnm().b[5][1]++;
        }
      });
      cov_11r3pzihnm().s[24]++;
      watcher.on('error', error => {
        cov_11r3pzihnm().f[2]++;
        cov_11r3pzihnm().s[25]++;
        console.log('Watcher error: ' + error);
      });
    } else {
      cov_11r3pzihnm().b[4][1]++;
    }
  }
  getSource(name) {
    cov_11r3pzihnm().f[3]++;
    var fullpath = (cov_11r3pzihnm().s[26]++, null);
    var paths = (cov_11r3pzihnm().s[27]++, this.searchPaths);
    cov_11r3pzihnm().s[28]++;
    for (let i = (cov_11r3pzihnm().s[29]++, 0); i < paths.length; i++) {
      const basePath = (cov_11r3pzihnm().s[30]++, path.resolve(paths[i]));
      const p = (cov_11r3pzihnm().s[31]++, path.resolve(paths[i], name));

      // Only allow the current directory and anything
      // underneath it to be searched
      cov_11r3pzihnm().s[32]++;
      if ((cov_11r3pzihnm().b[8][0]++, p.indexOf(basePath) === 0) && (cov_11r3pzihnm().b[8][1]++, fs.existsSync(p))) {
        cov_11r3pzihnm().b[7][0]++;
        cov_11r3pzihnm().s[33]++;
        fullpath = p;
        cov_11r3pzihnm().s[34]++;
        break;
      } else {
        cov_11r3pzihnm().b[7][1]++;
      }
    }
    cov_11r3pzihnm().s[35]++;
    if (!fullpath) {
      cov_11r3pzihnm().b[9][0]++;
      cov_11r3pzihnm().s[36]++;
      return null;
    } else {
      cov_11r3pzihnm().b[9][1]++;
    }
    cov_11r3pzihnm().s[37]++;
    this.pathsToNames[fullpath] = name;
    const source = (cov_11r3pzihnm().s[38]++, {
      src: fs.readFileSync(fullpath, 'utf-8'),
      path: fullpath,
      noCache: this.noCache
    });
    cov_11r3pzihnm().s[39]++;
    this.emit('load', name, source);
    cov_11r3pzihnm().s[40]++;
    return source;
  }
}
class NodeResolveLoader extends Loader {
  constructor(opts) {
    cov_11r3pzihnm().f[4]++;
    cov_11r3pzihnm().s[41]++;
    super();
    cov_11r3pzihnm().s[42]++;
    opts = (cov_11r3pzihnm().b[10][0]++, opts) || (cov_11r3pzihnm().b[10][1]++, {});
    cov_11r3pzihnm().s[43]++;
    this.pathsToNames = {};
    cov_11r3pzihnm().s[44]++;
    this.noCache = !!opts.noCache;
    cov_11r3pzihnm().s[45]++;
    if (opts.watch) {
      cov_11r3pzihnm().b[11][0]++;
      cov_11r3pzihnm().s[46]++;
      try {
        cov_11r3pzihnm().s[47]++;
        chokidar = __webpack_require__(/*! chokidar */ 158); // eslint-disable-line global-require
      } catch (e) {
        cov_11r3pzihnm().s[48]++;
        throw new Error('watch requires chokidar to be installed');
      }
      cov_11r3pzihnm().s[49]++;
      this.watcher = chokidar.watch();
      cov_11r3pzihnm().s[50]++;
      this.watcher.on('change', fullname => {
        cov_11r3pzihnm().f[5]++;
        cov_11r3pzihnm().s[51]++;
        this.emit('update', this.pathsToNames[fullname], fullname);
      });
      cov_11r3pzihnm().s[52]++;
      this.watcher.on('error', error => {
        cov_11r3pzihnm().f[6]++;
        cov_11r3pzihnm().s[53]++;
        console.log('Watcher error: ' + error);
      });
      cov_11r3pzihnm().s[54]++;
      this.on('load', (name, source) => {
        cov_11r3pzihnm().f[7]++;
        cov_11r3pzihnm().s[55]++;
        this.watcher.add(source.path);
      });
    } else {
      cov_11r3pzihnm().b[11][1]++;
    }
  }
  getSource(name) {
    cov_11r3pzihnm().f[8]++;
    cov_11r3pzihnm().s[56]++;
    // Don't allow file-system traversal
    if (/^\.?\.?(\/|\\)/.test(name)) {
      cov_11r3pzihnm().b[12][0]++;
      cov_11r3pzihnm().s[57]++;
      return null;
    } else {
      cov_11r3pzihnm().b[12][1]++;
    }
    cov_11r3pzihnm().s[58]++;
    if (/^[A-Z]:/.test(name)) {
      cov_11r3pzihnm().b[13][0]++;
      cov_11r3pzihnm().s[59]++;
      return null;
    } else {
      cov_11r3pzihnm().b[13][1]++;
    }
    let fullpath;
    cov_11r3pzihnm().s[60]++;
    try {
      cov_11r3pzihnm().s[61]++;
      fullpath = /*require.resolve*/(__webpack_require__(4841).resolve(name));
    } catch (e) {
      cov_11r3pzihnm().s[62]++;
      return null;
    }
    cov_11r3pzihnm().s[63]++;
    this.pathsToNames[fullpath] = name;
    const source = (cov_11r3pzihnm().s[64]++, {
      src: fs.readFileSync(fullpath, 'utf-8'),
      path: fullpath,
      noCache: this.noCache
    });
    cov_11r3pzihnm().s[65]++;
    this.emit('load', name, source);
    cov_11r3pzihnm().s[66]++;
    return source;
  }
}
cov_11r3pzihnm().s[67]++;
module.exports = {
  FileSystemLoader: FileSystemLoader,
  PrecompiledLoader: PrecompiledLoader,
  NodeResolveLoader: NodeResolveLoader
};

/***/ }),

/***/ 8883:
/*!*******************************!*\
  !*** ./nunjucks/src/nodes.js ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function cov_21kdm5hbv4() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\nodes.js";
  var hash = "4473b22238fe6fb103581fadddf8c1f1c2ee63e5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\nodes.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 14
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "1": {
        start: {
          line: 6,
          column: 2
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "2": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 22
        }
      },
      "3": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "4": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 31
        }
      },
      "5": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 25
        }
      },
      "6": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 23
        }
      },
      "7": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 31,
          column: 7
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 32
        }
      },
      "9": {
        start: {
          line: 26,
          column: 6
        },
        end: {
          line: 28,
          column: 7
        }
      },
      "10": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 19
        }
      },
      "11": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 30,
          column: 24
        }
      },
      "12": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 28
        }
      },
      "13": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "14": {
        start: {
          line: 38,
          column: 6
        },
        end: {
          line: 38,
          column: 77
        }
      },
      "15": {
        start: {
          line: 38,
          column: 37
        },
        end: {
          line: 38,
          column: 75
        }
      },
      "16": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 40,
          column: 81
        }
      },
      "17": {
        start: {
          line: 40,
          column: 35
        },
        end: {
          line: 40,
          column: 79
        }
      },
      "18": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 19
        }
      },
      "19": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 49,
          column: 7
        }
      },
      "20": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 48,
          column: 31
        }
      },
      "21": {
        start: {
          line: 55,
          column: 19
        },
        end: {
          line: 55,
          column: 34
        }
      },
      "22": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 21
        }
      },
      "23": {
        start: {
          line: 63,
          column: 19
        },
        end: {
          line: 63,
          column: 37
        }
      },
      "24": {
        start: {
          line: 64,
          column: 17
        },
        end: {
          line: 64,
          column: 37
        }
      },
      "25": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 43
        }
      },
      "26": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 29
        }
      },
      "27": {
        start: {
          line: 75,
          column: 13
        },
        end: {
          line: 75,
          column: 36
        }
      },
      "28": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 39
        }
      },
      "29": {
        start: {
          line: 77,
          column: 15
        },
        end: {
          line: 77,
          column: 37
        }
      },
      "30": {
        start: {
          line: 78,
          column: 14
        },
        end: {
          line: 78,
          column: 38
        }
      },
      "31": {
        start: {
          line: 79,
          column: 18
        },
        end: {
          line: 79,
          column: 42
        }
      },
      "32": {
        start: {
          line: 80,
          column: 13
        },
        end: {
          line: 80,
          column: 62
        }
      },
      "33": {
        start: {
          line: 81,
          column: 13
        },
        end: {
          line: 81,
          column: 36
        }
      },
      "34": {
        start: {
          line: 82,
          column: 18
        },
        end: {
          line: 82,
          column: 73
        }
      },
      "35": {
        start: {
          line: 83,
          column: 11
        },
        end: {
          line: 83,
          column: 67
        }
      },
      "36": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 84,
          column: 36
        }
      },
      "37": {
        start: {
          line: 85,
          column: 17
        },
        end: {
          line: 85,
          column: 79
        }
      },
      "38": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 76
        }
      },
      "39": {
        start: {
          line: 87,
          column: 18
        },
        end: {
          line: 87,
          column: 41
        }
      },
      "40": {
        start: {
          line: 88,
          column: 17
        },
        end: {
          line: 88,
          column: 39
        }
      },
      "41": {
        start: {
          line: 89,
          column: 14
        },
        end: {
          line: 89,
          column: 72
        }
      },
      "42": {
        start: {
          line: 90,
          column: 15
        },
        end: {
          line: 90,
          column: 37
        }
      },
      "43": {
        start: {
          line: 91,
          column: 15
        },
        end: {
          line: 91,
          column: 87
        }
      },
      "44": {
        start: {
          line: 94,
          column: 19
        },
        end: {
          line: 94,
          column: 39
        }
      },
      "45": {
        start: {
          line: 95,
          column: 17
        },
        end: {
          line: 95,
          column: 61
        }
      },
      "46": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 78
        }
      },
      "47": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 68
        }
      },
      "48": {
        start: {
          line: 103,
          column: 15
        },
        end: {
          line: 103,
          column: 39
        }
      },
      "49": {
        start: {
          line: 104,
          column: 20
        },
        end: {
          line: 104,
          column: 88
        }
      },
      "50": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 105,
          column: 46
        }
      },
      "51": {
        start: {
          line: 106,
          column: 14
        },
        end: {
          line: 106,
          column: 64
        }
      },
      "52": {
        start: {
          line: 107,
          column: 14
        },
        end: {
          line: 107,
          column: 71
        }
      },
      "53": {
        start: {
          line: 108,
          column: 20
        },
        end: {
          line: 108,
          column: 72
        }
      },
      "54": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 45
        }
      },
      "55": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 81
        }
      },
      "56": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 64
        }
      },
      "57": {
        start: {
          line: 112,
          column: 15
        },
        end: {
          line: 112,
          column: 78
        }
      },
      "58": {
        start: {
          line: 113,
          column: 13
        },
        end: {
          line: 113,
          column: 62
        }
      },
      "59": {
        start: {
          line: 114,
          column: 15
        },
        end: {
          line: 114,
          column: 40
        }
      },
      "60": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 115,
          column: 60
        }
      },
      "61": {
        start: {
          line: 116,
          column: 21
        },
        end: {
          line: 116,
          column: 51
        }
      },
      "62": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 62
        }
      },
      "63": {
        start: {
          line: 118,
          column: 14
        },
        end: {
          line: 118,
          column: 65
        }
      },
      "64": {
        start: {
          line: 119,
          column: 11
        },
        end: {
          line: 119,
          column: 29
        }
      },
      "65": {
        start: {
          line: 120,
          column: 11
        },
        end: {
          line: 120,
          column: 29
        }
      },
      "66": {
        start: {
          line: 121,
          column: 11
        },
        end: {
          line: 121,
          column: 29
        }
      },
      "67": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 31
        }
      },
      "68": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 33
        }
      },
      "69": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 31
        }
      },
      "70": {
        start: {
          line: 125,
          column: 15
        },
        end: {
          line: 125,
          column: 37
        }
      },
      "71": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 31
        }
      },
      "72": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 31
        }
      },
      "73": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 31
        }
      },
      "74": {
        start: {
          line: 129,
          column: 17
        },
        end: {
          line: 129,
          column: 41
        }
      },
      "75": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 31
        }
      },
      "76": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 31
        }
      },
      "77": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 33
        }
      },
      "78": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 33
        }
      },
      "79": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 67
        }
      },
      "80": {
        start: {
          line: 135,
          column: 23
        },
        end: {
          line: 135,
          column: 82
        }
      },
      "81": {
        start: {
          line: 136,
          column: 22
        },
        end: {
          line: 146,
          column: 2
        }
      },
      "82": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 138,
          column: 18
        }
      },
      "83": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 139,
          column: 37
        }
      },
      "84": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 140,
          column: 21
        }
      },
      "85": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 141,
          column: 39
        }
      },
      "86": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 142,
          column: 41
        }
      },
      "87": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 143,
          column: 37
        }
      },
      "88": {
        start: {
          line: 147,
          column: 27
        },
        end: {
          line: 147,
          column: 69
        }
      },
      "89": {
        start: {
          line: 151,
          column: 14
        },
        end: {
          line: 151,
          column: 29
        }
      },
      "90": {
        start: {
          line: 153,
          column: 2
        },
        end: {
          line: 159,
          column: 5
        }
      },
      "91": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 156,
          column: 5
        }
      },
      "92": {
        start: {
          line: 155,
          column: 6
        },
        end: {
          line: 155,
          column: 49
        }
      },
      "93": {
        start: {
          line: 157,
          column: 15
        },
        end: {
          line: 157,
          column: 51
        }
      },
      "94": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 158,
          column: 41
        }
      },
      "95": {
        start: {
          line: 164,
          column: 2
        },
        end: {
          line: 164,
          column: 23
        }
      },
      "96": {
        start: {
          line: 166,
          column: 2
        },
        end: {
          line: 166,
          column: 38
        }
      },
      "97": {
        start: {
          line: 168,
          column: 2
        },
        end: {
          line: 208,
          column: 3
        }
      },
      "98": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 169,
          column: 16
        }
      },
      "99": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 172,
          column: 7
        }
      },
      "100": {
        start: {
          line: 171,
          column: 6
        },
        end: {
          line: 171,
          column: 32
        }
      },
      "101": {
        start: {
          line: 173,
          column: 9
        },
        end: {
          line: 208,
          column: 3
        }
      },
      "102": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 174,
          column: 44
        }
      },
      "103": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "104": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 177,
          column: 40
        }
      },
      "105": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 184,
          column: 5
        }
      },
      "106": {
        start: {
          line: 181,
          column: 6
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "107": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 34
        }
      },
      "108": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 18
        }
      },
      "109": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 20
        }
      },
      "110": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 196,
          column: 7
        }
      },
      "111": {
        start: {
          line: 190,
          column: 6
        },
        end: {
          line: 195,
          column: 7
        }
      },
      "112": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 37
        }
      },
      "113": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 28
        }
      },
      "114": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 31
        }
      },
      "115": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 202,
          column: 5
        }
      },
      "116": {
        start: {
          line: 199,
          column: 6
        },
        end: {
          line: 199,
          column: 63
        }
      },
      "117": {
        start: {
          line: 201,
          column: 6
        },
        end: {
          line: 201,
          column: 18
        }
      },
      "118": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 207,
          column: 7
        }
      },
      "119": {
        start: {
          line: 205,
          column: 6
        },
        end: {
          line: 205,
          column: 45
        }
      },
      "120": {
        start: {
          line: 206,
          column: 6
        },
        end: {
          line: 206,
          column: 32
        }
      },
      "121": {
        start: {
          line: 211,
          column: 0
        },
        end: {
          line: 270,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "traverseAndCheck",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 25
          }
        },
        loc: {
          start: {
            line: 5,
            column: 46
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 16,
            column: 3
          }
        },
        loc: {
          start: {
            line: 16,
            column: 31
          },
          end: {
            line: 32,
            column: 3
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 24
          },
          end: {
            line: 20,
            column: 25
          }
        },
        loc: {
          start: {
            line: 20,
            column: 38
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 34,
            column: 2
          },
          end: {
            line: 34,
            column: 3
          }
        },
        loc: {
          start: {
            line: 34,
            column: 25
          },
          end: {
            line: 44,
            column: 3
          }
        },
        line: 34
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 28
          },
          end: {
            line: 38,
            column: 29
          }
        },
        loc: {
          start: {
            line: 38,
            column: 37
          },
          end: {
            line: 38,
            column: 75
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 40,
            column: 26
          },
          end: {
            line: 40,
            column: 27
          }
        },
        loc: {
          start: {
            line: 40,
            column: 35
          },
          end: {
            line: 40,
            column: 79
          }
        },
        line: 40
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 46,
            column: 2
          },
          end: {
            line: 46,
            column: 3
          }
        },
        loc: {
          start: {
            line: 46,
            column: 19
          },
          end: {
            line: 50,
            column: 3
          }
        },
        line: 46
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 47,
            column: 24
          },
          end: {
            line: 47,
            column: 25
          }
        },
        loc: {
          start: {
            line: 47,
            column: 35
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 47
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 55,
            column: 2
          },
          end: {
            line: 55,
            column: 3
          }
        },
        loc: {
          start: {
            line: 55,
            column: 17
          },
          end: {
            line: 55,
            column: 36
          }
        },
        line: 55
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 56,
            column: 2
          },
          end: {
            line: 56,
            column: 3
          }
        },
        loc: {
          start: {
            line: 56,
            column: 15
          },
          end: {
            line: 58,
            column: 3
          }
        },
        line: 56
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 63,
            column: 2
          },
          end: {
            line: 63,
            column: 3
          }
        },
        loc: {
          start: {
            line: 63,
            column: 17
          },
          end: {
            line: 63,
            column: 39
          }
        },
        line: 63
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 64,
            column: 2
          },
          end: {
            line: 64,
            column: 3
          }
        },
        loc: {
          start: {
            line: 64,
            column: 15
          },
          end: {
            line: 64,
            column: 39
          }
        },
        line: 64
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 66,
            column: 2
          },
          end: {
            line: 66,
            column: 3
          }
        },
        loc: {
          start: {
            line: 66,
            column: 29
          },
          end: {
            line: 68,
            column: 3
          }
        },
        line: 66
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 70,
            column: 2
          },
          end: {
            line: 70,
            column: 3
          }
        },
        loc: {
          start: {
            line: 70,
            column: 17
          },
          end: {
            line: 72,
            column: 3
          }
        },
        line: 70
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 94,
            column: 2
          },
          end: {
            line: 94,
            column: 3
          }
        },
        loc: {
          start: {
            line: 94,
            column: 17
          },
          end: {
            line: 94,
            column: 41
          }
        },
        line: 94
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 95,
            column: 2
          },
          end: {
            line: 95,
            column: 3
          }
        },
        loc: {
          start: {
            line: 95,
            column: 15
          },
          end: {
            line: 95,
            column: 63
          }
        },
        line: 95
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 97,
            column: 2
          },
          end: {
            line: 97,
            column: 3
          }
        },
        loc: {
          start: {
            line: 97,
            column: 52
          },
          end: {
            line: 99,
            column: 3
          }
        },
        line: 97
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 137,
            column: 2
          },
          end: {
            line: 137,
            column: 3
          }
        },
        loc: {
          start: {
            line: 137,
            column: 37
          },
          end: {
            line: 144,
            column: 3
          }
        },
        line: 137
      },
      "18": {
        name: "print",
        decl: {
          start: {
            line: 150,
            column: 9
          },
          end: {
            line: 150,
            column: 14
          }
        },
        loc: {
          start: {
            line: 150,
            column: 36
          },
          end: {
            line: 160,
            column: 1
          }
        },
        line: 150
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 153,
            column: 16
          },
          end: {
            line: 153,
            column: 17
          }
        },
        loc: {
          start: {
            line: 153,
            column: 29
          },
          end: {
            line: 159,
            column: 3
          }
        },
        line: 153
      },
      "20": {
        name: "printNodes",
        decl: {
          start: {
            line: 163,
            column: 9
          },
          end: {
            line: 163,
            column: 19
          }
        },
        loc: {
          start: {
            line: 163,
            column: 34
          },
          end: {
            line: 209,
            column: 1
          }
        },
        line: 163
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 170,
            column: 26
          },
          end: {
            line: 170,
            column: 27
          }
        },
        loc: {
          start: {
            line: 170,
            column: 33
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 170
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 181,
            column: 31
          },
          end: {
            line: 181,
            column: 32
          }
        },
        loc: {
          start: {
            line: 181,
            column: 38
          },
          end: {
            line: 183,
            column: 7
          }
        },
        line: 181
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 189,
            column: 20
          },
          end: {
            line: 189,
            column: 21
          }
        },
        loc: {
          start: {
            line: 189,
            column: 40
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 189
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 204,
            column: 18
          },
          end: {
            line: 204,
            column: 19
          }
        },
        loc: {
          start: {
            line: 204,
            column: 38
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 204
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 2
          },
          end: {
            line: 8,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 6,
            column: 2
          },
          end: {
            line: 8,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 10,
            column: 2
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 2
          },
          end: {
            line: 12,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 6
          },
          end: {
            line: 28,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 6
          },
          end: {
            line: 28,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 14
          },
          end: {
            line: 35,
            column: 27
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 14
          },
          end: {
            line: 35,
            column: 21
          }
        }, {
          start: {
            line: 35,
            column: 25
          },
          end: {
            line: 35,
            column: 27
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: 39,
            column: 11
          },
          end: {
            line: 41,
            column: 5
          }
        }],
        line: 37
      },
      "5": {
        loc: {
          start: {
            line: 67,
            column: 30
          },
          end: {
            line: 67,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 30
          },
          end: {
            line: 67,
            column: 35
          }
        }, {
          start: {
            line: 67,
            column: 39
          },
          end: {
            line: 67,
            column: 41
          }
        }],
        line: 67
      },
      "6": {
        loc: {
          start: {
            line: 98,
            column: 40
          },
          end: {
            line: 98,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 40
          },
          end: {
            line: 98,
            column: 45
          }
        }, {
          start: {
            line: 98,
            column: 49
          },
          end: {
            line: 98,
            column: 63
          }
        }],
        line: 98
      },
      "7": {
        loc: {
          start: {
            line: 139,
            column: 19
          },
          end: {
            line: 139,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 19
          },
          end: {
            line: 139,
            column: 29
          }
        }, {
          start: {
            line: 139,
            column: 33
          },
          end: {
            line: 139,
            column: 36
          }
        }],
        line: 139
      },
      "8": {
        loc: {
          start: {
            line: 141,
            column: 16
          },
          end: {
            line: 141,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 16
          },
          end: {
            line: 141,
            column: 20
          }
        }, {
          start: {
            line: 141,
            column: 24
          },
          end: {
            line: 141,
            column: 38
          }
        }],
        line: 141
      },
      "9": {
        loc: {
          start: {
            line: 142,
            column: 23
          },
          end: {
            line: 142,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 23
          },
          end: {
            line: 142,
            column: 34
          }
        }, {
          start: {
            line: 142,
            column: 38
          },
          end: {
            line: 142,
            column: 40
          }
        }],
        line: 142
      },
      "10": {
        loc: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 156,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 156,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "11": {
        loc: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 154,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 154,
            column: 12
          }
        }, {
          start: {
            line: 154,
            column: 18
          },
          end: {
            line: 154,
            column: 24
          }
        }, {
          start: {
            line: 154,
            column: 28
          },
          end: {
            line: 154,
            column: 33
          }
        }, {
          start: {
            line: 154,
            column: 38
          },
          end: {
            line: 154,
            column: 45
          }
        }],
        line: 154
      },
      "12": {
        loc: {
          start: {
            line: 157,
            column: 15
          },
          end: {
            line: 157,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 42
          },
          end: {
            line: 157,
            column: 44
          }
        }, {
          start: {
            line: 157,
            column: 47
          },
          end: {
            line: 157,
            column: 51
          }
        }],
        line: 157
      },
      "13": {
        loc: {
          start: {
            line: 164,
            column: 11
          },
          end: {
            line: 164,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 11
          },
          end: {
            line: 164,
            column: 17
          }
        }, {
          start: {
            line: 164,
            column: 21
          },
          end: {
            line: 164,
            column: 22
          }
        }],
        line: 164
      },
      "14": {
        loc: {
          start: {
            line: 168,
            column: 2
          },
          end: {
            line: 208,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 2
          },
          end: {
            line: 208,
            column: 3
          }
        }, {
          start: {
            line: 173,
            column: 9
          },
          end: {
            line: 208,
            column: 3
          }
        }],
        line: 168
      },
      "15": {
        loc: {
          start: {
            line: 173,
            column: 9
          },
          end: {
            line: 208,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 9
          },
          end: {
            line: 208,
            column: 3
          }
        }, {
          start: {
            line: 185,
            column: 9
          },
          end: {
            line: 208,
            column: 3
          }
        }],
        line: 173
      },
      "16": {
        loc: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "17": {
        loc: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "18": {
        loc: {
          start: {
            line: 190,
            column: 6
          },
          end: {
            line: 195,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 6
          },
          end: {
            line: 195,
            column: 7
          }
        }, {
          start: {
            line: 192,
            column: 13
          },
          end: {
            line: 195,
            column: 7
          }
        }],
        line: 190
      },
      "19": {
        loc: {
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 193,
            column: 27
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 193,
            column: 21
          }
        }, {
          start: {
            line: 193,
            column: 25
          },
          end: {
            line: 193,
            column: 27
          }
        }],
        line: 193
      },
      "20": {
        loc: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        }, {
          start: {
            line: 200,
            column: 11
          },
          end: {
            line: 202,
            column: 5
          }
        }],
        line: 198
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4473b22238fe6fb103581fadddf8c1f1c2ee63e5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_21kdm5hbv4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_21kdm5hbv4();
const {
  Obj
} = (cov_21kdm5hbv4().s[0]++, __webpack_require__(/*! ./object */ 891));
function traverseAndCheck(obj, type, results) {
  cov_21kdm5hbv4().f[0]++;
  cov_21kdm5hbv4().s[1]++;
  if (obj instanceof type) {
    cov_21kdm5hbv4().b[0][0]++;
    cov_21kdm5hbv4().s[2]++;
    results.push(obj);
  } else {
    cov_21kdm5hbv4().b[0][1]++;
  }
  cov_21kdm5hbv4().s[3]++;
  if (obj instanceof Node) {
    cov_21kdm5hbv4().b[1][0]++;
    cov_21kdm5hbv4().s[4]++;
    obj.findAll(type, results);
  } else {
    cov_21kdm5hbv4().b[1][1]++;
  }
}
class Node extends Obj {
  init(lineno, colno) {
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }
    cov_21kdm5hbv4().f[1]++;
    cov_21kdm5hbv4().s[5]++;
    this.lineno = lineno;
    cov_21kdm5hbv4().s[6]++;
    this.colno = colno;
    cov_21kdm5hbv4().s[7]++;
    this.fields.forEach((field, i) => {
      cov_21kdm5hbv4().f[2]++;
      // The first two args are line/col numbers, so offset by 2
      var val = (cov_21kdm5hbv4().s[8]++, arguments[i + 2]);

      // Fields should never be undefined, but null. It makes
      // testing easier to normalize values.
      cov_21kdm5hbv4().s[9]++;
      if (val === undefined) {
        cov_21kdm5hbv4().b[2][0]++;
        cov_21kdm5hbv4().s[10]++;
        val = null;
      } else {
        cov_21kdm5hbv4().b[2][1]++;
      }
      cov_21kdm5hbv4().s[11]++;
      this[field] = val;
    });
  }
  findAll(type, results) {
    cov_21kdm5hbv4().f[3]++;
    cov_21kdm5hbv4().s[12]++;
    results = (cov_21kdm5hbv4().b[3][0]++, results) || (cov_21kdm5hbv4().b[3][1]++, []);
    cov_21kdm5hbv4().s[13]++;
    if (this instanceof NodeList) {
      cov_21kdm5hbv4().b[4][0]++;
      cov_21kdm5hbv4().s[14]++;
      this.children.forEach(child => {
        cov_21kdm5hbv4().f[4]++;
        cov_21kdm5hbv4().s[15]++;
        return traverseAndCheck(child, type, results);
      });
    } else {
      cov_21kdm5hbv4().b[4][1]++;
      cov_21kdm5hbv4().s[16]++;
      this.fields.forEach(field => {
        cov_21kdm5hbv4().f[5]++;
        cov_21kdm5hbv4().s[17]++;
        return traverseAndCheck(this[field], type, results);
      });
    }
    cov_21kdm5hbv4().s[18]++;
    return results;
  }
  iterFields(func) {
    cov_21kdm5hbv4().f[6]++;
    cov_21kdm5hbv4().s[19]++;
    this.fields.forEach(field => {
      cov_21kdm5hbv4().f[7]++;
      cov_21kdm5hbv4().s[20]++;
      func(this[field], field);
    });
  }
}

// Abstract nodes
class Value extends Node {
  get typename() {
    cov_21kdm5hbv4().f[8]++;
    cov_21kdm5hbv4().s[21]++;
    return 'Value';
  }
  get fields() {
    cov_21kdm5hbv4().f[9]++;
    cov_21kdm5hbv4().s[22]++;
    return ['value'];
  }
}

// Concrete nodes
class NodeList extends Node {
  get typename() {
    cov_21kdm5hbv4().f[10]++;
    cov_21kdm5hbv4().s[23]++;
    return 'NodeList';
  }
  get fields() {
    cov_21kdm5hbv4().f[11]++;
    cov_21kdm5hbv4().s[24]++;
    return ['children'];
  }
  init(lineno, colno, nodes) {
    cov_21kdm5hbv4().f[12]++;
    cov_21kdm5hbv4().s[25]++;
    super.init(lineno, colno, (cov_21kdm5hbv4().b[5][0]++, nodes) || (cov_21kdm5hbv4().b[5][1]++, []));
  }
  addChild(node) {
    cov_21kdm5hbv4().f[13]++;
    cov_21kdm5hbv4().s[26]++;
    this.children.push(node);
  }
}
const Root = (cov_21kdm5hbv4().s[27]++, NodeList.extend('Root'));
const Literal = (cov_21kdm5hbv4().s[28]++, Value.extend('Literal'));
const Symbol = (cov_21kdm5hbv4().s[29]++, Value.extend('Symbol'));
const Group = (cov_21kdm5hbv4().s[30]++, NodeList.extend('Group'));
const ArrayNode = (cov_21kdm5hbv4().s[31]++, NodeList.extend('Array'));
const Pair = (cov_21kdm5hbv4().s[32]++, Node.extend('Pair', {
  fields: ['key', 'value']
}));
const Dict = (cov_21kdm5hbv4().s[33]++, NodeList.extend('Dict'));
const LookupVal = (cov_21kdm5hbv4().s[34]++, Node.extend('LookupVal', {
  fields: ['target', 'val']
}));
const If = (cov_21kdm5hbv4().s[35]++, Node.extend('If', {
  fields: ['cond', 'body', 'else_']
}));
const IfAsync = (cov_21kdm5hbv4().s[36]++, If.extend('IfAsync'));
const InlineIf = (cov_21kdm5hbv4().s[37]++, Node.extend('InlineIf', {
  fields: ['cond', 'body', 'else_']
}));
const For = (cov_21kdm5hbv4().s[38]++, Node.extend('For', {
  fields: ['arr', 'name', 'body', 'else_']
}));
const AsyncEach = (cov_21kdm5hbv4().s[39]++, For.extend('AsyncEach'));
const AsyncAll = (cov_21kdm5hbv4().s[40]++, For.extend('AsyncAll'));
const Macro = (cov_21kdm5hbv4().s[41]++, Node.extend('Macro', {
  fields: ['name', 'args', 'body']
}));
const Caller = (cov_21kdm5hbv4().s[42]++, Macro.extend('Caller'));
const Import = (cov_21kdm5hbv4().s[43]++, Node.extend('Import', {
  fields: ['template', 'target', 'withContext']
}));
class FromImport extends Node {
  get typename() {
    cov_21kdm5hbv4().f[14]++;
    cov_21kdm5hbv4().s[44]++;
    return 'FromImport';
  }
  get fields() {
    cov_21kdm5hbv4().f[15]++;
    cov_21kdm5hbv4().s[45]++;
    return ['template', 'names', 'withContext'];
  }
  init(lineno, colno, template, names, withContext) {
    cov_21kdm5hbv4().f[16]++;
    cov_21kdm5hbv4().s[46]++;
    super.init(lineno, colno, template, (cov_21kdm5hbv4().b[6][0]++, names) || (cov_21kdm5hbv4().b[6][1]++, new NodeList()), withContext);
  }
}
const FunCall = (cov_21kdm5hbv4().s[47]++, Node.extend('FunCall', {
  fields: ['name', 'args']
}));
const Filter = (cov_21kdm5hbv4().s[48]++, FunCall.extend('Filter'));
const FilterAsync = (cov_21kdm5hbv4().s[49]++, Filter.extend('FilterAsync', {
  fields: ['name', 'args', 'symbol']
}));
const KeywordArgs = (cov_21kdm5hbv4().s[50]++, Dict.extend('KeywordArgs'));
const Block = (cov_21kdm5hbv4().s[51]++, Node.extend('Block', {
  fields: ['name', 'body']
}));
const Super = (cov_21kdm5hbv4().s[52]++, Node.extend('Super', {
  fields: ['blockName', 'symbol']
}));
const TemplateRef = (cov_21kdm5hbv4().s[53]++, Node.extend('TemplateRef', {
  fields: ['template']
}));
const Extends = (cov_21kdm5hbv4().s[54]++, TemplateRef.extend('Extends'));
const Include = (cov_21kdm5hbv4().s[55]++, Node.extend('Include', {
  fields: ['template', 'ignoreMissing']
}));
const Set = (cov_21kdm5hbv4().s[56]++, Node.extend('Set', {
  fields: ['targets', 'value']
}));
const Switch = (cov_21kdm5hbv4().s[57]++, Node.extend('Switch', {
  fields: ['expr', 'cases', 'default']
}));
const Case = (cov_21kdm5hbv4().s[58]++, Node.extend('Case', {
  fields: ['cond', 'body']
}));
const Output = (cov_21kdm5hbv4().s[59]++, NodeList.extend('Output'));
const Capture = (cov_21kdm5hbv4().s[60]++, Node.extend('Capture', {
  fields: ['body']
}));
const TemplateData = (cov_21kdm5hbv4().s[61]++, Literal.extend('TemplateData'));
const UnaryOp = (cov_21kdm5hbv4().s[62]++, Node.extend('UnaryOp', {
  fields: ['target']
}));
const BinOp = (cov_21kdm5hbv4().s[63]++, Node.extend('BinOp', {
  fields: ['left', 'right']
}));
const In = (cov_21kdm5hbv4().s[64]++, BinOp.extend('In'));
const Is = (cov_21kdm5hbv4().s[65]++, BinOp.extend('Is'));
const Or = (cov_21kdm5hbv4().s[66]++, BinOp.extend('Or'));
const And = (cov_21kdm5hbv4().s[67]++, BinOp.extend('And'));
const Not = (cov_21kdm5hbv4().s[68]++, UnaryOp.extend('Not'));
const Add = (cov_21kdm5hbv4().s[69]++, BinOp.extend('Add'));
const Concat = (cov_21kdm5hbv4().s[70]++, BinOp.extend('Concat'));
const Sub = (cov_21kdm5hbv4().s[71]++, BinOp.extend('Sub'));
const Mul = (cov_21kdm5hbv4().s[72]++, BinOp.extend('Mul'));
const Div = (cov_21kdm5hbv4().s[73]++, BinOp.extend('Div'));
const FloorDiv = (cov_21kdm5hbv4().s[74]++, BinOp.extend('FloorDiv'));
const Mod = (cov_21kdm5hbv4().s[75]++, BinOp.extend('Mod'));
const Pow = (cov_21kdm5hbv4().s[76]++, BinOp.extend('Pow'));
const Neg = (cov_21kdm5hbv4().s[77]++, UnaryOp.extend('Neg'));
const Pos = (cov_21kdm5hbv4().s[78]++, UnaryOp.extend('Pos'));
const Compare = (cov_21kdm5hbv4().s[79]++, Node.extend('Compare', {
  fields: ['expr', 'ops']
}));
const CompareOperand = (cov_21kdm5hbv4().s[80]++, Node.extend('CompareOperand', {
  fields: ['expr', 'type']
}));
const CallExtension = (cov_21kdm5hbv4().s[81]++, Node.extend('CallExtension', {
  init(ext, prop, args, contentArgs) {
    cov_21kdm5hbv4().f[17]++;
    cov_21kdm5hbv4().s[82]++;
    this.parent();
    cov_21kdm5hbv4().s[83]++;
    this.extName = (cov_21kdm5hbv4().b[7][0]++, ext.__name) || (cov_21kdm5hbv4().b[7][1]++, ext);
    cov_21kdm5hbv4().s[84]++;
    this.prop = prop;
    cov_21kdm5hbv4().s[85]++;
    this.args = (cov_21kdm5hbv4().b[8][0]++, args) || (cov_21kdm5hbv4().b[8][1]++, new NodeList());
    cov_21kdm5hbv4().s[86]++;
    this.contentArgs = (cov_21kdm5hbv4().b[9][0]++, contentArgs) || (cov_21kdm5hbv4().b[9][1]++, []);
    cov_21kdm5hbv4().s[87]++;
    this.autoescape = ext.autoescape;
  },
  fields: ['extName', 'prop', 'args', 'contentArgs']
}));
const CallExtensionAsync = (cov_21kdm5hbv4().s[88]++, CallExtension.extend('CallExtensionAsync'));

// This is hacky, but this is just a debugging function anyway
function print(str, indent, inline) {
  cov_21kdm5hbv4().f[18]++;
  var lines = (cov_21kdm5hbv4().s[89]++, str.split('\n'));
  cov_21kdm5hbv4().s[90]++;
  lines.forEach((line, i) => {
    cov_21kdm5hbv4().f[19]++;
    cov_21kdm5hbv4().s[91]++;
    if ((cov_21kdm5hbv4().b[11][0]++, line) && ((cov_21kdm5hbv4().b[11][1]++, inline) && (cov_21kdm5hbv4().b[11][2]++, i > 0) || (cov_21kdm5hbv4().b[11][3]++, !inline))) {
      cov_21kdm5hbv4().b[10][0]++;
      cov_21kdm5hbv4().s[92]++;
      process.stdout.write(' '.repeat(indent));
    } else {
      cov_21kdm5hbv4().b[10][1]++;
    }
    const nl = (cov_21kdm5hbv4().s[93]++, i === lines.length - 1 ? (cov_21kdm5hbv4().b[12][0]++, '') : (cov_21kdm5hbv4().b[12][1]++, '\n'));
    cov_21kdm5hbv4().s[94]++;
    process.stdout.write(`${line}${nl}`);
  });
}

// Print the AST in a nicely formatted tree format for debuggin
function printNodes(node, indent) {
  cov_21kdm5hbv4().f[20]++;
  cov_21kdm5hbv4().s[95]++;
  indent = (cov_21kdm5hbv4().b[13][0]++, indent) || (cov_21kdm5hbv4().b[13][1]++, 0);
  cov_21kdm5hbv4().s[96]++;
  print(node.typename + ': ', indent);
  cov_21kdm5hbv4().s[97]++;
  if (node instanceof NodeList) {
    cov_21kdm5hbv4().b[14][0]++;
    cov_21kdm5hbv4().s[98]++;
    print('\n');
    cov_21kdm5hbv4().s[99]++;
    node.children.forEach(n => {
      cov_21kdm5hbv4().f[21]++;
      cov_21kdm5hbv4().s[100]++;
      printNodes(n, indent + 2);
    });
  } else {
    cov_21kdm5hbv4().b[14][1]++;
    cov_21kdm5hbv4().s[101]++;
    if (node instanceof CallExtension) {
      cov_21kdm5hbv4().b[15][0]++;
      cov_21kdm5hbv4().s[102]++;
      print(`${node.extName}.${node.prop}\n`);
      cov_21kdm5hbv4().s[103]++;
      if (node.args) {
        cov_21kdm5hbv4().b[16][0]++;
        cov_21kdm5hbv4().s[104]++;
        printNodes(node.args, indent + 2);
      } else {
        cov_21kdm5hbv4().b[16][1]++;
      }
      cov_21kdm5hbv4().s[105]++;
      if (node.contentArgs) {
        cov_21kdm5hbv4().b[17][0]++;
        cov_21kdm5hbv4().s[106]++;
        node.contentArgs.forEach(n => {
          cov_21kdm5hbv4().f[22]++;
          cov_21kdm5hbv4().s[107]++;
          printNodes(n, indent + 2);
        });
      } else {
        cov_21kdm5hbv4().b[17][1]++;
      }
    } else {
      cov_21kdm5hbv4().b[15][1]++;
      let nodes = (cov_21kdm5hbv4().s[108]++, []);
      let props = (cov_21kdm5hbv4().s[109]++, null);
      cov_21kdm5hbv4().s[110]++;
      node.iterFields((val, fieldName) => {
        cov_21kdm5hbv4().f[23]++;
        cov_21kdm5hbv4().s[111]++;
        if (val instanceof Node) {
          cov_21kdm5hbv4().b[18][0]++;
          cov_21kdm5hbv4().s[112]++;
          nodes.push([fieldName, val]);
        } else {
          cov_21kdm5hbv4().b[18][1]++;
          cov_21kdm5hbv4().s[113]++;
          props = (cov_21kdm5hbv4().b[19][0]++, props) || (cov_21kdm5hbv4().b[19][1]++, {});
          cov_21kdm5hbv4().s[114]++;
          props[fieldName] = val;
        }
      });
      cov_21kdm5hbv4().s[115]++;
      if (props) {
        cov_21kdm5hbv4().b[20][0]++;
        cov_21kdm5hbv4().s[116]++;
        print(JSON.stringify(props, null, 2) + '\n', null, true);
      } else {
        cov_21kdm5hbv4().b[20][1]++;
        cov_21kdm5hbv4().s[117]++;
        print('\n');
      }
      cov_21kdm5hbv4().s[118]++;
      nodes.forEach(_ref => {
        let [fieldName, n] = _ref;
        cov_21kdm5hbv4().f[24]++;
        cov_21kdm5hbv4().s[119]++;
        print(`[${fieldName}] =>`, indent + 2);
        cov_21kdm5hbv4().s[120]++;
        printNodes(n, indent + 4);
      });
    }
  }
}
cov_21kdm5hbv4().s[121]++;
module.exports = {
  Node: Node,
  Root: Root,
  NodeList: NodeList,
  Value: Value,
  Literal: Literal,
  Symbol: Symbol,
  Group: Group,
  Array: ArrayNode,
  Pair: Pair,
  Dict: Dict,
  Output: Output,
  Capture: Capture,
  TemplateData: TemplateData,
  If: If,
  IfAsync: IfAsync,
  InlineIf: InlineIf,
  For: For,
  AsyncEach: AsyncEach,
  AsyncAll: AsyncAll,
  Macro: Macro,
  Caller: Caller,
  Import: Import,
  FromImport: FromImport,
  FunCall: FunCall,
  Filter: Filter,
  FilterAsync: FilterAsync,
  KeywordArgs: KeywordArgs,
  Block: Block,
  Super: Super,
  Extends: Extends,
  Include: Include,
  Set: Set,
  Switch: Switch,
  Case: Case,
  LookupVal: LookupVal,
  BinOp: BinOp,
  In: In,
  Is: Is,
  Or: Or,
  And: And,
  Not: Not,
  Add: Add,
  Concat: Concat,
  Sub: Sub,
  Mul: Mul,
  Div: Div,
  FloorDiv: FloorDiv,
  Mod: Mod,
  Pow: Pow,
  Neg: Neg,
  Pos: Pos,
  Compare: Compare,
  CompareOperand: CompareOperand,
  CallExtension: CallExtension,
  CallExtensionAsync: CallExtensionAsync,
  printNodes: printNodes
};

/***/ }),

/***/ 891:
/*!********************************!*\
  !*** ./nunjucks/src/object.js ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


// A simple class system, more documentation to come
function cov_1d4f437gmw() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\object.js";
  var hash = "dffd5065c6d7d5bf1ea81c6bfe841a7a7336e6ab";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\object.js",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 21
        },
        end: {
          line: 4,
          column: 38
        }
      },
      "1": {
        start: {
          line: 5,
          column: 12
        },
        end: {
          line: 5,
          column: 28
        }
      },
      "2": {
        start: {
          line: 8,
          column: 2
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "3": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 16
        }
      },
      "4": {
        start: {
          line: 11,
          column: 2
        },
        end: {
          line: 21,
          column: 4
        }
      },
      "5": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 27
        }
      },
      "6": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 25
        }
      },
      "7": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 43
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 22
        }
      },
      "9": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 15
        }
      },
      "10": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 25,
          column: 22
        }
      },
      "11": {
        start: {
          line: 27,
          column: 2
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "12": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 54
        }
      },
      "13": {
        start: {
          line: 33,
          column: 6
        },
        end: {
          line: 33,
          column: 18
        }
      },
      "14": {
        start: {
          line: 37,
          column: 2
        },
        end: {
          line: 37,
          column: 41
        }
      },
      "15": {
        start: {
          line: 39,
          column: 2
        },
        end: {
          line: 39,
          column: 18
        }
      },
      "16": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 23
        }
      },
      "17": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 33
        }
      },
      "18": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "19": {
        start: {
          line: 56,
          column: 6
        },
        end: {
          line: 56,
          column: 19
        }
      },
      "20": {
        start: {
          line: 57,
          column: 6
        },
        end: {
          line: 57,
          column: 25
        }
      },
      "21": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 42
        }
      },
      "22": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 12
        }
      },
      "23": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 23
        }
      },
      "24": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 33
        }
      },
      "25": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "26": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 78,
          column: 19
        }
      },
      "27": {
        start: {
          line: 79,
          column: 6
        },
        end: {
          line: 79,
          column: 25
        }
      },
      "28": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 42
        }
      },
      "29": {
        start: {
          line: 85,
          column: 0
        },
        end: {
          line: 85,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "parentWrap",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 19
          }
        },
        loc: {
          start: {
            line: 7,
            column: 34
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "wrap",
        decl: {
          start: {
            line: 11,
            column: 18
          },
          end: {
            line: 11,
            column: 22
          }
        },
        loc: {
          start: {
            line: 11,
            column: 25
          },
          end: {
            line: 21,
            column: 3
          }
        },
        line: 11
      },
      "2": {
        name: "extendClass",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 20
          }
        },
        loc: {
          start: {
            line: 24,
            column: 39
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 27,
            column: 27
          }
        },
        loc: {
          start: {
            line: 27,
            column: 31
          },
          end: {
            line: 29,
            column: 3
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 19
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 43,
            column: 2
          },
          end: {
            line: 43,
            column: 3
          }
        },
        loc: {
          start: {
            line: 43,
            column: 23
          },
          end: {
            line: 46,
            column: 3
          }
        },
        line: 43
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 48,
            column: 2
          },
          end: {
            line: 48,
            column: 3
          }
        },
        loc: {
          start: {
            line: 48,
            column: 9
          },
          end: {
            line: 48,
            column: 11
          }
        },
        line: 48
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 50,
            column: 2
          },
          end: {
            line: 50,
            column: 3
          }
        },
        loc: {
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 52,
            column: 3
          }
        },
        line: 50
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 54,
            column: 2
          },
          end: {
            line: 54,
            column: 3
          }
        },
        loc: {
          start: {
            line: 54,
            column: 29
          },
          end: {
            line: 60,
            column: 3
          }
        },
        line: 54
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 64,
            column: 2
          },
          end: {
            line: 64,
            column: 3
          }
        },
        loc: {
          start: {
            line: 64,
            column: 23
          },
          end: {
            line: 68,
            column: 3
          }
        },
        line: 64
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 70,
            column: 2
          },
          end: {
            line: 70,
            column: 3
          }
        },
        loc: {
          start: {
            line: 70,
            column: 9
          },
          end: {
            line: 70,
            column: 11
          }
        },
        line: 70
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 72,
            column: 2
          },
          end: {
            line: 72,
            column: 3
          }
        },
        loc: {
          start: {
            line: 72,
            column: 17
          },
          end: {
            line: 74,
            column: 3
          }
        },
        line: 72
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 76,
            column: 2
          },
          end: {
            line: 76,
            column: 3
          }
        },
        loc: {
          start: {
            line: 76,
            column: 29
          },
          end: {
            line: 82,
            column: 3
          }
        },
        line: 76
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 10,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 10,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 8,
            column: 6
          },
          end: {
            line: 8,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 6
          },
          end: {
            line: 8,
            column: 34
          }
        }, {
          start: {
            line: 8,
            column: 38
          },
          end: {
            line: 8,
            column: 64
          }
        }],
        line: 8
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 10
          },
          end: {
            line: 25,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 10
          },
          end: {
            line: 25,
            column: 15
          }
        }, {
          start: {
            line: 25,
            column: 19
          },
          end: {
            line: 25,
            column: 21
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "4": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dffd5065c6d7d5bf1ea81c6bfe841a7a7336e6ab"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1d4f437gmw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1d4f437gmw();
const EventEmitter = (cov_1d4f437gmw().s[0]++, __webpack_require__(/*! events */ 7007));
const lib = (cov_1d4f437gmw().s[1]++, __webpack_require__(/*! ./lib */ 449));
function parentWrap(parent, prop) {
  cov_1d4f437gmw().f[0]++;
  cov_1d4f437gmw().s[2]++;
  if ((cov_1d4f437gmw().b[1][0]++, typeof parent !== 'function') || (cov_1d4f437gmw().b[1][1]++, typeof prop !== 'function')) {
    cov_1d4f437gmw().b[0][0]++;
    cov_1d4f437gmw().s[3]++;
    return prop;
  } else {
    cov_1d4f437gmw().b[0][1]++;
  }
  cov_1d4f437gmw().s[4]++;
  return function wrap() {
    cov_1d4f437gmw().f[1]++;
    // Save the current parent method
    const tmp = (cov_1d4f437gmw().s[5]++, this.parent);

    // Set parent to the previous method, call, and restore
    cov_1d4f437gmw().s[6]++;
    this.parent = parent;
    const res = (cov_1d4f437gmw().s[7]++, prop.apply(this, arguments));
    cov_1d4f437gmw().s[8]++;
    this.parent = tmp;
    cov_1d4f437gmw().s[9]++;
    return res;
  };
}
function extendClass(cls, name, props) {
  cov_1d4f437gmw().f[2]++;
  cov_1d4f437gmw().s[10]++;
  props = (cov_1d4f437gmw().b[2][0]++, props) || (cov_1d4f437gmw().b[2][1]++, {});
  cov_1d4f437gmw().s[11]++;
  lib.keys(props).forEach(k => {
    cov_1d4f437gmw().f[3]++;
    cov_1d4f437gmw().s[12]++;
    props[k] = parentWrap(cls.prototype[k], props[k]);
  });
  class subclass extends cls {
    get typename() {
      cov_1d4f437gmw().f[4]++;
      cov_1d4f437gmw().s[13]++;
      return name;
    }
  }
  cov_1d4f437gmw().s[14]++;
  lib._assign(subclass.prototype, props);
  cov_1d4f437gmw().s[15]++;
  return subclass;
}
class Obj {
  constructor() {
    cov_1d4f437gmw().f[5]++;
    cov_1d4f437gmw().s[16]++;
    // Unfortunately necessary for backwards compatibility
    this.init(...arguments);
  }
  init() {
    cov_1d4f437gmw().f[6]++;
  }
  get typename() {
    cov_1d4f437gmw().f[7]++;
    cov_1d4f437gmw().s[17]++;
    return this.constructor.name;
  }
  static extend(name, props) {
    cov_1d4f437gmw().f[8]++;
    cov_1d4f437gmw().s[18]++;
    if (typeof name === 'object') {
      cov_1d4f437gmw().b[3][0]++;
      cov_1d4f437gmw().s[19]++;
      props = name;
      cov_1d4f437gmw().s[20]++;
      name = 'anonymous';
    } else {
      cov_1d4f437gmw().b[3][1]++;
    }
    cov_1d4f437gmw().s[21]++;
    return extendClass(this, name, props);
  }
}
class EmitterObj extends EventEmitter {
  constructor() {
    cov_1d4f437gmw().f[9]++;
    cov_1d4f437gmw().s[22]++;
    super();
    // Unfortunately necessary for backwards compatibility
    cov_1d4f437gmw().s[23]++;
    this.init(...arguments);
  }
  init() {
    cov_1d4f437gmw().f[10]++;
  }
  get typename() {
    cov_1d4f437gmw().f[11]++;
    cov_1d4f437gmw().s[24]++;
    return this.constructor.name;
  }
  static extend(name, props) {
    cov_1d4f437gmw().f[12]++;
    cov_1d4f437gmw().s[25]++;
    if (typeof name === 'object') {
      cov_1d4f437gmw().b[4][0]++;
      cov_1d4f437gmw().s[26]++;
      props = name;
      cov_1d4f437gmw().s[27]++;
      name = 'anonymous';
    } else {
      cov_1d4f437gmw().b[4][1]++;
    }
    cov_1d4f437gmw().s[28]++;
    return extendClass(this, name, props);
  }
}
cov_1d4f437gmw().s[29]++;
module.exports = {
  Obj,
  EmitterObj
};

/***/ }),

/***/ 999:
/*!********************************!*\
  !*** ./nunjucks/src/parser.js ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function cov_29oqqyhfji() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\parser.js";
  var hash = "7772938f44ff4bdd692e52dbeb175557501d070b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\parser.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 30
        }
      },
      "1": {
        start: {
          line: 4,
          column: 12
        },
        end: {
          line: 4,
          column: 30
        }
      },
      "2": {
        start: {
          line: 5,
          column: 10
        },
        end: {
          line: 5,
          column: 33
        }
      },
      "3": {
        start: {
          line: 6,
          column: 10
        },
        end: {
          line: 6,
          column: 26
        }
      },
      "4": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 25
        }
      },
      "5": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 23
        }
      },
      "6": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 30
        }
      },
      "7": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 39
        }
      },
      "8": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 25
        }
      },
      "9": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "10": {
        start: {
          line: 22,
          column: 6
        },
        end: {
          line: 28,
          column: 7
        }
      },
      "11": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 27
        }
      },
      "12": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "13": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "14": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 19
        }
      },
      "15": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 34
        }
      },
      "16": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "17": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 36,
          column: 7
        }
      },
      "18": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 38
        }
      },
      "19": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 15
        }
      },
      "20": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 50
        }
      },
      "21": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 23
        }
      },
      "22": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "23": {
        start: {
          line: 49,
          column: 6
        },
        end: {
          line: 49,
          column: 77
        }
      },
      "24": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 22
        }
      },
      "25": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "26": {
        start: {
          line: 56,
          column: 18
        },
        end: {
          line: 56,
          column: 40
        }
      },
      "27": {
        start: {
          line: 57,
          column: 6
        },
        end: {
          line: 57,
          column: 26
        }
      },
      "28": {
        start: {
          line: 58,
          column: 6
        },
        end: {
          line: 58,
          column: 24
        }
      },
      "29": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "30": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 61,
          column: 18
        }
      },
      "31": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "32": {
        start: {
          line: 64,
          column: 6
        },
        end: {
          line: 64,
          column: 17
        }
      },
      "33": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 53
        }
      },
      "34": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 41
        }
      },
      "35": {
        start: {
          line: 74,
          column: 14
        },
        end: {
          line: 74,
          column: 30
        }
      },
      "36": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "37": {
        start: {
          line: 76,
          column: 6
        },
        end: {
          line: 76,
          column: 26
        }
      },
      "38": {
        start: {
          line: 77,
          column: 6
        },
        end: {
          line: 77,
          column: 19
        }
      },
      "39": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 16
        }
      },
      "40": {
        start: {
          line: 83,
          column: 14
        },
        end: {
          line: 83,
          column: 30
        }
      },
      "41": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "42": {
        start: {
          line: 85,
          column: 6
        },
        end: {
          line: 87,
          column: 19
        }
      },
      "43": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 89,
          column: 15
        }
      },
      "44": {
        start: {
          line: 93,
          column: 14
        },
        end: {
          line: 93,
          column: 30
        }
      },
      "45": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "46": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 95,
          column: 26
        }
      },
      "47": {
        start: {
          line: 96,
          column: 6
        },
        end: {
          line: 96,
          column: 19
        }
      },
      "48": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 16
        }
      },
      "49": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 51
        }
      },
      "50": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "51": {
        start: {
          line: 108,
          column: 6
        },
        end: {
          line: 108,
          column: 29
        }
      },
      "52": {
        start: {
          line: 110,
          column: 6
        },
        end: {
          line: 112,
          column: 7
        }
      },
      "53": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 44
        }
      },
      "54": {
        start: {
          line: 114,
          column: 6
        },
        end: {
          line: 117,
          column: 7
        }
      },
      "55": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 116,
          column: 40
        }
      },
      "56": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 119,
          column: 36
        }
      },
      "57": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 122,
          column: 27
        }
      },
      "58": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "59": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 127,
          column: 7
        }
      },
      "60": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 42
        }
      },
      "61": {
        start: {
          line: 129,
          column: 6
        },
        end: {
          line: 129,
          column: 64
        }
      },
      "62": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 132,
          column: 15
        }
      },
      "63": {
        start: {
          line: 136,
          column: 14
        },
        end: {
          line: 136,
          column: 30
        }
      },
      "64": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "65": {
        start: {
          line: 139,
          column: 6
        },
        end: {
          line: 141,
          column: 16
        }
      },
      "66": {
        start: {
          line: 143,
          column: 6
        },
        end: {
          line: 143,
          column: 26
        }
      },
      "67": {
        start: {
          line: 144,
          column: 6
        },
        end: {
          line: 144,
          column: 41
        }
      },
      "68": {
        start: {
          line: 149,
          column: 17
        },
        end: {
          line: 149,
          column: 33
        }
      },
      "69": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 164,
          column: 5
        }
      },
      "70": {
        start: {
          line: 154,
          column: 6
        },
        end: {
          line: 154,
          column: 56
        }
      },
      "71": {
        start: {
          line: 155,
          column: 6
        },
        end: {
          line: 155,
          column: 26
        }
      },
      "72": {
        start: {
          line: 156,
          column: 11
        },
        end: {
          line: 164,
          column: 5
        }
      },
      "73": {
        start: {
          line: 157,
          column: 6
        },
        end: {
          line: 157,
          column: 62
        }
      },
      "74": {
        start: {
          line: 158,
          column: 6
        },
        end: {
          line: 158,
          column: 27
        }
      },
      "75": {
        start: {
          line: 159,
          column: 11
        },
        end: {
          line: 164,
          column: 5
        }
      },
      "76": {
        start: {
          line: 160,
          column: 6
        },
        end: {
          line: 160,
          column: 61
        }
      },
      "77": {
        start: {
          line: 161,
          column: 6
        },
        end: {
          line: 161,
          column: 26
        }
      },
      "78": {
        start: {
          line: 163,
          column: 6
        },
        end: {
          line: 163,
          column: 78
        }
      },
      "79": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 166,
          column: 36
        }
      },
      "80": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 170,
          column: 5
        }
      },
      "81": {
        start: {
          line: 169,
          column: 6
        },
        end: {
          line: 169,
          column: 61
        }
      },
      "82": {
        start: {
          line: 172,
          column: 17
        },
        end: {
          line: 172,
          column: 38
        }
      },
      "83": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "84": {
        start: {
          line: 175,
          column: 18
        },
        end: {
          line: 175,
          column: 27
        }
      },
      "85": {
        start: {
          line: 176,
          column: 6
        },
        end: {
          line: 176,
          column: 57
        }
      },
      "86": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 177,
          column: 30
        }
      },
      "87": {
        start: {
          line: 179,
          column: 6
        },
        end: {
          line: 182,
          column: 7
        }
      },
      "88": {
        start: {
          line: 180,
          column: 21
        },
        end: {
          line: 180,
          column: 40
        }
      },
      "89": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 33
        }
      },
      "90": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 189,
          column: 5
        }
      },
      "91": {
        start: {
          line: 186,
          column: 6
        },
        end: {
          line: 188,
          column: 22
        }
      },
      "92": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 191,
          column: 38
        }
      },
      "93": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 192,
          column: 44
        }
      },
      "94": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 194,
          column: 56
        }
      },
      "95": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "96": {
        start: {
          line: 197,
          column: 6
        },
        end: {
          line: 197,
          column: 40
        }
      },
      "97": {
        start: {
          line: 198,
          column: 6
        },
        end: {
          line: 198,
          column: 51
        }
      },
      "98": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 201,
          column: 32
        }
      },
      "99": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 203,
          column: 16
        }
      },
      "100": {
        start: {
          line: 207,
          column: 21
        },
        end: {
          line: 207,
          column: 37
        }
      },
      "101": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 210,
          column: 5
        }
      },
      "102": {
        start: {
          line: 209,
          column: 6
        },
        end: {
          line: 209,
          column: 34
        }
      },
      "103": {
        start: {
          line: 212,
          column: 17
        },
        end: {
          line: 212,
          column: 40
        }
      },
      "104": {
        start: {
          line: 213,
          column: 17
        },
        end: {
          line: 213,
          column: 38
        }
      },
      "105": {
        start: {
          line: 214,
          column: 17
        },
        end: {
          line: 214,
          column: 77
        }
      },
      "106": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 216,
          column: 46
        }
      },
      "107": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 217,
          column: 50
        }
      },
      "108": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 218,
          column: 32
        }
      },
      "109": {
        start: {
          line: 220,
          column: 4
        },
        end: {
          line: 220,
          column: 16
        }
      },
      "110": {
        start: {
          line: 226,
          column: 18
        },
        end: {
          line: 226,
          column: 34
        }
      },
      "111": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 229,
          column: 5
        }
      },
      "112": {
        start: {
          line: 228,
          column: 6
        },
        end: {
          line: 228,
          column: 33
        }
      },
      "113": {
        start: {
          line: 231,
          column: 23
        },
        end: {
          line: 231,
          column: 72
        }
      },
      "114": {
        start: {
          line: 232,
          column: 22
        },
        end: {
          line: 232,
          column: 41
        }
      },
      "115": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 234,
          column: 45
        }
      },
      "116": {
        start: {
          line: 235,
          column: 17
        },
        end: {
          line: 235,
          column: 49
        }
      },
      "117": {
        start: {
          line: 236,
          column: 4
        },
        end: {
          line: 236,
          column: 32
        }
      },
      "118": {
        start: {
          line: 238,
          column: 23
        },
        end: {
          line: 240,
          column: 15
        }
      },
      "119": {
        start: {
          line: 241,
          column: 23
        },
        end: {
          line: 245,
          column: 11
        }
      },
      "120": {
        start: {
          line: 248,
          column: 17
        },
        end: {
          line: 248,
          column: 40
        }
      },
      "121": {
        start: {
          line: 249,
          column: 4
        },
        end: {
          line: 251,
          column: 5
        }
      },
      "122": {
        start: {
          line: 250,
          column: 6
        },
        end: {
          line: 250,
          column: 41
        }
      },
      "123": {
        start: {
          line: 252,
          column: 19
        },
        end: {
          line: 252,
          column: 40
        }
      },
      "124": {
        start: {
          line: 253,
          column: 4
        },
        end: {
          line: 256,
          column: 19
        }
      },
      "125": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 260,
          column: 19
        }
      },
      "126": {
        start: {
          line: 264,
          column: 14
        },
        end: {
          line: 264,
          column: 30
        }
      },
      "127": {
        start: {
          line: 266,
          column: 22
        },
        end: {
          line: 266,
          column: 26
        }
      },
      "128": {
        start: {
          line: 268,
          column: 4
        },
        end: {
          line: 272,
          column: 5
        }
      },
      "129": {
        start: {
          line: 269,
          column: 6
        },
        end: {
          line: 269,
          column: 25
        }
      },
      "130": {
        start: {
          line: 270,
          column: 11
        },
        end: {
          line: 272,
          column: 5
        }
      },
      "131": {
        start: {
          line: 271,
          column: 6
        },
        end: {
          line: 271,
          column: 26
        }
      },
      "132": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 280,
          column: 5
        }
      },
      "133": {
        start: {
          line: 275,
          column: 6
        },
        end: {
          line: 279,
          column: 7
        }
      },
      "134": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 278,
          column: 21
        }
      },
      "135": {
        start: {
          line: 282,
          column: 4
        },
        end: {
          line: 282,
          column: 23
        }
      },
      "136": {
        start: {
          line: 286,
          column: 20
        },
        end: {
          line: 286,
          column: 36
        }
      },
      "137": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 291,
          column: 5
        }
      },
      "138": {
        start: {
          line: 288,
          column: 6
        },
        end: {
          line: 290,
          column: 25
        }
      },
      "139": {
        start: {
          line: 293,
          column: 21
        },
        end: {
          line: 293,
          column: 43
        }
      },
      "140": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 299,
          column: 5
        }
      },
      "141": {
        start: {
          line: 296,
          column: 6
        },
        end: {
          line: 298,
          column: 25
        }
      },
      "142": {
        start: {
          line: 301,
          column: 19
        },
        end: {
          line: 301,
          column: 41
        }
      },
      "143": {
        start: {
          line: 302,
          column: 24
        },
        end: {
          line: 302,
          column: 47
        }
      },
      "144": {
        start: {
          line: 303,
          column: 17
        },
        end: {
          line: 307,
          column: 18
        }
      },
      "145": {
        start: {
          line: 309,
          column: 4
        },
        end: {
          line: 309,
          column: 47
        }
      },
      "146": {
        start: {
          line: 311,
          column: 4
        },
        end: {
          line: 311,
          column: 16
        }
      },
      "147": {
        start: {
          line: 315,
          column: 20
        },
        end: {
          line: 315,
          column: 36
        }
      },
      "148": {
        start: {
          line: 316,
          column: 4
        },
        end: {
          line: 318,
          column: 5
        }
      },
      "149": {
        start: {
          line: 317,
          column: 6
        },
        end: {
          line: 317,
          column: 44
        }
      },
      "150": {
        start: {
          line: 320,
          column: 21
        },
        end: {
          line: 320,
          column: 43
        }
      },
      "151": {
        start: {
          line: 322,
          column: 4
        },
        end: {
          line: 326,
          column: 5
        }
      },
      "152": {
        start: {
          line: 323,
          column: 6
        },
        end: {
          line: 325,
          column: 23
        }
      },
      "153": {
        start: {
          line: 328,
          column: 18
        },
        end: {
          line: 328,
          column: 38
        }
      },
      "154": {
        start: {
          line: 331,
          column: 4
        },
        end: {
          line: 375,
          column: 5
        }
      },
      "155": {
        start: {
          line: 332,
          column: 22
        },
        end: {
          line: 332,
          column: 38
        }
      },
      "156": {
        start: {
          line: 333,
          column: 6
        },
        end: {
          line: 349,
          column: 7
        }
      },
      "157": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 338,
          column: 9
        }
      },
      "158": {
        start: {
          line: 335,
          column: 10
        },
        end: {
          line: 337,
          column: 27
        }
      },
      "159": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 345,
          column: 9
        }
      },
      "160": {
        start: {
          line: 344,
          column: 10
        },
        end: {
          line: 344,
          column: 44
        }
      },
      "161": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 347,
          column: 25
        }
      },
      "162": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 14
        }
      },
      "163": {
        start: {
          line: 351,
          column: 6
        },
        end: {
          line: 355,
          column: 7
        }
      },
      "164": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 354,
          column: 25
        }
      },
      "165": {
        start: {
          line: 357,
          column: 19
        },
        end: {
          line: 357,
          column: 38
        }
      },
      "166": {
        start: {
          line: 358,
          column: 6
        },
        end: {
          line: 362,
          column: 7
        }
      },
      "167": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 361,
          column: 22
        }
      },
      "168": {
        start: {
          line: 364,
          column: 6
        },
        end: {
          line: 372,
          column: 7
        }
      },
      "169": {
        start: {
          line: 365,
          column: 22
        },
        end: {
          line: 365,
          column: 41
        }
      },
      "170": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 369,
          column: 18
        }
      },
      "171": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 371,
          column: 29
        }
      },
      "172": {
        start: {
          line: 374,
          column: 6
        },
        end: {
          line: 374,
          column: 44
        }
      },
      "173": {
        start: {
          line: 377,
          column: 4
        },
        end: {
          line: 381,
          column: 19
        }
      },
      "174": {
        start: {
          line: 385,
          column: 16
        },
        end: {
          line: 385,
          column: 32
        }
      },
      "175": {
        start: {
          line: 386,
          column: 4
        },
        end: {
          line: 388,
          column: 5
        }
      },
      "176": {
        start: {
          line: 387,
          column: 6
        },
        end: {
          line: 387,
          column: 69
        }
      },
      "177": {
        start: {
          line: 390,
          column: 17
        },
        end: {
          line: 390,
          column: 55
        }
      },
      "178": {
        start: {
          line: 392,
          column: 4
        },
        end: {
          line: 392,
          column: 36
        }
      },
      "179": {
        start: {
          line: 393,
          column: 4
        },
        end: {
          line: 397,
          column: 5
        }
      },
      "180": {
        start: {
          line: 394,
          column: 6
        },
        end: {
          line: 396,
          column: 19
        }
      },
      "181": {
        start: {
          line: 399,
          column: 4
        },
        end: {
          line: 399,
          column: 41
        }
      },
      "182": {
        start: {
          line: 401,
          column: 4
        },
        end: {
          line: 401,
          column: 50
        }
      },
      "183": {
        start: {
          line: 402,
          column: 4
        },
        end: {
          line: 402,
          column: 32
        }
      },
      "184": {
        start: {
          line: 403,
          column: 4
        },
        end: {
          line: 403,
          column: 37
        }
      },
      "185": {
        start: {
          line: 405,
          column: 16
        },
        end: {
          line: 405,
          column: 32
        }
      },
      "186": {
        start: {
          line: 406,
          column: 4
        },
        end: {
          line: 408,
          column: 5
        }
      },
      "187": {
        start: {
          line: 407,
          column: 6
        },
        end: {
          line: 407,
          column: 66
        }
      },
      "188": {
        start: {
          line: 410,
          column: 4
        },
        end: {
          line: 410,
          column: 41
        }
      },
      "189": {
        start: {
          line: 412,
          column: 4
        },
        end: {
          line: 412,
          column: 16
        }
      },
      "190": {
        start: {
          line: 416,
          column: 20
        },
        end: {
          line: 416,
          column: 29
        }
      },
      "191": {
        start: {
          line: 417,
          column: 16
        },
        end: {
          line: 417,
          column: 32
        }
      },
      "192": {
        start: {
          line: 418,
          column: 4
        },
        end: {
          line: 420,
          column: 5
        }
      },
      "193": {
        start: {
          line: 419,
          column: 6
        },
        end: {
          line: 419,
          column: 57
        }
      },
      "194": {
        start: {
          line: 422,
          column: 17
        },
        end: {
          line: 422,
          column: 57
        }
      },
      "195": {
        start: {
          line: 423,
          column: 4
        },
        end: {
          line: 423,
          column: 43
        }
      },
      "196": {
        start: {
          line: 425,
          column: 4
        },
        end: {
          line: 425,
          column: 41
        }
      },
      "197": {
        start: {
          line: 426,
          column: 4
        },
        end: {
          line: 426,
          column: 16
        }
      },
      "198": {
        start: {
          line: 430,
          column: 20
        },
        end: {
          line: 430,
          column: 29
        }
      },
      "199": {
        start: {
          line: 431,
          column: 16
        },
        end: {
          line: 431,
          column: 32
        }
      },
      "200": {
        start: {
          line: 432,
          column: 4
        },
        end: {
          line: 434,
          column: 5
        }
      },
      "201": {
        start: {
          line: 433,
          column: 6
        },
        end: {
          line: 433,
          column: 53
        }
      },
      "202": {
        start: {
          line: 436,
          column: 17
        },
        end: {
          line: 436,
          column: 57
        }
      },
      "203": {
        start: {
          line: 437,
          column: 4
        },
        end: {
          line: 437,
          column: 43
        }
      },
      "204": {
        start: {
          line: 439,
          column: 4
        },
        end: {
          line: 441,
          column: 5
        }
      },
      "205": {
        start: {
          line: 440,
          column: 6
        },
        end: {
          line: 440,
          column: 32
        }
      },
      "206": {
        start: {
          line: 443,
          column: 4
        },
        end: {
          line: 443,
          column: 41
        }
      },
      "207": {
        start: {
          line: 444,
          column: 4
        },
        end: {
          line: 444,
          column: 16
        }
      },
      "208": {
        start: {
          line: 448,
          column: 16
        },
        end: {
          line: 448,
          column: 32
        }
      },
      "209": {
        start: {
          line: 451,
          column: 4
        },
        end: {
          line: 459,
          column: 5
        }
      },
      "210": {
        start: {
          line: 452,
          column: 6
        },
        end: {
          line: 452,
          column: 49
        }
      },
      "211": {
        start: {
          line: 453,
          column: 11
        },
        end: {
          line: 459,
          column: 5
        }
      },
      "212": {
        start: {
          line: 454,
          column: 6
        },
        end: {
          line: 454,
          column: 54
        }
      },
      "213": {
        start: {
          line: 456,
          column: 6
        },
        end: {
          line: 458,
          column: 19
        }
      },
      "214": {
        start: {
          line: 461,
          column: 4
        },
        end: {
          line: 461,
          column: 39
        }
      },
      "215": {
        start: {
          line: 462,
          column: 4
        },
        end: {
          line: 462,
          column: 41
        }
      },
      "216": {
        start: {
          line: 464,
          column: 4
        },
        end: {
          line: 464,
          column: 73
        }
      },
      "217": {
        start: {
          line: 465,
          column: 16
        },
        end: {
          line: 465,
          column: 32
        }
      },
      "218": {
        start: {
          line: 467,
          column: 4
        },
        end: {
          line: 483,
          column: 5
        }
      },
      "219": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 470,
          column: 36
        }
      },
      "220": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 471,
          column: 14
        }
      },
      "221": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 473,
          column: 36
        }
      },
      "222": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 474,
          column: 52
        }
      },
      "223": {
        start: {
          line: 475,
          column: 8
        },
        end: {
          line: 475,
          column: 36
        }
      },
      "224": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 476,
          column: 14
        }
      },
      "225": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 478,
          column: 26
        }
      },
      "226": {
        start: {
          line: 479,
          column: 8
        },
        end: {
          line: 479,
          column: 36
        }
      },
      "227": {
        start: {
          line: 480,
          column: 8
        },
        end: {
          line: 480,
          column: 14
        }
      },
      "228": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 482,
          column: 77
        }
      },
      "229": {
        start: {
          line: 485,
          column: 4
        },
        end: {
          line: 485,
          column: 16
        }
      },
      "230": {
        start: {
          line: 489,
          column: 16
        },
        end: {
          line: 489,
          column: 32
        }
      },
      "231": {
        start: {
          line: 490,
          column: 4
        },
        end: {
          line: 492,
          column: 5
        }
      },
      "232": {
        start: {
          line: 491,
          column: 6
        },
        end: {
          line: 491,
          column: 65
        }
      },
      "233": {
        start: {
          line: 494,
          column: 17
        },
        end: {
          line: 494,
          column: 57
        }
      },
      "234": {
        start: {
          line: 497,
          column: 4
        },
        end: {
          line: 503,
          column: 5
        }
      },
      "235": {
        start: {
          line: 498,
          column: 6
        },
        end: {
          line: 498,
          column: 32
        }
      },
      "236": {
        start: {
          line: 500,
          column: 6
        },
        end: {
          line: 502,
          column: 7
        }
      },
      "237": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 501,
          column: 14
        }
      },
      "238": {
        start: {
          line: 505,
          column: 4
        },
        end: {
          line: 522,
          column: 5
        }
      },
      "239": {
        start: {
          line: 506,
          column: 6
        },
        end: {
          line: 518,
          column: 7
        }
      },
      "240": {
        start: {
          line: 507,
          column: 8
        },
        end: {
          line: 509,
          column: 21
        }
      },
      "241": {
        start: {
          line: 511,
          column: 8
        },
        end: {
          line: 515,
          column: 10
        }
      },
      "242": {
        start: {
          line: 516,
          column: 8
        },
        end: {
          line: 516,
          column: 26
        }
      },
      "243": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 517,
          column: 36
        }
      },
      "244": {
        start: {
          line: 520,
          column: 6
        },
        end: {
          line: 520,
          column: 42
        }
      },
      "245": {
        start: {
          line: 521,
          column: 6
        },
        end: {
          line: 521,
          column: 43
        }
      },
      "246": {
        start: {
          line: 524,
          column: 4
        },
        end: {
          line: 524,
          column: 16
        }
      },
      "247": {
        start: {
          line: 532,
          column: 24
        },
        end: {
          line: 532,
          column: 32
        }
      },
      "248": {
        start: {
          line: 533,
          column: 22
        },
        end: {
          line: 533,
          column: 33
        }
      },
      "249": {
        start: {
          line: 534,
          column: 22
        },
        end: {
          line: 534,
          column: 28
        }
      },
      "250": {
        start: {
          line: 535,
          column: 24
        },
        end: {
          line: 535,
          column: 33
        }
      },
      "251": {
        start: {
          line: 538,
          column: 16
        },
        end: {
          line: 538,
          column: 32
        }
      },
      "252": {
        start: {
          line: 541,
          column: 4
        },
        end: {
          line: 547,
          column: 5
        }
      },
      "253": {
        start: {
          line: 546,
          column: 6
        },
        end: {
          line: 546,
          column: 94
        }
      },
      "254": {
        start: {
          line: 550,
          column: 17
        },
        end: {
          line: 550,
          column: 39
        }
      },
      "255": {
        start: {
          line: 553,
          column: 4
        },
        end: {
          line: 553,
          column: 43
        }
      },
      "256": {
        start: {
          line: 554,
          column: 4
        },
        end: {
          line: 554,
          column: 61
        }
      },
      "257": {
        start: {
          line: 557,
          column: 14
        },
        end: {
          line: 557,
          column: 30
        }
      },
      "258": {
        start: {
          line: 560,
          column: 18
        },
        end: {
          line: 560,
          column: 20
        }
      },
      "259": {
        start: {
          line: 564,
          column: 4
        },
        end: {
          line: 574,
          column: 45
        }
      },
      "260": {
        start: {
          line: 566,
          column: 6
        },
        end: {
          line: 566,
          column: 33
        }
      },
      "261": {
        start: {
          line: 567,
          column: 19
        },
        end: {
          line: 567,
          column: 41
        }
      },
      "262": {
        start: {
          line: 568,
          column: 6
        },
        end: {
          line: 568,
          column: 45
        }
      },
      "263": {
        start: {
          line: 570,
          column: 19
        },
        end: {
          line: 570,
          column: 75
        }
      },
      "264": {
        start: {
          line: 571,
          column: 6
        },
        end: {
          line: 571,
          column: 64
        }
      },
      "265": {
        start: {
          line: 573,
          column: 6
        },
        end: {
          line: 573,
          column: 29
        }
      },
      "266": {
        start: {
          line: 577,
          column: 4
        },
        end: {
          line: 589,
          column: 5
        }
      },
      "267": {
        start: {
          line: 579,
          column: 8
        },
        end: {
          line: 579,
          column: 36
        }
      },
      "268": {
        start: {
          line: 580,
          column: 8
        },
        end: {
          line: 580,
          column: 55
        }
      },
      "269": {
        start: {
          line: 581,
          column: 8
        },
        end: {
          line: 581,
          column: 36
        }
      },
      "270": {
        start: {
          line: 582,
          column: 8
        },
        end: {
          line: 582,
          column: 14
        }
      },
      "271": {
        start: {
          line: 584,
          column: 8
        },
        end: {
          line: 584,
          column: 36
        }
      },
      "272": {
        start: {
          line: 585,
          column: 8
        },
        end: {
          line: 585,
          column: 14
        }
      },
      "273": {
        start: {
          line: 588,
          column: 8
        },
        end: {
          line: 588,
          column: 86
        }
      },
      "274": {
        start: {
          line: 592,
          column: 4
        },
        end: {
          line: 592,
          column: 77
        }
      },
      "275": {
        start: {
          line: 596,
          column: 14
        },
        end: {
          line: 596,
          column: 30
        }
      },
      "276": {
        start: {
          line: 599,
          column: 4
        },
        end: {
          line: 601,
          column: 5
        }
      },
      "277": {
        start: {
          line: 600,
          column: 6
        },
        end: {
          line: 600,
          column: 60
        }
      },
      "278": {
        start: {
          line: 603,
          column: 4
        },
        end: {
          line: 606,
          column: 5
        }
      },
      "279": {
        start: {
          line: 605,
          column: 6
        },
        end: {
          line: 605,
          column: 18
        }
      },
      "280": {
        start: {
          line: 608,
          column: 4
        },
        end: {
          line: 650,
          column: 5
        }
      },
      "281": {
        start: {
          line: 610,
          column: 8
        },
        end: {
          line: 610,
          column: 31
        }
      },
      "282": {
        start: {
          line: 612,
          column: 8
        },
        end: {
          line: 612,
          column: 41
        }
      },
      "283": {
        start: {
          line: 615,
          column: 8
        },
        end: {
          line: 615,
          column: 30
        }
      },
      "284": {
        start: {
          line: 619,
          column: 8
        },
        end: {
          line: 619,
          column: 31
        }
      },
      "285": {
        start: {
          line: 621,
          column: 8
        },
        end: {
          line: 621,
          column: 33
        }
      },
      "286": {
        start: {
          line: 623,
          column: 8
        },
        end: {
          line: 623,
          column: 35
        }
      },
      "287": {
        start: {
          line: 625,
          column: 8
        },
        end: {
          line: 625,
          column: 35
        }
      },
      "288": {
        start: {
          line: 627,
          column: 8
        },
        end: {
          line: 627,
          column: 31
        }
      },
      "289": {
        start: {
          line: 629,
          column: 8
        },
        end: {
          line: 629,
          column: 33
        }
      },
      "290": {
        start: {
          line: 631,
          column: 8
        },
        end: {
          line: 631,
          column: 32
        }
      },
      "291": {
        start: {
          line: 633,
          column: 8
        },
        end: {
          line: 633,
          column: 34
        }
      },
      "292": {
        start: {
          line: 635,
          column: 8
        },
        end: {
          line: 635,
          column: 32
        }
      },
      "293": {
        start: {
          line: 637,
          column: 8
        },
        end: {
          line: 637,
          column: 43
        }
      },
      "294": {
        start: {
          line: 639,
          column: 8
        },
        end: {
          line: 639,
          column: 34
        }
      },
      "295": {
        start: {
          line: 641,
          column: 8
        },
        end: {
          line: 648,
          column: 9
        }
      },
      "296": {
        start: {
          line: 642,
          column: 10
        },
        end: {
          line: 647,
          column: 11
        }
      },
      "297": {
        start: {
          line: 642,
          column: 23
        },
        end: {
          line: 642,
          column: 24
        }
      },
      "298": {
        start: {
          line: 643,
          column: 24
        },
        end: {
          line: 643,
          column: 42
        }
      },
      "299": {
        start: {
          line: 644,
          column: 12
        },
        end: {
          line: 646,
          column: 13
        }
      },
      "300": {
        start: {
          line: 645,
          column: 14
        },
        end: {
          line: 645,
          column: 51
        }
      },
      "301": {
        start: {
          line: 649,
          column: 8
        },
        end: {
          line: 649,
          column: 76
        }
      },
      "302": {
        start: {
          line: 652,
          column: 4
        },
        end: {
          line: 652,
          column: 16
        }
      },
      "303": {
        start: {
          line: 656,
          column: 4
        },
        end: {
          line: 656,
          column: 31
        }
      },
      "304": {
        start: {
          line: 657,
          column: 23
        },
        end: {
          line: 657,
          column: 38
        }
      },
      "305": {
        start: {
          line: 659,
          column: 26
        },
        end: {
          line: 659,
          column: 106
        }
      },
      "306": {
        start: {
          line: 660,
          column: 19
        },
        end: {
          line: 660,
          column: 20
        }
      },
      "307": {
        start: {
          line: 661,
          column: 14
        },
        end: {
          line: 661,
          column: 16
        }
      },
      "308": {
        start: {
          line: 662,
          column: 18
        },
        end: {
          line: 662,
          column: 22
        }
      },
      "309": {
        start: {
          line: 666,
          column: 18
        },
        end: {
          line: 666,
          column: 45
        }
      },
      "310": {
        start: {
          line: 670,
          column: 4
        },
        end: {
          line: 691,
          column: 5
        }
      },
      "311": {
        start: {
          line: 671,
          column: 18
        },
        end: {
          line: 671,
          column: 28
        }
      },
      "312": {
        start: {
          line: 672,
          column: 18
        },
        end: {
          line: 672,
          column: 28
        }
      },
      "313": {
        start: {
          line: 673,
          column: 24
        },
        end: {
          line: 673,
          column: 34
        }
      },
      "314": {
        start: {
          line: 676,
          column: 6
        },
        end: {
          line: 680,
          column: 7
        }
      },
      "315": {
        start: {
          line: 677,
          column: 8
        },
        end: {
          line: 677,
          column: 22
        }
      },
      "316": {
        start: {
          line: 678,
          column: 13
        },
        end: {
          line: 680,
          column: 7
        }
      },
      "317": {
        start: {
          line: 679,
          column: 8
        },
        end: {
          line: 679,
          column: 22
        }
      },
      "318": {
        start: {
          line: 683,
          column: 6
        },
        end: {
          line: 690,
          column: 7
        }
      },
      "319": {
        start: {
          line: 685,
          column: 8
        },
        end: {
          line: 685,
          column: 19
        }
      },
      "320": {
        start: {
          line: 687,
          column: 8
        },
        end: {
          line: 687,
          column: 51
        }
      },
      "321": {
        start: {
          line: 689,
          column: 8
        },
        end: {
          line: 689,
          column: 19
        }
      },
      "322": {
        start: {
          line: 693,
          column: 4
        },
        end: {
          line: 697,
          column: 6
        }
      },
      "323": {
        start: {
          line: 702,
          column: 14
        },
        end: {
          line: 702,
          column: 30
        }
      },
      "324": {
        start: {
          line: 704,
          column: 4
        },
        end: {
          line: 748,
          column: 5
        }
      },
      "325": {
        start: {
          line: 705,
          column: 6
        },
        end: {
          line: 745,
          column: 7
        }
      },
      "326": {
        start: {
          line: 707,
          column: 8
        },
        end: {
          line: 710,
          column: 33
        }
      },
      "327": {
        start: {
          line: 711,
          column: 13
        },
        end: {
          line: 745,
          column: 7
        }
      },
      "328": {
        start: {
          line: 713,
          column: 8
        },
        end: {
          line: 713,
          column: 39
        }
      },
      "329": {
        start: {
          line: 714,
          column: 8
        },
        end: {
          line: 716,
          column: 9
        }
      },
      "330": {
        start: {
          line: 715,
          column: 10
        },
        end: {
          line: 715,
          column: 37
        }
      },
      "331": {
        start: {
          line: 718,
          column: 8
        },
        end: {
          line: 721,
          column: 30
        }
      },
      "332": {
        start: {
          line: 722,
          column: 13
        },
        end: {
          line: 745,
          column: 7
        }
      },
      "333": {
        start: {
          line: 724,
          column: 8
        },
        end: {
          line: 724,
          column: 25
        }
      },
      "334": {
        start: {
          line: 725,
          column: 20
        },
        end: {
          line: 725,
          column: 36
        }
      },
      "335": {
        start: {
          line: 727,
          column: 8
        },
        end: {
          line: 731,
          column: 9
        }
      },
      "336": {
        start: {
          line: 728,
          column: 10
        },
        end: {
          line: 730,
          column: 23
        }
      },
      "337": {
        start: {
          line: 735,
          column: 8
        },
        end: {
          line: 737,
          column: 21
        }
      },
      "338": {
        start: {
          line: 739,
          column: 8
        },
        end: {
          line: 742,
          column: 18
        }
      },
      "339": {
        start: {
          line: 744,
          column: 8
        },
        end: {
          line: 744,
          column: 14
        }
      },
      "340": {
        start: {
          line: 747,
          column: 6
        },
        end: {
          line: 747,
          column: 29
        }
      },
      "341": {
        start: {
          line: 750,
          column: 4
        },
        end: {
          line: 750,
          column: 16
        }
      },
      "342": {
        start: {
          line: 754,
          column: 15
        },
        end: {
          line: 754,
          column: 35
        }
      },
      "343": {
        start: {
          line: 755,
          column: 4
        },
        end: {
          line: 755,
          column: 16
        }
      },
      "344": {
        start: {
          line: 759,
          column: 15
        },
        end: {
          line: 759,
          column: 29
        }
      },
      "345": {
        start: {
          line: 760,
          column: 4
        },
        end: {
          line: 771,
          column: 5
        }
      },
      "346": {
        start: {
          line: 761,
          column: 23
        },
        end: {
          line: 761,
          column: 37
        }
      },
      "347": {
        start: {
          line: 762,
          column: 23
        },
        end: {
          line: 762,
          column: 27
        }
      },
      "348": {
        start: {
          line: 763,
          column: 6
        },
        end: {
          line: 763,
          column: 57
        }
      },
      "349": {
        start: {
          line: 764,
          column: 6
        },
        end: {
          line: 764,
          column: 27
        }
      },
      "350": {
        start: {
          line: 765,
          column: 6
        },
        end: {
          line: 765,
          column: 27
        }
      },
      "351": {
        start: {
          line: 766,
          column: 6
        },
        end: {
          line: 770,
          column: 7
        }
      },
      "352": {
        start: {
          line: 767,
          column: 8
        },
        end: {
          line: 767,
          column: 36
        }
      },
      "353": {
        start: {
          line: 769,
          column: 8
        },
        end: {
          line: 769,
          column: 26
        }
      },
      "354": {
        start: {
          line: 773,
          column: 4
        },
        end: {
          line: 773,
          column: 16
        }
      },
      "355": {
        start: {
          line: 777,
          column: 15
        },
        end: {
          line: 777,
          column: 30
        }
      },
      "356": {
        start: {
          line: 778,
          column: 4
        },
        end: {
          line: 784,
          column: 5
        }
      },
      "357": {
        start: {
          line: 779,
          column: 20
        },
        end: {
          line: 779,
          column: 35
        }
      },
      "358": {
        start: {
          line: 780,
          column: 6
        },
        end: {
          line: 783,
          column: 15
        }
      },
      "359": {
        start: {
          line: 785,
          column: 4
        },
        end: {
          line: 785,
          column: 16
        }
      },
      "360": {
        start: {
          line: 789,
          column: 15
        },
        end: {
          line: 789,
          column: 30
        }
      },
      "361": {
        start: {
          line: 790,
          column: 4
        },
        end: {
          line: 796,
          column: 5
        }
      },
      "362": {
        start: {
          line: 791,
          column: 20
        },
        end: {
          line: 791,
          column: 35
        }
      },
      "363": {
        start: {
          line: 792,
          column: 6
        },
        end: {
          line: 795,
          column: 15
        }
      },
      "364": {
        start: {
          line: 797,
          column: 4
        },
        end: {
          line: 797,
          column: 16
        }
      },
      "365": {
        start: {
          line: 801,
          column: 16
        },
        end: {
          line: 801,
          column: 32
        }
      },
      "366": {
        start: {
          line: 802,
          column: 4
        },
        end: {
          line: 806,
          column: 5
        }
      },
      "367": {
        start: {
          line: 803,
          column: 6
        },
        end: {
          line: 805,
          column: 25
        }
      },
      "368": {
        start: {
          line: 807,
          column: 4
        },
        end: {
          line: 807,
          column: 26
        }
      },
      "369": {
        start: {
          line: 811,
          column: 15
        },
        end: {
          line: 811,
          column: 29
        }
      },
      "370": {
        start: {
          line: 812,
          column: 4
        },
        end: {
          line: 841,
          column: 5
        }
      },
      "371": {
        start: {
          line: 814,
          column: 18
        },
        end: {
          line: 814,
          column: 34
        }
      },
      "372": {
        start: {
          line: 815,
          column: 6
        },
        end: {
          line: 817,
          column: 7
        }
      },
      "373": {
        start: {
          line: 816,
          column: 8
        },
        end: {
          line: 816,
          column: 14
        }
      },
      "374": {
        start: {
          line: 818,
          column: 21
        },
        end: {
          line: 818,
          column: 75
        }
      },
      "375": {
        start: {
          line: 820,
          column: 6
        },
        end: {
          line: 822,
          column: 7
        }
      },
      "376": {
        start: {
          line: 821,
          column: 8
        },
        end: {
          line: 821,
          column: 28
        }
      },
      "377": {
        start: {
          line: 823,
          column: 6
        },
        end: {
          line: 840,
          column: 7
        }
      },
      "378": {
        start: {
          line: 824,
          column: 22
        },
        end: {
          line: 824,
          column: 36
        }
      },
      "379": {
        start: {
          line: 825,
          column: 8
        },
        end: {
          line: 828,
          column: 17
        }
      },
      "380": {
        start: {
          line: 829,
          column: 8
        },
        end: {
          line: 833,
          column: 9
        }
      },
      "381": {
        start: {
          line: 830,
          column: 10
        },
        end: {
          line: 832,
          column: 18
        }
      },
      "382": {
        start: {
          line: 836,
          column: 8
        },
        end: {
          line: 838,
          column: 9
        }
      },
      "383": {
        start: {
          line: 837,
          column: 10
        },
        end: {
          line: 837,
          column: 30
        }
      },
      "384": {
        start: {
          line: 839,
          column: 8
        },
        end: {
          line: 839,
          column: 14
        }
      },
      "385": {
        start: {
          line: 842,
          column: 4
        },
        end: {
          line: 842,
          column: 16
        }
      },
      "386": {
        start: {
          line: 848,
          column: 15
        },
        end: {
          line: 848,
          column: 34
        }
      },
      "387": {
        start: {
          line: 850,
          column: 4
        },
        end: {
          line: 861,
          column: 5
        }
      },
      "388": {
        start: {
          line: 852,
          column: 18
        },
        end: {
          line: 852,
          column: 40
        }
      },
      "389": {
        start: {
          line: 854,
          column: 20
        },
        end: {
          line: 854,
          column: 39
        }
      },
      "390": {
        start: {
          line: 856,
          column: 6
        },
        end: {
          line: 856,
          column: 64
        }
      },
      "391": {
        start: {
          line: 858,
          column: 6
        },
        end: {
          line: 860,
          column: 7
        }
      },
      "392": {
        start: {
          line: 859,
          column: 8
        },
        end: {
          line: 859,
          column: 60
        }
      },
      "393": {
        start: {
          line: 863,
          column: 4
        },
        end: {
          line: 863,
          column: 16
        }
      },
      "394": {
        start: {
          line: 867,
          column: 23
        },
        end: {
          line: 867,
          column: 71
        }
      },
      "395": {
        start: {
          line: 868,
          column: 17
        },
        end: {
          line: 868,
          column: 35
        }
      },
      "396": {
        start: {
          line: 869,
          column: 16
        },
        end: {
          line: 869,
          column: 18
        }
      },
      "397": {
        start: {
          line: 871,
          column: 4
        },
        end: {
          line: 885,
          column: 5
        }
      },
      "398": {
        start: {
          line: 872,
          column: 18
        },
        end: {
          line: 872,
          column: 34
        }
      },
      "399": {
        start: {
          line: 874,
          column: 6
        },
        end: {
          line: 884,
          column: 7
        }
      },
      "400": {
        start: {
          line: 875,
          column: 8
        },
        end: {
          line: 875,
          column: 14
        }
      },
      "401": {
        start: {
          line: 876,
          column: 13
        },
        end: {
          line: 884,
          column: 7
        }
      },
      "402": {
        start: {
          line: 877,
          column: 8
        },
        end: {
          line: 880,
          column: 22
        }
      },
      "403": {
        start: {
          line: 882,
          column: 8
        },
        end: {
          line: 882,
          column: 28
        }
      },
      "404": {
        start: {
          line: 883,
          column: 8
        },
        end: {
          line: 883,
          column: 14
        }
      },
      "405": {
        start: {
          line: 887,
          column: 4
        },
        end: {
          line: 894,
          column: 5
        }
      },
      "406": {
        start: {
          line: 888,
          column: 6
        },
        end: {
          line: 891,
          column: 13
        }
      },
      "407": {
        start: {
          line: 893,
          column: 6
        },
        end: {
          line: 893,
          column: 18
        }
      },
      "408": {
        start: {
          line: 899,
          column: 15
        },
        end: {
          line: 899,
          column: 30
        }
      },
      "409": {
        start: {
          line: 900,
          column: 4
        },
        end: {
          line: 906,
          column: 5
        }
      },
      "410": {
        start: {
          line: 901,
          column: 20
        },
        end: {
          line: 901,
          column: 35
        }
      },
      "411": {
        start: {
          line: 902,
          column: 6
        },
        end: {
          line: 905,
          column: 15
        }
      },
      "412": {
        start: {
          line: 907,
          column: 4
        },
        end: {
          line: 907,
          column: 16
        }
      },
      "413": {
        start: {
          line: 911,
          column: 15
        },
        end: {
          line: 911,
          column: 30
        }
      },
      "414": {
        start: {
          line: 912,
          column: 4
        },
        end: {
          line: 918,
          column: 5
        }
      },
      "415": {
        start: {
          line: 913,
          column: 20
        },
        end: {
          line: 913,
          column: 35
        }
      },
      "416": {
        start: {
          line: 914,
          column: 6
        },
        end: {
          line: 917,
          column: 15
        }
      },
      "417": {
        start: {
          line: 919,
          column: 4
        },
        end: {
          line: 919,
          column: 16
        }
      },
      "418": {
        start: {
          line: 923,
          column: 15
        },
        end: {
          line: 923,
          column: 30
        }
      },
      "419": {
        start: {
          line: 924,
          column: 4
        },
        end: {
          line: 930,
          column: 5
        }
      },
      "420": {
        start: {
          line: 925,
          column: 20
        },
        end: {
          line: 925,
          column: 35
        }
      },
      "421": {
        start: {
          line: 926,
          column: 6
        },
        end: {
          line: 929,
          column: 15
        }
      },
      "422": {
        start: {
          line: 931,
          column: 4
        },
        end: {
          line: 931,
          column: 16
        }
      },
      "423": {
        start: {
          line: 935,
          column: 15
        },
        end: {
          line: 935,
          column: 30
        }
      },
      "424": {
        start: {
          line: 936,
          column: 4
        },
        end: {
          line: 942,
          column: 5
        }
      },
      "425": {
        start: {
          line: 937,
          column: 20
        },
        end: {
          line: 937,
          column: 35
        }
      },
      "426": {
        start: {
          line: 938,
          column: 6
        },
        end: {
          line: 941,
          column: 15
        }
      },
      "427": {
        start: {
          line: 943,
          column: 4
        },
        end: {
          line: 943,
          column: 16
        }
      },
      "428": {
        start: {
          line: 947,
          column: 15
        },
        end: {
          line: 947,
          column: 35
        }
      },
      "429": {
        start: {
          line: 948,
          column: 4
        },
        end: {
          line: 954,
          column: 5
        }
      },
      "430": {
        start: {
          line: 949,
          column: 20
        },
        end: {
          line: 949,
          column: 40
        }
      },
      "431": {
        start: {
          line: 950,
          column: 6
        },
        end: {
          line: 953,
          column: 15
        }
      },
      "432": {
        start: {
          line: 955,
          column: 4
        },
        end: {
          line: 955,
          column: 16
        }
      },
      "433": {
        start: {
          line: 959,
          column: 15
        },
        end: {
          line: 959,
          column: 30
        }
      },
      "434": {
        start: {
          line: 960,
          column: 4
        },
        end: {
          line: 966,
          column: 5
        }
      },
      "435": {
        start: {
          line: 961,
          column: 20
        },
        end: {
          line: 961,
          column: 35
        }
      },
      "436": {
        start: {
          line: 962,
          column: 6
        },
        end: {
          line: 965,
          column: 15
        }
      },
      "437": {
        start: {
          line: 967,
          column: 4
        },
        end: {
          line: 967,
          column: 16
        }
      },
      "438": {
        start: {
          line: 971,
          column: 15
        },
        end: {
          line: 971,
          column: 30
        }
      },
      "439": {
        start: {
          line: 972,
          column: 4
        },
        end: {
          line: 978,
          column: 5
        }
      },
      "440": {
        start: {
          line: 973,
          column: 20
        },
        end: {
          line: 973,
          column: 35
        }
      },
      "441": {
        start: {
          line: 974,
          column: 6
        },
        end: {
          line: 977,
          column: 15
        }
      },
      "442": {
        start: {
          line: 979,
          column: 4
        },
        end: {
          line: 979,
          column: 16
        }
      },
      "443": {
        start: {
          line: 983,
          column: 15
        },
        end: {
          line: 983,
          column: 32
        }
      },
      "444": {
        start: {
          line: 984,
          column: 4
        },
        end: {
          line: 990,
          column: 5
        }
      },
      "445": {
        start: {
          line: 985,
          column: 20
        },
        end: {
          line: 985,
          column: 37
        }
      },
      "446": {
        start: {
          line: 986,
          column: 6
        },
        end: {
          line: 989,
          column: 15
        }
      },
      "447": {
        start: {
          line: 991,
          column: 4
        },
        end: {
          line: 991,
          column: 16
        }
      },
      "448": {
        start: {
          line: 995,
          column: 16
        },
        end: {
          line: 995,
          column: 32
        }
      },
      "449": {
        start: {
          line: 998,
          column: 4
        },
        end: {
          line: 1008,
          column: 5
        }
      },
      "450": {
        start: {
          line: 999,
          column: 6
        },
        end: {
          line: 1001,
          column: 31
        }
      },
      "451": {
        start: {
          line: 1002,
          column: 11
        },
        end: {
          line: 1008,
          column: 5
        }
      },
      "452": {
        start: {
          line: 1003,
          column: 6
        },
        end: {
          line: 1005,
          column: 31
        }
      },
      "453": {
        start: {
          line: 1007,
          column: 6
        },
        end: {
          line: 1007,
          column: 33
        }
      },
      "454": {
        start: {
          line: 1010,
          column: 4
        },
        end: {
          line: 1012,
          column: 5
        }
      },
      "455": {
        start: {
          line: 1011,
          column: 6
        },
        end: {
          line: 1011,
          column: 36
        }
      },
      "456": {
        start: {
          line: 1014,
          column: 4
        },
        end: {
          line: 1014,
          column: 16
        }
      },
      "457": {
        start: {
          line: 1018,
          column: 16
        },
        end: {
          line: 1018,
          column: 32
        }
      },
      "458": {
        start: {
          line: 1020,
          column: 15
        },
        end: {
          line: 1020,
          column: 19
        }
      },
      "459": {
        start: {
          line: 1022,
          column: 4
        },
        end: {
          line: 1044,
          column: 5
        }
      },
      "460": {
        start: {
          line: 1023,
          column: 6
        },
        end: {
          line: 1023,
          column: 56
        }
      },
      "461": {
        start: {
          line: 1024,
          column: 11
        },
        end: {
          line: 1044,
          column: 5
        }
      },
      "462": {
        start: {
          line: 1025,
          column: 6
        },
        end: {
          line: 1025,
          column: 22
        }
      },
      "463": {
        start: {
          line: 1026,
          column: 11
        },
        end: {
          line: 1044,
          column: 5
        }
      },
      "464": {
        start: {
          line: 1027,
          column: 6
        },
        end: {
          line: 1027,
          column: 36
        }
      },
      "465": {
        start: {
          line: 1028,
          column: 11
        },
        end: {
          line: 1044,
          column: 5
        }
      },
      "466": {
        start: {
          line: 1029,
          column: 6
        },
        end: {
          line: 1029,
          column: 34
        }
      },
      "467": {
        start: {
          line: 1030,
          column: 11
        },
        end: {
          line: 1044,
          column: 5
        }
      },
      "468": {
        start: {
          line: 1031,
          column: 6
        },
        end: {
          line: 1039,
          column: 7
        }
      },
      "469": {
        start: {
          line: 1032,
          column: 8
        },
        end: {
          line: 1032,
          column: 19
        }
      },
      "470": {
        start: {
          line: 1033,
          column: 13
        },
        end: {
          line: 1039,
          column: 7
        }
      },
      "471": {
        start: {
          line: 1034,
          column: 8
        },
        end: {
          line: 1034,
          column: 20
        }
      },
      "472": {
        start: {
          line: 1036,
          column: 8
        },
        end: {
          line: 1038,
          column: 21
        }
      },
      "473": {
        start: {
          line: 1040,
          column: 11
        },
        end: {
          line: 1044,
          column: 5
        }
      },
      "474": {
        start: {
          line: 1041,
          column: 6
        },
        end: {
          line: 1041,
          column: 17
        }
      },
      "475": {
        start: {
          line: 1042,
          column: 11
        },
        end: {
          line: 1044,
          column: 5
        }
      },
      "476": {
        start: {
          line: 1043,
          column: 6
        },
        end: {
          line: 1043,
          column: 56
        }
      },
      "477": {
        start: {
          line: 1046,
          column: 4
        },
        end: {
          line: 1055,
          column: 5
        }
      },
      "478": {
        start: {
          line: 1047,
          column: 6
        },
        end: {
          line: 1047,
          column: 59
        }
      },
      "479": {
        start: {
          line: 1048,
          column: 11
        },
        end: {
          line: 1055,
          column: 5
        }
      },
      "480": {
        start: {
          line: 1049,
          column: 6
        },
        end: {
          line: 1049,
          column: 64
        }
      },
      "481": {
        start: {
          line: 1053,
          column: 6
        },
        end: {
          line: 1053,
          column: 26
        }
      },
      "482": {
        start: {
          line: 1054,
          column: 6
        },
        end: {
          line: 1054,
          column: 35
        }
      },
      "483": {
        start: {
          line: 1057,
          column: 4
        },
        end: {
          line: 1059,
          column: 5
        }
      },
      "484": {
        start: {
          line: 1058,
          column: 6
        },
        end: {
          line: 1058,
          column: 37
        }
      },
      "485": {
        start: {
          line: 1061,
          column: 4
        },
        end: {
          line: 1065,
          column: 5
        }
      },
      "486": {
        start: {
          line: 1062,
          column: 6
        },
        end: {
          line: 1062,
          column: 18
        }
      },
      "487": {
        start: {
          line: 1064,
          column: 6
        },
        end: {
          line: 1064,
          column: 80
        }
      },
      "488": {
        start: {
          line: 1069,
          column: 16
        },
        end: {
          line: 1069,
          column: 47
        }
      },
      "489": {
        start: {
          line: 1070,
          column: 15
        },
        end: {
          line: 1070,
          column: 24
        }
      },
      "490": {
        start: {
          line: 1072,
          column: 4
        },
        end: {
          line: 1074,
          column: 5
        }
      },
      "491": {
        start: {
          line: 1073,
          column: 6
        },
        end: {
          line: 1073,
          column: 58
        }
      },
      "492": {
        start: {
          line: 1076,
          column: 4
        },
        end: {
          line: 1076,
          column: 57
        }
      },
      "493": {
        start: {
          line: 1080,
          column: 4
        },
        end: {
          line: 1085,
          column: 5
        }
      },
      "494": {
        start: {
          line: 1083,
          column: 19
        },
        end: {
          line: 1083,
          column: 42
        }
      },
      "495": {
        start: {
          line: 1084,
          column: 6
        },
        end: {
          line: 1084,
          column: 32
        }
      },
      "496": {
        start: {
          line: 1086,
          column: 4
        },
        end: {
          line: 1086,
          column: 14
        }
      },
      "497": {
        start: {
          line: 1090,
          column: 4
        },
        end: {
          line: 1103,
          column: 5
        }
      },
      "498": {
        start: {
          line: 1091,
          column: 19
        },
        end: {
          line: 1091,
          column: 41
        }
      },
      "499": {
        start: {
          line: 1093,
          column: 6
        },
        end: {
          line: 1102,
          column: 8
        }
      },
      "500": {
        start: {
          line: 1105,
          column: 4
        },
        end: {
          line: 1105,
          column: 16
        }
      },
      "501": {
        start: {
          line: 1109,
          column: 20
        },
        end: {
          line: 1109,
          column: 36
        }
      },
      "502": {
        start: {
          line: 1110,
          column: 4
        },
        end: {
          line: 1112,
          column: 5
        }
      },
      "503": {
        start: {
          line: 1111,
          column: 6
        },
        end: {
          line: 1111,
          column: 57
        }
      },
      "504": {
        start: {
          line: 1114,
          column: 17
        },
        end: {
          line: 1114,
          column: 39
        }
      },
      "505": {
        start: {
          line: 1115,
          column: 17
        },
        end: {
          line: 1115,
          column: 43
        }
      },
      "506": {
        start: {
          line: 1117,
          column: 4
        },
        end: {
          line: 1117,
          column: 47
        }
      },
      "507": {
        start: {
          line: 1118,
          column: 17
        },
        end: {
          line: 1122,
          column: 5
        }
      },
      "508": {
        start: {
          line: 1123,
          column: 4
        },
        end: {
          line: 1123,
          column: 32
        }
      },
      "509": {
        start: {
          line: 1125,
          column: 17
        },
        end: {
          line: 1134,
          column: 5
        }
      },
      "510": {
        start: {
          line: 1136,
          column: 4
        },
        end: {
          line: 1140,
          column: 6
        }
      },
      "511": {
        start: {
          line: 1144,
          column: 14
        },
        end: {
          line: 1144,
          column: 30
        }
      },
      "512": {
        start: {
          line: 1147,
          column: 4
        },
        end: {
          line: 1159,
          column: 5
        }
      },
      "513": {
        start: {
          line: 1149,
          column: 8
        },
        end: {
          line: 1149,
          column: 54
        }
      },
      "514": {
        start: {
          line: 1150,
          column: 8
        },
        end: {
          line: 1150,
          column: 14
        }
      },
      "515": {
        start: {
          line: 1152,
          column: 8
        },
        end: {
          line: 1152,
          column: 54
        }
      },
      "516": {
        start: {
          line: 1153,
          column: 8
        },
        end: {
          line: 1153,
          column: 14
        }
      },
      "517": {
        start: {
          line: 1155,
          column: 8
        },
        end: {
          line: 1155,
          column: 53
        }
      },
      "518": {
        start: {
          line: 1156,
          column: 8
        },
        end: {
          line: 1156,
          column: 14
        }
      },
      "519": {
        start: {
          line: 1158,
          column: 8
        },
        end: {
          line: 1158,
          column: 20
        }
      },
      "520": {
        start: {
          line: 1161,
          column: 4
        },
        end: {
          line: 1201,
          column: 5
        }
      },
      "521": {
        start: {
          line: 1162,
          column: 19
        },
        end: {
          line: 1162,
          column: 40
        }
      },
      "522": {
        start: {
          line: 1163,
          column: 6
        },
        end: {
          line: 1168,
          column: 7
        }
      },
      "523": {
        start: {
          line: 1166,
          column: 8
        },
        end: {
          line: 1166,
          column: 25
        }
      },
      "524": {
        start: {
          line: 1167,
          column: 8
        },
        end: {
          line: 1167,
          column: 14
        }
      },
      "525": {
        start: {
          line: 1170,
          column: 6
        },
        end: {
          line: 1176,
          column: 7
        }
      },
      "526": {
        start: {
          line: 1171,
          column: 8
        },
        end: {
          line: 1175,
          column: 9
        }
      },
      "527": {
        start: {
          line: 1172,
          column: 10
        },
        end: {
          line: 1174,
          column: 23
        }
      },
      "528": {
        start: {
          line: 1178,
          column: 6
        },
        end: {
          line: 1200,
          column: 7
        }
      },
      "529": {
        start: {
          line: 1180,
          column: 20
        },
        end: {
          line: 1180,
          column: 39
        }
      },
      "530": {
        start: {
          line: 1184,
          column: 8
        },
        end: {
          line: 1188,
          column: 9
        }
      },
      "531": {
        start: {
          line: 1185,
          column: 10
        },
        end: {
          line: 1187,
          column: 23
        }
      },
      "532": {
        start: {
          line: 1191,
          column: 22
        },
        end: {
          line: 1191,
          column: 44
        }
      },
      "533": {
        start: {
          line: 1192,
          column: 8
        },
        end: {
          line: 1195,
          column: 18
        }
      },
      "534": {
        start: {
          line: 1198,
          column: 21
        },
        end: {
          line: 1198,
          column: 43
        }
      },
      "535": {
        start: {
          line: 1199,
          column: 8
        },
        end: {
          line: 1199,
          column: 28
        }
      },
      "536": {
        start: {
          line: 1203,
          column: 4
        },
        end: {
          line: 1203,
          column: 16
        }
      },
      "537": {
        start: {
          line: 1207,
          column: 14
        },
        end: {
          line: 1207,
          column: 30
        }
      },
      "538": {
        start: {
          line: 1208,
          column: 4
        },
        end: {
          line: 1214,
          column: 5
        }
      },
      "539": {
        start: {
          line: 1209,
          column: 6
        },
        end: {
          line: 1213,
          column: 7
        }
      },
      "540": {
        start: {
          line: 1210,
          column: 8
        },
        end: {
          line: 1210,
          column: 20
        }
      },
      "541": {
        start: {
          line: 1212,
          column: 8
        },
        end: {
          line: 1212,
          column: 63
        }
      },
      "542": {
        start: {
          line: 1216,
          column: 4
        },
        end: {
          line: 1218,
          column: 5
        }
      },
      "543": {
        start: {
          line: 1217,
          column: 6
        },
        end: {
          line: 1217,
          column: 29
        }
      },
      "544": {
        start: {
          line: 1220,
          column: 17
        },
        end: {
          line: 1220,
          column: 58
        }
      },
      "545": {
        start: {
          line: 1221,
          column: 19
        },
        end: {
          line: 1221,
          column: 63
        }
      },
      "546": {
        start: {
          line: 1222,
          column: 21
        },
        end: {
          line: 1222,
          column: 26
        }
      },
      "547": {
        start: {
          line: 1224,
          column: 4
        },
        end: {
          line: 1253,
          column: 5
        }
      },
      "548": {
        start: {
          line: 1225,
          column: 6
        },
        end: {
          line: 1225,
          column: 29
        }
      },
      "549": {
        start: {
          line: 1226,
          column: 6
        },
        end: {
          line: 1231,
          column: 7
        }
      },
      "550": {
        start: {
          line: 1227,
          column: 8
        },
        end: {
          line: 1227,
          column: 25
        }
      },
      "551": {
        start: {
          line: 1228,
          column: 8
        },
        end: {
          line: 1228,
          column: 14
        }
      },
      "552": {
        start: {
          line: 1229,
          column: 13
        },
        end: {
          line: 1231,
          column: 7
        }
      },
      "553": {
        start: {
          line: 1230,
          column: 8
        },
        end: {
          line: 1230,
          column: 14
        }
      },
      "554": {
        start: {
          line: 1233,
          column: 6
        },
        end: {
          line: 1250,
          column: 7
        }
      },
      "555": {
        start: {
          line: 1234,
          column: 8
        },
        end: {
          line: 1236,
          column: 21
        }
      },
      "556": {
        start: {
          line: 1238,
          column: 20
        },
        end: {
          line: 1238,
          column: 42
        }
      },
      "557": {
        start: {
          line: 1240,
          column: 8
        },
        end: {
          line: 1249,
          column: 9
        }
      },
      "558": {
        start: {
          line: 1241,
          column: 10
        },
        end: {
          line: 1246,
          column: 12
        }
      },
      "559": {
        start: {
          line: 1248,
          column: 10
        },
        end: {
          line: 1248,
          column: 29
        }
      },
      "560": {
        start: {
          line: 1252,
          column: 6
        },
        end: {
          line: 1252,
          column: 24
        }
      },
      "561": {
        start: {
          line: 1255,
          column: 4
        },
        end: {
          line: 1257,
          column: 5
        }
      },
      "562": {
        start: {
          line: 1256,
          column: 6
        },
        end: {
          line: 1256,
          column: 28
        }
      },
      "563": {
        start: {
          line: 1259,
          column: 4
        },
        end: {
          line: 1259,
          column: 16
        }
      },
      "564": {
        start: {
          line: 1263,
          column: 17
        },
        end: {
          line: 1263,
          column: 35
        }
      },
      "565": {
        start: {
          line: 1264,
          column: 4
        },
        end: {
          line: 1264,
          column: 36
        }
      },
      "566": {
        start: {
          line: 1266,
          column: 16
        },
        end: {
          line: 1266,
          column: 28
        }
      },
      "567": {
        start: {
          line: 1268,
          column: 4
        },
        end: {
          line: 1268,
          column: 30
        }
      },
      "568": {
        start: {
          line: 1269,
          column: 4
        },
        end: {
          line: 1269,
          column: 15
        }
      },
      "569": {
        start: {
          line: 1274,
          column: 16
        },
        end: {
          line: 1274,
          column: 18
        }
      },
      "570": {
        start: {
          line: 1276,
          column: 4
        },
        end: {
          line: 1331,
          column: 5
        }
      },
      "571": {
        start: {
          line: 1277,
          column: 6
        },
        end: {
          line: 1330,
          column: 7
        }
      },
      "572": {
        start: {
          line: 1278,
          column: 19
        },
        end: {
          line: 1278,
          column: 28
        }
      },
      "573": {
        start: {
          line: 1279,
          column: 26
        },
        end: {
          line: 1279,
          column: 42
        }
      },
      "574": {
        start: {
          line: 1280,
          column: 24
        },
        end: {
          line: 1280,
          column: 52
        }
      },
      "575": {
        start: {
          line: 1285,
          column: 8
        },
        end: {
          line: 1289,
          column: 9
        }
      },
      "576": {
        start: {
          line: 1287,
          column: 10
        },
        end: {
          line: 1287,
          column: 42
        }
      },
      "577": {
        start: {
          line: 1288,
          column: 10
        },
        end: {
          line: 1288,
          column: 45
        }
      },
      "578": {
        start: {
          line: 1292,
          column: 8
        },
        end: {
          line: 1303,
          column: 9
        }
      },
      "579": {
        start: {
          line: 1302,
          column: 10
        },
        end: {
          line: 1302,
          column: 42
        }
      },
      "580": {
        start: {
          line: 1305,
          column: 8
        },
        end: {
          line: 1309,
          column: 21
        }
      },
      "581": {
        start: {
          line: 1310,
          column: 13
        },
        end: {
          line: 1330,
          column: 7
        }
      },
      "582": {
        start: {
          line: 1311,
          column: 8
        },
        end: {
          line: 1311,
          column: 43
        }
      },
      "583": {
        start: {
          line: 1312,
          column: 18
        },
        end: {
          line: 1312,
          column: 39
        }
      },
      "584": {
        start: {
          line: 1313,
          column: 8
        },
        end: {
          line: 1315,
          column: 9
        }
      },
      "585": {
        start: {
          line: 1314,
          column: 10
        },
        end: {
          line: 1314,
          column: 16
        }
      },
      "586": {
        start: {
          line: 1316,
          column: 8
        },
        end: {
          line: 1316,
          column: 20
        }
      },
      "587": {
        start: {
          line: 1317,
          column: 13
        },
        end: {
          line: 1330,
          column: 7
        }
      },
      "588": {
        start: {
          line: 1318,
          column: 18
        },
        end: {
          line: 1318,
          column: 40
        }
      },
      "589": {
        start: {
          line: 1319,
          column: 8
        },
        end: {
          line: 1319,
          column: 43
        }
      },
      "590": {
        start: {
          line: 1320,
          column: 8
        },
        end: {
          line: 1320,
          column: 39
        }
      },
      "591": {
        start: {
          line: 1321,
          column: 8
        },
        end: {
          line: 1321,
          column: 63
        }
      },
      "592": {
        start: {
          line: 1322,
          column: 13
        },
        end: {
          line: 1330,
          column: 7
        }
      },
      "593": {
        start: {
          line: 1323,
          column: 8
        },
        end: {
          line: 1325,
          column: 18
        }
      },
      "594": {
        start: {
          line: 1328,
          column: 8
        },
        end: {
          line: 1329,
          column: 43
        }
      },
      "595": {
        start: {
          line: 1333,
          column: 4
        },
        end: {
          line: 1333,
          column: 15
        }
      },
      "596": {
        start: {
          line: 1337,
          column: 4
        },
        end: {
          line: 1337,
          column: 55
        }
      },
      "597": {
        start: {
          line: 1341,
          column: 4
        },
        end: {
          line: 1341,
          column: 51
        }
      },
      "598": {
        start: {
          line: 1359,
          column: 0
        },
        end: {
          line: 1368,
          column: 2
        }
      },
      "599": {
        start: {
          line: 1361,
          column: 12
        },
        end: {
          line: 1361,
          column: 44
        }
      },
      "600": {
        start: {
          line: 1362,
          column: 4
        },
        end: {
          line: 1364,
          column: 5
        }
      },
      "601": {
        start: {
          line: 1363,
          column: 6
        },
        end: {
          line: 1363,
          column: 32
        }
      },
      "602": {
        start: {
          line: 1365,
          column: 4
        },
        end: {
          line: 1365,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 9,
            column: 3
          }
        },
        loc: {
          start: {
            line: 9,
            column: 15
          },
          end: {
            line: 16,
            column: 3
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 18,
            column: 3
          }
        },
        loc: {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 40,
            column: 3
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 42,
            column: 2
          },
          end: {
            line: 42,
            column: 3
          }
        },
        loc: {
          start: {
            line: 42,
            column: 14
          },
          end: {
            line: 45,
            column: 3
          }
        },
        line: 42
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 47,
            column: 2
          },
          end: {
            line: 47,
            column: 3
          }
        },
        loc: {
          start: {
            line: 47,
            column: 17
          },
          end: {
            line: 52,
            column: 3
          }
        },
        line: 47
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 54,
            column: 2
          },
          end: {
            line: 54,
            column: 3
          }
        },
        loc: {
          start: {
            line: 54,
            column: 28
          },
          end: {
            line: 67,
            column: 3
          }
        },
        line: 54
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 69,
            column: 2
          },
          end: {
            line: 69,
            column: 3
          }
        },
        loc: {
          start: {
            line: 69,
            column: 27
          },
          end: {
            line: 71,
            column: 3
          }
        },
        line: 69
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 73,
            column: 2
          },
          end: {
            line: 73,
            column: 3
          }
        },
        loc: {
          start: {
            line: 73,
            column: 13
          },
          end: {
            line: 80,
            column: 3
          }
        },
        line: 73
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 82,
            column: 2
          },
          end: {
            line: 82,
            column: 3
          }
        },
        loc: {
          start: {
            line: 82,
            column: 15
          },
          end: {
            line: 90,
            column: 3
          }
        },
        line: 82
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 92,
            column: 2
          },
          end: {
            line: 92,
            column: 3
          }
        },
        loc: {
          start: {
            line: 92,
            column: 23
          },
          end: {
            line: 99,
            column: 3
          }
        },
        line: 92
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 101,
            column: 2
          },
          end: {
            line: 101,
            column: 3
          }
        },
        loc: {
          start: {
            line: 101,
            column: 18
          },
          end: {
            line: 103,
            column: 3
          }
        },
        line: 101
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 105,
            column: 2
          },
          end: {
            line: 105,
            column: 3
          }
        },
        loc: {
          start: {
            line: 105,
            column: 29
          },
          end: {
            line: 133,
            column: 3
          }
        },
        line: 105
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 135,
            column: 2
          },
          end: {
            line: 135,
            column: 3
          }
        },
        loc: {
          start: {
            line: 135,
            column: 28
          },
          end: {
            line: 146,
            column: 3
          }
        },
        line: 135
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 148,
            column: 2
          },
          end: {
            line: 148,
            column: 3
          }
        },
        loc: {
          start: {
            line: 148,
            column: 13
          },
          end: {
            line: 204,
            column: 3
          }
        },
        line: 148
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 206,
            column: 2
          },
          end: {
            line: 206,
            column: 3
          }
        },
        loc: {
          start: {
            line: 206,
            column: 15
          },
          end: {
            line: 221,
            column: 3
          }
        },
        line: 206
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 223,
            column: 2
          },
          end: {
            line: 223,
            column: 3
          }
        },
        loc: {
          start: {
            line: 223,
            column: 14
          },
          end: {
            line: 261,
            column: 3
          }
        },
        line: 223
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 263,
            column: 2
          },
          end: {
            line: 263,
            column: 3
          }
        },
        loc: {
          start: {
            line: 263,
            column: 21
          },
          end: {
            line: 283,
            column: 3
          }
        },
        line: 263
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 285,
            column: 2
          },
          end: {
            line: 285,
            column: 3
          }
        },
        loc: {
          start: {
            line: 285,
            column: 16
          },
          end: {
            line: 312,
            column: 3
          }
        },
        line: 285
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 314,
            column: 2
          },
          end: {
            line: 314,
            column: 3
          }
        },
        loc: {
          start: {
            line: 314,
            column: 14
          },
          end: {
            line: 382,
            column: 3
          }
        },
        line: 314
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 384,
            column: 2
          },
          end: {
            line: 384,
            column: 3
          }
        },
        loc: {
          start: {
            line: 384,
            column: 15
          },
          end: {
            line: 413,
            column: 3
          }
        },
        line: 384
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 415,
            column: 2
          },
          end: {
            line: 415,
            column: 3
          }
        },
        loc: {
          start: {
            line: 415,
            column: 17
          },
          end: {
            line: 427,
            column: 3
          }
        },
        line: 415
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 429,
            column: 2
          },
          end: {
            line: 429,
            column: 3
          }
        },
        loc: {
          start: {
            line: 429,
            column: 17
          },
          end: {
            line: 445,
            column: 3
          }
        },
        line: 429
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 447,
            column: 2
          },
          end: {
            line: 447,
            column: 3
          }
        },
        loc: {
          start: {
            line: 447,
            column: 12
          },
          end: {
            line: 486,
            column: 3
          }
        },
        line: 447
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 488,
            column: 2
          },
          end: {
            line: 488,
            column: 3
          }
        },
        loc: {
          start: {
            line: 488,
            column: 13
          },
          end: {
            line: 525,
            column: 3
          }
        },
        line: 488
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 527,
            column: 2
          },
          end: {
            line: 527,
            column: 3
          }
        },
        loc: {
          start: {
            line: 527,
            column: 16
          },
          end: {
            line: 593,
            column: 3
          }
        },
        line: 527
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 595,
            column: 2
          },
          end: {
            line: 595,
            column: 3
          }
        },
        loc: {
          start: {
            line: 595,
            column: 19
          },
          end: {
            line: 653,
            column: 3
          }
        },
        line: 595
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 655,
            column: 2
          },
          end: {
            line: 655,
            column: 3
          }
        },
        loc: {
          start: {
            line: 655,
            column: 20
          },
          end: {
            line: 698,
            column: 3
          }
        },
        line: 655
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 700,
            column: 2
          },
          end: {
            line: 700,
            column: 3
          }
        },
        loc: {
          start: {
            line: 700,
            column: 21
          },
          end: {
            line: 751,
            column: 3
          }
        },
        line: 700
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 753,
            column: 2
          },
          end: {
            line: 753,
            column: 3
          }
        },
        loc: {
          start: {
            line: 753,
            column: 20
          },
          end: {
            line: 756,
            column: 3
          }
        },
        line: 753
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 758,
            column: 2
          },
          end: {
            line: 758,
            column: 3
          }
        },
        loc: {
          start: {
            line: 758,
            column: 18
          },
          end: {
            line: 774,
            column: 3
          }
        },
        line: 758
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 776,
            column: 2
          },
          end: {
            line: 776,
            column: 3
          }
        },
        loc: {
          start: {
            line: 776,
            column: 12
          },
          end: {
            line: 786,
            column: 3
          }
        },
        line: 776
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 788,
            column: 2
          },
          end: {
            line: 788,
            column: 3
          }
        },
        loc: {
          start: {
            line: 788,
            column: 13
          },
          end: {
            line: 798,
            column: 3
          }
        },
        line: 788
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 800,
            column: 2
          },
          end: {
            line: 800,
            column: 3
          }
        },
        loc: {
          start: {
            line: 800,
            column: 13
          },
          end: {
            line: 808,
            column: 3
          }
        },
        line: 800
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 810,
            column: 2
          },
          end: {
            line: 810,
            column: 3
          }
        },
        loc: {
          start: {
            line: 810,
            column: 12
          },
          end: {
            line: 843,
            column: 3
          }
        },
        line: 810
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 847,
            column: 2
          },
          end: {
            line: 847,
            column: 3
          }
        },
        loc: {
          start: {
            line: 847,
            column: 12
          },
          end: {
            line: 864,
            column: 3
          }
        },
        line: 847
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 866,
            column: 2
          },
          end: {
            line: 866,
            column: 3
          }
        },
        loc: {
          start: {
            line: 866,
            column: 17
          },
          end: {
            line: 895,
            column: 3
          }
        },
        line: 866
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 898,
            column: 2
          },
          end: {
            line: 898,
            column: 3
          }
        },
        loc: {
          start: {
            line: 898,
            column: 16
          },
          end: {
            line: 908,
            column: 3
          }
        },
        line: 898
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 910,
            column: 2
          },
          end: {
            line: 910,
            column: 3
          }
        },
        loc: {
          start: {
            line: 910,
            column: 13
          },
          end: {
            line: 920,
            column: 3
          }
        },
        line: 910
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 922,
            column: 2
          },
          end: {
            line: 922,
            column: 3
          }
        },
        loc: {
          start: {
            line: 922,
            column: 13
          },
          end: {
            line: 932,
            column: 3
          }
        },
        line: 922
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 934,
            column: 2
          },
          end: {
            line: 934,
            column: 3
          }
        },
        loc: {
          start: {
            line: 934,
            column: 13
          },
          end: {
            line: 944,
            column: 3
          }
        },
        line: 934
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 946,
            column: 2
          },
          end: {
            line: 946,
            column: 3
          }
        },
        loc: {
          start: {
            line: 946,
            column: 13
          },
          end: {
            line: 956,
            column: 3
          }
        },
        line: 946
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 958,
            column: 2
          },
          end: {
            line: 958,
            column: 3
          }
        },
        loc: {
          start: {
            line: 958,
            column: 18
          },
          end: {
            line: 968,
            column: 3
          }
        },
        line: 958
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 970,
            column: 2
          },
          end: {
            line: 970,
            column: 3
          }
        },
        loc: {
          start: {
            line: 970,
            column: 13
          },
          end: {
            line: 980,
            column: 3
          }
        },
        line: 970
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 982,
            column: 2
          },
          end: {
            line: 982,
            column: 3
          }
        },
        loc: {
          start: {
            line: 982,
            column: 13
          },
          end: {
            line: 992,
            column: 3
          }
        },
        line: 982
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 994,
            column: 2
          },
          end: {
            line: 994,
            column: 3
          }
        },
        loc: {
          start: {
            line: 994,
            column: 24
          },
          end: {
            line: 1015,
            column: 3
          }
        },
        line: 994
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 1017,
            column: 2
          },
          end: {
            line: 1017,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1017,
            column: 26
          },
          end: {
            line: 1066,
            column: 3
          }
        },
        line: 1017
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 1068,
            column: 2
          },
          end: {
            line: 1068,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1068,
            column: 20
          },
          end: {
            line: 1077,
            column: 3
          }
        },
        line: 1068
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 1079,
            column: 2
          },
          end: {
            line: 1079,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1079,
            column: 24
          },
          end: {
            line: 1087,
            column: 3
          }
        },
        line: 1079
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 1089,
            column: 2
          },
          end: {
            line: 1089,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1089,
            column: 20
          },
          end: {
            line: 1106,
            column: 3
          }
        },
        line: 1089
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 1108,
            column: 2
          },
          end: {
            line: 1108,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1108,
            column: 25
          },
          end: {
            line: 1141,
            column: 3
          }
        },
        line: 1108
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 1143,
            column: 2
          },
          end: {
            line: 1143,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1143,
            column: 19
          },
          end: {
            line: 1204,
            column: 3
          }
        },
        line: 1143
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 1206,
            column: 2
          },
          end: {
            line: 1206,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1206,
            column: 37
          },
          end: {
            line: 1260,
            column: 3
          }
        },
        line: 1206
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 1262,
            column: 2
          },
          end: {
            line: 1262,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1262,
            column: 34
          },
          end: {
            line: 1270,
            column: 3
          }
        },
        line: 1262
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 1272,
            column: 2
          },
          end: {
            line: 1272,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1272,
            column: 15
          },
          end: {
            line: 1334,
            column: 3
          }
        },
        line: 1272
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 1336,
            column: 2
          },
          end: {
            line: 1336,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1336,
            column: 10
          },
          end: {
            line: 1338,
            column: 3
          }
        },
        line: 1336
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 1340,
            column: 2
          },
          end: {
            line: 1340,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1340,
            column: 16
          },
          end: {
            line: 1342,
            column: 3
          }
        },
        line: 1340
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 1360,
            column: 2
          },
          end: {
            line: 1360,
            column: 3
          }
        },
        loc: {
          start: {
            line: 1360,
            column: 31
          },
          end: {
            line: 1366,
            column: 3
          }
        },
        line: 1360
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 28,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 28,
            column: 7
          }
        }, {
          start: {
            line: 24,
            column: 13
          },
          end: {
            line: 28,
            column: 7
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 10
          },
          end: {
            line: 22,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 10
          },
          end: {
            line: 22,
            column: 25
          }
        }, {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 72
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 13
          },
          end: {
            line: 34,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 13
          },
          end: {
            line: 34,
            column: 16
          }
        }, {
          start: {
            line: 34,
            column: 20
          },
          end: {
            line: 34,
            column: 55
          }
        }],
        line: 34
      },
      "5": {
        loc: {
          start: {
            line: 43,
            column: 18
          },
          end: {
            line: 43,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 18
          },
          end: {
            line: 43,
            column: 29
          }
        }, {
          start: {
            line: 43,
            column: 33
          },
          end: {
            line: 43,
            column: 49
          }
        }],
        line: 43
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "7": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "8": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 55,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 55,
            column: 28
          }
        }, {
          start: {
            line: 55,
            column: 32
          },
          end: {
            line: 55,
            column: 51
          }
        }],
        line: 55
      },
      "9": {
        loc: {
          start: {
            line: 56,
            column: 18
          },
          end: {
            line: 56,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 18
          },
          end: {
            line: 56,
            column: 34
          }
        }, {
          start: {
            line: 56,
            column: 38
          },
          end: {
            line: 56,
            column: 40
          }
        }],
        line: 56
      },
      "10": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "11": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "12": {
        loc: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "13": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 75,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 75,
            column: 12
          }
        }, {
          start: {
            line: 75,
            column: 16
          },
          end: {
            line: 75,
            column: 33
          }
        }],
        line: 75
      },
      "14": {
        loc: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "15": {
        loc: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "16": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 94,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 94,
            column: 12
          }
        }, {
          start: {
            line: 94,
            column: 16
          },
          end: {
            line: 94,
            column: 33
          }
        }, {
          start: {
            line: 94,
            column: 37
          },
          end: {
            line: 94,
            column: 54
          }
        }],
        line: 94
      },
      "17": {
        loc: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "18": {
        loc: {
          start: {
            line: 110,
            column: 6
          },
          end: {
            line: 112,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 6
          },
          end: {
            line: 112,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "19": {
        loc: {
          start: {
            line: 114,
            column: 6
          },
          end: {
            line: 117,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 6
          },
          end: {
            line: 117,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "20": {
        loc: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        }, {
          start: {
            line: 128,
            column: 11
          },
          end: {
            line: 130,
            column: 5
          }
        }],
        line: 124
      },
      "21": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 124,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 124,
            column: 11
          }
        }, {
          start: {
            line: 124,
            column: 15
          },
          end: {
            line: 124,
            column: 49
          }
        }],
        line: 124
      },
      "22": {
        loc: {
          start: {
            line: 125,
            column: 6
          },
          end: {
            line: 127,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 6
          },
          end: {
            line: 127,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "23": {
        loc: {
          start: {
            line: 138,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        }, {
          start: {
            line: 142,
            column: 11
          },
          end: {
            line: 145,
            column: 5
          }
        }],
        line: 138
      },
      "24": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 138,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 138,
            column: 11
          }
        }, {
          start: {
            line: 138,
            column: 15
          },
          end: {
            line: 138,
            column: 52
          }
        }],
        line: 138
      },
      "25": {
        loc: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        }, {
          start: {
            line: 156,
            column: 11
          },
          end: {
            line: 164,
            column: 5
          }
        }],
        line: 153
      },
      "26": {
        loc: {
          start: {
            line: 156,
            column: 11
          },
          end: {
            line: 164,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 11
          },
          end: {
            line: 164,
            column: 5
          }
        }, {
          start: {
            line: 159,
            column: 11
          },
          end: {
            line: 164,
            column: 5
          }
        }],
        line: 156
      },
      "27": {
        loc: {
          start: {
            line: 159,
            column: 11
          },
          end: {
            line: 164,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 11
          },
          end: {
            line: 164,
            column: 5
          }
        }, {
          start: {
            line: 162,
            column: 11
          },
          end: {
            line: 164,
            column: 5
          }
        }],
        line: 159
      },
      "28": {
        loc: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "29": {
        loc: {
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "30": {
        loc: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "31": {
        loc: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "32": {
        loc: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 210,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 210,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "33": {
        loc: {
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "34": {
        loc: {
          start: {
            line: 231,
            column: 23
          },
          end: {
            line: 231,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 23
          },
          end: {
            line: 231,
            column: 48
          }
        }, {
          start: {
            line: 231,
            column: 52
          },
          end: {
            line: 231,
            column: 72
          }
        }],
        line: 231
      },
      "35": {
        loc: {
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 251,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 251,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "36": {
        loc: {
          start: {
            line: 268,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        }, {
          start: {
            line: 270,
            column: 11
          },
          end: {
            line: 272,
            column: 5
          }
        }],
        line: 268
      },
      "37": {
        loc: {
          start: {
            line: 270,
            column: 11
          },
          end: {
            line: 272,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 11
          },
          end: {
            line: 272,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "38": {
        loc: {
          start: {
            line: 274,
            column: 4
          },
          end: {
            line: 280,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 4
          },
          end: {
            line: 280,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "39": {
        loc: {
          start: {
            line: 275,
            column: 6
          },
          end: {
            line: 279,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 6
          },
          end: {
            line: 279,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "40": {
        loc: {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 291,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 291,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "41": {
        loc: {
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 299,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 299,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "42": {
        loc: {
          start: {
            line: 316,
            column: 4
          },
          end: {
            line: 318,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 4
          },
          end: {
            line: 318,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "43": {
        loc: {
          start: {
            line: 322,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 322,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 322
      },
      "44": {
        loc: {
          start: {
            line: 333,
            column: 6
          },
          end: {
            line: 349,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 6
          },
          end: {
            line: 349,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      },
      "45": {
        loc: {
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 338,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 338,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "46": {
        loc: {
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 345,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 345,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 343
      },
      "47": {
        loc: {
          start: {
            line: 351,
            column: 6
          },
          end: {
            line: 355,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 6
          },
          end: {
            line: 355,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      },
      "48": {
        loc: {
          start: {
            line: 351,
            column: 10
          },
          end: {
            line: 351,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 351,
            column: 10
          },
          end: {
            line: 351,
            column: 35
          }
        }, {
          start: {
            line: 351,
            column: 39
          },
          end: {
            line: 351,
            column: 68
          }
        }],
        line: 351
      },
      "49": {
        loc: {
          start: {
            line: 358,
            column: 6
          },
          end: {
            line: 362,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 6
          },
          end: {
            line: 362,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 358
      },
      "50": {
        loc: {
          start: {
            line: 364,
            column: 6
          },
          end: {
            line: 372,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 6
          },
          end: {
            line: 372,
            column: 7
          }
        }, {
          start: {
            line: 370,
            column: 13
          },
          end: {
            line: 372,
            column: 7
          }
        }],
        line: 364
      },
      "51": {
        loc: {
          start: {
            line: 386,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 386,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 386
      },
      "52": {
        loc: {
          start: {
            line: 393,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 393,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 393
      },
      "53": {
        loc: {
          start: {
            line: 406,
            column: 4
          },
          end: {
            line: 408,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 4
          },
          end: {
            line: 408,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      },
      "54": {
        loc: {
          start: {
            line: 418,
            column: 4
          },
          end: {
            line: 420,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 4
          },
          end: {
            line: 420,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      },
      "55": {
        loc: {
          start: {
            line: 432,
            column: 4
          },
          end: {
            line: 434,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 432,
            column: 4
          },
          end: {
            line: 434,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 432
      },
      "56": {
        loc: {
          start: {
            line: 439,
            column: 4
          },
          end: {
            line: 441,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 439,
            column: 4
          },
          end: {
            line: 441,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 439
      },
      "57": {
        loc: {
          start: {
            line: 439,
            column: 8
          },
          end: {
            line: 439,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 439,
            column: 8
          },
          end: {
            line: 439,
            column: 33
          }
        }, {
          start: {
            line: 439,
            column: 37
          },
          end: {
            line: 439,
            column: 63
          }
        }],
        line: 439
      },
      "58": {
        loc: {
          start: {
            line: 451,
            column: 4
          },
          end: {
            line: 459,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 451,
            column: 4
          },
          end: {
            line: 459,
            column: 5
          }
        }, {
          start: {
            line: 453,
            column: 11
          },
          end: {
            line: 459,
            column: 5
          }
        }],
        line: 451
      },
      "59": {
        loc: {
          start: {
            line: 451,
            column: 8
          },
          end: {
            line: 451,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 451,
            column: 8
          },
          end: {
            line: 451,
            column: 29
          }
        }, {
          start: {
            line: 451,
            column: 33
          },
          end: {
            line: 451,
            column: 56
          }
        }, {
          start: {
            line: 451,
            column: 60
          },
          end: {
            line: 451,
            column: 85
          }
        }],
        line: 451
      },
      "60": {
        loc: {
          start: {
            line: 453,
            column: 11
          },
          end: {
            line: 459,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 453,
            column: 11
          },
          end: {
            line: 459,
            column: 5
          }
        }, {
          start: {
            line: 455,
            column: 11
          },
          end: {
            line: 459,
            column: 5
          }
        }],
        line: 453
      },
      "61": {
        loc: {
          start: {
            line: 467,
            column: 4
          },
          end: {
            line: 483,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 468,
            column: 6
          },
          end: {
            line: 468,
            column: 20
          }
        }, {
          start: {
            line: 469,
            column: 6
          },
          end: {
            line: 471,
            column: 14
          }
        }, {
          start: {
            line: 472,
            column: 6
          },
          end: {
            line: 476,
            column: 14
          }
        }, {
          start: {
            line: 477,
            column: 6
          },
          end: {
            line: 480,
            column: 14
          }
        }, {
          start: {
            line: 481,
            column: 6
          },
          end: {
            line: 482,
            column: 77
          }
        }],
        line: 467
      },
      "62": {
        loc: {
          start: {
            line: 467,
            column: 12
          },
          end: {
            line: 467,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 467,
            column: 12
          },
          end: {
            line: 467,
            column: 15
          }
        }, {
          start: {
            line: 467,
            column: 19
          },
          end: {
            line: 467,
            column: 28
          }
        }],
        line: 467
      },
      "63": {
        loc: {
          start: {
            line: 490,
            column: 4
          },
          end: {
            line: 492,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 490,
            column: 4
          },
          end: {
            line: 492,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 490
      },
      "64": {
        loc: {
          start: {
            line: 500,
            column: 6
          },
          end: {
            line: 502,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 500,
            column: 6
          },
          end: {
            line: 502,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 500
      },
      "65": {
        loc: {
          start: {
            line: 505,
            column: 4
          },
          end: {
            line: 522,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 505,
            column: 4
          },
          end: {
            line: 522,
            column: 5
          }
        }, {
          start: {
            line: 519,
            column: 11
          },
          end: {
            line: 522,
            column: 5
          }
        }],
        line: 505
      },
      "66": {
        loc: {
          start: {
            line: 506,
            column: 6
          },
          end: {
            line: 518,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 506,
            column: 6
          },
          end: {
            line: 518,
            column: 7
          }
        }, {
          start: {
            line: 510,
            column: 13
          },
          end: {
            line: 518,
            column: 7
          }
        }],
        line: 506
      },
      "67": {
        loc: {
          start: {
            line: 541,
            column: 4
          },
          end: {
            line: 547,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 541,
            column: 4
          },
          end: {
            line: 547,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 541
      },
      "68": {
        loc: {
          start: {
            line: 542,
            column: 6
          },
          end: {
            line: 544,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 542,
            column: 6
          },
          end: {
            line: 542,
            column: 35
          }
        }, {
          start: {
            line: 543,
            column: 9
          },
          end: {
            line: 543,
            column: 36
          }
        }, {
          start: {
            line: 544,
            column: 9
          },
          end: {
            line: 544,
            column: 38
          }
        }],
        line: 542
      },
      "69": {
        loc: {
          start: {
            line: 574,
            column: 13
          },
          end: {
            line: 574,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 574,
            column: 13
          },
          end: {
            line: 574,
            column: 16
          }
        }, {
          start: {
            line: 574,
            column: 20
          },
          end: {
            line: 574,
            column: 43
          }
        }],
        line: 574
      },
      "70": {
        loc: {
          start: {
            line: 577,
            column: 4
          },
          end: {
            line: 589,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 578,
            column: 6
          },
          end: {
            line: 582,
            column: 14
          }
        }, {
          start: {
            line: 583,
            column: 6
          },
          end: {
            line: 585,
            column: 14
          }
        }, {
          start: {
            line: 586,
            column: 6
          },
          end: {
            line: 588,
            column: 86
          }
        }],
        line: 577
      },
      "71": {
        loc: {
          start: {
            line: 599,
            column: 4
          },
          end: {
            line: 601,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 599,
            column: 4
          },
          end: {
            line: 601,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 599
      },
      "72": {
        loc: {
          start: {
            line: 603,
            column: 4
          },
          end: {
            line: 606,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 603,
            column: 4
          },
          end: {
            line: 606,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 603
      },
      "73": {
        loc: {
          start: {
            line: 603,
            column: 8
          },
          end: {
            line: 604,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 603,
            column: 8
          },
          end: {
            line: 603,
            column: 26
          }
        }, {
          start: {
            line: 604,
            column: 6
          },
          end: {
            line: 604,
            column: 55
          }
        }],
        line: 603
      },
      "74": {
        loc: {
          start: {
            line: 608,
            column: 4
          },
          end: {
            line: 650,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 609,
            column: 6
          },
          end: {
            line: 610,
            column: 31
          }
        }, {
          start: {
            line: 611,
            column: 6
          },
          end: {
            line: 612,
            column: 41
          }
        }, {
          start: {
            line: 613,
            column: 6
          },
          end: {
            line: 613,
            column: 16
          }
        }, {
          start: {
            line: 614,
            column: 6
          },
          end: {
            line: 615,
            column: 30
          }
        }, {
          start: {
            line: 616,
            column: 6
          },
          end: {
            line: 616,
            column: 17
          }
        }, {
          start: {
            line: 617,
            column: 6
          },
          end: {
            line: 617,
            column: 23
          }
        }, {
          start: {
            line: 618,
            column: 6
          },
          end: {
            line: 619,
            column: 31
          }
        }, {
          start: {
            line: 620,
            column: 6
          },
          end: {
            line: 621,
            column: 33
          }
        }, {
          start: {
            line: 622,
            column: 6
          },
          end: {
            line: 623,
            column: 35
          }
        }, {
          start: {
            line: 624,
            column: 6
          },
          end: {
            line: 625,
            column: 35
          }
        }, {
          start: {
            line: 626,
            column: 6
          },
          end: {
            line: 627,
            column: 31
          }
        }, {
          start: {
            line: 628,
            column: 6
          },
          end: {
            line: 629,
            column: 33
          }
        }, {
          start: {
            line: 630,
            column: 6
          },
          end: {
            line: 631,
            column: 32
          }
        }, {
          start: {
            line: 632,
            column: 6
          },
          end: {
            line: 633,
            column: 34
          }
        }, {
          start: {
            line: 634,
            column: 6
          },
          end: {
            line: 635,
            column: 32
          }
        }, {
          start: {
            line: 636,
            column: 6
          },
          end: {
            line: 637,
            column: 43
          }
        }, {
          start: {
            line: 638,
            column: 6
          },
          end: {
            line: 639,
            column: 34
          }
        }, {
          start: {
            line: 640,
            column: 6
          },
          end: {
            line: 649,
            column: 76
          }
        }],
        line: 608
      },
      "75": {
        loc: {
          start: {
            line: 641,
            column: 8
          },
          end: {
            line: 648,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 641,
            column: 8
          },
          end: {
            line: 648,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 641
      },
      "76": {
        loc: {
          start: {
            line: 644,
            column: 12
          },
          end: {
            line: 646,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 644,
            column: 12
          },
          end: {
            line: 646,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 644
      },
      "77": {
        loc: {
          start: {
            line: 644,
            column: 28
          },
          end: {
            line: 644,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 644,
            column: 28
          },
          end: {
            line: 644,
            column: 36
          }
        }, {
          start: {
            line: 644,
            column: 40
          },
          end: {
            line: 644,
            column: 42
          }
        }],
        line: 644
      },
      "78": {
        loc: {
          start: {
            line: 656,
            column: 14
          },
          end: {
            line: 656,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 656,
            column: 14
          },
          end: {
            line: 656,
            column: 21
          }
        }, {
          start: {
            line: 656,
            column: 25
          },
          end: {
            line: 656,
            column: 30
          }
        }],
        line: 656
      },
      "79": {
        loc: {
          start: {
            line: 670,
            column: 11
          },
          end: {
            line: 670,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 670,
            column: 12
          },
          end: {
            line: 670,
            column: 62
          }
        }, {
          start: {
            line: 670,
            column: 67
          },
          end: {
            line: 670,
            column: 79
          }
        }],
        line: 670
      },
      "80": {
        loc: {
          start: {
            line: 676,
            column: 6
          },
          end: {
            line: 680,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 676,
            column: 6
          },
          end: {
            line: 680,
            column: 7
          }
        }, {
          start: {
            line: 678,
            column: 13
          },
          end: {
            line: 680,
            column: 7
          }
        }],
        line: 676
      },
      "81": {
        loc: {
          start: {
            line: 678,
            column: 13
          },
          end: {
            line: 680,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 678,
            column: 13
          },
          end: {
            line: 680,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 678
      },
      "82": {
        loc: {
          start: {
            line: 683,
            column: 6
          },
          end: {
            line: 690,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 683,
            column: 6
          },
          end: {
            line: 690,
            column: 7
          }
        }, {
          start: {
            line: 688,
            column: 13
          },
          end: {
            line: 690,
            column: 7
          }
        }],
        line: 683
      },
      "83": {
        loc: {
          start: {
            line: 705,
            column: 6
          },
          end: {
            line: 745,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 705,
            column: 6
          },
          end: {
            line: 745,
            column: 7
          }
        }, {
          start: {
            line: 711,
            column: 13
          },
          end: {
            line: 745,
            column: 7
          }
        }],
        line: 705
      },
      "84": {
        loc: {
          start: {
            line: 711,
            column: 13
          },
          end: {
            line: 745,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 711,
            column: 13
          },
          end: {
            line: 745,
            column: 7
          }
        }, {
          start: {
            line: 722,
            column: 13
          },
          end: {
            line: 745,
            column: 7
          }
        }],
        line: 711
      },
      "85": {
        loc: {
          start: {
            line: 714,
            column: 8
          },
          end: {
            line: 716,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 714,
            column: 8
          },
          end: {
            line: 716,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 714
      },
      "86": {
        loc: {
          start: {
            line: 722,
            column: 13
          },
          end: {
            line: 745,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 722,
            column: 13
          },
          end: {
            line: 745,
            column: 7
          }
        }, {
          start: {
            line: 743,
            column: 13
          },
          end: {
            line: 745,
            column: 7
          }
        }],
        line: 722
      },
      "87": {
        loc: {
          start: {
            line: 722,
            column: 17
          },
          end: {
            line: 722,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 722,
            column: 17
          },
          end: {
            line: 722,
            column: 50
          }
        }, {
          start: {
            line: 722,
            column: 54
          },
          end: {
            line: 722,
            column: 71
          }
        }],
        line: 722
      },
      "88": {
        loc: {
          start: {
            line: 727,
            column: 8
          },
          end: {
            line: 731,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 727,
            column: 8
          },
          end: {
            line: 731,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 727
      },
      "89": {
        loc: {
          start: {
            line: 760,
            column: 4
          },
          end: {
            line: 771,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 760,
            column: 4
          },
          end: {
            line: 771,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 760
      },
      "90": {
        loc: {
          start: {
            line: 766,
            column: 6
          },
          end: {
            line: 770,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 766,
            column: 6
          },
          end: {
            line: 770,
            column: 7
          }
        }, {
          start: {
            line: 768,
            column: 13
          },
          end: {
            line: 770,
            column: 7
          }
        }],
        line: 766
      },
      "91": {
        loc: {
          start: {
            line: 802,
            column: 4
          },
          end: {
            line: 806,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 802,
            column: 4
          },
          end: {
            line: 806,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 802
      },
      "92": {
        loc: {
          start: {
            line: 815,
            column: 6
          },
          end: {
            line: 817,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 815,
            column: 6
          },
          end: {
            line: 817,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 815
      },
      "93": {
        loc: {
          start: {
            line: 818,
            column: 21
          },
          end: {
            line: 818,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 818,
            column: 21
          },
          end: {
            line: 818,
            column: 52
          }
        }, {
          start: {
            line: 818,
            column: 56
          },
          end: {
            line: 818,
            column: 75
          }
        }],
        line: 818
      },
      "94": {
        loc: {
          start: {
            line: 820,
            column: 6
          },
          end: {
            line: 822,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 820,
            column: 6
          },
          end: {
            line: 822,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 820
      },
      "95": {
        loc: {
          start: {
            line: 823,
            column: 6
          },
          end: {
            line: 840,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 823,
            column: 6
          },
          end: {
            line: 840,
            column: 7
          }
        }, {
          start: {
            line: 834,
            column: 13
          },
          end: {
            line: 840,
            column: 7
          }
        }],
        line: 823
      },
      "96": {
        loc: {
          start: {
            line: 829,
            column: 8
          },
          end: {
            line: 833,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 829,
            column: 8
          },
          end: {
            line: 833,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 829
      },
      "97": {
        loc: {
          start: {
            line: 836,
            column: 8
          },
          end: {
            line: 838,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 836,
            column: 8
          },
          end: {
            line: 838,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 836
      },
      "98": {
        loc: {
          start: {
            line: 850,
            column: 4
          },
          end: {
            line: 861,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 850,
            column: 4
          },
          end: {
            line: 861,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 850
      },
      "99": {
        loc: {
          start: {
            line: 858,
            column: 6
          },
          end: {
            line: 860,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 858,
            column: 6
          },
          end: {
            line: 860,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 858
      },
      "100": {
        loc: {
          start: {
            line: 874,
            column: 6
          },
          end: {
            line: 884,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 874,
            column: 6
          },
          end: {
            line: 884,
            column: 7
          }
        }, {
          start: {
            line: 876,
            column: 13
          },
          end: {
            line: 884,
            column: 7
          }
        }],
        line: 874
      },
      "101": {
        loc: {
          start: {
            line: 876,
            column: 13
          },
          end: {
            line: 884,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 876,
            column: 13
          },
          end: {
            line: 884,
            column: 7
          }
        }, {
          start: {
            line: 881,
            column: 13
          },
          end: {
            line: 884,
            column: 7
          }
        }],
        line: 876
      },
      "102": {
        loc: {
          start: {
            line: 887,
            column: 4
          },
          end: {
            line: 894,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 887,
            column: 4
          },
          end: {
            line: 894,
            column: 5
          }
        }, {
          start: {
            line: 892,
            column: 11
          },
          end: {
            line: 894,
            column: 5
          }
        }],
        line: 887
      },
      "103": {
        loc: {
          start: {
            line: 998,
            column: 4
          },
          end: {
            line: 1008,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 998,
            column: 4
          },
          end: {
            line: 1008,
            column: 5
          }
        }, {
          start: {
            line: 1002,
            column: 11
          },
          end: {
            line: 1008,
            column: 5
          }
        }],
        line: 998
      },
      "104": {
        loc: {
          start: {
            line: 1002,
            column: 11
          },
          end: {
            line: 1008,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1002,
            column: 11
          },
          end: {
            line: 1008,
            column: 5
          }
        }, {
          start: {
            line: 1006,
            column: 11
          },
          end: {
            line: 1008,
            column: 5
          }
        }],
        line: 1002
      },
      "105": {
        loc: {
          start: {
            line: 1010,
            column: 4
          },
          end: {
            line: 1012,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1010,
            column: 4
          },
          end: {
            line: 1012,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1010
      },
      "106": {
        loc: {
          start: {
            line: 1022,
            column: 4
          },
          end: {
            line: 1044,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1022,
            column: 4
          },
          end: {
            line: 1044,
            column: 5
          }
        }, {
          start: {
            line: 1024,
            column: 11
          },
          end: {
            line: 1044,
            column: 5
          }
        }],
        line: 1022
      },
      "107": {
        loc: {
          start: {
            line: 1024,
            column: 11
          },
          end: {
            line: 1044,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1024,
            column: 11
          },
          end: {
            line: 1044,
            column: 5
          }
        }, {
          start: {
            line: 1026,
            column: 11
          },
          end: {
            line: 1044,
            column: 5
          }
        }],
        line: 1024
      },
      "108": {
        loc: {
          start: {
            line: 1026,
            column: 11
          },
          end: {
            line: 1044,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1026,
            column: 11
          },
          end: {
            line: 1044,
            column: 5
          }
        }, {
          start: {
            line: 1028,
            column: 11
          },
          end: {
            line: 1044,
            column: 5
          }
        }],
        line: 1026
      },
      "109": {
        loc: {
          start: {
            line: 1028,
            column: 11
          },
          end: {
            line: 1044,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1028,
            column: 11
          },
          end: {
            line: 1044,
            column: 5
          }
        }, {
          start: {
            line: 1030,
            column: 11
          },
          end: {
            line: 1044,
            column: 5
          }
        }],
        line: 1028
      },
      "110": {
        loc: {
          start: {
            line: 1030,
            column: 11
          },
          end: {
            line: 1044,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1030,
            column: 11
          },
          end: {
            line: 1044,
            column: 5
          }
        }, {
          start: {
            line: 1040,
            column: 11
          },
          end: {
            line: 1044,
            column: 5
          }
        }],
        line: 1030
      },
      "111": {
        loc: {
          start: {
            line: 1031,
            column: 6
          },
          end: {
            line: 1039,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1031,
            column: 6
          },
          end: {
            line: 1039,
            column: 7
          }
        }, {
          start: {
            line: 1033,
            column: 13
          },
          end: {
            line: 1039,
            column: 7
          }
        }],
        line: 1031
      },
      "112": {
        loc: {
          start: {
            line: 1033,
            column: 13
          },
          end: {
            line: 1039,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1033,
            column: 13
          },
          end: {
            line: 1039,
            column: 7
          }
        }, {
          start: {
            line: 1035,
            column: 13
          },
          end: {
            line: 1039,
            column: 7
          }
        }],
        line: 1033
      },
      "113": {
        loc: {
          start: {
            line: 1040,
            column: 11
          },
          end: {
            line: 1044,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1040,
            column: 11
          },
          end: {
            line: 1044,
            column: 5
          }
        }, {
          start: {
            line: 1042,
            column: 11
          },
          end: {
            line: 1044,
            column: 5
          }
        }],
        line: 1040
      },
      "114": {
        loc: {
          start: {
            line: 1042,
            column: 11
          },
          end: {
            line: 1044,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1042,
            column: 11
          },
          end: {
            line: 1044,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1042
      },
      "115": {
        loc: {
          start: {
            line: 1046,
            column: 4
          },
          end: {
            line: 1055,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1046,
            column: 4
          },
          end: {
            line: 1055,
            column: 5
          }
        }, {
          start: {
            line: 1048,
            column: 11
          },
          end: {
            line: 1055,
            column: 5
          }
        }],
        line: 1046
      },
      "116": {
        loc: {
          start: {
            line: 1048,
            column: 11
          },
          end: {
            line: 1055,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1048,
            column: 11
          },
          end: {
            line: 1055,
            column: 5
          }
        }, {
          start: {
            line: 1050,
            column: 11
          },
          end: {
            line: 1055,
            column: 5
          }
        }],
        line: 1048
      },
      "117": {
        loc: {
          start: {
            line: 1057,
            column: 4
          },
          end: {
            line: 1059,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1057,
            column: 4
          },
          end: {
            line: 1059,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1057
      },
      "118": {
        loc: {
          start: {
            line: 1061,
            column: 4
          },
          end: {
            line: 1065,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1061,
            column: 4
          },
          end: {
            line: 1065,
            column: 5
          }
        }, {
          start: {
            line: 1063,
            column: 11
          },
          end: {
            line: 1065,
            column: 5
          }
        }],
        line: 1061
      },
      "119": {
        loc: {
          start: {
            line: 1080,
            column: 4
          },
          end: {
            line: 1085,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1080,
            column: 4
          },
          end: {
            line: 1085,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1080
      },
      "120": {
        loc: {
          start: {
            line: 1110,
            column: 4
          },
          end: {
            line: 1112,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1110,
            column: 4
          },
          end: {
            line: 1112,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1110
      },
      "121": {
        loc: {
          start: {
            line: 1147,
            column: 4
          },
          end: {
            line: 1159,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 1148,
            column: 6
          },
          end: {
            line: 1150,
            column: 14
          }
        }, {
          start: {
            line: 1151,
            column: 6
          },
          end: {
            line: 1153,
            column: 14
          }
        }, {
          start: {
            line: 1154,
            column: 6
          },
          end: {
            line: 1156,
            column: 14
          }
        }, {
          start: {
            line: 1157,
            column: 6
          },
          end: {
            line: 1158,
            column: 20
          }
        }],
        line: 1147
      },
      "122": {
        loc: {
          start: {
            line: 1163,
            column: 6
          },
          end: {
            line: 1168,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1163,
            column: 6
          },
          end: {
            line: 1168,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1163
      },
      "123": {
        loc: {
          start: {
            line: 1163,
            column: 10
          },
          end: {
            line: 1165,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1163,
            column: 10
          },
          end: {
            line: 1163,
            column: 42
          }
        }, {
          start: {
            line: 1164,
            column: 8
          },
          end: {
            line: 1164,
            column: 42
          }
        }, {
          start: {
            line: 1165,
            column: 8
          },
          end: {
            line: 1165,
            column: 40
          }
        }],
        line: 1163
      },
      "124": {
        loc: {
          start: {
            line: 1170,
            column: 6
          },
          end: {
            line: 1176,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1170,
            column: 6
          },
          end: {
            line: 1176,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1170
      },
      "125": {
        loc: {
          start: {
            line: 1171,
            column: 8
          },
          end: {
            line: 1175,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1171,
            column: 8
          },
          end: {
            line: 1175,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1171
      },
      "126": {
        loc: {
          start: {
            line: 1178,
            column: 6
          },
          end: {
            line: 1200,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1178,
            column: 6
          },
          end: {
            line: 1200,
            column: 7
          }
        }, {
          start: {
            line: 1196,
            column: 13
          },
          end: {
            line: 1200,
            column: 7
          }
        }],
        line: 1178
      },
      "127": {
        loc: {
          start: {
            line: 1184,
            column: 8
          },
          end: {
            line: 1188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1184,
            column: 8
          },
          end: {
            line: 1188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1184
      },
      "128": {
        loc: {
          start: {
            line: 1208,
            column: 4
          },
          end: {
            line: 1214,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1208,
            column: 4
          },
          end: {
            line: 1214,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1208
      },
      "129": {
        loc: {
          start: {
            line: 1208,
            column: 8
          },
          end: {
            line: 1208,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1208,
            column: 8
          },
          end: {
            line: 1208,
            column: 17
          }
        }, {
          start: {
            line: 1208,
            column: 21
          },
          end: {
            line: 1208,
            column: 56
          }
        }],
        line: 1208
      },
      "130": {
        loc: {
          start: {
            line: 1209,
            column: 6
          },
          end: {
            line: 1213,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1209,
            column: 6
          },
          end: {
            line: 1213,
            column: 7
          }
        }, {
          start: {
            line: 1211,
            column: 13
          },
          end: {
            line: 1213,
            column: 7
          }
        }],
        line: 1209
      },
      "131": {
        loc: {
          start: {
            line: 1216,
            column: 4
          },
          end: {
            line: 1218,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1216,
            column: 4
          },
          end: {
            line: 1218,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1216
      },
      "132": {
        loc: {
          start: {
            line: 1226,
            column: 6
          },
          end: {
            line: 1231,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1226,
            column: 6
          },
          end: {
            line: 1231,
            column: 7
          }
        }, {
          start: {
            line: 1229,
            column: 13
          },
          end: {
            line: 1231,
            column: 7
          }
        }],
        line: 1226
      },
      "133": {
        loc: {
          start: {
            line: 1226,
            column: 10
          },
          end: {
            line: 1226,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1226,
            column: 10
          },
          end: {
            line: 1226,
            column: 19
          }
        }, {
          start: {
            line: 1226,
            column: 23
          },
          end: {
            line: 1226,
            column: 59
          }
        }],
        line: 1226
      },
      "134": {
        loc: {
          start: {
            line: 1229,
            column: 13
          },
          end: {
            line: 1231,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1229,
            column: 13
          },
          end: {
            line: 1231,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1229
      },
      "135": {
        loc: {
          start: {
            line: 1229,
            column: 17
          },
          end: {
            line: 1229,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1229,
            column: 17
          },
          end: {
            line: 1229,
            column: 25
          }
        }, {
          start: {
            line: 1229,
            column: 29
          },
          end: {
            line: 1229,
            column: 63
          }
        }],
        line: 1229
      },
      "136": {
        loc: {
          start: {
            line: 1233,
            column: 6
          },
          end: {
            line: 1250,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1233,
            column: 6
          },
          end: {
            line: 1250,
            column: 7
          }
        }, {
          start: {
            line: 1237,
            column: 13
          },
          end: {
            line: 1250,
            column: 7
          }
        }],
        line: 1233
      },
      "137": {
        loc: {
          start: {
            line: 1233,
            column: 10
          },
          end: {
            line: 1233,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1233,
            column: 10
          },
          end: {
            line: 1233,
            column: 20
          }
        }, {
          start: {
            line: 1233,
            column: 24
          },
          end: {
            line: 1233,
            column: 53
          }
        }],
        line: 1233
      },
      "138": {
        loc: {
          start: {
            line: 1240,
            column: 8
          },
          end: {
            line: 1249,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1240,
            column: 8
          },
          end: {
            line: 1249,
            column: 9
          }
        }, {
          start: {
            line: 1247,
            column: 15
          },
          end: {
            line: 1249,
            column: 9
          }
        }],
        line: 1240
      },
      "139": {
        loc: {
          start: {
            line: 1255,
            column: 4
          },
          end: {
            line: 1257,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1255,
            column: 4
          },
          end: {
            line: 1257,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1255
      },
      "140": {
        loc: {
          start: {
            line: 1277,
            column: 6
          },
          end: {
            line: 1330,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1277,
            column: 6
          },
          end: {
            line: 1330,
            column: 7
          }
        }, {
          start: {
            line: 1310,
            column: 13
          },
          end: {
            line: 1330,
            column: 7
          }
        }],
        line: 1277
      },
      "141": {
        loc: {
          start: {
            line: 1280,
            column: 24
          },
          end: {
            line: 1280,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1280,
            column: 24
          },
          end: {
            line: 1280,
            column: 33
          }
        }, {
          start: {
            line: 1280,
            column: 37
          },
          end: {
            line: 1280,
            column: 52
          }
        }],
        line: 1280
      },
      "142": {
        loc: {
          start: {
            line: 1285,
            column: 8
          },
          end: {
            line: 1289,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1285,
            column: 8
          },
          end: {
            line: 1289,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1285
      },
      "143": {
        loc: {
          start: {
            line: 1292,
            column: 8
          },
          end: {
            line: 1303,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1292,
            column: 8
          },
          end: {
            line: 1303,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1292
      },
      "144": {
        loc: {
          start: {
            line: 1292,
            column: 12
          },
          end: {
            line: 1300,
            column: 19
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1292,
            column: 12
          },
          end: {
            line: 1292,
            column: 21
          }
        }, {
          start: {
            line: 1293,
            column: 12
          },
          end: {
            line: 1293,
            column: 54
          }
        }, {
          start: {
            line: 1294,
            column: 10
          },
          end: {
            line: 1294,
            column: 52
          }
        }, {
          start: {
            line: 1295,
            column: 11
          },
          end: {
            line: 1295,
            column: 56
          }
        }, {
          start: {
            line: 1296,
            column: 10
          },
          end: {
            line: 1297,
            column: 17
          }
        }, {
          start: {
            line: 1298,
            column: 11
          },
          end: {
            line: 1298,
            column: 49
          }
        }, {
          start: {
            line: 1299,
            column: 10
          },
          end: {
            line: 1300,
            column: 17
          }
        }],
        line: 1292
      },
      "145": {
        loc: {
          start: {
            line: 1310,
            column: 13
          },
          end: {
            line: 1330,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1310,
            column: 13
          },
          end: {
            line: 1330,
            column: 7
          }
        }, {
          start: {
            line: 1317,
            column: 13
          },
          end: {
            line: 1330,
            column: 7
          }
        }],
        line: 1310
      },
      "146": {
        loc: {
          start: {
            line: 1313,
            column: 8
          },
          end: {
            line: 1315,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1313,
            column: 8
          },
          end: {
            line: 1315,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1313
      },
      "147": {
        loc: {
          start: {
            line: 1317,
            column: 13
          },
          end: {
            line: 1330,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1317,
            column: 13
          },
          end: {
            line: 1330,
            column: 7
          }
        }, {
          start: {
            line: 1322,
            column: 13
          },
          end: {
            line: 1330,
            column: 7
          }
        }],
        line: 1317
      },
      "148": {
        loc: {
          start: {
            line: 1322,
            column: 13
          },
          end: {
            line: 1330,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1322,
            column: 13
          },
          end: {
            line: 1330,
            column: 7
          }
        }, {
          start: {
            line: 1326,
            column: 13
          },
          end: {
            line: 1330,
            column: 7
          }
        }],
        line: 1322
      },
      "149": {
        loc: {
          start: {
            line: 1362,
            column: 4
          },
          end: {
            line: 1364,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1362,
            column: 4
          },
          end: {
            line: 1364,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1362
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0,
      "348": 0,
      "349": 0,
      "350": 0,
      "351": 0,
      "352": 0,
      "353": 0,
      "354": 0,
      "355": 0,
      "356": 0,
      "357": 0,
      "358": 0,
      "359": 0,
      "360": 0,
      "361": 0,
      "362": 0,
      "363": 0,
      "364": 0,
      "365": 0,
      "366": 0,
      "367": 0,
      "368": 0,
      "369": 0,
      "370": 0,
      "371": 0,
      "372": 0,
      "373": 0,
      "374": 0,
      "375": 0,
      "376": 0,
      "377": 0,
      "378": 0,
      "379": 0,
      "380": 0,
      "381": 0,
      "382": 0,
      "383": 0,
      "384": 0,
      "385": 0,
      "386": 0,
      "387": 0,
      "388": 0,
      "389": 0,
      "390": 0,
      "391": 0,
      "392": 0,
      "393": 0,
      "394": 0,
      "395": 0,
      "396": 0,
      "397": 0,
      "398": 0,
      "399": 0,
      "400": 0,
      "401": 0,
      "402": 0,
      "403": 0,
      "404": 0,
      "405": 0,
      "406": 0,
      "407": 0,
      "408": 0,
      "409": 0,
      "410": 0,
      "411": 0,
      "412": 0,
      "413": 0,
      "414": 0,
      "415": 0,
      "416": 0,
      "417": 0,
      "418": 0,
      "419": 0,
      "420": 0,
      "421": 0,
      "422": 0,
      "423": 0,
      "424": 0,
      "425": 0,
      "426": 0,
      "427": 0,
      "428": 0,
      "429": 0,
      "430": 0,
      "431": 0,
      "432": 0,
      "433": 0,
      "434": 0,
      "435": 0,
      "436": 0,
      "437": 0,
      "438": 0,
      "439": 0,
      "440": 0,
      "441": 0,
      "442": 0,
      "443": 0,
      "444": 0,
      "445": 0,
      "446": 0,
      "447": 0,
      "448": 0,
      "449": 0,
      "450": 0,
      "451": 0,
      "452": 0,
      "453": 0,
      "454": 0,
      "455": 0,
      "456": 0,
      "457": 0,
      "458": 0,
      "459": 0,
      "460": 0,
      "461": 0,
      "462": 0,
      "463": 0,
      "464": 0,
      "465": 0,
      "466": 0,
      "467": 0,
      "468": 0,
      "469": 0,
      "470": 0,
      "471": 0,
      "472": 0,
      "473": 0,
      "474": 0,
      "475": 0,
      "476": 0,
      "477": 0,
      "478": 0,
      "479": 0,
      "480": 0,
      "481": 0,
      "482": 0,
      "483": 0,
      "484": 0,
      "485": 0,
      "486": 0,
      "487": 0,
      "488": 0,
      "489": 0,
      "490": 0,
      "491": 0,
      "492": 0,
      "493": 0,
      "494": 0,
      "495": 0,
      "496": 0,
      "497": 0,
      "498": 0,
      "499": 0,
      "500": 0,
      "501": 0,
      "502": 0,
      "503": 0,
      "504": 0,
      "505": 0,
      "506": 0,
      "507": 0,
      "508": 0,
      "509": 0,
      "510": 0,
      "511": 0,
      "512": 0,
      "513": 0,
      "514": 0,
      "515": 0,
      "516": 0,
      "517": 0,
      "518": 0,
      "519": 0,
      "520": 0,
      "521": 0,
      "522": 0,
      "523": 0,
      "524": 0,
      "525": 0,
      "526": 0,
      "527": 0,
      "528": 0,
      "529": 0,
      "530": 0,
      "531": 0,
      "532": 0,
      "533": 0,
      "534": 0,
      "535": 0,
      "536": 0,
      "537": 0,
      "538": 0,
      "539": 0,
      "540": 0,
      "541": 0,
      "542": 0,
      "543": 0,
      "544": 0,
      "545": 0,
      "546": 0,
      "547": 0,
      "548": 0,
      "549": 0,
      "550": 0,
      "551": 0,
      "552": 0,
      "553": 0,
      "554": 0,
      "555": 0,
      "556": 0,
      "557": 0,
      "558": 0,
      "559": 0,
      "560": 0,
      "561": 0,
      "562": 0,
      "563": 0,
      "564": 0,
      "565": 0,
      "566": 0,
      "567": 0,
      "568": 0,
      "569": 0,
      "570": 0,
      "571": 0,
      "572": 0,
      "573": 0,
      "574": 0,
      "575": 0,
      "576": 0,
      "577": 0,
      "578": 0,
      "579": 0,
      "580": 0,
      "581": 0,
      "582": 0,
      "583": 0,
      "584": 0,
      "585": 0,
      "586": 0,
      "587": 0,
      "588": 0,
      "589": 0,
      "590": 0,
      "591": 0,
      "592": 0,
      "593": 0,
      "594": 0,
      "595": 0,
      "596": 0,
      "597": 0,
      "598": 0,
      "599": 0,
      "600": 0,
      "601": 0,
      "602": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0, 0],
      "60": [0, 0],
      "61": [0, 0, 0, 0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0, 0],
      "69": [0, 0],
      "70": [0, 0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0],
      "103": [0, 0],
      "104": [0, 0],
      "105": [0, 0],
      "106": [0, 0],
      "107": [0, 0],
      "108": [0, 0],
      "109": [0, 0],
      "110": [0, 0],
      "111": [0, 0],
      "112": [0, 0],
      "113": [0, 0],
      "114": [0, 0],
      "115": [0, 0],
      "116": [0, 0],
      "117": [0, 0],
      "118": [0, 0],
      "119": [0, 0],
      "120": [0, 0],
      "121": [0, 0, 0, 0],
      "122": [0, 0],
      "123": [0, 0, 0],
      "124": [0, 0],
      "125": [0, 0],
      "126": [0, 0],
      "127": [0, 0],
      "128": [0, 0],
      "129": [0, 0],
      "130": [0, 0],
      "131": [0, 0],
      "132": [0, 0],
      "133": [0, 0],
      "134": [0, 0],
      "135": [0, 0],
      "136": [0, 0],
      "137": [0, 0],
      "138": [0, 0],
      "139": [0, 0],
      "140": [0, 0],
      "141": [0, 0],
      "142": [0, 0],
      "143": [0, 0],
      "144": [0, 0, 0, 0, 0, 0, 0],
      "145": [0, 0],
      "146": [0, 0],
      "147": [0, 0],
      "148": [0, 0],
      "149": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7772938f44ff4bdd692e52dbeb175557501d070b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29oqqyhfji = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29oqqyhfji();
var lexer = (cov_29oqqyhfji().s[0]++, __webpack_require__(/*! ./lexer */ 3608));
var nodes = (cov_29oqqyhfji().s[1]++, __webpack_require__(/*! ./nodes */ 8883));
var Obj = (cov_29oqqyhfji().s[2]++, (__webpack_require__(/*! ./object */ 891).Obj));
var lib = (cov_29oqqyhfji().s[3]++, __webpack_require__(/*! ./lib */ 449));
class Parser extends Obj {
  init(tokens) {
    cov_29oqqyhfji().f[0]++;
    cov_29oqqyhfji().s[4]++;
    this.tokens = tokens;
    cov_29oqqyhfji().s[5]++;
    this.peeked = null;
    cov_29oqqyhfji().s[6]++;
    this.breakOnBlocks = null;
    cov_29oqqyhfji().s[7]++;
    this.dropLeadingWhitespace = false;
    cov_29oqqyhfji().s[8]++;
    this.extensions = [];
  }
  nextToken(withWhitespace) {
    cov_29oqqyhfji().f[1]++;
    var tok;
    cov_29oqqyhfji().s[9]++;
    if (this.peeked) {
      cov_29oqqyhfji().b[0][0]++;
      cov_29oqqyhfji().s[10]++;
      if ((cov_29oqqyhfji().b[2][0]++, !withWhitespace) && (cov_29oqqyhfji().b[2][1]++, this.peeked.type === lexer.TOKEN_WHITESPACE)) {
        cov_29oqqyhfji().b[1][0]++;
        cov_29oqqyhfji().s[11]++;
        this.peeked = null;
      } else {
        cov_29oqqyhfji().b[1][1]++;
        cov_29oqqyhfji().s[12]++;
        tok = this.peeked;
        cov_29oqqyhfji().s[13]++;
        this.peeked = null;
        cov_29oqqyhfji().s[14]++;
        return tok;
      }
    } else {
      cov_29oqqyhfji().b[0][1]++;
    }
    cov_29oqqyhfji().s[15]++;
    tok = this.tokens.nextToken();
    cov_29oqqyhfji().s[16]++;
    if (!withWhitespace) {
      cov_29oqqyhfji().b[3][0]++;
      cov_29oqqyhfji().s[17]++;
      while ((cov_29oqqyhfji().b[4][0]++, tok) && (cov_29oqqyhfji().b[4][1]++, tok.type === lexer.TOKEN_WHITESPACE)) {
        cov_29oqqyhfji().s[18]++;
        tok = this.tokens.nextToken();
      }
    } else {
      cov_29oqqyhfji().b[3][1]++;
    }
    cov_29oqqyhfji().s[19]++;
    return tok;
  }
  peekToken() {
    cov_29oqqyhfji().f[2]++;
    cov_29oqqyhfji().s[20]++;
    this.peeked = (cov_29oqqyhfji().b[5][0]++, this.peeked) || (cov_29oqqyhfji().b[5][1]++, this.nextToken());
    cov_29oqqyhfji().s[21]++;
    return this.peeked;
  }
  pushToken(tok) {
    cov_29oqqyhfji().f[3]++;
    cov_29oqqyhfji().s[22]++;
    if (this.peeked) {
      cov_29oqqyhfji().b[6][0]++;
      cov_29oqqyhfji().s[23]++;
      throw new Error('pushToken: can only push one token on between reads');
    } else {
      cov_29oqqyhfji().b[6][1]++;
    }
    cov_29oqqyhfji().s[24]++;
    this.peeked = tok;
  }
  error(msg, lineno, colno) {
    cov_29oqqyhfji().f[4]++;
    cov_29oqqyhfji().s[25]++;
    if ((cov_29oqqyhfji().b[8][0]++, lineno === undefined) || (cov_29oqqyhfji().b[8][1]++, colno === undefined)) {
      cov_29oqqyhfji().b[7][0]++;
      const tok = (cov_29oqqyhfji().s[26]++, (cov_29oqqyhfji().b[9][0]++, this.peekToken()) || (cov_29oqqyhfji().b[9][1]++, {}));
      cov_29oqqyhfji().s[27]++;
      lineno = tok.lineno;
      cov_29oqqyhfji().s[28]++;
      colno = tok.colno;
    } else {
      cov_29oqqyhfji().b[7][1]++;
    }
    cov_29oqqyhfji().s[29]++;
    if (lineno !== undefined) {
      cov_29oqqyhfji().b[10][0]++;
      cov_29oqqyhfji().s[30]++;
      lineno += 1;
    } else {
      cov_29oqqyhfji().b[10][1]++;
    }
    cov_29oqqyhfji().s[31]++;
    if (colno !== undefined) {
      cov_29oqqyhfji().b[11][0]++;
      cov_29oqqyhfji().s[32]++;
      colno += 1;
    } else {
      cov_29oqqyhfji().b[11][1]++;
    }
    cov_29oqqyhfji().s[33]++;
    return new lib.TemplateError(msg, lineno, colno);
  }
  fail(msg, lineno, colno) {
    cov_29oqqyhfji().f[5]++;
    cov_29oqqyhfji().s[34]++;
    throw this.error(msg, lineno, colno);
  }
  skip(type) {
    cov_29oqqyhfji().f[6]++;
    var tok = (cov_29oqqyhfji().s[35]++, this.nextToken());
    cov_29oqqyhfji().s[36]++;
    if ((cov_29oqqyhfji().b[13][0]++, !tok) || (cov_29oqqyhfji().b[13][1]++, tok.type !== type)) {
      cov_29oqqyhfji().b[12][0]++;
      cov_29oqqyhfji().s[37]++;
      this.pushToken(tok);
      cov_29oqqyhfji().s[38]++;
      return false;
    } else {
      cov_29oqqyhfji().b[12][1]++;
    }
    cov_29oqqyhfji().s[39]++;
    return true;
  }
  expect(type) {
    cov_29oqqyhfji().f[7]++;
    var tok = (cov_29oqqyhfji().s[40]++, this.nextToken());
    cov_29oqqyhfji().s[41]++;
    if (tok.type !== type) {
      cov_29oqqyhfji().b[14][0]++;
      cov_29oqqyhfji().s[42]++;
      this.fail('expected ' + type + ', got ' + tok.type, tok.lineno, tok.colno);
    } else {
      cov_29oqqyhfji().b[14][1]++;
    }
    cov_29oqqyhfji().s[43]++;
    return tok;
  }
  skipValue(type, val) {
    cov_29oqqyhfji().f[8]++;
    var tok = (cov_29oqqyhfji().s[44]++, this.nextToken());
    cov_29oqqyhfji().s[45]++;
    if ((cov_29oqqyhfji().b[16][0]++, !tok) || (cov_29oqqyhfji().b[16][1]++, tok.type !== type) || (cov_29oqqyhfji().b[16][2]++, tok.value !== val)) {
      cov_29oqqyhfji().b[15][0]++;
      cov_29oqqyhfji().s[46]++;
      this.pushToken(tok);
      cov_29oqqyhfji().s[47]++;
      return false;
    } else {
      cov_29oqqyhfji().b[15][1]++;
    }
    cov_29oqqyhfji().s[48]++;
    return true;
  }
  skipSymbol(val) {
    cov_29oqqyhfji().f[9]++;
    cov_29oqqyhfji().s[49]++;
    return this.skipValue(lexer.TOKEN_SYMBOL, val);
  }
  advanceAfterBlockEnd(name) {
    cov_29oqqyhfji().f[10]++;
    var tok;
    cov_29oqqyhfji().s[50]++;
    if (!name) {
      cov_29oqqyhfji().b[17][0]++;
      cov_29oqqyhfji().s[51]++;
      tok = this.peekToken();
      cov_29oqqyhfji().s[52]++;
      if (!tok) {
        cov_29oqqyhfji().b[18][0]++;
        cov_29oqqyhfji().s[53]++;
        this.fail('unexpected end of file');
      } else {
        cov_29oqqyhfji().b[18][1]++;
      }
      cov_29oqqyhfji().s[54]++;
      if (tok.type !== lexer.TOKEN_SYMBOL) {
        cov_29oqqyhfji().b[19][0]++;
        cov_29oqqyhfji().s[55]++;
        this.fail('advanceAfterBlockEnd: expected symbol token or ' + 'explicit name to be passed');
      } else {
        cov_29oqqyhfji().b[19][1]++;
      }
      cov_29oqqyhfji().s[56]++;
      name = this.nextToken().value;
    } else {
      cov_29oqqyhfji().b[17][1]++;
    }
    cov_29oqqyhfji().s[57]++;
    tok = this.nextToken();
    cov_29oqqyhfji().s[58]++;
    if ((cov_29oqqyhfji().b[21][0]++, tok) && (cov_29oqqyhfji().b[21][1]++, tok.type === lexer.TOKEN_BLOCK_END)) {
      cov_29oqqyhfji().b[20][0]++;
      cov_29oqqyhfji().s[59]++;
      if (tok.value.charAt(0) === '-') {
        cov_29oqqyhfji().b[22][0]++;
        cov_29oqqyhfji().s[60]++;
        this.dropLeadingWhitespace = true;
      } else {
        cov_29oqqyhfji().b[22][1]++;
      }
    } else {
      cov_29oqqyhfji().b[20][1]++;
      cov_29oqqyhfji().s[61]++;
      this.fail('expected block end in ' + name + ' statement');
    }
    cov_29oqqyhfji().s[62]++;
    return tok;
  }
  advanceAfterVariableEnd() {
    cov_29oqqyhfji().f[11]++;
    var tok = (cov_29oqqyhfji().s[63]++, this.nextToken());
    cov_29oqqyhfji().s[64]++;
    if ((cov_29oqqyhfji().b[24][0]++, tok) && (cov_29oqqyhfji().b[24][1]++, tok.type === lexer.TOKEN_VARIABLE_END)) {
      cov_29oqqyhfji().b[23][0]++;
      cov_29oqqyhfji().s[65]++;
      this.dropLeadingWhitespace = tok.value.charAt(tok.value.length - this.tokens.tags.VARIABLE_END.length - 1) === '-';
    } else {
      cov_29oqqyhfji().b[23][1]++;
      cov_29oqqyhfji().s[66]++;
      this.pushToken(tok);
      cov_29oqqyhfji().s[67]++;
      this.fail('expected variable end');
    }
  }
  parseFor() {
    cov_29oqqyhfji().f[12]++;
    var forTok = (cov_29oqqyhfji().s[68]++, this.peekToken());
    var node;
    var endBlock;
    cov_29oqqyhfji().s[69]++;
    if (this.skipSymbol('for')) {
      cov_29oqqyhfji().b[25][0]++;
      cov_29oqqyhfji().s[70]++;
      node = new nodes.For(forTok.lineno, forTok.colno);
      cov_29oqqyhfji().s[71]++;
      endBlock = 'endfor';
    } else {
      cov_29oqqyhfji().b[25][1]++;
      cov_29oqqyhfji().s[72]++;
      if (this.skipSymbol('asyncEach')) {
        cov_29oqqyhfji().b[26][0]++;
        cov_29oqqyhfji().s[73]++;
        node = new nodes.AsyncEach(forTok.lineno, forTok.colno);
        cov_29oqqyhfji().s[74]++;
        endBlock = 'endeach';
      } else {
        cov_29oqqyhfji().b[26][1]++;
        cov_29oqqyhfji().s[75]++;
        if (this.skipSymbol('asyncAll')) {
          cov_29oqqyhfji().b[27][0]++;
          cov_29oqqyhfji().s[76]++;
          node = new nodes.AsyncAll(forTok.lineno, forTok.colno);
          cov_29oqqyhfji().s[77]++;
          endBlock = 'endall';
        } else {
          cov_29oqqyhfji().b[27][1]++;
          cov_29oqqyhfji().s[78]++;
          this.fail('parseFor: expected for{Async}', forTok.lineno, forTok.colno);
        }
      }
    }
    cov_29oqqyhfji().s[79]++;
    node.name = this.parsePrimary();
    cov_29oqqyhfji().s[80]++;
    if (!(node.name instanceof nodes.Symbol)) {
      cov_29oqqyhfji().b[28][0]++;
      cov_29oqqyhfji().s[81]++;
      this.fail('parseFor: variable name expected for loop');
    } else {
      cov_29oqqyhfji().b[28][1]++;
    }
    const type = (cov_29oqqyhfji().s[82]++, this.peekToken().type);
    cov_29oqqyhfji().s[83]++;
    if (type === lexer.TOKEN_COMMA) {
      cov_29oqqyhfji().b[29][0]++;
      // key/value iteration
      const key = (cov_29oqqyhfji().s[84]++, node.name);
      cov_29oqqyhfji().s[85]++;
      node.name = new nodes.Array(key.lineno, key.colno);
      cov_29oqqyhfji().s[86]++;
      node.name.addChild(key);
      cov_29oqqyhfji().s[87]++;
      while (this.skip(lexer.TOKEN_COMMA)) {
        const prim = (cov_29oqqyhfji().s[88]++, this.parsePrimary());
        cov_29oqqyhfji().s[89]++;
        node.name.addChild(prim);
      }
    } else {
      cov_29oqqyhfji().b[29][1]++;
    }
    cov_29oqqyhfji().s[90]++;
    if (!this.skipSymbol('in')) {
      cov_29oqqyhfji().b[30][0]++;
      cov_29oqqyhfji().s[91]++;
      this.fail('parseFor: expected "in" keyword for loop', forTok.lineno, forTok.colno);
    } else {
      cov_29oqqyhfji().b[30][1]++;
    }
    cov_29oqqyhfji().s[92]++;
    node.arr = this.parseExpression();
    cov_29oqqyhfji().s[93]++;
    this.advanceAfterBlockEnd(forTok.value);
    cov_29oqqyhfji().s[94]++;
    node.body = this.parseUntilBlocks(endBlock, 'else');
    cov_29oqqyhfji().s[95]++;
    if (this.skipSymbol('else')) {
      cov_29oqqyhfji().b[31][0]++;
      cov_29oqqyhfji().s[96]++;
      this.advanceAfterBlockEnd('else');
      cov_29oqqyhfji().s[97]++;
      node.else_ = this.parseUntilBlocks(endBlock);
    } else {
      cov_29oqqyhfji().b[31][1]++;
    }
    cov_29oqqyhfji().s[98]++;
    this.advanceAfterBlockEnd();
    cov_29oqqyhfji().s[99]++;
    return node;
  }
  parseMacro() {
    cov_29oqqyhfji().f[13]++;
    const macroTok = (cov_29oqqyhfji().s[100]++, this.peekToken());
    cov_29oqqyhfji().s[101]++;
    if (!this.skipSymbol('macro')) {
      cov_29oqqyhfji().b[32][0]++;
      cov_29oqqyhfji().s[102]++;
      this.fail('expected macro');
    } else {
      cov_29oqqyhfji().b[32][1]++;
    }
    const name = (cov_29oqqyhfji().s[103]++, this.parsePrimary(true));
    const args = (cov_29oqqyhfji().s[104]++, this.parseSignature());
    const node = (cov_29oqqyhfji().s[105]++, new nodes.Macro(macroTok.lineno, macroTok.colno, name, args));
    cov_29oqqyhfji().s[106]++;
    this.advanceAfterBlockEnd(macroTok.value);
    cov_29oqqyhfji().s[107]++;
    node.body = this.parseUntilBlocks('endmacro');
    cov_29oqqyhfji().s[108]++;
    this.advanceAfterBlockEnd();
    cov_29oqqyhfji().s[109]++;
    return node;
  }
  parseCall() {
    cov_29oqqyhfji().f[14]++;
    // a call block is parsed as a normal FunCall, but with an added
    // 'caller' kwarg which is a Caller node.
    var callTok = (cov_29oqqyhfji().s[110]++, this.peekToken());
    cov_29oqqyhfji().s[111]++;
    if (!this.skipSymbol('call')) {
      cov_29oqqyhfji().b[33][0]++;
      cov_29oqqyhfji().s[112]++;
      this.fail('expected call');
    } else {
      cov_29oqqyhfji().b[33][1]++;
    }
    const callerArgs = (cov_29oqqyhfji().s[113]++, (cov_29oqqyhfji().b[34][0]++, this.parseSignature(true)) || (cov_29oqqyhfji().b[34][1]++, new nodes.NodeList()));
    const macroCall = (cov_29oqqyhfji().s[114]++, this.parsePrimary());
    cov_29oqqyhfji().s[115]++;
    this.advanceAfterBlockEnd(callTok.value);
    const body = (cov_29oqqyhfji().s[116]++, this.parseUntilBlocks('endcall'));
    cov_29oqqyhfji().s[117]++;
    this.advanceAfterBlockEnd();
    const callerName = (cov_29oqqyhfji().s[118]++, new nodes.Symbol(callTok.lineno, callTok.colno, 'caller'));
    const callerNode = (cov_29oqqyhfji().s[119]++, new nodes.Caller(callTok.lineno, callTok.colno, callerName, callerArgs, body));

    // add the additional caller kwarg, adding kwargs if necessary
    const args = (cov_29oqqyhfji().s[120]++, macroCall.args.children);
    cov_29oqqyhfji().s[121]++;
    if (!(args[args.length - 1] instanceof nodes.KeywordArgs)) {
      cov_29oqqyhfji().b[35][0]++;
      cov_29oqqyhfji().s[122]++;
      args.push(new nodes.KeywordArgs());
    } else {
      cov_29oqqyhfji().b[35][1]++;
    }
    const kwargs = (cov_29oqqyhfji().s[123]++, args[args.length - 1]);
    cov_29oqqyhfji().s[124]++;
    kwargs.addChild(new nodes.Pair(callTok.lineno, callTok.colno, callerName, callerNode));
    cov_29oqqyhfji().s[125]++;
    return new nodes.Output(callTok.lineno, callTok.colno, [macroCall]);
  }
  parseWithContext() {
    cov_29oqqyhfji().f[15]++;
    var tok = (cov_29oqqyhfji().s[126]++, this.peekToken());
    var withContext = (cov_29oqqyhfji().s[127]++, null);
    cov_29oqqyhfji().s[128]++;
    if (this.skipSymbol('with')) {
      cov_29oqqyhfji().b[36][0]++;
      cov_29oqqyhfji().s[129]++;
      withContext = true;
    } else {
      cov_29oqqyhfji().b[36][1]++;
      cov_29oqqyhfji().s[130]++;
      if (this.skipSymbol('without')) {
        cov_29oqqyhfji().b[37][0]++;
        cov_29oqqyhfji().s[131]++;
        withContext = false;
      } else {
        cov_29oqqyhfji().b[37][1]++;
      }
    }
    cov_29oqqyhfji().s[132]++;
    if (withContext !== null) {
      cov_29oqqyhfji().b[38][0]++;
      cov_29oqqyhfji().s[133]++;
      if (!this.skipSymbol('context')) {
        cov_29oqqyhfji().b[39][0]++;
        cov_29oqqyhfji().s[134]++;
        this.fail('parseFrom: expected context after with/without', tok.lineno, tok.colno);
      } else {
        cov_29oqqyhfji().b[39][1]++;
      }
    } else {
      cov_29oqqyhfji().b[38][1]++;
    }
    cov_29oqqyhfji().s[135]++;
    return withContext;
  }
  parseImport() {
    cov_29oqqyhfji().f[16]++;
    var importTok = (cov_29oqqyhfji().s[136]++, this.peekToken());
    cov_29oqqyhfji().s[137]++;
    if (!this.skipSymbol('import')) {
      cov_29oqqyhfji().b[40][0]++;
      cov_29oqqyhfji().s[138]++;
      this.fail('parseImport: expected import', importTok.lineno, importTok.colno);
    } else {
      cov_29oqqyhfji().b[40][1]++;
    }
    const template = (cov_29oqqyhfji().s[139]++, this.parseExpression());
    cov_29oqqyhfji().s[140]++;
    if (!this.skipSymbol('as')) {
      cov_29oqqyhfji().b[41][0]++;
      cov_29oqqyhfji().s[141]++;
      this.fail('parseImport: expected "as" keyword', importTok.lineno, importTok.colno);
    } else {
      cov_29oqqyhfji().b[41][1]++;
    }
    const target = (cov_29oqqyhfji().s[142]++, this.parseExpression());
    const withContext = (cov_29oqqyhfji().s[143]++, this.parseWithContext());
    const node = (cov_29oqqyhfji().s[144]++, new nodes.Import(importTok.lineno, importTok.colno, template, target, withContext));
    cov_29oqqyhfji().s[145]++;
    this.advanceAfterBlockEnd(importTok.value);
    cov_29oqqyhfji().s[146]++;
    return node;
  }
  parseFrom() {
    cov_29oqqyhfji().f[17]++;
    const fromTok = (cov_29oqqyhfji().s[147]++, this.peekToken());
    cov_29oqqyhfji().s[148]++;
    if (!this.skipSymbol('from')) {
      cov_29oqqyhfji().b[42][0]++;
      cov_29oqqyhfji().s[149]++;
      this.fail('parseFrom: expected from');
    } else {
      cov_29oqqyhfji().b[42][1]++;
    }
    const template = (cov_29oqqyhfji().s[150]++, this.parseExpression());
    cov_29oqqyhfji().s[151]++;
    if (!this.skipSymbol('import')) {
      cov_29oqqyhfji().b[43][0]++;
      cov_29oqqyhfji().s[152]++;
      this.fail('parseFrom: expected import', fromTok.lineno, fromTok.colno);
    } else {
      cov_29oqqyhfji().b[43][1]++;
    }
    const names = (cov_29oqqyhfji().s[153]++, new nodes.NodeList());
    let withContext;
    cov_29oqqyhfji().s[154]++;
    while (1) {
      // eslint-disable-line no-constant-condition
      const nextTok = (cov_29oqqyhfji().s[155]++, this.peekToken());
      cov_29oqqyhfji().s[156]++;
      if (nextTok.type === lexer.TOKEN_BLOCK_END) {
        cov_29oqqyhfji().b[44][0]++;
        cov_29oqqyhfji().s[157]++;
        if (!names.children.length) {
          cov_29oqqyhfji().b[45][0]++;
          cov_29oqqyhfji().s[158]++;
          this.fail('parseFrom: Expected at least one import name', fromTok.lineno, fromTok.colno);
        } else {
          cov_29oqqyhfji().b[45][1]++;
        }

        // Since we are manually advancing past the block end,
        // need to keep track of whitespace control (normally
        // this is done in `advanceAfterBlockEnd`
        cov_29oqqyhfji().s[159]++;
        if (nextTok.value.charAt(0) === '-') {
          cov_29oqqyhfji().b[46][0]++;
          cov_29oqqyhfji().s[160]++;
          this.dropLeadingWhitespace = true;
        } else {
          cov_29oqqyhfji().b[46][1]++;
        }
        cov_29oqqyhfji().s[161]++;
        this.nextToken();
        cov_29oqqyhfji().s[162]++;
        break;
      } else {
        cov_29oqqyhfji().b[44][1]++;
      }
      cov_29oqqyhfji().s[163]++;
      if ((cov_29oqqyhfji().b[48][0]++, names.children.length > 0) && (cov_29oqqyhfji().b[48][1]++, !this.skip(lexer.TOKEN_COMMA))) {
        cov_29oqqyhfji().b[47][0]++;
        cov_29oqqyhfji().s[164]++;
        this.fail('parseFrom: expected comma', fromTok.lineno, fromTok.colno);
      } else {
        cov_29oqqyhfji().b[47][1]++;
      }
      const name = (cov_29oqqyhfji().s[165]++, this.parsePrimary());
      cov_29oqqyhfji().s[166]++;
      if (name.value.charAt(0) === '_') {
        cov_29oqqyhfji().b[49][0]++;
        cov_29oqqyhfji().s[167]++;
        this.fail('parseFrom: names starting with an underscore cannot be imported', name.lineno, name.colno);
      } else {
        cov_29oqqyhfji().b[49][1]++;
      }
      cov_29oqqyhfji().s[168]++;
      if (this.skipSymbol('as')) {
        cov_29oqqyhfji().b[50][0]++;
        const alias = (cov_29oqqyhfji().s[169]++, this.parsePrimary());
        cov_29oqqyhfji().s[170]++;
        names.addChild(new nodes.Pair(name.lineno, name.colno, name, alias));
      } else {
        cov_29oqqyhfji().b[50][1]++;
        cov_29oqqyhfji().s[171]++;
        names.addChild(name);
      }
      cov_29oqqyhfji().s[172]++;
      withContext = this.parseWithContext();
    }
    cov_29oqqyhfji().s[173]++;
    return new nodes.FromImport(fromTok.lineno, fromTok.colno, template, names, withContext);
  }
  parseBlock() {
    cov_29oqqyhfji().f[18]++;
    const tag = (cov_29oqqyhfji().s[174]++, this.peekToken());
    cov_29oqqyhfji().s[175]++;
    if (!this.skipSymbol('block')) {
      cov_29oqqyhfji().b[51][0]++;
      cov_29oqqyhfji().s[176]++;
      this.fail('parseBlock: expected block', tag.lineno, tag.colno);
    } else {
      cov_29oqqyhfji().b[51][1]++;
    }
    const node = (cov_29oqqyhfji().s[177]++, new nodes.Block(tag.lineno, tag.colno));
    cov_29oqqyhfji().s[178]++;
    node.name = this.parsePrimary();
    cov_29oqqyhfji().s[179]++;
    if (!(node.name instanceof nodes.Symbol)) {
      cov_29oqqyhfji().b[52][0]++;
      cov_29oqqyhfji().s[180]++;
      this.fail('parseBlock: variable name expected', tag.lineno, tag.colno);
    } else {
      cov_29oqqyhfji().b[52][1]++;
    }
    cov_29oqqyhfji().s[181]++;
    this.advanceAfterBlockEnd(tag.value);
    cov_29oqqyhfji().s[182]++;
    node.body = this.parseUntilBlocks('endblock');
    cov_29oqqyhfji().s[183]++;
    this.skipSymbol('endblock');
    cov_29oqqyhfji().s[184]++;
    this.skipSymbol(node.name.value);
    const tok = (cov_29oqqyhfji().s[185]++, this.peekToken());
    cov_29oqqyhfji().s[186]++;
    if (!tok) {
      cov_29oqqyhfji().b[53][0]++;
      cov_29oqqyhfji().s[187]++;
      this.fail('parseBlock: expected endblock, got end of file');
    } else {
      cov_29oqqyhfji().b[53][1]++;
    }
    cov_29oqqyhfji().s[188]++;
    this.advanceAfterBlockEnd(tok.value);
    cov_29oqqyhfji().s[189]++;
    return node;
  }
  parseExtends() {
    cov_29oqqyhfji().f[19]++;
    const tagName = (cov_29oqqyhfji().s[190]++, 'extends');
    const tag = (cov_29oqqyhfji().s[191]++, this.peekToken());
    cov_29oqqyhfji().s[192]++;
    if (!this.skipSymbol(tagName)) {
      cov_29oqqyhfji().b[54][0]++;
      cov_29oqqyhfji().s[193]++;
      this.fail('parseTemplateRef: expected ' + tagName);
    } else {
      cov_29oqqyhfji().b[54][1]++;
    }
    const node = (cov_29oqqyhfji().s[194]++, new nodes.Extends(tag.lineno, tag.colno));
    cov_29oqqyhfji().s[195]++;
    node.template = this.parseExpression();
    cov_29oqqyhfji().s[196]++;
    this.advanceAfterBlockEnd(tag.value);
    cov_29oqqyhfji().s[197]++;
    return node;
  }
  parseInclude() {
    cov_29oqqyhfji().f[20]++;
    const tagName = (cov_29oqqyhfji().s[198]++, 'include');
    const tag = (cov_29oqqyhfji().s[199]++, this.peekToken());
    cov_29oqqyhfji().s[200]++;
    if (!this.skipSymbol(tagName)) {
      cov_29oqqyhfji().b[55][0]++;
      cov_29oqqyhfji().s[201]++;
      this.fail('parseInclude: expected ' + tagName);
    } else {
      cov_29oqqyhfji().b[55][1]++;
    }
    const node = (cov_29oqqyhfji().s[202]++, new nodes.Include(tag.lineno, tag.colno));
    cov_29oqqyhfji().s[203]++;
    node.template = this.parseExpression();
    cov_29oqqyhfji().s[204]++;
    if ((cov_29oqqyhfji().b[57][0]++, this.skipSymbol('ignore')) && (cov_29oqqyhfji().b[57][1]++, this.skipSymbol('missing'))) {
      cov_29oqqyhfji().b[56][0]++;
      cov_29oqqyhfji().s[205]++;
      node.ignoreMissing = true;
    } else {
      cov_29oqqyhfji().b[56][1]++;
    }
    cov_29oqqyhfji().s[206]++;
    this.advanceAfterBlockEnd(tag.value);
    cov_29oqqyhfji().s[207]++;
    return node;
  }
  parseIf() {
    cov_29oqqyhfji().f[21]++;
    const tag = (cov_29oqqyhfji().s[208]++, this.peekToken());
    let node;
    cov_29oqqyhfji().s[209]++;
    if ((cov_29oqqyhfji().b[59][0]++, this.skipSymbol('if')) || (cov_29oqqyhfji().b[59][1]++, this.skipSymbol('elif')) || (cov_29oqqyhfji().b[59][2]++, this.skipSymbol('elseif'))) {
      cov_29oqqyhfji().b[58][0]++;
      cov_29oqqyhfji().s[210]++;
      node = new nodes.If(tag.lineno, tag.colno);
    } else {
      cov_29oqqyhfji().b[58][1]++;
      cov_29oqqyhfji().s[211]++;
      if (this.skipSymbol('ifAsync')) {
        cov_29oqqyhfji().b[60][0]++;
        cov_29oqqyhfji().s[212]++;
        node = new nodes.IfAsync(tag.lineno, tag.colno);
      } else {
        cov_29oqqyhfji().b[60][1]++;
        cov_29oqqyhfji().s[213]++;
        this.fail('parseIf: expected if, elif, or elseif', tag.lineno, tag.colno);
      }
    }
    cov_29oqqyhfji().s[214]++;
    node.cond = this.parseExpression();
    cov_29oqqyhfji().s[215]++;
    this.advanceAfterBlockEnd(tag.value);
    cov_29oqqyhfji().s[216]++;
    node.body = this.parseUntilBlocks('elif', 'elseif', 'else', 'endif');
    const tok = (cov_29oqqyhfji().s[217]++, this.peekToken());
    cov_29oqqyhfji().s[218]++;
    switch ((cov_29oqqyhfji().b[62][0]++, tok) && (cov_29oqqyhfji().b[62][1]++, tok.value)) {
      case 'elseif':
        cov_29oqqyhfji().b[61][0]++;
      case 'elif':
        cov_29oqqyhfji().b[61][1]++;
        cov_29oqqyhfji().s[219]++;
        node.else_ = this.parseIf();
        cov_29oqqyhfji().s[220]++;
        break;
      case 'else':
        cov_29oqqyhfji().b[61][2]++;
        cov_29oqqyhfji().s[221]++;
        this.advanceAfterBlockEnd();
        cov_29oqqyhfji().s[222]++;
        node.else_ = this.parseUntilBlocks('endif');
        cov_29oqqyhfji().s[223]++;
        this.advanceAfterBlockEnd();
        cov_29oqqyhfji().s[224]++;
        break;
      case 'endif':
        cov_29oqqyhfji().b[61][3]++;
        cov_29oqqyhfji().s[225]++;
        node.else_ = null;
        cov_29oqqyhfji().s[226]++;
        this.advanceAfterBlockEnd();
        cov_29oqqyhfji().s[227]++;
        break;
      default:
        cov_29oqqyhfji().b[61][4]++;
        cov_29oqqyhfji().s[228]++;
        this.fail('parseIf: expected elif, else, or endif, got end of file');
    }
    cov_29oqqyhfji().s[229]++;
    return node;
  }
  parseSet() {
    cov_29oqqyhfji().f[22]++;
    const tag = (cov_29oqqyhfji().s[230]++, this.peekToken());
    cov_29oqqyhfji().s[231]++;
    if (!this.skipSymbol('set')) {
      cov_29oqqyhfji().b[63][0]++;
      cov_29oqqyhfji().s[232]++;
      this.fail('parseSet: expected set', tag.lineno, tag.colno);
    } else {
      cov_29oqqyhfji().b[63][1]++;
    }
    const node = (cov_29oqqyhfji().s[233]++, new nodes.Set(tag.lineno, tag.colno, []));
    let target;
    cov_29oqqyhfji().s[234]++;
    while (target = this.parsePrimary()) {
      cov_29oqqyhfji().s[235]++;
      node.targets.push(target);
      cov_29oqqyhfji().s[236]++;
      if (!this.skip(lexer.TOKEN_COMMA)) {
        cov_29oqqyhfji().b[64][0]++;
        cov_29oqqyhfji().s[237]++;
        break;
      } else {
        cov_29oqqyhfji().b[64][1]++;
      }
    }
    cov_29oqqyhfji().s[238]++;
    if (!this.skipValue(lexer.TOKEN_OPERATOR, '=')) {
      cov_29oqqyhfji().b[65][0]++;
      cov_29oqqyhfji().s[239]++;
      if (!this.skip(lexer.TOKEN_BLOCK_END)) {
        cov_29oqqyhfji().b[66][0]++;
        cov_29oqqyhfji().s[240]++;
        this.fail('parseSet: expected = or block end in set tag', tag.lineno, tag.colno);
      } else {
        cov_29oqqyhfji().b[66][1]++;
        cov_29oqqyhfji().s[241]++;
        node.body = new nodes.Capture(tag.lineno, tag.colno, this.parseUntilBlocks('endset'));
        cov_29oqqyhfji().s[242]++;
        node.value = null;
        cov_29oqqyhfji().s[243]++;
        this.advanceAfterBlockEnd();
      }
    } else {
      cov_29oqqyhfji().b[65][1]++;
      cov_29oqqyhfji().s[244]++;
      node.value = this.parseExpression();
      cov_29oqqyhfji().s[245]++;
      this.advanceAfterBlockEnd(tag.value);
    }
    cov_29oqqyhfji().s[246]++;
    return node;
  }
  parseSwitch() {
    cov_29oqqyhfji().f[23]++;
    /*
     * Store the tag names in variables in case someone ever wants to
     * customize this.
     */
    const switchStart = (cov_29oqqyhfji().s[247]++, 'switch');
    const switchEnd = (cov_29oqqyhfji().s[248]++, 'endswitch');
    const caseStart = (cov_29oqqyhfji().s[249]++, 'case');
    const caseDefault = (cov_29oqqyhfji().s[250]++, 'default');

    // Get the switch tag.
    const tag = (cov_29oqqyhfji().s[251]++, this.peekToken());

    // fail early if we get some unexpected tag.
    cov_29oqqyhfji().s[252]++;
    if ((cov_29oqqyhfji().b[68][0]++, !this.skipSymbol(switchStart)) && (cov_29oqqyhfji().b[68][1]++, !this.skipSymbol(caseStart)) && (cov_29oqqyhfji().b[68][2]++, !this.skipSymbol(caseDefault))) {
      cov_29oqqyhfji().b[67][0]++;
      cov_29oqqyhfji().s[253]++;
      this.fail('parseSwitch: expected "switch," "case" or "default"', tag.lineno, tag.colno);
    } else {
      cov_29oqqyhfji().b[67][1]++;
    }

    // parse the switch expression
    const expr = (cov_29oqqyhfji().s[254]++, this.parseExpression());

    // advance until a start of a case, a default case or an endswitch.
    cov_29oqqyhfji().s[255]++;
    this.advanceAfterBlockEnd(switchStart);
    cov_29oqqyhfji().s[256]++;
    this.parseUntilBlocks(caseStart, caseDefault, switchEnd);

    // this is the first case. it could also be an endswitch, we'll check.
    let tok = (cov_29oqqyhfji().s[257]++, this.peekToken());

    // create new variables for our cases and default case.
    const cases = (cov_29oqqyhfji().s[258]++, []);
    let defaultCase;

    // while we're dealing with new cases nodes...
    cov_29oqqyhfji().s[259]++;
    do {
      cov_29oqqyhfji().s[260]++;
      // skip the start symbol and get the case expression
      this.skipSymbol(caseStart);
      const cond = (cov_29oqqyhfji().s[261]++, this.parseExpression());
      cov_29oqqyhfji().s[262]++;
      this.advanceAfterBlockEnd(switchStart);
      // get the body of the case node and add it to the array of cases.
      const body = (cov_29oqqyhfji().s[263]++, this.parseUntilBlocks(caseStart, caseDefault, switchEnd));
      cov_29oqqyhfji().s[264]++;
      cases.push(new nodes.Case(tok.line, tok.col, cond, body));
      // get our next case
      cov_29oqqyhfji().s[265]++;
      tok = this.peekToken();
    } while ((cov_29oqqyhfji().b[69][0]++, tok) && (cov_29oqqyhfji().b[69][1]++, tok.value === caseStart));

    // we either have a default case or a switch end.
    cov_29oqqyhfji().s[266]++;
    switch (tok.value) {
      case caseDefault:
        cov_29oqqyhfji().b[70][0]++;
        cov_29oqqyhfji().s[267]++;
        this.advanceAfterBlockEnd();
        cov_29oqqyhfji().s[268]++;
        defaultCase = this.parseUntilBlocks(switchEnd);
        cov_29oqqyhfji().s[269]++;
        this.advanceAfterBlockEnd();
        cov_29oqqyhfji().s[270]++;
        break;
      case switchEnd:
        cov_29oqqyhfji().b[70][1]++;
        cov_29oqqyhfji().s[271]++;
        this.advanceAfterBlockEnd();
        cov_29oqqyhfji().s[272]++;
        break;
      default:
        cov_29oqqyhfji().b[70][2]++;
        cov_29oqqyhfji().s[273]++;
        // otherwise bail because EOF
        this.fail('parseSwitch: expected "case," "default" or "endswitch," got EOF.');
    }

    // and return the switch node.
    cov_29oqqyhfji().s[274]++;
    return new nodes.Switch(tag.lineno, tag.colno, expr, cases, defaultCase);
  }
  parseStatement() {
    cov_29oqqyhfji().f[24]++;
    var tok = (cov_29oqqyhfji().s[275]++, this.peekToken());
    var node;
    cov_29oqqyhfji().s[276]++;
    if (tok.type !== lexer.TOKEN_SYMBOL) {
      cov_29oqqyhfji().b[71][0]++;
      cov_29oqqyhfji().s[277]++;
      this.fail('tag name expected', tok.lineno, tok.colno);
    } else {
      cov_29oqqyhfji().b[71][1]++;
    }
    cov_29oqqyhfji().s[278]++;
    if ((cov_29oqqyhfji().b[73][0]++, this.breakOnBlocks) && (cov_29oqqyhfji().b[73][1]++, lib.indexOf(this.breakOnBlocks, tok.value) !== -1)) {
      cov_29oqqyhfji().b[72][0]++;
      cov_29oqqyhfji().s[279]++;
      return null;
    } else {
      cov_29oqqyhfji().b[72][1]++;
    }
    cov_29oqqyhfji().s[280]++;
    switch (tok.value) {
      case 'raw':
        cov_29oqqyhfji().b[74][0]++;
        cov_29oqqyhfji().s[281]++;
        return this.parseRaw();
      case 'verbatim':
        cov_29oqqyhfji().b[74][1]++;
        cov_29oqqyhfji().s[282]++;
        return this.parseRaw('verbatim');
      case 'if':
        cov_29oqqyhfji().b[74][2]++;
      case 'ifAsync':
        cov_29oqqyhfji().b[74][3]++;
        cov_29oqqyhfji().s[283]++;
        return this.parseIf();
      case 'for':
        cov_29oqqyhfji().b[74][4]++;
      case 'asyncEach':
        cov_29oqqyhfji().b[74][5]++;
      case 'asyncAll':
        cov_29oqqyhfji().b[74][6]++;
        cov_29oqqyhfji().s[284]++;
        return this.parseFor();
      case 'block':
        cov_29oqqyhfji().b[74][7]++;
        cov_29oqqyhfji().s[285]++;
        return this.parseBlock();
      case 'extends':
        cov_29oqqyhfji().b[74][8]++;
        cov_29oqqyhfji().s[286]++;
        return this.parseExtends();
      case 'include':
        cov_29oqqyhfji().b[74][9]++;
        cov_29oqqyhfji().s[287]++;
        return this.parseInclude();
      case 'set':
        cov_29oqqyhfji().b[74][10]++;
        cov_29oqqyhfji().s[288]++;
        return this.parseSet();
      case 'macro':
        cov_29oqqyhfji().b[74][11]++;
        cov_29oqqyhfji().s[289]++;
        return this.parseMacro();
      case 'call':
        cov_29oqqyhfji().b[74][12]++;
        cov_29oqqyhfji().s[290]++;
        return this.parseCall();
      case 'import':
        cov_29oqqyhfji().b[74][13]++;
        cov_29oqqyhfji().s[291]++;
        return this.parseImport();
      case 'from':
        cov_29oqqyhfji().b[74][14]++;
        cov_29oqqyhfji().s[292]++;
        return this.parseFrom();
      case 'filter':
        cov_29oqqyhfji().b[74][15]++;
        cov_29oqqyhfji().s[293]++;
        return this.parseFilterStatement();
      case 'switch':
        cov_29oqqyhfji().b[74][16]++;
        cov_29oqqyhfji().s[294]++;
        return this.parseSwitch();
      default:
        cov_29oqqyhfji().b[74][17]++;
        cov_29oqqyhfji().s[295]++;
        if (this.extensions.length) {
          cov_29oqqyhfji().b[75][0]++;
          cov_29oqqyhfji().s[296]++;
          for (let i = (cov_29oqqyhfji().s[297]++, 0); i < this.extensions.length; i++) {
            const ext = (cov_29oqqyhfji().s[298]++, this.extensions[i]);
            cov_29oqqyhfji().s[299]++;
            if (lib.indexOf((cov_29oqqyhfji().b[77][0]++, ext.tags) || (cov_29oqqyhfji().b[77][1]++, []), tok.value) !== -1) {
              cov_29oqqyhfji().b[76][0]++;
              cov_29oqqyhfji().s[300]++;
              return ext.parse(this, nodes, lexer);
            } else {
              cov_29oqqyhfji().b[76][1]++;
            }
          }
        } else {
          cov_29oqqyhfji().b[75][1]++;
        }
        cov_29oqqyhfji().s[301]++;
        this.fail('unknown block tag: ' + tok.value, tok.lineno, tok.colno);
    }
    cov_29oqqyhfji().s[302]++;
    return node;
  }
  parseRaw(tagName) {
    cov_29oqqyhfji().f[25]++;
    cov_29oqqyhfji().s[303]++;
    tagName = (cov_29oqqyhfji().b[78][0]++, tagName) || (cov_29oqqyhfji().b[78][1]++, 'raw');
    const endTagName = (cov_29oqqyhfji().s[304]++, 'end' + tagName);
    // Look for upcoming raw blocks (ignore all other kinds of blocks)
    const rawBlockRegex = (cov_29oqqyhfji().s[305]++, new RegExp('([\\s\\S]*?){%\\s*(' + tagName + '|' + endTagName + ')\\s*(?=%})%}'));
    let rawLevel = (cov_29oqqyhfji().s[306]++, 1);
    let str = (cov_29oqqyhfji().s[307]++, '');
    let matches = (cov_29oqqyhfji().s[308]++, null);

    // Skip opening raw token
    // Keep this token to track line and column numbers
    const begun = (cov_29oqqyhfji().s[309]++, this.advanceAfterBlockEnd());

    // Exit when there's nothing to match
    // or when we've found the matching "endraw" block
    cov_29oqqyhfji().s[310]++;
    while ((cov_29oqqyhfji().b[79][0]++, matches = this.tokens._extractRegex(rawBlockRegex)) && (cov_29oqqyhfji().b[79][1]++, rawLevel > 0)) {
      const all = (cov_29oqqyhfji().s[311]++, matches[0]);
      const pre = (cov_29oqqyhfji().s[312]++, matches[1]);
      const blockName = (cov_29oqqyhfji().s[313]++, matches[2]);

      // Adjust rawlevel
      cov_29oqqyhfji().s[314]++;
      if (blockName === tagName) {
        cov_29oqqyhfji().b[80][0]++;
        cov_29oqqyhfji().s[315]++;
        rawLevel += 1;
      } else {
        cov_29oqqyhfji().b[80][1]++;
        cov_29oqqyhfji().s[316]++;
        if (blockName === endTagName) {
          cov_29oqqyhfji().b[81][0]++;
          cov_29oqqyhfji().s[317]++;
          rawLevel -= 1;
        } else {
          cov_29oqqyhfji().b[81][1]++;
        }
      }

      // Add to str
      cov_29oqqyhfji().s[318]++;
      if (rawLevel === 0) {
        cov_29oqqyhfji().b[82][0]++;
        cov_29oqqyhfji().s[319]++;
        // We want to exclude the last "endraw"
        str += pre;
        // Move tokenizer to beginning of endraw block
        cov_29oqqyhfji().s[320]++;
        this.tokens.backN(all.length - pre.length);
      } else {
        cov_29oqqyhfji().b[82][1]++;
        cov_29oqqyhfji().s[321]++;
        str += all;
      }
    }
    cov_29oqqyhfji().s[322]++;
    return new nodes.Output(begun.lineno, begun.colno, [new nodes.TemplateData(begun.lineno, begun.colno, str)]);
  }
  parsePostfix(node) {
    cov_29oqqyhfji().f[26]++;
    let lookup;
    let tok = (cov_29oqqyhfji().s[323]++, this.peekToken());
    cov_29oqqyhfji().s[324]++;
    while (tok) {
      cov_29oqqyhfji().s[325]++;
      if (tok.type === lexer.TOKEN_LEFT_PAREN) {
        cov_29oqqyhfji().b[83][0]++;
        cov_29oqqyhfji().s[326]++;
        // Function call
        node = new nodes.FunCall(tok.lineno, tok.colno, node, this.parseSignature());
      } else {
        cov_29oqqyhfji().b[83][1]++;
        cov_29oqqyhfji().s[327]++;
        if (tok.type === lexer.TOKEN_LEFT_BRACKET) {
          cov_29oqqyhfji().b[84][0]++;
          cov_29oqqyhfji().s[328]++;
          // Reference
          lookup = this.parseAggregate();
          cov_29oqqyhfji().s[329]++;
          if (lookup.children.length > 1) {
            cov_29oqqyhfji().b[85][0]++;
            cov_29oqqyhfji().s[330]++;
            this.fail('invalid index');
          } else {
            cov_29oqqyhfji().b[85][1]++;
          }
          cov_29oqqyhfji().s[331]++;
          node = new nodes.LookupVal(tok.lineno, tok.colno, node, lookup.children[0]);
        } else {
          cov_29oqqyhfji().b[84][1]++;
          cov_29oqqyhfji().s[332]++;
          if ((cov_29oqqyhfji().b[87][0]++, tok.type === lexer.TOKEN_OPERATOR) && (cov_29oqqyhfji().b[87][1]++, tok.value === '.')) {
            cov_29oqqyhfji().b[86][0]++;
            cov_29oqqyhfji().s[333]++;
            // Reference
            this.nextToken();
            const val = (cov_29oqqyhfji().s[334]++, this.nextToken());
            cov_29oqqyhfji().s[335]++;
            if (val.type !== lexer.TOKEN_SYMBOL) {
              cov_29oqqyhfji().b[88][0]++;
              cov_29oqqyhfji().s[336]++;
              this.fail('expected name as lookup value, got ' + val.value, val.lineno, val.colno);
            } else {
              cov_29oqqyhfji().b[88][1]++;
            }

            // Make a literal string because it's not a variable
            // reference
            cov_29oqqyhfji().s[337]++;
            lookup = new nodes.Literal(val.lineno, val.colno, val.value);
            cov_29oqqyhfji().s[338]++;
            node = new nodes.LookupVal(tok.lineno, tok.colno, node, lookup);
          } else {
            cov_29oqqyhfji().b[86][1]++;
            cov_29oqqyhfji().s[339]++;
            break;
          }
        }
      }
      cov_29oqqyhfji().s[340]++;
      tok = this.peekToken();
    }
    cov_29oqqyhfji().s[341]++;
    return node;
  }
  parseExpression() {
    cov_29oqqyhfji().f[27]++;
    var node = (cov_29oqqyhfji().s[342]++, this.parseInlineIf());
    cov_29oqqyhfji().s[343]++;
    return node;
  }
  parseInlineIf() {
    cov_29oqqyhfji().f[28]++;
    let node = (cov_29oqqyhfji().s[344]++, this.parseOr());
    cov_29oqqyhfji().s[345]++;
    if (this.skipSymbol('if')) {
      cov_29oqqyhfji().b[89][0]++;
      const condNode = (cov_29oqqyhfji().s[346]++, this.parseOr());
      const bodyNode = (cov_29oqqyhfji().s[347]++, node);
      cov_29oqqyhfji().s[348]++;
      node = new nodes.InlineIf(node.lineno, node.colno);
      cov_29oqqyhfji().s[349]++;
      node.body = bodyNode;
      cov_29oqqyhfji().s[350]++;
      node.cond = condNode;
      cov_29oqqyhfji().s[351]++;
      if (this.skipSymbol('else')) {
        cov_29oqqyhfji().b[90][0]++;
        cov_29oqqyhfji().s[352]++;
        node.else_ = this.parseOr();
      } else {
        cov_29oqqyhfji().b[90][1]++;
        cov_29oqqyhfji().s[353]++;
        node.else_ = null;
      }
    } else {
      cov_29oqqyhfji().b[89][1]++;
    }
    cov_29oqqyhfji().s[354]++;
    return node;
  }
  parseOr() {
    cov_29oqqyhfji().f[29]++;
    let node = (cov_29oqqyhfji().s[355]++, this.parseAnd());
    cov_29oqqyhfji().s[356]++;
    while (this.skipSymbol('or')) {
      const node2 = (cov_29oqqyhfji().s[357]++, this.parseAnd());
      cov_29oqqyhfji().s[358]++;
      node = new nodes.Or(node.lineno, node.colno, node, node2);
    }
    cov_29oqqyhfji().s[359]++;
    return node;
  }
  parseAnd() {
    cov_29oqqyhfji().f[30]++;
    let node = (cov_29oqqyhfji().s[360]++, this.parseNot());
    cov_29oqqyhfji().s[361]++;
    while (this.skipSymbol('and')) {
      const node2 = (cov_29oqqyhfji().s[362]++, this.parseNot());
      cov_29oqqyhfji().s[363]++;
      node = new nodes.And(node.lineno, node.colno, node, node2);
    }
    cov_29oqqyhfji().s[364]++;
    return node;
  }
  parseNot() {
    cov_29oqqyhfji().f[31]++;
    const tok = (cov_29oqqyhfji().s[365]++, this.peekToken());
    cov_29oqqyhfji().s[366]++;
    if (this.skipSymbol('not')) {
      cov_29oqqyhfji().b[91][0]++;
      cov_29oqqyhfji().s[367]++;
      return new nodes.Not(tok.lineno, tok.colno, this.parseNot());
    } else {
      cov_29oqqyhfji().b[91][1]++;
    }
    cov_29oqqyhfji().s[368]++;
    return this.parseIn();
  }
  parseIn() {
    cov_29oqqyhfji().f[32]++;
    let node = (cov_29oqqyhfji().s[369]++, this.parseIs());
    cov_29oqqyhfji().s[370]++;
    while (1) {
      // eslint-disable-line no-constant-condition
      // check if the next token is 'not'
      const tok = (cov_29oqqyhfji().s[371]++, this.nextToken());
      cov_29oqqyhfji().s[372]++;
      if (!tok) {
        cov_29oqqyhfji().b[92][0]++;
        cov_29oqqyhfji().s[373]++;
        break;
      } else {
        cov_29oqqyhfji().b[92][1]++;
      }
      const invert = (cov_29oqqyhfji().s[374]++, (cov_29oqqyhfji().b[93][0]++, tok.type === lexer.TOKEN_SYMBOL) && (cov_29oqqyhfji().b[93][1]++, tok.value === 'not'));
      // if it wasn't 'not', put it back
      cov_29oqqyhfji().s[375]++;
      if (!invert) {
        cov_29oqqyhfji().b[94][0]++;
        cov_29oqqyhfji().s[376]++;
        this.pushToken(tok);
      } else {
        cov_29oqqyhfji().b[94][1]++;
      }
      cov_29oqqyhfji().s[377]++;
      if (this.skipSymbol('in')) {
        cov_29oqqyhfji().b[95][0]++;
        const node2 = (cov_29oqqyhfji().s[378]++, this.parseIs());
        cov_29oqqyhfji().s[379]++;
        node = new nodes.In(node.lineno, node.colno, node, node2);
        cov_29oqqyhfji().s[380]++;
        if (invert) {
          cov_29oqqyhfji().b[96][0]++;
          cov_29oqqyhfji().s[381]++;
          node = new nodes.Not(node.lineno, node.colno, node);
        } else {
          cov_29oqqyhfji().b[96][1]++;
        }
      } else {
        cov_29oqqyhfji().b[95][1]++;
        cov_29oqqyhfji().s[382]++;
        // if we'd found a 'not' but this wasn't an 'in', put back the 'not'
        if (invert) {
          cov_29oqqyhfji().b[97][0]++;
          cov_29oqqyhfji().s[383]++;
          this.pushToken(tok);
        } else {
          cov_29oqqyhfji().b[97][1]++;
        }
        cov_29oqqyhfji().s[384]++;
        break;
      }
    }
    cov_29oqqyhfji().s[385]++;
    return node;
  }

  // I put this right after "in" in the operator precedence stack. That can
  // obviously be changed to be closer to Jinja.
  parseIs() {
    cov_29oqqyhfji().f[33]++;
    let node = (cov_29oqqyhfji().s[386]++, this.parseCompare());
    // look for an is
    cov_29oqqyhfji().s[387]++;
    if (this.skipSymbol('is')) {
      cov_29oqqyhfji().b[98][0]++;
      // look for a not
      const not = (cov_29oqqyhfji().s[388]++, this.skipSymbol('not'));
      // get the next node
      const node2 = (cov_29oqqyhfji().s[389]++, this.parseCompare());
      // create an Is node using the next node and the info from our Is node.
      cov_29oqqyhfji().s[390]++;
      node = new nodes.Is(node.lineno, node.colno, node, node2);
      // if we have a Not, create a Not node from our Is node.
      cov_29oqqyhfji().s[391]++;
      if (not) {
        cov_29oqqyhfji().b[99][0]++;
        cov_29oqqyhfji().s[392]++;
        node = new nodes.Not(node.lineno, node.colno, node);
      } else {
        cov_29oqqyhfji().b[99][1]++;
      }
    } else {
      cov_29oqqyhfji().b[98][1]++;
    }
    // return the node.
    cov_29oqqyhfji().s[393]++;
    return node;
  }
  parseCompare() {
    cov_29oqqyhfji().f[34]++;
    const compareOps = (cov_29oqqyhfji().s[394]++, ['==', '===', '!=', '!==', '<', '>', '<=', '>=']);
    const expr = (cov_29oqqyhfji().s[395]++, this.parseConcat());
    const ops = (cov_29oqqyhfji().s[396]++, []);
    cov_29oqqyhfji().s[397]++;
    while (1) {
      // eslint-disable-line no-constant-condition
      const tok = (cov_29oqqyhfji().s[398]++, this.nextToken());
      cov_29oqqyhfji().s[399]++;
      if (!tok) {
        cov_29oqqyhfji().b[100][0]++;
        cov_29oqqyhfji().s[400]++;
        break;
      } else {
        cov_29oqqyhfji().b[100][1]++;
        cov_29oqqyhfji().s[401]++;
        if (compareOps.indexOf(tok.value) !== -1) {
          cov_29oqqyhfji().b[101][0]++;
          cov_29oqqyhfji().s[402]++;
          ops.push(new nodes.CompareOperand(tok.lineno, tok.colno, this.parseConcat(), tok.value));
        } else {
          cov_29oqqyhfji().b[101][1]++;
          cov_29oqqyhfji().s[403]++;
          this.pushToken(tok);
          cov_29oqqyhfji().s[404]++;
          break;
        }
      }
    }
    cov_29oqqyhfji().s[405]++;
    if (ops.length) {
      cov_29oqqyhfji().b[102][0]++;
      cov_29oqqyhfji().s[406]++;
      return new nodes.Compare(ops[0].lineno, ops[0].colno, expr, ops);
    } else {
      cov_29oqqyhfji().b[102][1]++;
      cov_29oqqyhfji().s[407]++;
      return expr;
    }
  }

  // finds the '~' for string concatenation
  parseConcat() {
    cov_29oqqyhfji().f[35]++;
    let node = (cov_29oqqyhfji().s[408]++, this.parseAdd());
    cov_29oqqyhfji().s[409]++;
    while (this.skipValue(lexer.TOKEN_TILDE, '~')) {
      const node2 = (cov_29oqqyhfji().s[410]++, this.parseAdd());
      cov_29oqqyhfji().s[411]++;
      node = new nodes.Concat(node.lineno, node.colno, node, node2);
    }
    cov_29oqqyhfji().s[412]++;
    return node;
  }
  parseAdd() {
    cov_29oqqyhfji().f[36]++;
    let node = (cov_29oqqyhfji().s[413]++, this.parseSub());
    cov_29oqqyhfji().s[414]++;
    while (this.skipValue(lexer.TOKEN_OPERATOR, '+')) {
      const node2 = (cov_29oqqyhfji().s[415]++, this.parseSub());
      cov_29oqqyhfji().s[416]++;
      node = new nodes.Add(node.lineno, node.colno, node, node2);
    }
    cov_29oqqyhfji().s[417]++;
    return node;
  }
  parseSub() {
    cov_29oqqyhfji().f[37]++;
    let node = (cov_29oqqyhfji().s[418]++, this.parseMul());
    cov_29oqqyhfji().s[419]++;
    while (this.skipValue(lexer.TOKEN_OPERATOR, '-')) {
      const node2 = (cov_29oqqyhfji().s[420]++, this.parseMul());
      cov_29oqqyhfji().s[421]++;
      node = new nodes.Sub(node.lineno, node.colno, node, node2);
    }
    cov_29oqqyhfji().s[422]++;
    return node;
  }
  parseMul() {
    cov_29oqqyhfji().f[38]++;
    let node = (cov_29oqqyhfji().s[423]++, this.parseDiv());
    cov_29oqqyhfji().s[424]++;
    while (this.skipValue(lexer.TOKEN_OPERATOR, '*')) {
      const node2 = (cov_29oqqyhfji().s[425]++, this.parseDiv());
      cov_29oqqyhfji().s[426]++;
      node = new nodes.Mul(node.lineno, node.colno, node, node2);
    }
    cov_29oqqyhfji().s[427]++;
    return node;
  }
  parseDiv() {
    cov_29oqqyhfji().f[39]++;
    let node = (cov_29oqqyhfji().s[428]++, this.parseFloorDiv());
    cov_29oqqyhfji().s[429]++;
    while (this.skipValue(lexer.TOKEN_OPERATOR, '/')) {
      const node2 = (cov_29oqqyhfji().s[430]++, this.parseFloorDiv());
      cov_29oqqyhfji().s[431]++;
      node = new nodes.Div(node.lineno, node.colno, node, node2);
    }
    cov_29oqqyhfji().s[432]++;
    return node;
  }
  parseFloorDiv() {
    cov_29oqqyhfji().f[40]++;
    let node = (cov_29oqqyhfji().s[433]++, this.parseMod());
    cov_29oqqyhfji().s[434]++;
    while (this.skipValue(lexer.TOKEN_OPERATOR, '//')) {
      const node2 = (cov_29oqqyhfji().s[435]++, this.parseMod());
      cov_29oqqyhfji().s[436]++;
      node = new nodes.FloorDiv(node.lineno, node.colno, node, node2);
    }
    cov_29oqqyhfji().s[437]++;
    return node;
  }
  parseMod() {
    cov_29oqqyhfji().f[41]++;
    let node = (cov_29oqqyhfji().s[438]++, this.parsePow());
    cov_29oqqyhfji().s[439]++;
    while (this.skipValue(lexer.TOKEN_OPERATOR, '%')) {
      const node2 = (cov_29oqqyhfji().s[440]++, this.parsePow());
      cov_29oqqyhfji().s[441]++;
      node = new nodes.Mod(node.lineno, node.colno, node, node2);
    }
    cov_29oqqyhfji().s[442]++;
    return node;
  }
  parsePow() {
    cov_29oqqyhfji().f[42]++;
    let node = (cov_29oqqyhfji().s[443]++, this.parseUnary());
    cov_29oqqyhfji().s[444]++;
    while (this.skipValue(lexer.TOKEN_OPERATOR, '**')) {
      const node2 = (cov_29oqqyhfji().s[445]++, this.parseUnary());
      cov_29oqqyhfji().s[446]++;
      node = new nodes.Pow(node.lineno, node.colno, node, node2);
    }
    cov_29oqqyhfji().s[447]++;
    return node;
  }
  parseUnary(noFilters) {
    cov_29oqqyhfji().f[43]++;
    const tok = (cov_29oqqyhfji().s[448]++, this.peekToken());
    let node;
    cov_29oqqyhfji().s[449]++;
    if (this.skipValue(lexer.TOKEN_OPERATOR, '-')) {
      cov_29oqqyhfji().b[103][0]++;
      cov_29oqqyhfji().s[450]++;
      node = new nodes.Neg(tok.lineno, tok.colno, this.parseUnary(true));
    } else {
      cov_29oqqyhfji().b[103][1]++;
      cov_29oqqyhfji().s[451]++;
      if (this.skipValue(lexer.TOKEN_OPERATOR, '+')) {
        cov_29oqqyhfji().b[104][0]++;
        cov_29oqqyhfji().s[452]++;
        node = new nodes.Pos(tok.lineno, tok.colno, this.parseUnary(true));
      } else {
        cov_29oqqyhfji().b[104][1]++;
        cov_29oqqyhfji().s[453]++;
        node = this.parsePrimary();
      }
    }
    cov_29oqqyhfji().s[454]++;
    if (!noFilters) {
      cov_29oqqyhfji().b[105][0]++;
      cov_29oqqyhfji().s[455]++;
      node = this.parseFilter(node);
    } else {
      cov_29oqqyhfji().b[105][1]++;
    }
    cov_29oqqyhfji().s[456]++;
    return node;
  }
  parsePrimary(noPostfix) {
    cov_29oqqyhfji().f[44]++;
    const tok = (cov_29oqqyhfji().s[457]++, this.nextToken());
    let val;
    let node = (cov_29oqqyhfji().s[458]++, null);
    cov_29oqqyhfji().s[459]++;
    if (!tok) {
      cov_29oqqyhfji().b[106][0]++;
      cov_29oqqyhfji().s[460]++;
      this.fail('expected expression, got end of file');
    } else {
      cov_29oqqyhfji().b[106][1]++;
      cov_29oqqyhfji().s[461]++;
      if (tok.type === lexer.TOKEN_STRING) {
        cov_29oqqyhfji().b[107][0]++;
        cov_29oqqyhfji().s[462]++;
        val = tok.value;
      } else {
        cov_29oqqyhfji().b[107][1]++;
        cov_29oqqyhfji().s[463]++;
        if (tok.type === lexer.TOKEN_INT) {
          cov_29oqqyhfji().b[108][0]++;
          cov_29oqqyhfji().s[464]++;
          val = parseInt(tok.value, 10);
        } else {
          cov_29oqqyhfji().b[108][1]++;
          cov_29oqqyhfji().s[465]++;
          if (tok.type === lexer.TOKEN_FLOAT) {
            cov_29oqqyhfji().b[109][0]++;
            cov_29oqqyhfji().s[466]++;
            val = parseFloat(tok.value);
          } else {
            cov_29oqqyhfji().b[109][1]++;
            cov_29oqqyhfji().s[467]++;
            if (tok.type === lexer.TOKEN_BOOLEAN) {
              cov_29oqqyhfji().b[110][0]++;
              cov_29oqqyhfji().s[468]++;
              if (tok.value === 'true') {
                cov_29oqqyhfji().b[111][0]++;
                cov_29oqqyhfji().s[469]++;
                val = true;
              } else {
                cov_29oqqyhfji().b[111][1]++;
                cov_29oqqyhfji().s[470]++;
                if (tok.value === 'false') {
                  cov_29oqqyhfji().b[112][0]++;
                  cov_29oqqyhfji().s[471]++;
                  val = false;
                } else {
                  cov_29oqqyhfji().b[112][1]++;
                  cov_29oqqyhfji().s[472]++;
                  this.fail('invalid boolean: ' + tok.value, tok.lineno, tok.colno);
                }
              }
            } else {
              cov_29oqqyhfji().b[110][1]++;
              cov_29oqqyhfji().s[473]++;
              if (tok.type === lexer.TOKEN_NONE) {
                cov_29oqqyhfji().b[113][0]++;
                cov_29oqqyhfji().s[474]++;
                val = null;
              } else {
                cov_29oqqyhfji().b[113][1]++;
                cov_29oqqyhfji().s[475]++;
                if (tok.type === lexer.TOKEN_REGEX) {
                  cov_29oqqyhfji().b[114][0]++;
                  cov_29oqqyhfji().s[476]++;
                  val = new RegExp(tok.value.body, tok.value.flags);
                } else {
                  cov_29oqqyhfji().b[114][1]++;
                }
              }
            }
          }
        }
      }
    }
    cov_29oqqyhfji().s[477]++;
    if (val !== undefined) {
      cov_29oqqyhfji().b[115][0]++;
      cov_29oqqyhfji().s[478]++;
      node = new nodes.Literal(tok.lineno, tok.colno, val);
    } else {
      cov_29oqqyhfji().b[115][1]++;
      cov_29oqqyhfji().s[479]++;
      if (tok.type === lexer.TOKEN_SYMBOL) {
        cov_29oqqyhfji().b[116][0]++;
        cov_29oqqyhfji().s[480]++;
        node = new nodes.Symbol(tok.lineno, tok.colno, tok.value);
      } else {
        cov_29oqqyhfji().b[116][1]++;
        cov_29oqqyhfji().s[481]++;
        // See if it's an aggregate type, we need to push the
        // current delimiter token back on
        this.pushToken(tok);
        cov_29oqqyhfji().s[482]++;
        node = this.parseAggregate();
      }
    }
    cov_29oqqyhfji().s[483]++;
    if (!noPostfix) {
      cov_29oqqyhfji().b[117][0]++;
      cov_29oqqyhfji().s[484]++;
      node = this.parsePostfix(node);
    } else {
      cov_29oqqyhfji().b[117][1]++;
    }
    cov_29oqqyhfji().s[485]++;
    if (node) {
      cov_29oqqyhfji().b[118][0]++;
      cov_29oqqyhfji().s[486]++;
      return node;
    } else {
      cov_29oqqyhfji().b[118][1]++;
      cov_29oqqyhfji().s[487]++;
      throw this.error(`unexpected token: ${tok.value}`, tok.lineno, tok.colno);
    }
  }
  parseFilterName() {
    cov_29oqqyhfji().f[45]++;
    const tok = (cov_29oqqyhfji().s[488]++, this.expect(lexer.TOKEN_SYMBOL));
    let name = (cov_29oqqyhfji().s[489]++, tok.value);
    cov_29oqqyhfji().s[490]++;
    while (this.skipValue(lexer.TOKEN_OPERATOR, '.')) {
      cov_29oqqyhfji().s[491]++;
      name += '.' + this.expect(lexer.TOKEN_SYMBOL).value;
    }
    cov_29oqqyhfji().s[492]++;
    return new nodes.Symbol(tok.lineno, tok.colno, name);
  }
  parseFilterArgs(node) {
    cov_29oqqyhfji().f[46]++;
    cov_29oqqyhfji().s[493]++;
    if (this.peekToken().type === lexer.TOKEN_LEFT_PAREN) {
      cov_29oqqyhfji().b[119][0]++;
      // Get a FunCall node and add the parameters to the
      // filter
      const call = (cov_29oqqyhfji().s[494]++, this.parsePostfix(node));
      cov_29oqqyhfji().s[495]++;
      return call.args.children;
    } else {
      cov_29oqqyhfji().b[119][1]++;
    }
    cov_29oqqyhfji().s[496]++;
    return [];
  }
  parseFilter(node) {
    cov_29oqqyhfji().f[47]++;
    cov_29oqqyhfji().s[497]++;
    while (this.skip(lexer.TOKEN_PIPE)) {
      const name = (cov_29oqqyhfji().s[498]++, this.parseFilterName());
      cov_29oqqyhfji().s[499]++;
      node = new nodes.Filter(name.lineno, name.colno, name, new nodes.NodeList(name.lineno, name.colno, [node].concat(this.parseFilterArgs(node))));
    }
    cov_29oqqyhfji().s[500]++;
    return node;
  }
  parseFilterStatement() {
    cov_29oqqyhfji().f[48]++;
    var filterTok = (cov_29oqqyhfji().s[501]++, this.peekToken());
    cov_29oqqyhfji().s[502]++;
    if (!this.skipSymbol('filter')) {
      cov_29oqqyhfji().b[120][0]++;
      cov_29oqqyhfji().s[503]++;
      this.fail('parseFilterStatement: expected filter');
    } else {
      cov_29oqqyhfji().b[120][1]++;
    }
    const name = (cov_29oqqyhfji().s[504]++, this.parseFilterName());
    const args = (cov_29oqqyhfji().s[505]++, this.parseFilterArgs(name));
    cov_29oqqyhfji().s[506]++;
    this.advanceAfterBlockEnd(filterTok.value);
    const body = (cov_29oqqyhfji().s[507]++, new nodes.Capture(name.lineno, name.colno, this.parseUntilBlocks('endfilter')));
    cov_29oqqyhfji().s[508]++;
    this.advanceAfterBlockEnd();
    const node = (cov_29oqqyhfji().s[509]++, new nodes.Filter(name.lineno, name.colno, name, new nodes.NodeList(name.lineno, name.colno, [body].concat(args))));
    cov_29oqqyhfji().s[510]++;
    return new nodes.Output(name.lineno, name.colno, [node]);
  }
  parseAggregate() {
    cov_29oqqyhfji().f[49]++;
    var tok = (cov_29oqqyhfji().s[511]++, this.nextToken());
    var node;
    cov_29oqqyhfji().s[512]++;
    switch (tok.type) {
      case lexer.TOKEN_LEFT_PAREN:
        cov_29oqqyhfji().b[121][0]++;
        cov_29oqqyhfji().s[513]++;
        node = new nodes.Group(tok.lineno, tok.colno);
        cov_29oqqyhfji().s[514]++;
        break;
      case lexer.TOKEN_LEFT_BRACKET:
        cov_29oqqyhfji().b[121][1]++;
        cov_29oqqyhfji().s[515]++;
        node = new nodes.Array(tok.lineno, tok.colno);
        cov_29oqqyhfji().s[516]++;
        break;
      case lexer.TOKEN_LEFT_CURLY:
        cov_29oqqyhfji().b[121][2]++;
        cov_29oqqyhfji().s[517]++;
        node = new nodes.Dict(tok.lineno, tok.colno);
        cov_29oqqyhfji().s[518]++;
        break;
      default:
        cov_29oqqyhfji().b[121][3]++;
        cov_29oqqyhfji().s[519]++;
        return null;
    }
    cov_29oqqyhfji().s[520]++;
    while (1) {
      // eslint-disable-line no-constant-condition
      const type = (cov_29oqqyhfji().s[521]++, this.peekToken().type);
      cov_29oqqyhfji().s[522]++;
      if ((cov_29oqqyhfji().b[123][0]++, type === lexer.TOKEN_RIGHT_PAREN) || (cov_29oqqyhfji().b[123][1]++, type === lexer.TOKEN_RIGHT_BRACKET) || (cov_29oqqyhfji().b[123][2]++, type === lexer.TOKEN_RIGHT_CURLY)) {
        cov_29oqqyhfji().b[122][0]++;
        cov_29oqqyhfji().s[523]++;
        this.nextToken();
        cov_29oqqyhfji().s[524]++;
        break;
      } else {
        cov_29oqqyhfji().b[122][1]++;
      }
      cov_29oqqyhfji().s[525]++;
      if (node.children.length > 0) {
        cov_29oqqyhfji().b[124][0]++;
        cov_29oqqyhfji().s[526]++;
        if (!this.skip(lexer.TOKEN_COMMA)) {
          cov_29oqqyhfji().b[125][0]++;
          cov_29oqqyhfji().s[527]++;
          this.fail('parseAggregate: expected comma after expression', tok.lineno, tok.colno);
        } else {
          cov_29oqqyhfji().b[125][1]++;
        }
      } else {
        cov_29oqqyhfji().b[124][1]++;
      }
      cov_29oqqyhfji().s[528]++;
      if (node instanceof nodes.Dict) {
        cov_29oqqyhfji().b[126][0]++;
        // TODO: check for errors
        const key = (cov_29oqqyhfji().s[529]++, this.parsePrimary());

        // We expect a key/value pair for dicts, separated by a
        // colon
        cov_29oqqyhfji().s[530]++;
        if (!this.skip(lexer.TOKEN_COLON)) {
          cov_29oqqyhfji().b[127][0]++;
          cov_29oqqyhfji().s[531]++;
          this.fail('parseAggregate: expected colon after dict key', tok.lineno, tok.colno);
        } else {
          cov_29oqqyhfji().b[127][1]++;
        }

        // TODO: check for errors
        const value = (cov_29oqqyhfji().s[532]++, this.parseExpression());
        cov_29oqqyhfji().s[533]++;
        node.addChild(new nodes.Pair(key.lineno, key.colno, key, value));
      } else {
        cov_29oqqyhfji().b[126][1]++;
        // TODO: check for errors
        const expr = (cov_29oqqyhfji().s[534]++, this.parseExpression());
        cov_29oqqyhfji().s[535]++;
        node.addChild(expr);
      }
    }
    cov_29oqqyhfji().s[536]++;
    return node;
  }
  parseSignature(tolerant, noParens) {
    cov_29oqqyhfji().f[50]++;
    let tok = (cov_29oqqyhfji().s[537]++, this.peekToken());
    cov_29oqqyhfji().s[538]++;
    if ((cov_29oqqyhfji().b[129][0]++, !noParens) && (cov_29oqqyhfji().b[129][1]++, tok.type !== lexer.TOKEN_LEFT_PAREN)) {
      cov_29oqqyhfji().b[128][0]++;
      cov_29oqqyhfji().s[539]++;
      if (tolerant) {
        cov_29oqqyhfji().b[130][0]++;
        cov_29oqqyhfji().s[540]++;
        return null;
      } else {
        cov_29oqqyhfji().b[130][1]++;
        cov_29oqqyhfji().s[541]++;
        this.fail('expected arguments', tok.lineno, tok.colno);
      }
    } else {
      cov_29oqqyhfji().b[128][1]++;
    }
    cov_29oqqyhfji().s[542]++;
    if (tok.type === lexer.TOKEN_LEFT_PAREN) {
      cov_29oqqyhfji().b[131][0]++;
      cov_29oqqyhfji().s[543]++;
      tok = this.nextToken();
    } else {
      cov_29oqqyhfji().b[131][1]++;
    }
    const args = (cov_29oqqyhfji().s[544]++, new nodes.NodeList(tok.lineno, tok.colno));
    const kwargs = (cov_29oqqyhfji().s[545]++, new nodes.KeywordArgs(tok.lineno, tok.colno));
    let checkComma = (cov_29oqqyhfji().s[546]++, false);
    cov_29oqqyhfji().s[547]++;
    while (1) {
      cov_29oqqyhfji().s[548]++;
      // eslint-disable-line no-constant-condition
      tok = this.peekToken();
      cov_29oqqyhfji().s[549]++;
      if ((cov_29oqqyhfji().b[133][0]++, !noParens) && (cov_29oqqyhfji().b[133][1]++, tok.type === lexer.TOKEN_RIGHT_PAREN)) {
        cov_29oqqyhfji().b[132][0]++;
        cov_29oqqyhfji().s[550]++;
        this.nextToken();
        cov_29oqqyhfji().s[551]++;
        break;
      } else {
        cov_29oqqyhfji().b[132][1]++;
        cov_29oqqyhfji().s[552]++;
        if ((cov_29oqqyhfji().b[135][0]++, noParens) && (cov_29oqqyhfji().b[135][1]++, tok.type === lexer.TOKEN_BLOCK_END)) {
          cov_29oqqyhfji().b[134][0]++;
          cov_29oqqyhfji().s[553]++;
          break;
        } else {
          cov_29oqqyhfji().b[134][1]++;
        }
      }
      cov_29oqqyhfji().s[554]++;
      if ((cov_29oqqyhfji().b[137][0]++, checkComma) && (cov_29oqqyhfji().b[137][1]++, !this.skip(lexer.TOKEN_COMMA))) {
        cov_29oqqyhfji().b[136][0]++;
        cov_29oqqyhfji().s[555]++;
        this.fail('parseSignature: expected comma after expression', tok.lineno, tok.colno);
      } else {
        cov_29oqqyhfji().b[136][1]++;
        const arg = (cov_29oqqyhfji().s[556]++, this.parseExpression());
        cov_29oqqyhfji().s[557]++;
        if (this.skipValue(lexer.TOKEN_OPERATOR, '=')) {
          cov_29oqqyhfji().b[138][0]++;
          cov_29oqqyhfji().s[558]++;
          kwargs.addChild(new nodes.Pair(arg.lineno, arg.colno, arg, this.parseExpression()));
        } else {
          cov_29oqqyhfji().b[138][1]++;
          cov_29oqqyhfji().s[559]++;
          args.addChild(arg);
        }
      }
      cov_29oqqyhfji().s[560]++;
      checkComma = true;
    }
    cov_29oqqyhfji().s[561]++;
    if (kwargs.children.length) {
      cov_29oqqyhfji().b[139][0]++;
      cov_29oqqyhfji().s[562]++;
      args.addChild(kwargs);
    } else {
      cov_29oqqyhfji().b[139][1]++;
    }
    cov_29oqqyhfji().s[563]++;
    return args;
  }
  parseUntilBlocks() {
    cov_29oqqyhfji().f[51]++;
    const prev = (cov_29oqqyhfji().s[564]++, this.breakOnBlocks);
    cov_29oqqyhfji().s[565]++;
    for (var _len = arguments.length, blockNames = new Array(_len), _key = 0; _key < _len; _key++) {
      blockNames[_key] = arguments[_key];
    }
    this.breakOnBlocks = blockNames;
    const ret = (cov_29oqqyhfji().s[566]++, this.parse());
    cov_29oqqyhfji().s[567]++;
    this.breakOnBlocks = prev;
    cov_29oqqyhfji().s[568]++;
    return ret;
  }
  parseNodes() {
    cov_29oqqyhfji().f[52]++;
    let tok;
    const buf = (cov_29oqqyhfji().s[569]++, []);
    cov_29oqqyhfji().s[570]++;
    while (tok = this.nextToken()) {
      cov_29oqqyhfji().s[571]++;
      if (tok.type === lexer.TOKEN_DATA) {
        cov_29oqqyhfji().b[140][0]++;
        let data = (cov_29oqqyhfji().s[572]++, tok.value);
        const nextToken = (cov_29oqqyhfji().s[573]++, this.peekToken());
        const nextVal = (cov_29oqqyhfji().s[574]++, (cov_29oqqyhfji().b[141][0]++, nextToken) && (cov_29oqqyhfji().b[141][1]++, nextToken.value));

        // If the last token has "-" we need to trim the
        // leading whitespace of the data. This is marked with
        // the `dropLeadingWhitespace` variable.
        cov_29oqqyhfji().s[575]++;
        if (this.dropLeadingWhitespace) {
          cov_29oqqyhfji().b[142][0]++;
          cov_29oqqyhfji().s[576]++;
          // TODO: this could be optimized (don't use regex)
          data = data.replace(/^\s*/, '');
          cov_29oqqyhfji().s[577]++;
          this.dropLeadingWhitespace = false;
        } else {
          cov_29oqqyhfji().b[142][1]++;
        }

        // Same for the succeeding block start token
        cov_29oqqyhfji().s[578]++;
        if ((cov_29oqqyhfji().b[144][0]++, nextToken) && ((cov_29oqqyhfji().b[144][1]++, nextToken.type === lexer.TOKEN_BLOCK_START) && (cov_29oqqyhfji().b[144][2]++, nextVal.charAt(nextVal.length - 1) === '-') || (cov_29oqqyhfji().b[144][3]++, nextToken.type === lexer.TOKEN_VARIABLE_START) && (cov_29oqqyhfji().b[144][4]++, nextVal.charAt(this.tokens.tags.VARIABLE_START.length) === '-') || (cov_29oqqyhfji().b[144][5]++, nextToken.type === lexer.TOKEN_COMMENT) && (cov_29oqqyhfji().b[144][6]++, nextVal.charAt(this.tokens.tags.COMMENT_START.length) === '-'))) {
          cov_29oqqyhfji().b[143][0]++;
          cov_29oqqyhfji().s[579]++;
          // TODO: this could be optimized (don't use regex)
          data = data.replace(/\s*$/, '');
        } else {
          cov_29oqqyhfji().b[143][1]++;
        }
        cov_29oqqyhfji().s[580]++;
        buf.push(new nodes.Output(tok.lineno, tok.colno, [new nodes.TemplateData(tok.lineno, tok.colno, data)]));
      } else {
        cov_29oqqyhfji().b[140][1]++;
        cov_29oqqyhfji().s[581]++;
        if (tok.type === lexer.TOKEN_BLOCK_START) {
          cov_29oqqyhfji().b[145][0]++;
          cov_29oqqyhfji().s[582]++;
          this.dropLeadingWhitespace = false;
          const n = (cov_29oqqyhfji().s[583]++, this.parseStatement());
          cov_29oqqyhfji().s[584]++;
          if (!n) {
            cov_29oqqyhfji().b[146][0]++;
            cov_29oqqyhfji().s[585]++;
            break;
          } else {
            cov_29oqqyhfji().b[146][1]++;
          }
          cov_29oqqyhfji().s[586]++;
          buf.push(n);
        } else {
          cov_29oqqyhfji().b[145][1]++;
          cov_29oqqyhfji().s[587]++;
          if (tok.type === lexer.TOKEN_VARIABLE_START) {
            cov_29oqqyhfji().b[147][0]++;
            const e = (cov_29oqqyhfji().s[588]++, this.parseExpression());
            cov_29oqqyhfji().s[589]++;
            this.dropLeadingWhitespace = false;
            cov_29oqqyhfji().s[590]++;
            this.advanceAfterVariableEnd();
            cov_29oqqyhfji().s[591]++;
            buf.push(new nodes.Output(tok.lineno, tok.colno, [e]));
          } else {
            cov_29oqqyhfji().b[147][1]++;
            cov_29oqqyhfji().s[592]++;
            if (tok.type === lexer.TOKEN_COMMENT) {
              cov_29oqqyhfji().b[148][0]++;
              cov_29oqqyhfji().s[593]++;
              this.dropLeadingWhitespace = tok.value.charAt(tok.value.length - this.tokens.tags.COMMENT_END.length - 1) === '-';
            } else {
              cov_29oqqyhfji().b[148][1]++;
              cov_29oqqyhfji().s[594]++;
              // Ignore comments, otherwise this should be an error
              this.fail('Unexpected token at top-level: ' + tok.type, tok.lineno, tok.colno);
            }
          }
        }
      }
    }
    cov_29oqqyhfji().s[595]++;
    return buf;
  }
  parse() {
    cov_29oqqyhfji().f[53]++;
    cov_29oqqyhfji().s[596]++;
    return new nodes.NodeList(0, 0, this.parseNodes());
  }
  parseAsRoot() {
    cov_29oqqyhfji().f[54]++;
    cov_29oqqyhfji().s[597]++;
    return new nodes.Root(0, 0, this.parseNodes());
  }
}

// var util = require('util');

// var l = lexer.lex('{%- if x -%}\n hello {% endif %}');
// var t;
// while((t = l.nextToken())) {
//     console.log(util.inspect(t));
// }

// var p = new Parser(lexer.lex('hello {% filter title %}' +
//                              'Hello madam how are you' +
//                              '{% endfilter %}'));
// var n = p.parseAsRoot();
// nodes.printNodes(n);
cov_29oqqyhfji().s[598]++;
module.exports = {
  parse(src, extensions, opts) {
    cov_29oqqyhfji().f[55]++;
    var p = (cov_29oqqyhfji().s[599]++, new Parser(lexer.lex(src, opts)));
    cov_29oqqyhfji().s[600]++;
    if (extensions !== undefined) {
      cov_29oqqyhfji().b[149][0]++;
      cov_29oqqyhfji().s[601]++;
      p.extensions = extensions;
    } else {
      cov_29oqqyhfji().b[149][1]++;
    }
    cov_29oqqyhfji().s[602]++;
    return p.parseAsRoot();
  },
  Parser: Parser
};

/***/ }),

/***/ 2492:
/*!*******************************************!*\
  !*** ./nunjucks/src/precompile-global.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";


function cov_2boc2x98q() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\precompile-global.js";
  var hash = "12d58b2778899bbea3330498a75f1ae0056c82eb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\precompile-global.js",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 12
        },
        end: {
          line: 4,
          column: 14
        }
      },
      "1": {
        start: {
          line: 5,
          column: 2
        },
        end: {
          line: 5,
          column: 20
        }
      },
      "2": {
        start: {
          line: 7,
          column: 2
        },
        end: {
          line: 20,
          column: 3
        }
      },
      "3": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 16
        }
      },
      "4": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 50
        }
      },
      "5": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 9,
          column: 42
        }
      },
      "6": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 13,
          column: 66
        }
      },
      "7": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 5
        }
      },
      "8": {
        start: {
          line: 16,
          column: 6
        },
        end: {
          line: 16,
          column: 93
        }
      },
      "9": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 21
        }
      },
      "10": {
        start: {
          line: 21,
          column: 2
        },
        end: {
          line: 21,
          column: 13
        }
      },
      "11": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "precompileGlobal",
        decl: {
          start: {
            line: 3,
            column: 9
          },
          end: {
            line: 3,
            column: 25
          }
        },
        loc: {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 3
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 19
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 19
          }
        }],
        line: 5
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "12d58b2778899bbea3330498a75f1ae0056c82eb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2boc2x98q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2boc2x98q();
function precompileGlobal(templates, opts) {
  cov_2boc2x98q().f[0]++;
  var out = (cov_2boc2x98q().s[0]++, '');
  cov_2boc2x98q().s[1]++;
  opts = (cov_2boc2x98q().b[0][0]++, opts) || (cov_2boc2x98q().b[0][1]++, {});
  cov_2boc2x98q().s[2]++;
  for (let i = (cov_2boc2x98q().s[3]++, 0); i < templates.length; i++) {
    const name = (cov_2boc2x98q().s[4]++, JSON.stringify(templates[i].name));
    const template = (cov_2boc2x98q().s[5]++, templates[i].template);
    cov_2boc2x98q().s[6]++;
    out += '(function() {' + '(window.nunjucksPrecompiled = window.nunjucksPrecompiled || {})' + '[' + name + '] = (function() {\n' + template + '\n})();\n';
    cov_2boc2x98q().s[7]++;
    if (opts.asFunction) {
      cov_2boc2x98q().b[1][0]++;
      cov_2boc2x98q().s[8]++;
      out += 'return function(ctx, cb) { return nunjucks.render(' + name + ', ctx, cb); }\n';
    } else {
      cov_2boc2x98q().b[1][1]++;
    }
    cov_2boc2x98q().s[9]++;
    out += '})();\n';
  }
  cov_2boc2x98q().s[10]++;
  return out;
}
cov_2boc2x98q().s[11]++;
module.exports = precompileGlobal;

/***/ }),

/***/ 6470:
/*!************************************!*\
  !*** ./nunjucks/src/precompile.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function cov_etk0pz1qw() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\precompile.js";
  var hash = "bbddab114d8c61a812bb38e50c09adf94f85dfac";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\precompile.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 11
        },
        end: {
          line: 3,
          column: 24
        }
      },
      "1": {
        start: {
          line: 4,
          column: 13
        },
        end: {
          line: 4,
          column: 28
        }
      },
      "2": {
        start: {
          line: 5,
          column: 25
        },
        end: {
          line: 5,
          column: 41
        }
      },
      "3": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 38
        }
      },
      "4": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 46
        }
      },
      "5": {
        start: {
          line: 8,
          column: 25
        },
        end: {
          line: 8,
          column: 55
        }
      },
      "6": {
        start: {
          line: 11,
          column: 2
        },
        end: {
          line: 13,
          column: 3
        }
      },
      "7": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 17
        }
      },
      "8": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 14,
          column: 61
        }
      },
      "9": {
        start: {
          line: 14,
          column: 36
        },
        end: {
          line: 14,
          column: 59
        }
      },
      "10": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 18,
          column: 20
        }
      },
      "11": {
        start: {
          line: 19,
          column: 2
        },
        end: {
          line: 19,
          column: 23
        }
      },
      "12": {
        start: {
          line: 20,
          column: 14
        },
        end: {
          line: 20,
          column: 45
        }
      },
      "13": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 50
        }
      },
      "14": {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "15": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 77
        }
      },
      "16": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 26,
          column: 59
        }
      },
      "17": {
        start: {
          line: 44,
          column: 2
        },
        end: {
          line: 44,
          column: 20
        }
      },
      "18": {
        start: {
          line: 45,
          column: 14
        },
        end: {
          line: 45,
          column: 45
        }
      },
      "19": {
        start: {
          line: 46,
          column: 18
        },
        end: {
          line: 46,
          column: 50
        }
      },
      "20": {
        start: {
          line: 48,
          column: 2
        },
        end: {
          line: 50,
          column: 3
        }
      },
      "21": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 41
        }
      },
      "22": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 52,
          column: 62
        }
      },
      "23": {
        start: {
          line: 53,
          column: 22
        },
        end: {
          line: 53,
          column: 24
        }
      },
      "24": {
        start: {
          line: 54,
          column: 20
        },
        end: {
          line: 54,
          column: 22
        }
      },
      "25": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 70,
          column: 7
        }
      },
      "26": {
        start: {
          line: 58,
          column: 23
        },
        end: {
          line: 58,
          column: 43
        }
      },
      "27": {
        start: {
          line: 59,
          column: 20
        },
        end: {
          line: 59,
          column: 65
        }
      },
      "28": {
        start: {
          line: 60,
          column: 19
        },
        end: {
          line: 60,
          column: 40
        }
      },
      "29": {
        start: {
          line: 62,
          column: 6
        },
        end: {
          line: 69,
          column: 7
        }
      },
      "30": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 23
        }
      },
      "31": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "32": {
        start: {
          line: 65,
          column: 10
        },
        end: {
          line: 65,
          column: 33
        }
      },
      "33": {
        start: {
          line: 67,
          column: 13
        },
        end: {
          line: 69,
          column: 7
        }
      },
      "34": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 33
        }
      },
      "35": {
        start: {
          line: 73,
          column: 2
        },
        end: {
          line: 101,
          column: 3
        }
      },
      "36": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 78,
          column: 7
        }
      },
      "37": {
        start: {
          line: 79,
          column: 9
        },
        end: {
          line: 101,
          column: 3
        }
      },
      "38": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 24
        }
      },
      "39": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "40": {
        start: {
          line: 82,
          column: 17
        },
        end: {
          line: 82,
          column: 18
        }
      },
      "41": {
        start: {
          line: 83,
          column: 19
        },
        end: {
          line: 83,
          column: 66
        }
      },
      "42": {
        start: {
          line: 85,
          column: 6
        },
        end: {
          line: 99,
          column: 7
        }
      },
      "43": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 90,
          column: 11
        }
      },
      "44": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "45": {
        start: {
          line: 95,
          column: 10
        },
        end: {
          line: 95,
          column: 27
        }
      },
      "46": {
        start: {
          line: 97,
          column: 10
        },
        end: {
          line: 97,
          column: 18
        }
      },
      "47": {
        start: {
          line: 103,
          column: 2
        },
        end: {
          line: 103,
          column: 36
        }
      },
      "48": {
        start: {
          line: 107,
          column: 2
        },
        end: {
          line: 107,
          column: 35
        }
      },
      "49": {
        start: {
          line: 109,
          column: 23
        },
        end: {
          line: 109,
          column: 39
        }
      },
      "50": {
        start: {
          line: 110,
          column: 21
        },
        end: {
          line: 110,
          column: 39
        }
      },
      "51": {
        start: {
          line: 113,
          column: 2
        },
        end: {
          line: 113,
          column: 34
        }
      },
      "52": {
        start: {
          line: 115,
          column: 2
        },
        end: {
          line: 123,
          column: 3
        }
      },
      "53": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 120,
          column: 16
        }
      },
      "54": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 122,
          column: 43
        }
      },
      "55": {
        start: {
          line: 125,
          column: 2
        },
        end: {
          line: 128,
          column: 4
        }
      },
      "56": {
        start: {
          line: 131,
          column: 0
        },
        end: {
          line: 134,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "match",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 14
          }
        },
        loc: {
          start: {
            line: 10,
            column: 35
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 23
          },
          end: {
            line: 14,
            column: 24
          }
        },
        loc: {
          start: {
            line: 14,
            column: 36
          },
          end: {
            line: 14,
            column: 59
          }
        },
        line: 14
      },
      "2": {
        name: "precompileString",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 25
          }
        },
        loc: {
          start: {
            line: 17,
            column: 37
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 17
      },
      "3": {
        name: "precompile",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 19
          }
        },
        loc: {
          start: {
            line: 29,
            column: 33
          },
          end: {
            line: 104,
            column: 1
          }
        },
        line: 29
      },
      "4": {
        name: "addTemplates",
        decl: {
          start: {
            line: 56,
            column: 11
          },
          end: {
            line: 56,
            column: 23
          }
        },
        loc: {
          start: {
            line: 56,
            column: 29
          },
          end: {
            line: 71,
            column: 3
          }
        },
        line: 56
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 57,
            column: 32
          },
          end: {
            line: 57,
            column: 33
          }
        },
        loc: {
          start: {
            line: 57,
            column: 42
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 57
      },
      "6": {
        name: "_precompile",
        decl: {
          start: {
            line: 106,
            column: 9
          },
          end: {
            line: 106,
            column: 20
          }
        },
        loc: {
          start: {
            line: 106,
            column: 37
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 106
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 19
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 13
          }
        }, {
          start: {
            line: 18,
            column: 17
          },
          end: {
            line: 18,
            column: 19
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 20,
            column: 14
          },
          end: {
            line: 20,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 14
          },
          end: {
            line: 20,
            column: 22
          }
        }, {
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 20,
            column: 45
          }
        }],
        line: 20
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 18
          },
          end: {
            line: 21,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 18
          },
          end: {
            line: 21,
            column: 30
          }
        }, {
          start: {
            line: 21,
            column: 34
          },
          end: {
            line: 21,
            column: 50
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "5": {
        loc: {
          start: {
            line: 44,
            column: 9
          },
          end: {
            line: 44,
            column: 19
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 9
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 44,
            column: 19
          }
        }],
        line: 44
      },
      "6": {
        loc: {
          start: {
            line: 45,
            column: 14
          },
          end: {
            line: 45,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 14
          },
          end: {
            line: 45,
            column: 22
          }
        }, {
          start: {
            line: 45,
            column: 26
          },
          end: {
            line: 45,
            column: 45
          }
        }],
        line: 45
      },
      "7": {
        loc: {
          start: {
            line: 46,
            column: 18
          },
          end: {
            line: 46,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 18
          },
          end: {
            line: 46,
            column: 30
          }
        }, {
          start: {
            line: 46,
            column: 34
          },
          end: {
            line: 46,
            column: 50
          }
        }],
        line: 46
      },
      "8": {
        loc: {
          start: {
            line: 48,
            column: 2
          },
          end: {
            line: 50,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 2
          },
          end: {
            line: 50,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "9": {
        loc: {
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 52,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 52,
            column: 40
          }
        }, {
          start: {
            line: 52,
            column: 44
          },
          end: {
            line: 52,
            column: 62
          }
        }],
        line: 52
      },
      "10": {
        loc: {
          start: {
            line: 62,
            column: 6
          },
          end: {
            line: 69,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 6
          },
          end: {
            line: 69,
            column: 7
          }
        }, {
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 69,
            column: 7
          }
        }],
        line: 62
      },
      "11": {
        loc: {
          start: {
            line: 62,
            column: 10
          },
          end: {
            line: 62,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 10
          },
          end: {
            line: 62,
            column: 14
          }
        }, {
          start: {
            line: 62,
            column: 18
          },
          end: {
            line: 62,
            column: 36
          }
        }],
        line: 62
      },
      "12": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "13": {
        loc: {
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 69,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 69,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "14": {
        loc: {
          start: {
            line: 73,
            column: 2
          },
          end: {
            line: 101,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 2
          },
          end: {
            line: 101,
            column: 3
          }
        }, {
          start: {
            line: 79,
            column: 9
          },
          end: {
            line: 101,
            column: 3
          }
        }],
        line: 73
      },
      "15": {
        loc: {
          start: {
            line: 76,
            column: 6
          },
          end: {
            line: 76,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 6
          },
          end: {
            line: 76,
            column: 15
          }
        }, {
          start: {
            line: 76,
            column: 19
          },
          end: {
            line: 76,
            column: 24
          }
        }],
        line: 76
      },
      "16": {
        loc: {
          start: {
            line: 79,
            column: 9
          },
          end: {
            line: 101,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 9
          },
          end: {
            line: 101,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "17": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: 96,
            column: 15
          },
          end: {
            line: 98,
            column: 9
          }
        }],
        line: 92
      },
      "18": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 107,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 107,
            column: 11
          }
        }, {
          start: {
            line: 107,
            column: 15
          },
          end: {
            line: 107,
            column: 34
          }
        }],
        line: 107
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bbddab114d8c61a812bb38e50c09adf94f85dfac"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_etk0pz1qw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_etk0pz1qw();
const fs = (cov_etk0pz1qw().s[0]++, __webpack_require__(/*! fs */ 231));
const path = (cov_etk0pz1qw().s[1]++, __webpack_require__(/*! path */ 7975));
const {
  _prettifyError
} = (cov_etk0pz1qw().s[2]++, __webpack_require__(/*! ./lib */ 449));
const compiler = (cov_etk0pz1qw().s[3]++, __webpack_require__(/*! ./compiler */ 6933));
const {
  Environment
} = (cov_etk0pz1qw().s[4]++, __webpack_require__(/*! ./environment */ 2887));
const precompileGlobal = (cov_etk0pz1qw().s[5]++, __webpack_require__(/*! ./precompile-global */ 2492));
function match(filename, patterns) {
  cov_etk0pz1qw().f[0]++;
  cov_etk0pz1qw().s[6]++;
  if (!Array.isArray(patterns)) {
    cov_etk0pz1qw().b[0][0]++;
    cov_etk0pz1qw().s[7]++;
    return false;
  } else {
    cov_etk0pz1qw().b[0][1]++;
  }
  cov_etk0pz1qw().s[8]++;
  return patterns.some(pattern => {
    cov_etk0pz1qw().f[1]++;
    cov_etk0pz1qw().s[9]++;
    return filename.match(pattern);
  });
}
function precompileString(str, opts) {
  cov_etk0pz1qw().f[2]++;
  cov_etk0pz1qw().s[10]++;
  opts = (cov_etk0pz1qw().b[1][0]++, opts) || (cov_etk0pz1qw().b[1][1]++, {});
  cov_etk0pz1qw().s[11]++;
  opts.isString = true;
  const env = (cov_etk0pz1qw().s[12]++, (cov_etk0pz1qw().b[2][0]++, opts.env) || (cov_etk0pz1qw().b[2][1]++, new Environment([])));
  const wrapper = (cov_etk0pz1qw().s[13]++, (cov_etk0pz1qw().b[3][0]++, opts.wrapper) || (cov_etk0pz1qw().b[3][1]++, precompileGlobal));
  cov_etk0pz1qw().s[14]++;
  if (!opts.name) {
    cov_etk0pz1qw().b[4][0]++;
    cov_etk0pz1qw().s[15]++;
    throw new Error('the "name" option is required when compiling a string');
  } else {
    cov_etk0pz1qw().b[4][1]++;
  }
  cov_etk0pz1qw().s[16]++;
  return wrapper([_precompile(str, opts.name, env)], opts);
}
function precompile(input, opts) {
  cov_etk0pz1qw().f[3]++;
  cov_etk0pz1qw().s[17]++;
  // The following options are available:
  //
  // * name: name of the template (auto-generated when compiling a directory)
  // * isString: input is a string, not a file path
  // * asFunction: generate a callable function
  // * force: keep compiling on error
  // * env: the Environment to use (gets extensions and async filters from it)
  // * include: which file/folders to include (folders are auto-included, files are auto-excluded)
  // * exclude: which file/folders to exclude (folders are auto-included, files are auto-excluded)
  // * wrapper: function(templates, opts) {...}
  //       Customize the output format to store the compiled template.
  //       By default, templates are stored in a global variable used by the runtime.
  //       A custom loader will be necessary to load your custom wrapper.

  opts = (cov_etk0pz1qw().b[5][0]++, opts) || (cov_etk0pz1qw().b[5][1]++, {});
  const env = (cov_etk0pz1qw().s[18]++, (cov_etk0pz1qw().b[6][0]++, opts.env) || (cov_etk0pz1qw().b[6][1]++, new Environment([])));
  const wrapper = (cov_etk0pz1qw().s[19]++, (cov_etk0pz1qw().b[7][0]++, opts.wrapper) || (cov_etk0pz1qw().b[7][1]++, precompileGlobal));
  cov_etk0pz1qw().s[20]++;
  if (opts.isString) {
    cov_etk0pz1qw().b[8][0]++;
    cov_etk0pz1qw().s[21]++;
    return precompileString(input, opts);
  } else {
    cov_etk0pz1qw().b[8][1]++;
  }
  const pathStats = (cov_etk0pz1qw().s[22]++, (cov_etk0pz1qw().b[9][0]++, fs.existsSync(input)) && (cov_etk0pz1qw().b[9][1]++, fs.statSync(input)));
  const precompiled = (cov_etk0pz1qw().s[23]++, []);
  const templates = (cov_etk0pz1qw().s[24]++, []);
  function addTemplates(dir) {
    cov_etk0pz1qw().f[4]++;
    cov_etk0pz1qw().s[25]++;
    fs.readdirSync(dir).forEach(file => {
      cov_etk0pz1qw().f[5]++;
      const filepath = (cov_etk0pz1qw().s[26]++, path.join(dir, file));
      let subpath = (cov_etk0pz1qw().s[27]++, filepath.substr(path.join(input, '/').length));
      const stat = (cov_etk0pz1qw().s[28]++, fs.statSync(filepath));
      cov_etk0pz1qw().s[29]++;
      if ((cov_etk0pz1qw().b[11][0]++, stat) && (cov_etk0pz1qw().b[11][1]++, stat.isDirectory())) {
        cov_etk0pz1qw().b[10][0]++;
        cov_etk0pz1qw().s[30]++;
        subpath += '/';
        cov_etk0pz1qw().s[31]++;
        if (!match(subpath, opts.exclude)) {
          cov_etk0pz1qw().b[12][0]++;
          cov_etk0pz1qw().s[32]++;
          addTemplates(filepath);
        } else {
          cov_etk0pz1qw().b[12][1]++;
        }
      } else {
        cov_etk0pz1qw().b[10][1]++;
        cov_etk0pz1qw().s[33]++;
        if (match(subpath, opts.include)) {
          cov_etk0pz1qw().b[13][0]++;
          cov_etk0pz1qw().s[34]++;
          templates.push(filepath);
        } else {
          cov_etk0pz1qw().b[13][1]++;
        }
      }
    });
  }
  cov_etk0pz1qw().s[35]++;
  if (pathStats.isFile()) {
    cov_etk0pz1qw().b[14][0]++;
    cov_etk0pz1qw().s[36]++;
    precompiled.push(_precompile(fs.readFileSync(input, 'utf-8'), (cov_etk0pz1qw().b[15][0]++, opts.name) || (cov_etk0pz1qw().b[15][1]++, input), env));
  } else {
    cov_etk0pz1qw().b[14][1]++;
    cov_etk0pz1qw().s[37]++;
    if (pathStats.isDirectory()) {
      cov_etk0pz1qw().b[16][0]++;
      cov_etk0pz1qw().s[38]++;
      addTemplates(input);
      cov_etk0pz1qw().s[39]++;
      for (let i = (cov_etk0pz1qw().s[40]++, 0); i < templates.length; i++) {
        const name = (cov_etk0pz1qw().s[41]++, templates[i].replace(path.join(input, '/'), ''));
        cov_etk0pz1qw().s[42]++;
        try {
          cov_etk0pz1qw().s[43]++;
          precompiled.push(_precompile(fs.readFileSync(templates[i], 'utf-8'), name, env));
        } catch (e) {
          cov_etk0pz1qw().s[44]++;
          if (opts.force) {
            cov_etk0pz1qw().b[17][0]++;
            cov_etk0pz1qw().s[45]++;
            // Don't stop generating the output if we're
            // forcing compilation.
            console.error(e); // eslint-disable-line no-console
          } else {
            cov_etk0pz1qw().b[17][1]++;
            cov_etk0pz1qw().s[46]++;
            throw e;
          }
        }
      }
    } else {
      cov_etk0pz1qw().b[16][1]++;
    }
  }
  cov_etk0pz1qw().s[47]++;
  return wrapper(precompiled, opts);
}
function _precompile(str, name, env) {
  cov_etk0pz1qw().f[6]++;
  cov_etk0pz1qw().s[48]++;
  env = (cov_etk0pz1qw().b[18][0]++, env) || (cov_etk0pz1qw().b[18][1]++, new Environment([]));
  const asyncFilters = (cov_etk0pz1qw().s[49]++, env.asyncFilters);
  const extensions = (cov_etk0pz1qw().s[50]++, env.extensionsList);
  let template;
  cov_etk0pz1qw().s[51]++;
  name = name.replace(/\\/g, '/');
  cov_etk0pz1qw().s[52]++;
  try {
    cov_etk0pz1qw().s[53]++;
    template = compiler.compile(str, asyncFilters, extensions, name, env.opts);
  } catch (err) {
    cov_etk0pz1qw().s[54]++;
    throw _prettifyError(name, false, err);
  }
  cov_etk0pz1qw().s[55]++;
  return {
    name: name,
    template: template
  };
}
cov_etk0pz1qw().s[56]++;
module.exports = {
  precompile: precompile,
  precompileString: precompileString
};

/***/ }),

/***/ 2742:
/*!********************************************!*\
  !*** ./nunjucks/src/precompiled-loader.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function cov_zaxx3kqti() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\precompiled-loader.js";
  var hash = "cf8128642a4c1a1172ae54cd6689aaf19722c076";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\precompiled-loader.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 15
        },
        end: {
          line: 3,
          column: 34
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 12
        }
      },
      "2": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 47
        }
      },
      "3": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "4": {
        start: {
          line: 13,
          column: 6
        },
        end: {
          line: 19,
          column: 8
        }
      },
      "5": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 16
        }
      },
      "6": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 27,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 2
          },
          end: {
            line: 6,
            column: 3
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 9,
            column: 3
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 11,
            column: 3
          }
        },
        loc: {
          start: {
            line: 11,
            column: 18
          },
          end: {
            line: 22,
            column: 3
          }
        },
        line: 11
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 23
          },
          end: {
            line: 8,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 23
          },
          end: {
            line: 8,
            column: 40
          }
        }, {
          start: {
            line: 8,
            column: 44
          },
          end: {
            line: 8,
            column: 46
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cf8128642a4c1a1172ae54cd6689aaf19722c076"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_zaxx3kqti = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_zaxx3kqti();
const Loader = (cov_zaxx3kqti().s[0]++, __webpack_require__(/*! ./loader */ 7491));
class PrecompiledLoader extends Loader {
  constructor(compiledTemplates) {
    cov_zaxx3kqti().f[0]++;
    cov_zaxx3kqti().s[1]++;
    super();
    cov_zaxx3kqti().s[2]++;
    this.precompiled = (cov_zaxx3kqti().b[0][0]++, compiledTemplates) || (cov_zaxx3kqti().b[0][1]++, {});
  }
  getSource(name) {
    cov_zaxx3kqti().f[1]++;
    cov_zaxx3kqti().s[3]++;
    if (this.precompiled[name]) {
      cov_zaxx3kqti().b[1][0]++;
      cov_zaxx3kqti().s[4]++;
      return {
        src: {
          type: 'code',
          obj: this.precompiled[name]
        },
        path: name
      };
    } else {
      cov_zaxx3kqti().b[1][1]++;
    }
    cov_zaxx3kqti().s[5]++;
    return null;
  }
}
cov_zaxx3kqti().s[6]++;
module.exports = {
  PrecompiledLoader: PrecompiledLoader
};

/***/ }),

/***/ 5434:
/*!*********************************!*\
  !*** ./nunjucks/src/runtime.js ***!
  \*********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function cov_8tz5awjvh() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\runtime.js";
  var hash = "e155ca2b3496e0b3186e6ec97ba8aa528e3c79be";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\runtime.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 10
        },
        end: {
          line: 3,
          column: 26
        }
      },
      "1": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 26
        }
      },
      "2": {
        start: {
          line: 6,
          column: 2
        },
        end: {
          line: 6,
          column: 84
        }
      },
      "3": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "4": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 25
        }
      },
      "5": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 26
        }
      },
      "6": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 39
        }
      },
      "7": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 31
        }
      },
      "8": {
        start: {
          line: 27,
          column: 14
        },
        end: {
          line: 27,
          column: 28
        }
      },
      "9": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 20
        }
      },
      "10": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "11": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 34,
          column: 7
        }
      },
      "12": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 29
        }
      },
      "13": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "14": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "15": {
        start: {
          line: 37,
          column: 17
        },
        end: {
          line: 37,
          column: 18
        }
      },
      "16": {
        start: {
          line: 38,
          column: 17
        },
        end: {
          line: 38,
          column: 25
        }
      },
      "17": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 42,
          column: 7
        }
      },
      "18": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 21
        }
      },
      "19": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 43,
          column: 20
        }
      },
      "20": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 39
        }
      },
      "21": {
        start: {
          line: 50,
          column: 14
        },
        end: {
          line: 50,
          column: 34
        }
      },
      "22": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "23": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 52,
          column: 17
        }
      },
      "24": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 16
        }
      },
      "25": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 23
        }
      },
      "26": {
        start: {
          line: 59,
          column: 14
        },
        end: {
          line: 59,
          column: 34
        }
      },
      "27": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "28": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 61,
          column: 17
        }
      },
      "29": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 31
        }
      },
      "30": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 70
        }
      },
      "31": {
        start: {
          line: 68,
          column: 14
        },
        end: {
          line: 68,
          column: 34
        }
      },
      "32": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "33": {
        start: {
          line: 70,
          column: 6
        },
        end: {
          line: 70,
          column: 18
        }
      },
      "34": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 32
        }
      },
      "35": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 42
        }
      },
      "36": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 23
        }
      },
      "37": {
        start: {
          line: 85,
          column: 2
        },
        end: {
          line: 119,
          column: 4
        }
      },
      "38": {
        start: {
          line: 86,
          column: 19
        },
        end: {
          line: 86,
          column: 37
        }
      },
      "39": {
        start: {
          line: 88,
          column: 17
        },
        end: {
          line: 88,
          column: 42
        }
      },
      "40": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "41": {
        start: {
          line: 91,
          column: 6
        },
        end: {
          line: 91,
          column: 49
        }
      },
      "42": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "43": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "44": {
        start: {
          line: 97,
          column: 10
        },
        end: {
          line: 97,
          column: 38
        }
      },
      "45": {
        start: {
          line: 100,
          column: 6
        },
        end: {
          line: 100,
          column: 24
        }
      },
      "46": {
        start: {
          line: 101,
          column: 11
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "47": {
        start: {
          line: 102,
          column: 6
        },
        end: {
          line: 102,
          column: 42
        }
      },
      "48": {
        start: {
          line: 104,
          column: 6
        },
        end: {
          line: 112,
          column: 7
        }
      },
      "49": {
        start: {
          line: 104,
          column: 19
        },
        end: {
          line: 104,
          column: 27
        }
      },
      "50": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 105,
          column: 31
        }
      },
      "51": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 31
        }
      },
      "52": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 27
        }
      },
      "53": {
        start: {
          line: 113,
          column: 6
        },
        end: {
          line: 113,
          column: 24
        }
      },
      "54": {
        start: {
          line: 115,
          column: 6
        },
        end: {
          line: 115,
          column: 23
        }
      },
      "55": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 118,
          column: 34
        }
      },
      "56": {
        start: {
          line: 123,
          column: 2
        },
        end: {
          line: 123,
          column: 24
        }
      },
      "57": {
        start: {
          line: 124,
          column: 2
        },
        end: {
          line: 124,
          column: 13
        }
      },
      "58": {
        start: {
          line: 128,
          column: 2
        },
        end: {
          line: 128,
          column: 72
        }
      },
      "59": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 23
        }
      },
      "60": {
        start: {
          line: 133,
          column: 2
        },
        end: {
          line: 138,
          column: 3
        }
      },
      "61": {
        start: {
          line: 134,
          column: 20
        },
        end: {
          line: 134,
          column: 33
        }
      },
      "62": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 137,
          column: 5
        }
      },
      "63": {
        start: {
          line: 136,
          column: 6
        },
        end: {
          line: 136,
          column: 21
        }
      },
      "64": {
        start: {
          line: 139,
          column: 2
        },
        end: {
          line: 139,
          column: 12
        }
      },
      "65": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 23
        }
      },
      "66": {
        start: {
          line: 144,
          column: 2
        },
        end: {
          line: 146,
          column: 3
        }
      },
      "67": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 145,
          column: 13
        }
      },
      "68": {
        start: {
          line: 148,
          column: 18
        },
        end: {
          line: 148,
          column: 31
        }
      },
      "69": {
        start: {
          line: 149,
          column: 2
        },
        end: {
          line: 153,
          column: 3
        }
      },
      "70": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 150,
          column: 19
        }
      },
      "71": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 152,
          column: 15
        }
      },
      "72": {
        start: {
          line: 160,
          column: 2
        },
        end: {
          line: 162,
          column: 3
        }
      },
      "73": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 161,
          column: 15
        }
      },
      "74": {
        start: {
          line: 164,
          column: 2
        },
        end: {
          line: 164,
          column: 17
        }
      },
      "75": {
        start: {
          line: 165,
          column: 2
        },
        end: {
          line: 165,
          column: 27
        }
      },
      "76": {
        start: {
          line: 168,
          column: 0
        },
        end: {
          line: 174,
          column: 3
        }
      },
      "77": {
        start: {
          line: 175,
          column: 0
        },
        end: {
          line: 177,
          column: 2
        }
      },
      "78": {
        start: {
          line: 176,
          column: 2
        },
        end: {
          line: 176,
          column: 18
        }
      },
      "79": {
        start: {
          line: 178,
          column: 0
        },
        end: {
          line: 180,
          column: 2
        }
      },
      "80": {
        start: {
          line: 179,
          column: 2
        },
        end: {
          line: 179,
          column: 18
        }
      },
      "81": {
        start: {
          line: 183,
          column: 2
        },
        end: {
          line: 185,
          column: 3
        }
      },
      "82": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 184,
          column: 34
        }
      },
      "83": {
        start: {
          line: 186,
          column: 2
        },
        end: {
          line: 186,
          column: 27
        }
      },
      "84": {
        start: {
          line: 190,
          column: 13
        },
        end: {
          line: 190,
          column: 23
        }
      },
      "85": {
        start: {
          line: 192,
          column: 2
        },
        end: {
          line: 206,
          column: 3
        }
      },
      "86": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 193,
          column: 31
        }
      },
      "87": {
        start: {
          line: 194,
          column: 9
        },
        end: {
          line: 206,
          column: 3
        }
      },
      "88": {
        start: {
          line: 195,
          column: 4
        },
        end: {
          line: 195,
          column: 15
        }
      },
      "89": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 205,
          column: 6
        }
      },
      "90": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 198,
          column: 42
        }
      },
      "91": {
        start: {
          line: 200,
          column: 6
        },
        end: {
          line: 202,
          column: 7
        }
      },
      "92": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 35
        }
      },
      "93": {
        start: {
          line: 204,
          column: 6
        },
        end: {
          line: 204,
          column: 17
        }
      },
      "94": {
        start: {
          line: 210,
          column: 2
        },
        end: {
          line: 210,
          column: 55
        }
      },
      "95": {
        start: {
          line: 212,
          column: 2
        },
        end: {
          line: 214,
          column: 3
        }
      },
      "96": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 213,
          column: 37
        }
      },
      "97": {
        start: {
          line: 216,
          column: 2
        },
        end: {
          line: 216,
          column: 13
        }
      },
      "98": {
        start: {
          line: 220,
          column: 2
        },
        end: {
          line: 229,
          column: 3
        }
      },
      "99": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 227,
          column: 5
        }
      },
      "100": {
        start: {
          line: 224,
          column: 6
        },
        end: {
          line: 226,
          column: 9
        }
      },
      "101": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 42
        }
      },
      "102": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 228,
          column: 15
        }
      },
      "103": {
        start: {
          line: 230,
          column: 2
        },
        end: {
          line: 235,
          column: 3
        }
      },
      "104": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 234,
          column: 12
        }
      },
      "105": {
        start: {
          line: 233,
          column: 6
        },
        end: {
          line: 233,
          column: 48
        }
      },
      "106": {
        start: {
          line: 236,
          column: 2
        },
        end: {
          line: 236,
          column: 40
        }
      },
      "107": {
        start: {
          line: 240,
          column: 2
        },
        end: {
          line: 246,
          column: 3
        }
      },
      "108": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 245,
          column: 6
        }
      },
      "109": {
        start: {
          line: 247,
          column: 2
        },
        end: {
          line: 247,
          column: 13
        }
      },
      "110": {
        start: {
          line: 251,
          column: 2
        },
        end: {
          line: 258,
          column: 3
        }
      },
      "111": {
        start: {
          line: 254,
          column: 4
        },
        end: {
          line: 256,
          column: 7
        }
      },
      "112": {
        start: {
          line: 255,
          column: 6
        },
        end: {
          line: 255,
          column: 45
        }
      },
      "113": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 257,
          column: 15
        }
      },
      "114": {
        start: {
          line: 259,
          column: 2
        },
        end: {
          line: 264,
          column: 3
        }
      },
      "115": {
        start: {
          line: 261,
          column: 4
        },
        end: {
          line: 263,
          column: 12
        }
      },
      "116": {
        start: {
          line: 262,
          column: 6
        },
        end: {
          line: 262,
          column: 51
        }
      },
      "117": {
        start: {
          line: 265,
          column: 2
        },
        end: {
          line: 265,
          column: 43
        }
      },
      "118": {
        start: {
          line: 269,
          column: 17
        },
        end: {
          line: 277,
          column: 8
        }
      },
      "119": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 272,
          column: 5
        }
      },
      "120": {
        start: {
          line: 271,
          column: 6
        },
        end: {
          line: 271,
          column: 40
        }
      },
      "121": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 275,
          column: 5
        }
      },
      "122": {
        start: {
          line: 274,
          column: 6
        },
        end: {
          line: 274,
          column: 31
        }
      },
      "123": {
        start: {
          line: 276,
          column: 4
        },
        end: {
          line: 276,
          column: 30
        }
      },
      "124": {
        start: {
          line: 278,
          column: 2
        },
        end: {
          line: 278,
          column: 16
        }
      },
      "125": {
        start: {
          line: 282,
          column: 2
        },
        end: {
          line: 284,
          column: 3
        }
      },
      "126": {
        start: {
          line: 283,
          column: 4
        },
        end: {
          line: 283,
          column: 21
        }
      },
      "127": {
        start: {
          line: 286,
          column: 2
        },
        end: {
          line: 288,
          column: 3
        }
      },
      "128": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 287,
          column: 50
        }
      },
      "129": {
        start: {
          line: 287,
          column: 24
        },
        end: {
          line: 287,
          column: 49
        }
      },
      "130": {
        start: {
          line: 290,
          column: 2
        },
        end: {
          line: 290,
          column: 18
        }
      },
      "131": {
        start: {
          line: 294,
          column: 2
        },
        end: {
          line: 298,
          column: 3
        }
      },
      "132": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 295,
          column: 83
        }
      },
      "133": {
        start: {
          line: 296,
          column: 9
        },
        end: {
          line: 298,
          column: 3
        }
      },
      "134": {
        start: {
          line: 297,
          column: 4
        },
        end: {
          line: 297,
          column: 78
        }
      },
      "135": {
        start: {
          line: 300,
          column: 2
        },
        end: {
          line: 300,
          column: 34
        }
      },
      "136": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 30
        }
      },
      "137": {
        start: {
          line: 305,
          column: 2
        },
        end: {
          line: 307,
          column: 25
        }
      },
      "138": {
        start: {
          line: 311,
          column: 2
        },
        end: {
          line: 315,
          column: 3
        }
      },
      "139": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 312,
          column: 17
        }
      },
      "140": {
        start: {
          line: 314,
          column: 4
        },
        end: {
          line: 314,
          column: 55
        }
      },
      "141": {
        start: {
          line: 319,
          column: 2
        },
        end: {
          line: 342,
          column: 3
        }
      },
      "142": {
        start: {
          line: 320,
          column: 16
        },
        end: {
          line: 320,
          column: 26
        }
      },
      "143": {
        start: {
          line: 322,
          column: 4
        },
        end: {
          line: 337,
          column: 11
        }
      },
      "144": {
        start: {
          line: 323,
          column: 6
        },
        end: {
          line: 336,
          column: 7
        }
      },
      "145": {
        start: {
          line: 325,
          column: 10
        },
        end: {
          line: 325,
          column: 35
        }
      },
      "146": {
        start: {
          line: 326,
          column: 10
        },
        end: {
          line: 326,
          column: 16
        }
      },
      "147": {
        start: {
          line: 328,
          column: 10
        },
        end: {
          line: 328,
          column: 47
        }
      },
      "148": {
        start: {
          line: 329,
          column: 10
        },
        end: {
          line: 329,
          column: 16
        }
      },
      "149": {
        start: {
          line: 331,
          column: 10
        },
        end: {
          line: 331,
          column: 56
        }
      },
      "150": {
        start: {
          line: 332,
          column: 10
        },
        end: {
          line: 332,
          column: 16
        }
      },
      "151": {
        start: {
          line: 334,
          column: 10
        },
        end: {
          line: 334,
          column: 34
        }
      },
      "152": {
        start: {
          line: 335,
          column: 10
        },
        end: {
          line: 335,
          column: 33
        }
      },
      "153": {
        start: {
          line: 339,
          column: 4
        },
        end: {
          line: 341,
          column: 11
        }
      },
      "154": {
        start: {
          line: 340,
          column: 6
        },
        end: {
          line: 340,
          column: 35
        }
      },
      "155": {
        start: {
          line: 346,
          column: 17
        },
        end: {
          line: 346,
          column: 18
        }
      },
      "156": {
        start: {
          line: 351,
          column: 4
        },
        end: {
          line: 351,
          column: 15
        }
      },
      "157": {
        start: {
          line: 352,
          column: 4
        },
        end: {
          line: 352,
          column: 26
        }
      },
      "158": {
        start: {
          line: 354,
          column: 4
        },
        end: {
          line: 356,
          column: 5
        }
      },
      "159": {
        start: {
          line: 355,
          column: 6
        },
        end: {
          line: 355,
          column: 35
        }
      },
      "160": {
        start: {
          line: 359,
          column: 2
        },
        end: {
          line: 398,
          column: 3
        }
      },
      "161": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 360,
          column: 21
        }
      },
      "162": {
        start: {
          line: 361,
          column: 4
        },
        end: {
          line: 361,
          column: 31
        }
      },
      "163": {
        start: {
          line: 363,
          column: 4
        },
        end: {
          line: 384,
          column: 5
        }
      },
      "164": {
        start: {
          line: 364,
          column: 6
        },
        end: {
          line: 364,
          column: 19
        }
      },
      "165": {
        start: {
          line: 366,
          column: 6
        },
        end: {
          line: 383,
          column: 7
        }
      },
      "166": {
        start: {
          line: 366,
          column: 19
        },
        end: {
          line: 366,
          column: 20
        }
      },
      "167": {
        start: {
          line: 367,
          column: 21
        },
        end: {
          line: 367,
          column: 27
        }
      },
      "168": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 382,
          column: 9
        }
      },
      "169": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 371,
          column: 37
        }
      },
      "170": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 18
        }
      },
      "171": {
        start: {
          line: 374,
          column: 12
        },
        end: {
          line: 374,
          column: 49
        }
      },
      "172": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 375,
          column: 18
        }
      },
      "173": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 58
        }
      },
      "174": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 18
        }
      },
      "175": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 36
        }
      },
      "176": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 35
        }
      },
      "177": {
        start: {
          line: 386,
          column: 17
        },
        end: {
          line: 386,
          column: 36
        }
      },
      "178": {
        start: {
          line: 387,
          column: 4
        },
        end: {
          line: 387,
          column: 22
        }
      },
      "179": {
        start: {
          line: 388,
          column: 4
        },
        end: {
          line: 388,
          column: 31
        }
      },
      "180": {
        start: {
          line: 390,
          column: 4
        },
        end: {
          line: 397,
          column: 5
        }
      },
      "181": {
        start: {
          line: 391,
          column: 6
        },
        end: {
          line: 391,
          column: 19
        }
      },
      "182": {
        start: {
          line: 393,
          column: 6
        },
        end: {
          line: 396,
          column: 7
        }
      },
      "183": {
        start: {
          line: 393,
          column: 19
        },
        end: {
          line: 393,
          column: 20
        }
      },
      "184": {
        start: {
          line: 394,
          column: 18
        },
        end: {
          line: 394,
          column: 25
        }
      },
      "185": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 395,
          column: 38
        }
      },
      "186": {
        start: {
          line: 402,
          column: 2
        },
        end: {
          line: 408,
          column: 3
        }
      },
      "187": {
        start: {
          line: 403,
          column: 4
        },
        end: {
          line: 403,
          column: 15
        }
      },
      "188": {
        start: {
          line: 404,
          column: 9
        },
        end: {
          line: 408,
          column: 3
        }
      },
      "189": {
        start: {
          line: 405,
          column: 4
        },
        end: {
          line: 405,
          column: 26
        }
      },
      "190": {
        start: {
          line: 407,
          column: 4
        },
        end: {
          line: 407,
          column: 15
        }
      },
      "191": {
        start: {
          line: 411,
          column: 0
        },
        end: {
          line: 434,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 14,
            column: 3
          }
        },
        loc: {
          start: {
            line: 14,
            column: 37
          },
          end: {
            line: 21,
            column: 3
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 23,
            column: 3
          }
        },
        loc: {
          start: {
            line: 23,
            column: 28
          },
          end: {
            line: 47,
            column: 3
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 49,
            column: 2
          },
          end: {
            line: 49,
            column: 3
          }
        },
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 55,
            column: 3
          }
        },
        line: 49
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 57,
            column: 2
          },
          end: {
            line: 57,
            column: 3
          }
        },
        loc: {
          start: {
            line: 57,
            column: 15
          },
          end: {
            line: 64,
            column: 3
          }
        },
        line: 57
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 66,
            column: 2
          },
          end: {
            line: 66,
            column: 3
          }
        },
        loc: {
          start: {
            line: 66,
            column: 26
          },
          end: {
            line: 73,
            column: 3
          }
        },
        line: 66
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 75,
            column: 2
          },
          end: {
            line: 75,
            column: 3
          }
        },
        loc: {
          start: {
            line: 75,
            column: 22
          },
          end: {
            line: 77,
            column: 3
          }
        },
        line: 75
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 79,
            column: 2
          },
          end: {
            line: 79,
            column: 3
          }
        },
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 81,
            column: 3
          }
        },
        line: 79
      },
      "7": {
        name: "makeMacro",
        decl: {
          start: {
            line: 84,
            column: 9
          },
          end: {
            line: 84,
            column: 18
          }
        },
        loc: {
          start: {
            line: 84,
            column: 47
          },
          end: {
            line: 120,
            column: 1
          }
        },
        line: 84
      },
      "8": {
        name: "macro",
        decl: {
          start: {
            line: 85,
            column: 18
          },
          end: {
            line: 85,
            column: 23
          }
        },
        loc: {
          start: {
            line: 85,
            column: 38
          },
          end: {
            line: 119,
            column: 3
          }
        },
        line: 85
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 95,
            column: 53
          },
          end: {
            line: 95,
            column: 54
          }
        },
        loc: {
          start: {
            line: 95,
            column: 65
          },
          end: {
            line: 99,
            column: 7
          }
        },
        line: 95
      },
      "10": {
        name: "makeKeywordArgs",
        decl: {
          start: {
            line: 122,
            column: 9
          },
          end: {
            line: 122,
            column: 24
          }
        },
        loc: {
          start: {
            line: 122,
            column: 30
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 122
      },
      "11": {
        name: "isKeywordArgs",
        decl: {
          start: {
            line: 127,
            column: 9
          },
          end: {
            line: 127,
            column: 22
          }
        },
        loc: {
          start: {
            line: 127,
            column: 28
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 127
      },
      "12": {
        name: "getKeywordArgs",
        decl: {
          start: {
            line: 131,
            column: 9
          },
          end: {
            line: 131,
            column: 23
          }
        },
        loc: {
          start: {
            line: 131,
            column: 30
          },
          end: {
            line: 140,
            column: 1
          }
        },
        line: 131
      },
      "13": {
        name: "numArgs",
        decl: {
          start: {
            line: 142,
            column: 9
          },
          end: {
            line: 142,
            column: 16
          }
        },
        loc: {
          start: {
            line: 142,
            column: 23
          },
          end: {
            line: 154,
            column: 1
          }
        },
        line: 142
      },
      "14": {
        name: "SafeString",
        decl: {
          start: {
            line: 159,
            column: 9
          },
          end: {
            line: 159,
            column: 19
          }
        },
        loc: {
          start: {
            line: 159,
            column: 25
          },
          end: {
            line: 166,
            column: 1
          }
        },
        line: 159
      },
      "15": {
        name: "valueOf",
        decl: {
          start: {
            line: 175,
            column: 40
          },
          end: {
            line: 175,
            column: 47
          }
        },
        loc: {
          start: {
            line: 175,
            column: 50
          },
          end: {
            line: 177,
            column: 1
          }
        },
        line: 175
      },
      "16": {
        name: "toString",
        decl: {
          start: {
            line: 178,
            column: 41
          },
          end: {
            line: 178,
            column: 49
          }
        },
        loc: {
          start: {
            line: 178,
            column: 52
          },
          end: {
            line: 180,
            column: 1
          }
        },
        line: 178
      },
      "17": {
        name: "copySafeness",
        decl: {
          start: {
            line: 182,
            column: 9
          },
          end: {
            line: 182,
            column: 21
          }
        },
        loc: {
          start: {
            line: 182,
            column: 36
          },
          end: {
            line: 187,
            column: 1
          }
        },
        line: 182
      },
      "18": {
        name: "markSafe",
        decl: {
          start: {
            line: 189,
            column: 9
          },
          end: {
            line: 189,
            column: 17
          }
        },
        loc: {
          start: {
            line: 189,
            column: 23
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 189
      },
      "19": {
        name: "wrapSafe",
        decl: {
          start: {
            line: 197,
            column: 20
          },
          end: {
            line: 197,
            column: 28
          }
        },
        loc: {
          start: {
            line: 197,
            column: 35
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 197
      },
      "20": {
        name: "suppressValue",
        decl: {
          start: {
            line: 209,
            column: 9
          },
          end: {
            line: 209,
            column: 22
          }
        },
        loc: {
          start: {
            line: 209,
            column: 40
          },
          end: {
            line: 217,
            column: 1
          }
        },
        line: 209
      },
      "21": {
        name: "suppressValueAsync",
        decl: {
          start: {
            line: 219,
            column: 9
          },
          end: {
            line: 219,
            column: 27
          }
        },
        loc: {
          start: {
            line: 219,
            column: 45
          },
          end: {
            line: 237,
            column: 1
          }
        },
        line: 219
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 224,
            column: 15
          },
          end: {
            line: 224,
            column: 16
          }
        },
        loc: {
          start: {
            line: 224,
            column: 26
          },
          end: {
            line: 226,
            column: 7
          }
        },
        line: 224
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 232,
            column: 13
          }
        },
        loc: {
          start: {
            line: 232,
            column: 25
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 232
      },
      "24": {
        name: "ensureDefined",
        decl: {
          start: {
            line: 239,
            column: 9
          },
          end: {
            line: 239,
            column: 22
          }
        },
        loc: {
          start: {
            line: 239,
            column: 43
          },
          end: {
            line: 248,
            column: 1
          }
        },
        line: 239
      },
      "25": {
        name: "ensureDefinedAsync",
        decl: {
          start: {
            line: 250,
            column: 9
          },
          end: {
            line: 250,
            column: 27
          }
        },
        loc: {
          start: {
            line: 250,
            column: 48
          },
          end: {
            line: 266,
            column: 1
          }
        },
        line: 250
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 254,
            column: 13
          },
          end: {
            line: 254,
            column: 14
          }
        },
        loc: {
          start: {
            line: 254,
            column: 20
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 254
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 261,
            column: 13
          }
        },
        loc: {
          start: {
            line: 261,
            column: 25
          },
          end: {
            line: 263,
            column: 5
          }
        },
        line: 261
      },
      "28": {
        name: "flattentBuffer",
        decl: {
          start: {
            line: 268,
            column: 9
          },
          end: {
            line: 268,
            column: 23
          }
        },
        loc: {
          start: {
            line: 268,
            column: 29
          },
          end: {
            line: 279,
            column: 1
          }
        },
        line: 268
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 269,
            column: 28
          },
          end: {
            line: 269,
            column: 29
          }
        },
        loc: {
          start: {
            line: 269,
            column: 43
          },
          end: {
            line: 277,
            column: 3
          }
        },
        line: 269
      },
      "30": {
        name: "memberLookup",
        decl: {
          start: {
            line: 281,
            column: 9
          },
          end: {
            line: 281,
            column: 21
          }
        },
        loc: {
          start: {
            line: 281,
            column: 32
          },
          end: {
            line: 291,
            column: 1
          }
        },
        line: 281
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 287,
            column: 11
          },
          end: {
            line: 287,
            column: 12
          }
        },
        loc: {
          start: {
            line: 287,
            column: 24
          },
          end: {
            line: 287,
            column: 49
          }
        },
        line: 287
      },
      "32": {
        name: "callWrap",
        decl: {
          start: {
            line: 293,
            column: 9
          },
          end: {
            line: 293,
            column: 17
          }
        },
        loc: {
          start: {
            line: 293,
            column: 44
          },
          end: {
            line: 301,
            column: 1
          }
        },
        line: 293
      },
      "33": {
        name: "contextOrFrameLookup",
        decl: {
          start: {
            line: 303,
            column: 9
          },
          end: {
            line: 303,
            column: 29
          }
        },
        loc: {
          start: {
            line: 303,
            column: 52
          },
          end: {
            line: 308,
            column: 1
          }
        },
        line: 303
      },
      "34": {
        name: "handleError",
        decl: {
          start: {
            line: 310,
            column: 9
          },
          end: {
            line: 310,
            column: 20
          }
        },
        loc: {
          start: {
            line: 310,
            column: 43
          },
          end: {
            line: 316,
            column: 1
          }
        },
        line: 310
      },
      "35": {
        name: "asyncEach",
        decl: {
          start: {
            line: 318,
            column: 9
          },
          end: {
            line: 318,
            column: 18
          }
        },
        loc: {
          start: {
            line: 318,
            column: 41
          },
          end: {
            line: 343,
            column: 1
          }
        },
        line: 318
      },
      "36": {
        name: "iterCallback",
        decl: {
          start: {
            line: 322,
            column: 32
          },
          end: {
            line: 322,
            column: 44
          }
        },
        loc: {
          start: {
            line: 322,
            column: 60
          },
          end: {
            line: 337,
            column: 5
          }
        },
        line: 322
      },
      "37": {
        name: "iterCallback",
        decl: {
          start: {
            line: 339,
            column: 31
          },
          end: {
            line: 339,
            column: 43
          }
        },
        loc: {
          start: {
            line: 339,
            column: 68
          },
          end: {
            line: 341,
            column: 5
          }
        },
        line: 339
      },
      "38": {
        name: "asyncAll",
        decl: {
          start: {
            line: 345,
            column: 9
          },
          end: {
            line: 345,
            column: 17
          }
        },
        loc: {
          start: {
            line: 345,
            column: 40
          },
          end: {
            line: 399,
            column: 1
          }
        },
        line: 345
      },
      "39": {
        name: "done",
        decl: {
          start: {
            line: 350,
            column: 11
          },
          end: {
            line: 350,
            column: 15
          }
        },
        loc: {
          start: {
            line: 350,
            column: 27
          },
          end: {
            line: 357,
            column: 3
          }
        },
        line: 350
      },
      "40": {
        name: "fromIterator",
        decl: {
          start: {
            line: 401,
            column: 9
          },
          end: {
            line: 401,
            column: 21
          }
        },
        loc: {
          start: {
            line: 401,
            column: 27
          },
          end: {
            line: 409,
            column: 1
          }
        },
        line: 401
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 2
          },
          end: {
            line: 6,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 2
          },
          end: {
            line: 6,
            column: 30
          }
        }, {
          start: {
            line: 6,
            column: 34
          },
          end: {
            line: 6,
            column: 49
          }
        }, {
          start: {
            line: 6,
            column: 53
          },
          end: {
            line: 6,
            column: 84
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 6
          },
          end: {
            line: 34,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 6
          },
          end: {
            line: 34,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 6
          },
          end: {
            line: 42,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 6
          },
          end: {
            line: 42,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "5": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "6": {
        loc: {
          start: {
            line: 63,
            column: 11
          },
          end: {
            line: 63,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 11
          },
          end: {
            line: 63,
            column: 12
          }
        }, {
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 63,
            column: 30
          }
        }],
        line: 63
      },
      "7": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 47
          },
          end: {
            line: 67,
            column: 56
          }
        }, {
          start: {
            line: 67,
            column: 59
          },
          end: {
            line: 67,
            column: 70
          }
        }],
        line: 67
      },
      "8": {
        loc: {
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 67,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 67,
            column: 21
          }
        }, {
          start: {
            line: 67,
            column: 25
          },
          end: {
            line: 67,
            column: 43
          }
        }],
        line: 67
      },
      "9": {
        loc: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "10": {
        loc: {
          start: {
            line: 72,
            column: 11
          },
          end: {
            line: 72,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 11
          },
          end: {
            line: 72,
            column: 12
          }
        }, {
          start: {
            line: 72,
            column: 16
          },
          end: {
            line: 72,
            column: 31
          }
        }],
        line: 72
      },
      "11": {
        loc: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        }, {
          start: {
            line: 101,
            column: 11
          },
          end: {
            line: 116,
            column: 5
          }
        }],
        line: 90
      },
      "12": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "13": {
        loc: {
          start: {
            line: 101,
            column: 11
          },
          end: {
            line: 116,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 11
          },
          end: {
            line: 116,
            column: 5
          }
        }, {
          start: {
            line: 114,
            column: 11
          },
          end: {
            line: 116,
            column: 5
          }
        }],
        line: 101
      },
      "14": {
        loc: {
          start: {
            line: 128,
            column: 9
          },
          end: {
            line: 128,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 9
          },
          end: {
            line: 128,
            column: 12
          }
        }, {
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 128,
            column: 71
          }
        }],
        line: 128
      },
      "15": {
        loc: {
          start: {
            line: 133,
            column: 2
          },
          end: {
            line: 138,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 2
          },
          end: {
            line: 138,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "16": {
        loc: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "17": {
        loc: {
          start: {
            line: 144,
            column: 2
          },
          end: {
            line: 146,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 2
          },
          end: {
            line: 146,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "18": {
        loc: {
          start: {
            line: 149,
            column: 2
          },
          end: {
            line: 153,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 2
          },
          end: {
            line: 153,
            column: 3
          }
        }, {
          start: {
            line: 151,
            column: 9
          },
          end: {
            line: 153,
            column: 3
          }
        }],
        line: 149
      },
      "19": {
        loc: {
          start: {
            line: 160,
            column: 2
          },
          end: {
            line: 162,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 2
          },
          end: {
            line: 162,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "20": {
        loc: {
          start: {
            line: 183,
            column: 2
          },
          end: {
            line: 185,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 2
          },
          end: {
            line: 185,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "21": {
        loc: {
          start: {
            line: 192,
            column: 2
          },
          end: {
            line: 206,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 2
          },
          end: {
            line: 206,
            column: 3
          }
        }, {
          start: {
            line: 194,
            column: 9
          },
          end: {
            line: 206,
            column: 3
          }
        }],
        line: 192
      },
      "22": {
        loc: {
          start: {
            line: 194,
            column: 9
          },
          end: {
            line: 206,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 9
          },
          end: {
            line: 206,
            column: 3
          }
        }, {
          start: {
            line: 196,
            column: 9
          },
          end: {
            line: 206,
            column: 3
          }
        }],
        line: 194
      },
      "23": {
        loc: {
          start: {
            line: 200,
            column: 6
          },
          end: {
            line: 202,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 6
          },
          end: {
            line: 202,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "24": {
        loc: {
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 210,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 210,
            column: 46
          },
          end: {
            line: 210,
            column: 49
          }
        }, {
          start: {
            line: 210,
            column: 52
          },
          end: {
            line: 210,
            column: 54
          }
        }],
        line: 210
      },
      "25": {
        loc: {
          start: {
            line: 210,
            column: 9
          },
          end: {
            line: 210,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 210,
            column: 9
          },
          end: {
            line: 210,
            column: 26
          }
        }, {
          start: {
            line: 210,
            column: 30
          },
          end: {
            line: 210,
            column: 42
          }
        }],
        line: 210
      },
      "26": {
        loc: {
          start: {
            line: 212,
            column: 2
          },
          end: {
            line: 214,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 2
          },
          end: {
            line: 214,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "27": {
        loc: {
          start: {
            line: 212,
            column: 6
          },
          end: {
            line: 212,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 6
          },
          end: {
            line: 212,
            column: 16
          }
        }, {
          start: {
            line: 212,
            column: 20
          },
          end: {
            line: 212,
            column: 48
          }
        }],
        line: 212
      },
      "28": {
        loc: {
          start: {
            line: 220,
            column: 2
          },
          end: {
            line: 229,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 2
          },
          end: {
            line: 229,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "29": {
        loc: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "30": {
        loc: {
          start: {
            line: 230,
            column: 2
          },
          end: {
            line: 235,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 2
          },
          end: {
            line: 235,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "31": {
        loc: {
          start: {
            line: 230,
            column: 6
          },
          end: {
            line: 230,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 6
          },
          end: {
            line: 230,
            column: 9
          }
        }, {
          start: {
            line: 230,
            column: 13
          },
          end: {
            line: 230,
            column: 43
          }
        }],
        line: 230
      },
      "32": {
        loc: {
          start: {
            line: 240,
            column: 2
          },
          end: {
            line: 246,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 2
          },
          end: {
            line: 246,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "33": {
        loc: {
          start: {
            line: 240,
            column: 6
          },
          end: {
            line: 240,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 6
          },
          end: {
            line: 240,
            column: 18
          }
        }, {
          start: {
            line: 240,
            column: 22
          },
          end: {
            line: 240,
            column: 39
          }
        }],
        line: 240
      },
      "34": {
        loc: {
          start: {
            line: 251,
            column: 2
          },
          end: {
            line: 258,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 2
          },
          end: {
            line: 258,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "35": {
        loc: {
          start: {
            line: 259,
            column: 2
          },
          end: {
            line: 264,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 2
          },
          end: {
            line: 264,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "36": {
        loc: {
          start: {
            line: 259,
            column: 6
          },
          end: {
            line: 259,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 259,
            column: 6
          },
          end: {
            line: 259,
            column: 9
          }
        }, {
          start: {
            line: 259,
            column: 13
          },
          end: {
            line: 259,
            column: 43
          }
        }],
        line: 259
      },
      "37": {
        loc: {
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "38": {
        loc: {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "39": {
        loc: {
          start: {
            line: 274,
            column: 14
          },
          end: {
            line: 274,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 274,
            column: 14
          },
          end: {
            line: 274,
            column: 23
          }
        }, {
          start: {
            line: 274,
            column: 27
          },
          end: {
            line: 274,
            column: 29
          }
        }],
        line: 274
      },
      "40": {
        loc: {
          start: {
            line: 276,
            column: 18
          },
          end: {
            line: 276,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 18
          },
          end: {
            line: 276,
            column: 22
          }
        }, {
          start: {
            line: 276,
            column: 26
          },
          end: {
            line: 276,
            column: 28
          }
        }],
        line: 276
      },
      "41": {
        loc: {
          start: {
            line: 282,
            column: 2
          },
          end: {
            line: 284,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 2
          },
          end: {
            line: 284,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      },
      "42": {
        loc: {
          start: {
            line: 282,
            column: 6
          },
          end: {
            line: 282,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 282,
            column: 6
          },
          end: {
            line: 282,
            column: 23
          }
        }, {
          start: {
            line: 282,
            column: 27
          },
          end: {
            line: 282,
            column: 39
          }
        }],
        line: 282
      },
      "43": {
        loc: {
          start: {
            line: 286,
            column: 2
          },
          end: {
            line: 288,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 2
          },
          end: {
            line: 288,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "44": {
        loc: {
          start: {
            line: 294,
            column: 2
          },
          end: {
            line: 298,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 2
          },
          end: {
            line: 298,
            column: 3
          }
        }, {
          start: {
            line: 296,
            column: 9
          },
          end: {
            line: 298,
            column: 3
          }
        }],
        line: 294
      },
      "45": {
        loc: {
          start: {
            line: 296,
            column: 9
          },
          end: {
            line: 298,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 9
          },
          end: {
            line: 298,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "46": {
        loc: {
          start: {
            line: 305,
            column: 9
          },
          end: {
            line: 307,
            column: 24
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 306,
            column: 4
          },
          end: {
            line: 306,
            column: 7
          }
        }, {
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 307,
            column: 24
          }
        }],
        line: 305
      },
      "47": {
        loc: {
          start: {
            line: 311,
            column: 2
          },
          end: {
            line: 315,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 2
          },
          end: {
            line: 315,
            column: 3
          }
        }, {
          start: {
            line: 313,
            column: 9
          },
          end: {
            line: 315,
            column: 3
          }
        }],
        line: 311
      },
      "48": {
        loc: {
          start: {
            line: 319,
            column: 2
          },
          end: {
            line: 342,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 319,
            column: 2
          },
          end: {
            line: 342,
            column: 3
          }
        }, {
          start: {
            line: 338,
            column: 9
          },
          end: {
            line: 342,
            column: 3
          }
        }],
        line: 319
      },
      "49": {
        loc: {
          start: {
            line: 323,
            column: 6
          },
          end: {
            line: 336,
            column: 7
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 326,
            column: 16
          }
        }, {
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 329,
            column: 16
          }
        }, {
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 332,
            column: 16
          }
        }, {
          start: {
            line: 333,
            column: 8
          },
          end: {
            line: 335,
            column: 33
          }
        }],
        line: 323
      },
      "50": {
        loc: {
          start: {
            line: 354,
            column: 4
          },
          end: {
            line: 356,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 354,
            column: 4
          },
          end: {
            line: 356,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 354
      },
      "51": {
        loc: {
          start: {
            line: 359,
            column: 2
          },
          end: {
            line: 398,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 2
          },
          end: {
            line: 398,
            column: 3
          }
        }, {
          start: {
            line: 385,
            column: 9
          },
          end: {
            line: 398,
            column: 3
          }
        }],
        line: 359
      },
      "52": {
        loc: {
          start: {
            line: 363,
            column: 4
          },
          end: {
            line: 384,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 363,
            column: 4
          },
          end: {
            line: 384,
            column: 5
          }
        }, {
          start: {
            line: 365,
            column: 11
          },
          end: {
            line: 384,
            column: 5
          }
        }],
        line: 363
      },
      "53": {
        loc: {
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 382,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 370,
            column: 10
          },
          end: {
            line: 372,
            column: 18
          }
        }, {
          start: {
            line: 373,
            column: 10
          },
          end: {
            line: 375,
            column: 18
          }
        }, {
          start: {
            line: 376,
            column: 10
          },
          end: {
            line: 378,
            column: 18
          }
        }, {
          start: {
            line: 379,
            column: 10
          },
          end: {
            line: 381,
            column: 35
          }
        }],
        line: 369
      },
      "54": {
        loc: {
          start: {
            line: 386,
            column: 26
          },
          end: {
            line: 386,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 386,
            column: 26
          },
          end: {
            line: 386,
            column: 29
          }
        }, {
          start: {
            line: 386,
            column: 33
          },
          end: {
            line: 386,
            column: 35
          }
        }],
        line: 386
      },
      "55": {
        loc: {
          start: {
            line: 390,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 390,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        }, {
          start: {
            line: 392,
            column: 11
          },
          end: {
            line: 397,
            column: 5
          }
        }],
        line: 390
      },
      "56": {
        loc: {
          start: {
            line: 402,
            column: 2
          },
          end: {
            line: 408,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 402,
            column: 2
          },
          end: {
            line: 408,
            column: 3
          }
        }, {
          start: {
            line: 404,
            column: 9
          },
          end: {
            line: 408,
            column: 3
          }
        }],
        line: 402
      },
      "57": {
        loc: {
          start: {
            line: 402,
            column: 6
          },
          end: {
            line: 402,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 402,
            column: 6
          },
          end: {
            line: 402,
            column: 29
          }
        }, {
          start: {
            line: 402,
            column: 33
          },
          end: {
            line: 402,
            column: 45
          }
        }, {
          start: {
            line: 402,
            column: 49
          },
          end: {
            line: 402,
            column: 65
          }
        }],
        line: 402
      },
      "58": {
        loc: {
          start: {
            line: 404,
            column: 9
          },
          end: {
            line: 408,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 404,
            column: 9
          },
          end: {
            line: 408,
            column: 3
          }
        }, {
          start: {
            line: 406,
            column: 9
          },
          end: {
            line: 408,
            column: 3
          }
        }],
        line: 404
      },
      "59": {
        loc: {
          start: {
            line: 404,
            column: 13
          },
          end: {
            line: 404,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 404,
            column: 13
          },
          end: {
            line: 404,
            column: 30
          }
        }, {
          start: {
            line: 404,
            column: 34
          },
          end: {
            line: 404,
            column: 56
          }
        }],
        line: 404
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0, 0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0, 0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0, 0],
      "58": [0, 0],
      "59": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e155ca2b3496e0b3186e6ec97ba8aa528e3c79be"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_8tz5awjvh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_8tz5awjvh();
var lib = (cov_8tz5awjvh().s[0]++, __webpack_require__(/*! ./lib */ 449));
var arrayFrom = (cov_8tz5awjvh().s[1]++, Array.from);
var supportsIterators = (cov_8tz5awjvh().s[2]++, (cov_8tz5awjvh().b[0][0]++, typeof Symbol === 'function') && (cov_8tz5awjvh().b[0][1]++, Symbol.iterator) && (cov_8tz5awjvh().b[0][2]++, typeof arrayFrom === 'function'));

// Frames keep track of scoping both at compile-time and run-time so
// we know how to access variables. Block tags can introduce special
// variables, for example.
class Frame {
  constructor(parent, isolateWrites) {
    cov_8tz5awjvh().f[0]++;
    cov_8tz5awjvh().s[3]++;
    this.variables = Object.create(null);
    cov_8tz5awjvh().s[4]++;
    this.parent = parent;
    cov_8tz5awjvh().s[5]++;
    this.topLevel = false;
    // if this is true, writes (set) should never propagate upwards past
    // this frame to its parent (though reads may).
    cov_8tz5awjvh().s[6]++;
    this.isolateWrites = isolateWrites;
  }
  set(name, val, resolveUp) {
    cov_8tz5awjvh().f[1]++;
    // Allow variables with dots by automatically creating the
    // nested structure
    var parts = (cov_8tz5awjvh().s[7]++, name.split('.'));
    var obj = (cov_8tz5awjvh().s[8]++, this.variables);
    var frame = (cov_8tz5awjvh().s[9]++, this);
    cov_8tz5awjvh().s[10]++;
    if (resolveUp) {
      cov_8tz5awjvh().b[1][0]++;
      cov_8tz5awjvh().s[11]++;
      if (frame = this.resolve(parts[0], true)) {
        cov_8tz5awjvh().b[2][0]++;
        cov_8tz5awjvh().s[12]++;
        frame.set(name, val);
        cov_8tz5awjvh().s[13]++;
        return;
      } else {
        cov_8tz5awjvh().b[2][1]++;
      }
    } else {
      cov_8tz5awjvh().b[1][1]++;
    }
    cov_8tz5awjvh().s[14]++;
    for (let i = (cov_8tz5awjvh().s[15]++, 0); i < parts.length - 1; i++) {
      const id = (cov_8tz5awjvh().s[16]++, parts[i]);
      cov_8tz5awjvh().s[17]++;
      if (!obj[id]) {
        cov_8tz5awjvh().b[3][0]++;
        cov_8tz5awjvh().s[18]++;
        obj[id] = {};
      } else {
        cov_8tz5awjvh().b[3][1]++;
      }
      cov_8tz5awjvh().s[19]++;
      obj = obj[id];
    }
    cov_8tz5awjvh().s[20]++;
    obj[parts[parts.length - 1]] = val;
  }
  get(name) {
    cov_8tz5awjvh().f[2]++;
    var val = (cov_8tz5awjvh().s[21]++, this.variables[name]);
    cov_8tz5awjvh().s[22]++;
    if (val !== undefined) {
      cov_8tz5awjvh().b[4][0]++;
      cov_8tz5awjvh().s[23]++;
      return val;
    } else {
      cov_8tz5awjvh().b[4][1]++;
    }
    cov_8tz5awjvh().s[24]++;
    return null;
  }
  lookup(name) {
    cov_8tz5awjvh().f[3]++;
    var p = (cov_8tz5awjvh().s[25]++, this.parent);
    var val = (cov_8tz5awjvh().s[26]++, this.variables[name]);
    cov_8tz5awjvh().s[27]++;
    if (val !== undefined) {
      cov_8tz5awjvh().b[5][0]++;
      cov_8tz5awjvh().s[28]++;
      return val;
    } else {
      cov_8tz5awjvh().b[5][1]++;
    }
    cov_8tz5awjvh().s[29]++;
    return (cov_8tz5awjvh().b[6][0]++, p) && (cov_8tz5awjvh().b[6][1]++, p.lookup(name));
  }
  resolve(name, forWrite) {
    cov_8tz5awjvh().f[4]++;
    var p = (cov_8tz5awjvh().s[30]++, (cov_8tz5awjvh().b[8][0]++, forWrite) && (cov_8tz5awjvh().b[8][1]++, this.isolateWrites) ? (cov_8tz5awjvh().b[7][0]++, undefined) : (cov_8tz5awjvh().b[7][1]++, this.parent));
    var val = (cov_8tz5awjvh().s[31]++, this.variables[name]);
    cov_8tz5awjvh().s[32]++;
    if (val !== undefined) {
      cov_8tz5awjvh().b[9][0]++;
      cov_8tz5awjvh().s[33]++;
      return this;
    } else {
      cov_8tz5awjvh().b[9][1]++;
    }
    cov_8tz5awjvh().s[34]++;
    return (cov_8tz5awjvh().b[10][0]++, p) && (cov_8tz5awjvh().b[10][1]++, p.resolve(name));
  }
  push(isolateWrites) {
    cov_8tz5awjvh().f[5]++;
    cov_8tz5awjvh().s[35]++;
    return new Frame(this, isolateWrites);
  }
  pop() {
    cov_8tz5awjvh().f[6]++;
    cov_8tz5awjvh().s[36]++;
    return this.parent;
  }
}
function makeMacro(argNames, kwargNames, func) {
  cov_8tz5awjvh().f[7]++;
  cov_8tz5awjvh().s[37]++;
  return function macro() {
    cov_8tz5awjvh().f[8]++;
    for (var _len = arguments.length, macroArgs = new Array(_len), _key = 0; _key < _len; _key++) {
      macroArgs[_key] = arguments[_key];
    }
    var argCount = (cov_8tz5awjvh().s[38]++, numArgs(macroArgs));
    var args;
    var kwargs = (cov_8tz5awjvh().s[39]++, getKeywordArgs(macroArgs));
    cov_8tz5awjvh().s[40]++;
    if (argCount > argNames.length) {
      cov_8tz5awjvh().b[11][0]++;
      cov_8tz5awjvh().s[41]++;
      args = macroArgs.slice(0, argNames.length);

      // Positional arguments that should be passed in as
      // keyword arguments (essentially default values)
      cov_8tz5awjvh().s[42]++;
      macroArgs.slice(args.length, argCount).forEach((val, i) => {
        cov_8tz5awjvh().f[9]++;
        cov_8tz5awjvh().s[43]++;
        if (i < kwargNames.length) {
          cov_8tz5awjvh().b[12][0]++;
          cov_8tz5awjvh().s[44]++;
          kwargs[kwargNames[i]] = val;
        } else {
          cov_8tz5awjvh().b[12][1]++;
        }
      });
      cov_8tz5awjvh().s[45]++;
      args.push(kwargs);
    } else {
      cov_8tz5awjvh().b[11][1]++;
      cov_8tz5awjvh().s[46]++;
      if (argCount < argNames.length) {
        cov_8tz5awjvh().b[13][0]++;
        cov_8tz5awjvh().s[47]++;
        args = macroArgs.slice(0, argCount);
        cov_8tz5awjvh().s[48]++;
        for (let i = (cov_8tz5awjvh().s[49]++, argCount); i < argNames.length; i++) {
          const arg = (cov_8tz5awjvh().s[50]++, argNames[i]);

          // Keyword arguments that should be passed as
          // positional arguments, i.e. the caller explicitly
          // used the name of a positional arg
          cov_8tz5awjvh().s[51]++;
          args.push(kwargs[arg]);
          cov_8tz5awjvh().s[52]++;
          delete kwargs[arg];
        }
        cov_8tz5awjvh().s[53]++;
        args.push(kwargs);
      } else {
        cov_8tz5awjvh().b[13][1]++;
        cov_8tz5awjvh().s[54]++;
        args = macroArgs;
      }
    }
    cov_8tz5awjvh().s[55]++;
    return func.apply(this, args);
  };
}
function makeKeywordArgs(obj) {
  cov_8tz5awjvh().f[10]++;
  cov_8tz5awjvh().s[56]++;
  obj.__keywords = true;
  cov_8tz5awjvh().s[57]++;
  return obj;
}
function isKeywordArgs(obj) {
  cov_8tz5awjvh().f[11]++;
  cov_8tz5awjvh().s[58]++;
  return (cov_8tz5awjvh().b[14][0]++, obj) && (cov_8tz5awjvh().b[14][1]++, Object.prototype.hasOwnProperty.call(obj, '__keywords'));
}
function getKeywordArgs(args) {
  cov_8tz5awjvh().f[12]++;
  var len = (cov_8tz5awjvh().s[59]++, args.length);
  cov_8tz5awjvh().s[60]++;
  if (len) {
    cov_8tz5awjvh().b[15][0]++;
    const lastArg = (cov_8tz5awjvh().s[61]++, args[len - 1]);
    cov_8tz5awjvh().s[62]++;
    if (isKeywordArgs(lastArg)) {
      cov_8tz5awjvh().b[16][0]++;
      cov_8tz5awjvh().s[63]++;
      return lastArg;
    } else {
      cov_8tz5awjvh().b[16][1]++;
    }
  } else {
    cov_8tz5awjvh().b[15][1]++;
  }
  cov_8tz5awjvh().s[64]++;
  return {};
}
function numArgs(args) {
  cov_8tz5awjvh().f[13]++;
  var len = (cov_8tz5awjvh().s[65]++, args.length);
  cov_8tz5awjvh().s[66]++;
  if (len === 0) {
    cov_8tz5awjvh().b[17][0]++;
    cov_8tz5awjvh().s[67]++;
    return 0;
  } else {
    cov_8tz5awjvh().b[17][1]++;
  }
  const lastArg = (cov_8tz5awjvh().s[68]++, args[len - 1]);
  cov_8tz5awjvh().s[69]++;
  if (isKeywordArgs(lastArg)) {
    cov_8tz5awjvh().b[18][0]++;
    cov_8tz5awjvh().s[70]++;
    return len - 1;
  } else {
    cov_8tz5awjvh().b[18][1]++;
    cov_8tz5awjvh().s[71]++;
    return len;
  }
}

// A SafeString object indicates that the string should not be
// autoescaped. This happens magically because autoescaping only
// occurs on primitive string objects.
function SafeString(val) {
  cov_8tz5awjvh().f[14]++;
  cov_8tz5awjvh().s[72]++;
  if (typeof val !== 'string') {
    cov_8tz5awjvh().b[19][0]++;
    cov_8tz5awjvh().s[73]++;
    return val;
  } else {
    cov_8tz5awjvh().b[19][1]++;
  }
  cov_8tz5awjvh().s[74]++;
  this.val = val;
  cov_8tz5awjvh().s[75]++;
  this.length = val.length;
}
cov_8tz5awjvh().s[76]++;
SafeString.prototype = Object.create(String.prototype, {
  length: {
    writable: true,
    configurable: true,
    value: 0
  }
});
cov_8tz5awjvh().s[77]++;
SafeString.prototype.valueOf = function valueOf() {
  cov_8tz5awjvh().f[15]++;
  cov_8tz5awjvh().s[78]++;
  return this.val;
};
cov_8tz5awjvh().s[79]++;
SafeString.prototype.toString = function toString() {
  cov_8tz5awjvh().f[16]++;
  cov_8tz5awjvh().s[80]++;
  return this.val;
};
function copySafeness(dest, target) {
  cov_8tz5awjvh().f[17]++;
  cov_8tz5awjvh().s[81]++;
  if (dest instanceof SafeString) {
    cov_8tz5awjvh().b[20][0]++;
    cov_8tz5awjvh().s[82]++;
    return new SafeString(target);
  } else {
    cov_8tz5awjvh().b[20][1]++;
  }
  cov_8tz5awjvh().s[83]++;
  return target.toString();
}
function markSafe(val) {
  cov_8tz5awjvh().f[18]++;
  var type = (cov_8tz5awjvh().s[84]++, typeof val);
  cov_8tz5awjvh().s[85]++;
  if (type === 'string') {
    cov_8tz5awjvh().b[21][0]++;
    cov_8tz5awjvh().s[86]++;
    return new SafeString(val);
  } else {
    cov_8tz5awjvh().b[21][1]++;
    cov_8tz5awjvh().s[87]++;
    if (type !== 'function') {
      cov_8tz5awjvh().b[22][0]++;
      cov_8tz5awjvh().s[88]++;
      return val;
    } else {
      cov_8tz5awjvh().b[22][1]++;
      cov_8tz5awjvh().s[89]++;
      return function wrapSafe(args) {
        cov_8tz5awjvh().f[19]++;
        var ret = (cov_8tz5awjvh().s[90]++, val.apply(this, arguments));
        cov_8tz5awjvh().s[91]++;
        if (typeof ret === 'string') {
          cov_8tz5awjvh().b[23][0]++;
          cov_8tz5awjvh().s[92]++;
          return new SafeString(ret);
        } else {
          cov_8tz5awjvh().b[23][1]++;
        }
        cov_8tz5awjvh().s[93]++;
        return ret;
      };
    }
  }
}
function suppressValue(val, autoescape) {
  cov_8tz5awjvh().f[20]++;
  cov_8tz5awjvh().s[94]++;
  val = (cov_8tz5awjvh().b[25][0]++, val !== undefined) && (cov_8tz5awjvh().b[25][1]++, val !== null) ? (cov_8tz5awjvh().b[24][0]++, val) : (cov_8tz5awjvh().b[24][1]++, '');
  cov_8tz5awjvh().s[95]++;
  if ((cov_8tz5awjvh().b[27][0]++, autoescape) && (cov_8tz5awjvh().b[27][1]++, !(val instanceof SafeString))) {
    cov_8tz5awjvh().b[26][0]++;
    cov_8tz5awjvh().s[96]++;
    val = lib.escape(val.toString());
  } else {
    cov_8tz5awjvh().b[26][1]++;
  }
  cov_8tz5awjvh().s[97]++;
  return val;
}
function suppressValueAsync(val, autoescape) {
  cov_8tz5awjvh().f[21]++;
  cov_8tz5awjvh().s[98]++;
  if (Array.isArray(val)) {
    cov_8tz5awjvh().b[28][0]++;
    cov_8tz5awjvh().s[99]++;
    if (autoescape) {
      cov_8tz5awjvh().b[29][0]++;
      cov_8tz5awjvh().s[100]++;
      // append the function to the array, so it will be
      // called after the elements before it are joined
      val.push(value => {
        cov_8tz5awjvh().f[22]++;
        cov_8tz5awjvh().s[101]++;
        return suppressValue(value, true);
      });
    } else {
      cov_8tz5awjvh().b[29][1]++;
    }
    cov_8tz5awjvh().s[102]++;
    return val;
  } else {
    cov_8tz5awjvh().b[28][1]++;
  }
  cov_8tz5awjvh().s[103]++;
  if ((cov_8tz5awjvh().b[31][0]++, val) && (cov_8tz5awjvh().b[31][1]++, typeof val.then === 'function')) {
    cov_8tz5awjvh().b[30][0]++;
    cov_8tz5awjvh().s[104]++;
    // it's a promise, return a promise that suppresses the value when resolved
    return (async v => {
      cov_8tz5awjvh().f[23]++;
      cov_8tz5awjvh().s[105]++;
      return suppressValue(await v, autoescape);
    })(val);
  } else {
    cov_8tz5awjvh().b[30][1]++;
  }
  cov_8tz5awjvh().s[106]++;
  return suppressValue(val, autoescape);
}
function ensureDefined(val, lineno, colno) {
  cov_8tz5awjvh().f[24]++;
  cov_8tz5awjvh().s[107]++;
  if ((cov_8tz5awjvh().b[33][0]++, val === null) || (cov_8tz5awjvh().b[33][1]++, val === undefined)) {
    cov_8tz5awjvh().b[32][0]++;
    cov_8tz5awjvh().s[108]++;
    throw new lib.TemplateError('attempted to output null or undefined value', lineno + 1, colno + 1);
  } else {
    cov_8tz5awjvh().b[32][1]++;
  }
  cov_8tz5awjvh().s[109]++;
  return val;
}
function ensureDefinedAsync(val, lineno, colno) {
  cov_8tz5awjvh().f[25]++;
  cov_8tz5awjvh().s[110]++;
  if (Array.isArray(val)) {
    cov_8tz5awjvh().b[34][0]++;
    cov_8tz5awjvh().s[111]++;
    // append the function to the array, so it will be
    // called after the elements before it are joined
    val.push(v => {
      cov_8tz5awjvh().f[26]++;
      cov_8tz5awjvh().s[112]++;
      return ensureDefined(v, lineno, colno);
    });
    cov_8tz5awjvh().s[113]++;
    return val;
  } else {
    cov_8tz5awjvh().b[34][1]++;
  }
  cov_8tz5awjvh().s[114]++;
  if ((cov_8tz5awjvh().b[36][0]++, val) && (cov_8tz5awjvh().b[36][1]++, typeof val.then === 'function')) {
    cov_8tz5awjvh().b[35][0]++;
    cov_8tz5awjvh().s[115]++;
    // it's a promise, return a promise that suppresses the value when resolved
    return (async v => {
      cov_8tz5awjvh().f[27]++;
      cov_8tz5awjvh().s[116]++;
      return ensureDefined(await v, lineno, colno);
    })(val);
  } else {
    cov_8tz5awjvh().b[35][1]++;
  }
  cov_8tz5awjvh().s[117]++;
  return ensureDefined(val, lineno, colno);
}
function flattentBuffer(arr) {
  cov_8tz5awjvh().f[28]++;
  const result = (cov_8tz5awjvh().s[118]++, arr.reduce((acc, item) => {
    cov_8tz5awjvh().f[29]++;
    cov_8tz5awjvh().s[119]++;
    if (Array.isArray(item)) {
      cov_8tz5awjvh().b[37][0]++;
      cov_8tz5awjvh().s[120]++;
      return acc + flattentBuffer(item);
    } else {
      cov_8tz5awjvh().b[37][1]++;
    }
    cov_8tz5awjvh().s[121]++;
    if (typeof item === 'function') {
      cov_8tz5awjvh().b[38][0]++;
      cov_8tz5awjvh().s[122]++;
      return (cov_8tz5awjvh().b[39][0]++, item(acc)) || (cov_8tz5awjvh().b[39][1]++, '');
    } else {
      cov_8tz5awjvh().b[38][1]++;
    }
    cov_8tz5awjvh().s[123]++;
    return acc + ((cov_8tz5awjvh().b[40][0]++, item) || (cov_8tz5awjvh().b[40][1]++, ''));
  }, ''));
  cov_8tz5awjvh().s[124]++;
  return result;
}
function memberLookup(obj, val) {
  cov_8tz5awjvh().f[30]++;
  cov_8tz5awjvh().s[125]++;
  if ((cov_8tz5awjvh().b[42][0]++, obj === undefined) || (cov_8tz5awjvh().b[42][1]++, obj === null)) {
    cov_8tz5awjvh().b[41][0]++;
    cov_8tz5awjvh().s[126]++;
    return undefined;
  } else {
    cov_8tz5awjvh().b[41][1]++;
  }
  cov_8tz5awjvh().s[127]++;
  if (typeof obj[val] === 'function') {
    cov_8tz5awjvh().b[43][0]++;
    cov_8tz5awjvh().s[128]++;
    return function () {
      cov_8tz5awjvh().f[31]++;
      cov_8tz5awjvh().s[129]++;
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      return obj[val].apply(obj, args);
    };
  } else {
    cov_8tz5awjvh().b[43][1]++;
  }
  cov_8tz5awjvh().s[130]++;
  return obj[val];
}
function callWrap(obj, name, context, args) {
  cov_8tz5awjvh().f[32]++;
  cov_8tz5awjvh().s[131]++;
  if (!obj) {
    cov_8tz5awjvh().b[44][0]++;
    cov_8tz5awjvh().s[132]++;
    throw new Error('Unable to call `' + name + '`, which is undefined or falsey');
  } else {
    cov_8tz5awjvh().b[44][1]++;
    cov_8tz5awjvh().s[133]++;
    if (typeof obj !== 'function') {
      cov_8tz5awjvh().b[45][0]++;
      cov_8tz5awjvh().s[134]++;
      throw new Error('Unable to call `' + name + '`, which is not a function');
    } else {
      cov_8tz5awjvh().b[45][1]++;
    }
  }
  cov_8tz5awjvh().s[135]++;
  return obj.apply(context, args);
}
function contextOrFrameLookup(context, frame, name) {
  cov_8tz5awjvh().f[33]++;
  var val = (cov_8tz5awjvh().s[136]++, frame.lookup(name));
  cov_8tz5awjvh().s[137]++;
  return val !== undefined ? (cov_8tz5awjvh().b[46][0]++, val) : (cov_8tz5awjvh().b[46][1]++, context.lookup(name));
}
function handleError(error, lineno, colno) {
  cov_8tz5awjvh().f[34]++;
  cov_8tz5awjvh().s[138]++;
  if (error.lineno) {
    cov_8tz5awjvh().b[47][0]++;
    cov_8tz5awjvh().s[139]++;
    return error;
  } else {
    cov_8tz5awjvh().b[47][1]++;
    cov_8tz5awjvh().s[140]++;
    return new lib.TemplateError(error, lineno, colno);
  }
}
function asyncEach(arr, dimen, iter, cb) {
  cov_8tz5awjvh().f[35]++;
  cov_8tz5awjvh().s[141]++;
  if (lib.isArray(arr)) {
    cov_8tz5awjvh().b[48][0]++;
    const len = (cov_8tz5awjvh().s[142]++, arr.length);
    cov_8tz5awjvh().s[143]++;
    lib.asyncIter(arr, function iterCallback(item, i, next) {
      cov_8tz5awjvh().f[36]++;
      cov_8tz5awjvh().s[144]++;
      switch (dimen) {
        case 1:
          cov_8tz5awjvh().b[49][0]++;
          cov_8tz5awjvh().s[145]++;
          iter(item, i, len, next);
          cov_8tz5awjvh().s[146]++;
          break;
        case 2:
          cov_8tz5awjvh().b[49][1]++;
          cov_8tz5awjvh().s[147]++;
          iter(item[0], item[1], i, len, next);
          cov_8tz5awjvh().s[148]++;
          break;
        case 3:
          cov_8tz5awjvh().b[49][2]++;
          cov_8tz5awjvh().s[149]++;
          iter(item[0], item[1], item[2], i, len, next);
          cov_8tz5awjvh().s[150]++;
          break;
        default:
          cov_8tz5awjvh().b[49][3]++;
          cov_8tz5awjvh().s[151]++;
          item.push(i, len, next);
          cov_8tz5awjvh().s[152]++;
          iter.apply(this, item);
      }
    }, cb);
  } else {
    cov_8tz5awjvh().b[48][1]++;
    cov_8tz5awjvh().s[153]++;
    lib.asyncFor(arr, function iterCallback(key, val, i, len, next) {
      cov_8tz5awjvh().f[37]++;
      cov_8tz5awjvh().s[154]++;
      iter(key, val, i, len, next);
    }, cb);
  }
}
function asyncAll(arr, dimen, func, cb) {
  cov_8tz5awjvh().f[38]++;
  var finished = (cov_8tz5awjvh().s[155]++, 0);
  var len;
  var outputArr;
  function done(i, output) {
    cov_8tz5awjvh().f[39]++;
    cov_8tz5awjvh().s[156]++;
    finished++;
    cov_8tz5awjvh().s[157]++;
    outputArr[i] = output;
    cov_8tz5awjvh().s[158]++;
    if (finished === len) {
      cov_8tz5awjvh().b[50][0]++;
      cov_8tz5awjvh().s[159]++;
      cb(null, outputArr.join(''));
    } else {
      cov_8tz5awjvh().b[50][1]++;
    }
  }
  cov_8tz5awjvh().s[160]++;
  if (lib.isArray(arr)) {
    cov_8tz5awjvh().b[51][0]++;
    cov_8tz5awjvh().s[161]++;
    len = arr.length;
    cov_8tz5awjvh().s[162]++;
    outputArr = new Array(len);
    cov_8tz5awjvh().s[163]++;
    if (len === 0) {
      cov_8tz5awjvh().b[52][0]++;
      cov_8tz5awjvh().s[164]++;
      cb(null, '');
    } else {
      cov_8tz5awjvh().b[52][1]++;
      cov_8tz5awjvh().s[165]++;
      for (let i = (cov_8tz5awjvh().s[166]++, 0); i < arr.length; i++) {
        const item = (cov_8tz5awjvh().s[167]++, arr[i]);
        cov_8tz5awjvh().s[168]++;
        switch (dimen) {
          case 1:
            cov_8tz5awjvh().b[53][0]++;
            cov_8tz5awjvh().s[169]++;
            func(item, i, len, done);
            cov_8tz5awjvh().s[170]++;
            break;
          case 2:
            cov_8tz5awjvh().b[53][1]++;
            cov_8tz5awjvh().s[171]++;
            func(item[0], item[1], i, len, done);
            cov_8tz5awjvh().s[172]++;
            break;
          case 3:
            cov_8tz5awjvh().b[53][2]++;
            cov_8tz5awjvh().s[173]++;
            func(item[0], item[1], item[2], i, len, done);
            cov_8tz5awjvh().s[174]++;
            break;
          default:
            cov_8tz5awjvh().b[53][3]++;
            cov_8tz5awjvh().s[175]++;
            item.push(i, len, done);
            cov_8tz5awjvh().s[176]++;
            func.apply(this, item);
        }
      }
    }
  } else {
    cov_8tz5awjvh().b[51][1]++;
    const keys = (cov_8tz5awjvh().s[177]++, lib.keys((cov_8tz5awjvh().b[54][0]++, arr) || (cov_8tz5awjvh().b[54][1]++, {})));
    cov_8tz5awjvh().s[178]++;
    len = keys.length;
    cov_8tz5awjvh().s[179]++;
    outputArr = new Array(len);
    cov_8tz5awjvh().s[180]++;
    if (len === 0) {
      cov_8tz5awjvh().b[55][0]++;
      cov_8tz5awjvh().s[181]++;
      cb(null, '');
    } else {
      cov_8tz5awjvh().b[55][1]++;
      cov_8tz5awjvh().s[182]++;
      for (let i = (cov_8tz5awjvh().s[183]++, 0); i < keys.length; i++) {
        const k = (cov_8tz5awjvh().s[184]++, keys[i]);
        cov_8tz5awjvh().s[185]++;
        func(k, arr[k], i, len, done);
      }
    }
  }
}
function fromIterator(arr) {
  cov_8tz5awjvh().f[40]++;
  cov_8tz5awjvh().s[186]++;
  if ((cov_8tz5awjvh().b[57][0]++, typeof arr !== 'object') || (cov_8tz5awjvh().b[57][1]++, arr === null) || (cov_8tz5awjvh().b[57][2]++, lib.isArray(arr))) {
    cov_8tz5awjvh().b[56][0]++;
    cov_8tz5awjvh().s[187]++;
    return arr;
  } else {
    cov_8tz5awjvh().b[56][1]++;
    cov_8tz5awjvh().s[188]++;
    if ((cov_8tz5awjvh().b[59][0]++, supportsIterators) && (cov_8tz5awjvh().b[59][1]++, Symbol.iterator in arr)) {
      cov_8tz5awjvh().b[58][0]++;
      cov_8tz5awjvh().s[189]++;
      return arrayFrom(arr);
    } else {
      cov_8tz5awjvh().b[58][1]++;
      cov_8tz5awjvh().s[190]++;
      return arr;
    }
  }
}
cov_8tz5awjvh().s[191]++;
module.exports = {
  Frame: Frame,
  makeMacro: makeMacro,
  makeKeywordArgs: makeKeywordArgs,
  numArgs: numArgs,
  suppressValue: suppressValue,
  suppressValueAsync: suppressValueAsync,
  ensureDefined: ensureDefined,
  ensureDefinedAsync: ensureDefinedAsync,
  flattentBuffer: flattentBuffer,
  memberLookup: memberLookup,
  contextOrFrameLookup: contextOrFrameLookup,
  callWrap: callWrap,
  handleError: handleError,
  isArray: lib.isArray,
  keys: lib.keys,
  SafeString: SafeString,
  copySafeness: copySafeness,
  markSafe: markSafe,
  asyncEach: asyncEach,
  asyncAll: asyncAll,
  inOperator: lib.inOperator,
  fromIterator: fromIterator
};

/***/ }),

/***/ 8423:
/*!*******************************!*\
  !*** ./nunjucks/src/tests.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


function cov_1h3g8driop() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\tests.js";
  var hash = "0fd9cee2a4b23af1ea901b89caed008ea69446f6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\tests.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 17
        },
        end: {
          line: 3,
          column: 48
        }
      },
      "1": {
        start: {
          line: 11,
          column: 2
        },
        end: {
          line: 11,
          column: 37
        }
      },
      "2": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 28
        }
      },
      "3": {
        start: {
          line: 22,
          column: 2
        },
        end: {
          line: 22,
          column: 29
        }
      },
      "4": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "5": {
        start: {
          line: 35,
          column: 2
        },
        end: {
          line: 35,
          column: 27
        }
      },
      "6": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 34
        }
      },
      "7": {
        start: {
          line: 46,
          column: 2
        },
        end: {
          line: 46,
          column: 37
        }
      },
      "8": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 49,
          column: 26
        }
      },
      "9": {
        start: {
          line: 57,
          column: 2
        },
        end: {
          line: 57,
          column: 21
        }
      },
      "10": {
        start: {
          line: 60,
          column: 0
        },
        end: {
          line: 60,
          column: 26
        }
      },
      "11": {
        start: {
          line: 63,
          column: 0
        },
        end: {
          line: 63,
          column: 29
        }
      },
      "12": {
        start: {
          line: 64,
          column: 0
        },
        end: {
          line: 64,
          column: 33
        }
      },
      "13": {
        start: {
          line: 72,
          column: 2
        },
        end: {
          line: 72,
          column: 25
        }
      },
      "14": {
        start: {
          line: 75,
          column: 0
        },
        end: {
          line: 75,
          column: 20
        }
      },
      "15": {
        start: {
          line: 86,
          column: 2
        },
        end: {
          line: 86,
          column: 16
        }
      },
      "16": {
        start: {
          line: 89,
          column: 0
        },
        end: {
          line: 89,
          column: 22
        }
      },
      "17": {
        start: {
          line: 99,
          column: 2
        },
        end: {
          line: 99,
          column: 20
        }
      },
      "18": {
        start: {
          line: 102,
          column: 0
        },
        end: {
          line: 102,
          column: 16
        }
      },
      "19": {
        start: {
          line: 112,
          column: 2
        },
        end: {
          line: 112,
          column: 19
        }
      },
      "20": {
        start: {
          line: 115,
          column: 0
        },
        end: {
          line: 115,
          column: 34
        }
      },
      "21": {
        start: {
          line: 118,
          column: 0
        },
        end: {
          line: 118,
          column: 33
        }
      },
      "22": {
        start: {
          line: 128,
          column: 2
        },
        end: {
          line: 128,
          column: 20
        }
      },
      "23": {
        start: {
          line: 131,
          column: 0
        },
        end: {
          line: 131,
          column: 16
        }
      },
      "24": {
        start: {
          line: 141,
          column: 2
        },
        end: {
          line: 141,
          column: 19
        }
      },
      "25": {
        start: {
          line: 144,
          column: 0
        },
        end: {
          line: 144,
          column: 28
        }
      },
      "26": {
        start: {
          line: 147,
          column: 0
        },
        end: {
          line: 147,
          column: 30
        }
      },
      "27": {
        start: {
          line: 155,
          column: 2
        },
        end: {
          line: 155,
          column: 39
        }
      },
      "28": {
        start: {
          line: 158,
          column: 0
        },
        end: {
          line: 158,
          column: 22
        }
      },
      "29": {
        start: {
          line: 168,
          column: 2
        },
        end: {
          line: 168,
          column: 21
        }
      },
      "30": {
        start: {
          line: 171,
          column: 0
        },
        end: {
          line: 171,
          column: 16
        }
      },
      "31": {
        start: {
          line: 179,
          column: 2
        },
        end: {
          line: 179,
          column: 24
        }
      },
      "32": {
        start: {
          line: 182,
          column: 0
        },
        end: {
          line: 182,
          column: 24
        }
      },
      "33": {
        start: {
          line: 190,
          column: 2
        },
        end: {
          line: 190,
          column: 35
        }
      },
      "34": {
        start: {
          line: 193,
          column: 0
        },
        end: {
          line: 193,
          column: 24
        }
      },
      "35": {
        start: {
          line: 201,
          column: 2
        },
        end: {
          line: 201,
          column: 25
        }
      },
      "36": {
        start: {
          line: 204,
          column: 0
        },
        end: {
          line: 204,
          column: 18
        }
      },
      "37": {
        start: {
          line: 212,
          column: 2
        },
        end: {
          line: 212,
          column: 35
        }
      },
      "38": {
        start: {
          line: 215,
          column: 0
        },
        end: {
          line: 215,
          column: 24
        }
      },
      "39": {
        start: {
          line: 224,
          column: 2
        },
        end: {
          line: 224,
          column: 17
        }
      },
      "40": {
        start: {
          line: 227,
          column: 0
        },
        end: {
          line: 227,
          column: 24
        }
      },
      "41": {
        start: {
          line: 235,
          column: 2
        },
        end: {
          line: 235,
          column: 29
        }
      },
      "42": {
        start: {
          line: 238,
          column: 0
        },
        end: {
          line: 238,
          column: 34
        }
      },
      "43": {
        start: {
          line: 246,
          column: 2
        },
        end: {
          line: 246,
          column: 39
        }
      },
      "44": {
        start: {
          line: 249,
          column: 0
        },
        end: {
          line: 249,
          column: 22
        }
      },
      "45": {
        start: {
          line: 262,
          column: 2
        },
        end: {
          line: 266,
          column: 3
        }
      },
      "46": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 263,
          column: 36
        }
      },
      "47": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 265,
          column: 61
        }
      },
      "48": {
        start: {
          line: 269,
          column: 0
        },
        end: {
          line: 269,
          column: 28
        }
      },
      "49": {
        start: {
          line: 279,
          column: 13
        },
        end: {
          line: 282,
          column: 28
        }
      },
      "50": {
        start: {
          line: 283,
          column: 2
        },
        end: {
          line: 287,
          column: 3
        }
      },
      "51": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 284,
          column: 43
        }
      },
      "52": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 286,
          column: 16
        }
      },
      "53": {
        start: {
          line: 290,
          column: 0
        },
        end: {
          line: 290,
          column: 26
        }
      }
    },
    fnMap: {
      "0": {
        name: "callable",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 17
          }
        },
        loc: {
          start: {
            line: 10,
            column: 25
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "defined",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 16
          }
        },
        loc: {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 21
      },
      "2": {
        name: "divisibleby",
        decl: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 20
          }
        },
        loc: {
          start: {
            line: 34,
            column: 31
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 34
      },
      "3": {
        name: "escaped",
        decl: {
          start: {
            line: 45,
            column: 9
          },
          end: {
            line: 45,
            column: 16
          }
        },
        loc: {
          start: {
            line: 45,
            column: 24
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 45
      },
      "4": {
        name: "equalto",
        decl: {
          start: {
            line: 56,
            column: 9
          },
          end: {
            line: 56,
            column: 16
          }
        },
        loc: {
          start: {
            line: 56,
            column: 27
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 56
      },
      "5": {
        name: "even",
        decl: {
          start: {
            line: 71,
            column: 9
          },
          end: {
            line: 71,
            column: 13
          }
        },
        loc: {
          start: {
            line: 71,
            column: 21
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 71
      },
      "6": {
        name: "falsy",
        decl: {
          start: {
            line: 85,
            column: 9
          },
          end: {
            line: 85,
            column: 14
          }
        },
        loc: {
          start: {
            line: 85,
            column: 22
          },
          end: {
            line: 87,
            column: 1
          }
        },
        line: 85
      },
      "7": {
        name: "ge",
        decl: {
          start: {
            line: 98,
            column: 9
          },
          end: {
            line: 98,
            column: 11
          }
        },
        loc: {
          start: {
            line: 98,
            column: 22
          },
          end: {
            line: 100,
            column: 1
          }
        },
        line: 98
      },
      "8": {
        name: "greaterthan",
        decl: {
          start: {
            line: 111,
            column: 9
          },
          end: {
            line: 111,
            column: 20
          }
        },
        loc: {
          start: {
            line: 111,
            column: 31
          },
          end: {
            line: 113,
            column: 1
          }
        },
        line: 111
      },
      "9": {
        name: "le",
        decl: {
          start: {
            line: 127,
            column: 9
          },
          end: {
            line: 127,
            column: 11
          }
        },
        loc: {
          start: {
            line: 127,
            column: 22
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 127
      },
      "10": {
        name: "lessthan",
        decl: {
          start: {
            line: 140,
            column: 9
          },
          end: {
            line: 140,
            column: 17
          }
        },
        loc: {
          start: {
            line: 140,
            column: 28
          },
          end: {
            line: 142,
            column: 1
          }
        },
        line: 140
      },
      "11": {
        name: "lower",
        decl: {
          start: {
            line: 154,
            column: 9
          },
          end: {
            line: 154,
            column: 14
          }
        },
        loc: {
          start: {
            line: 154,
            column: 22
          },
          end: {
            line: 156,
            column: 1
          }
        },
        line: 154
      },
      "12": {
        name: "ne",
        decl: {
          start: {
            line: 167,
            column: 9
          },
          end: {
            line: 167,
            column: 11
          }
        },
        loc: {
          start: {
            line: 167,
            column: 22
          },
          end: {
            line: 169,
            column: 1
          }
        },
        line: 167
      },
      "13": {
        name: "nullTest",
        decl: {
          start: {
            line: 178,
            column: 9
          },
          end: {
            line: 178,
            column: 17
          }
        },
        loc: {
          start: {
            line: 178,
            column: 25
          },
          end: {
            line: 180,
            column: 1
          }
        },
        line: 178
      },
      "14": {
        name: "number",
        decl: {
          start: {
            line: 189,
            column: 9
          },
          end: {
            line: 189,
            column: 15
          }
        },
        loc: {
          start: {
            line: 189,
            column: 23
          },
          end: {
            line: 191,
            column: 1
          }
        },
        line: 189
      },
      "15": {
        name: "odd",
        decl: {
          start: {
            line: 200,
            column: 9
          },
          end: {
            line: 200,
            column: 12
          }
        },
        loc: {
          start: {
            line: 200,
            column: 20
          },
          end: {
            line: 202,
            column: 1
          }
        },
        line: 200
      },
      "16": {
        name: "string",
        decl: {
          start: {
            line: 211,
            column: 9
          },
          end: {
            line: 211,
            column: 15
          }
        },
        loc: {
          start: {
            line: 211,
            column: 23
          },
          end: {
            line: 213,
            column: 1
          }
        },
        line: 211
      },
      "17": {
        name: "truthy",
        decl: {
          start: {
            line: 223,
            column: 9
          },
          end: {
            line: 223,
            column: 15
          }
        },
        loc: {
          start: {
            line: 223,
            column: 23
          },
          end: {
            line: 225,
            column: 1
          }
        },
        line: 223
      },
      "18": {
        name: "undefinedTest",
        decl: {
          start: {
            line: 234,
            column: 9
          },
          end: {
            line: 234,
            column: 22
          }
        },
        loc: {
          start: {
            line: 234,
            column: 30
          },
          end: {
            line: 236,
            column: 1
          }
        },
        line: 234
      },
      "19": {
        name: "upper",
        decl: {
          start: {
            line: 245,
            column: 9
          },
          end: {
            line: 245,
            column: 14
          }
        },
        loc: {
          start: {
            line: 245,
            column: 22
          },
          end: {
            line: 247,
            column: 1
          }
        },
        line: 245
      },
      "20": {
        name: "iterable",
        decl: {
          start: {
            line: 261,
            column: 9
          },
          end: {
            line: 261,
            column: 17
          }
        },
        loc: {
          start: {
            line: 261,
            column: 25
          },
          end: {
            line: 267,
            column: 1
          }
        },
        line: 261
      },
      "21": {
        name: "mapping",
        decl: {
          start: {
            line: 277,
            column: 9
          },
          end: {
            line: 277,
            column: 16
          }
        },
        loc: {
          start: {
            line: 277,
            column: 24
          },
          end: {
            line: 288,
            column: 1
          }
        },
        line: 277
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 262,
            column: 2
          },
          end: {
            line: 266,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 2
          },
          end: {
            line: 266,
            column: 3
          }
        }, {
          start: {
            line: 264,
            column: 9
          },
          end: {
            line: 266,
            column: 3
          }
        }],
        line: 262
      },
      "1": {
        loc: {
          start: {
            line: 265,
            column: 11
          },
          end: {
            line: 265,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 265,
            column: 11
          },
          end: {
            line: 265,
            column: 31
          }
        }, {
          start: {
            line: 265,
            column: 35
          },
          end: {
            line: 265,
            column: 60
          }
        }],
        line: 265
      },
      "2": {
        loc: {
          start: {
            line: 279,
            column: 13
          },
          end: {
            line: 282,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 13
          },
          end: {
            line: 279,
            column: 27
          }
        }, {
          start: {
            line: 280,
            column: 7
          },
          end: {
            line: 280,
            column: 26
          }
        }, {
          start: {
            line: 281,
            column: 7
          },
          end: {
            line: 281,
            column: 32
          }
        }, {
          start: {
            line: 282,
            column: 7
          },
          end: {
            line: 282,
            column: 28
          }
        }],
        line: 279
      },
      "3": {
        loc: {
          start: {
            line: 283,
            column: 2
          },
          end: {
            line: 287,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 2
          },
          end: {
            line: 287,
            column: 3
          }
        }, {
          start: {
            line: 285,
            column: 9
          },
          end: {
            line: 287,
            column: 3
          }
        }],
        line: 283
      },
      "4": {
        loc: {
          start: {
            line: 284,
            column: 11
          },
          end: {
            line: 284,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 11
          },
          end: {
            line: 284,
            column: 15
          }
        }, {
          start: {
            line: 284,
            column: 19
          },
          end: {
            line: 284,
            column: 42
          }
        }],
        line: 284
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0fd9cee2a4b23af1ea901b89caed008ea69446f6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1h3g8driop = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1h3g8driop();
var SafeString = (cov_1h3g8driop().s[0]++, (__webpack_require__(/*! ./runtime */ 5434).SafeString));

/**
 * Returns `true` if the object is a function, otherwise `false`.
 * @param { any } value
 * @returns { boolean }
 */
function callable(value) {
  cov_1h3g8driop().f[0]++;
  cov_1h3g8driop().s[1]++;
  return typeof value === 'function';
}
cov_1h3g8driop().s[2]++;
exports.callable = callable;

/**
 * Returns `true` if the object is strictly not `undefined`.
 * @param { any } value
 * @returns { boolean }
 */
function defined(value) {
  cov_1h3g8driop().f[1]++;
  cov_1h3g8driop().s[3]++;
  return value !== undefined;
}
cov_1h3g8driop().s[4]++;
exports.defined = defined;

/**
 * Returns `true` if the operand (one) is divisble by the test's argument
 * (two).
 * @param { number } one
 * @param { number } two
 * @returns { boolean }
 */
function divisibleby(one, two) {
  cov_1h3g8driop().f[2]++;
  cov_1h3g8driop().s[5]++;
  return one % two === 0;
}
cov_1h3g8driop().s[6]++;
exports.divisibleby = divisibleby;

/**
 * Returns true if the string has been escaped (i.e., is a SafeString).
 * @param { any } value
 * @returns { boolean }
 */
function escaped(value) {
  cov_1h3g8driop().f[3]++;
  cov_1h3g8driop().s[7]++;
  return value instanceof SafeString;
}
cov_1h3g8driop().s[8]++;
exports.escaped = escaped;

/**
 * Returns `true` if the arguments are strictly equal.
 * @param { any } one
 * @param { any } two
 */
function equalto(one, two) {
  cov_1h3g8driop().f[4]++;
  cov_1h3g8driop().s[9]++;
  return one === two;
}
cov_1h3g8driop().s[10]++;
exports.equalto = equalto;

// Aliases
cov_1h3g8driop().s[11]++;
exports.eq = exports.equalto;
cov_1h3g8driop().s[12]++;
exports.sameas = exports.equalto;

/**
 * Returns `true` if the value is evenly divisible by 2.
 * @param { number } value
 * @returns { boolean }
 */
function even(value) {
  cov_1h3g8driop().f[5]++;
  cov_1h3g8driop().s[13]++;
  return value % 2 === 0;
}
cov_1h3g8driop().s[14]++;
exports.even = even;

/**
 * Returns `true` if the value is falsy - if I recall correctly, '', 0, false,
 * undefined, NaN or null. I don't know if we should stick to the default JS
 * behavior or attempt to replicate what Python believes should be falsy (i.e.,
 * empty arrays, empty dicts, not 0...).
 * @param { any } value
 * @returns { boolean }
 */
function falsy(value) {
  cov_1h3g8driop().f[6]++;
  cov_1h3g8driop().s[15]++;
  return !value;
}
cov_1h3g8driop().s[16]++;
exports.falsy = falsy;

/**
 * Returns `true` if the operand (one) is greater or equal to the test's
 * argument (two).
 * @param { number } one
 * @param { number } two
 * @returns { boolean }
 */
function ge(one, two) {
  cov_1h3g8driop().f[7]++;
  cov_1h3g8driop().s[17]++;
  return one >= two;
}
cov_1h3g8driop().s[18]++;
exports.ge = ge;

/**
 * Returns `true` if the operand (one) is greater than the test's argument
 * (two).
 * @param { number } one
 * @param { number } two
 * @returns { boolean }
 */
function greaterthan(one, two) {
  cov_1h3g8driop().f[8]++;
  cov_1h3g8driop().s[19]++;
  return one > two;
}
cov_1h3g8driop().s[20]++;
exports.greaterthan = greaterthan;

// alias
cov_1h3g8driop().s[21]++;
exports.gt = exports.greaterthan;

/**
 * Returns `true` if the operand (one) is less than or equal to the test's
 * argument (two).
 * @param { number } one
 * @param { number } two
 * @returns { boolean }
 */
function le(one, two) {
  cov_1h3g8driop().f[9]++;
  cov_1h3g8driop().s[22]++;
  return one <= two;
}
cov_1h3g8driop().s[23]++;
exports.le = le;

/**
 * Returns `true` if the operand (one) is less than the test's passed argument
 * (two).
 * @param { number } one
 * @param { number } two
 * @returns { boolean }
 */
function lessthan(one, two) {
  cov_1h3g8driop().f[10]++;
  cov_1h3g8driop().s[24]++;
  return one < two;
}
cov_1h3g8driop().s[25]++;
exports.lessthan = lessthan;

// alias
cov_1h3g8driop().s[26]++;
exports.lt = exports.lessthan;

/**
 * Returns `true` if the string is lowercased.
 * @param { string } value
 * @returns { boolean }
 */
function lower(value) {
  cov_1h3g8driop().f[11]++;
  cov_1h3g8driop().s[27]++;
  return value.toLowerCase() === value;
}
cov_1h3g8driop().s[28]++;
exports.lower = lower;

/**
 * Returns `true` if the operand (one) is less than or equal to the test's
 * argument (two).
 * @param { number } one
 * @param { number } two
 * @returns { boolean }
 */
function ne(one, two) {
  cov_1h3g8driop().f[12]++;
  cov_1h3g8driop().s[29]++;
  return one !== two;
}
cov_1h3g8driop().s[30]++;
exports.ne = ne;

/**
 * Returns true if the value is strictly equal to `null`.
 * @param { any }
 * @returns { boolean }
 */
function nullTest(value) {
  cov_1h3g8driop().f[13]++;
  cov_1h3g8driop().s[31]++;
  return value === null;
}
cov_1h3g8driop().s[32]++;
exports["null"] = nullTest;

/**
 * Returns true if value is a number.
 * @param { any }
 * @returns { boolean }
 */
function number(value) {
  cov_1h3g8driop().f[14]++;
  cov_1h3g8driop().s[33]++;
  return typeof value === 'number';
}
cov_1h3g8driop().s[34]++;
exports.number = number;

/**
 * Returns `true` if the value is *not* evenly divisible by 2.
 * @param { number } value
 * @returns { boolean }
 */
function odd(value) {
  cov_1h3g8driop().f[15]++;
  cov_1h3g8driop().s[35]++;
  return value % 2 === 1;
}
cov_1h3g8driop().s[36]++;
exports.odd = odd;

/**
 * Returns `true` if the value is a string, `false` if not.
 * @param { any } value
 * @returns { boolean }
 */
function string(value) {
  cov_1h3g8driop().f[16]++;
  cov_1h3g8driop().s[37]++;
  return typeof value === 'string';
}
cov_1h3g8driop().s[38]++;
exports.string = string;

/**
 * Returns `true` if the value is not in the list of things considered falsy:
 * '', null, undefined, 0, NaN and false.
 * @param { any } value
 * @returns { boolean }
 */
function truthy(value) {
  cov_1h3g8driop().f[17]++;
  cov_1h3g8driop().s[39]++;
  return !!value;
}
cov_1h3g8driop().s[40]++;
exports.truthy = truthy;

/**
 * Returns `true` if the value is undefined.
 * @param { any } value
 * @returns { boolean }
 */
function undefinedTest(value) {
  cov_1h3g8driop().f[18]++;
  cov_1h3g8driop().s[41]++;
  return value === undefined;
}
cov_1h3g8driop().s[42]++;
exports.undefined = undefinedTest;

/**
 * Returns `true` if the string is uppercased.
 * @param { string } value
 * @returns { boolean }
 */
function upper(value) {
  cov_1h3g8driop().f[19]++;
  cov_1h3g8driop().s[43]++;
  return value.toUpperCase() === value;
}
cov_1h3g8driop().s[44]++;
exports.upper = upper;

/**
 * If ES6 features are available, returns `true` if the value implements the
 * `Symbol.iterator` method. If not, it's a string or Array.
 *
 * Could potentially cause issues if a browser exists that has Set and Map but
 * not Symbol.
 *
 * @param { any } value
 * @returns { boolean }
 */
function iterable(value) {
  cov_1h3g8driop().f[20]++;
  cov_1h3g8driop().s[45]++;
  if (typeof Symbol !== 'undefined') {
    cov_1h3g8driop().b[0][0]++;
    cov_1h3g8driop().s[46]++;
    return !!value[Symbol.iterator];
  } else {
    cov_1h3g8driop().b[0][1]++;
    cov_1h3g8driop().s[47]++;
    return (cov_1h3g8driop().b[1][0]++, Array.isArray(value)) || (cov_1h3g8driop().b[1][1]++, typeof value === 'string');
  }
}
cov_1h3g8driop().s[48]++;
exports.iterable = iterable;

/**
 * If ES6 features are available, returns `true` if the value is an object hash
 * or an ES6 Map. Otherwise just return if it's an object hash.
 * @param { any } value
 * @returns { boolean }
 */
function mapping(value) {
  cov_1h3g8driop().f[21]++;
  // only maps and object hashes
  var bool = (cov_1h3g8driop().s[49]++, (cov_1h3g8driop().b[2][0]++, value !== null) && (cov_1h3g8driop().b[2][1]++, value !== undefined) && (cov_1h3g8driop().b[2][2]++, typeof value === 'object') && (cov_1h3g8driop().b[2][3]++, !Array.isArray(value)));
  cov_1h3g8driop().s[50]++;
  if (Set) {
    cov_1h3g8driop().b[3][0]++;
    cov_1h3g8driop().s[51]++;
    return (cov_1h3g8driop().b[4][0]++, bool) && (cov_1h3g8driop().b[4][1]++, !(value instanceof Set));
  } else {
    cov_1h3g8driop().b[3][1]++;
    cov_1h3g8driop().s[52]++;
    return bool;
  }
}
cov_1h3g8driop().s[53]++;
exports.mapping = mapping;

/***/ }),

/***/ 1333:
/*!*************************************!*\
  !*** ./nunjucks/src/transformer.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function cov_1v5k93erme() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\transformer.js";
  var hash = "7e648f6bee9962de213de0855489d8cf872355b5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\transformer.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 30
        }
      },
      "1": {
        start: {
          line: 4,
          column: 10
        },
        end: {
          line: 4,
          column: 26
        }
      },
      "2": {
        start: {
          line: 6,
          column: 10
        },
        end: {
          line: 6,
          column: 11
        }
      },
      "3": {
        start: {
          line: 8,
          column: 2
        },
        end: {
          line: 8,
          column: 25
        }
      },
      "4": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 16
        }
      },
      "5": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "6": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 16
        }
      },
      "7": {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 29
        }
      },
      "8": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "9": {
        start: {
          line: 18,
          column: 6
        },
        end: {
          line: 20,
          column: 7
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 26
        }
      },
      "11": {
        start: {
          line: 22,
          column: 6
        },
        end: {
          line: 22,
          column: 20
        }
      },
      "12": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 26,
          column: 20
        }
      },
      "13": {
        start: {
          line: 30,
          column: 2
        },
        end: {
          line: 32,
          column: 3
        }
      },
      "14": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 15
        }
      },
      "15": {
        start: {
          line: 34,
          column: 2
        },
        end: {
          line: 40,
          column: 3
        }
      },
      "16": {
        start: {
          line: 35,
          column: 17
        },
        end: {
          line: 35,
          column: 26
        }
      },
      "17": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "18": {
        start: {
          line: 38,
          column: 6
        },
        end: {
          line: 38,
          column: 18
        }
      },
      "19": {
        start: {
          line: 42,
          column: 2
        },
        end: {
          line: 65,
          column: 3
        }
      },
      "20": {
        start: {
          line: 43,
          column: 21
        },
        end: {
          line: 43,
          column: 81
        }
      },
      "21": {
        start: {
          line: 43,
          column: 52
        },
        end: {
          line: 43,
          column: 80
        }
      },
      "22": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "23": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 46,
          column: 69
        }
      },
      "24": {
        start: {
          line: 48,
          column: 9
        },
        end: {
          line: 65,
          column: 3
        }
      },
      "25": {
        start: {
          line: 49,
          column: 17
        },
        end: {
          line: 49,
          column: 49
        }
      },
      "26": {
        start: {
          line: 50,
          column: 24
        },
        end: {
          line: 50,
          column: 87
        }
      },
      "27": {
        start: {
          line: 50,
          column: 58
        },
        end: {
          line: 50,
          column: 86
        }
      },
      "28": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "29": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 53,
          column: 78
        }
      },
      "30": {
        start: {
          line: 56,
          column: 18
        },
        end: {
          line: 56,
          column: 55
        }
      },
      "31": {
        start: {
          line: 56,
          column: 44
        },
        end: {
          line: 56,
          column: 54
        }
      },
      "32": {
        start: {
          line: 57,
          column: 19
        },
        end: {
          line: 57,
          column: 72
        }
      },
      "33": {
        start: {
          line: 57,
          column: 43
        },
        end: {
          line: 57,
          column: 71
        }
      },
      "34": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "35": {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 60,
          column: 59
        }
      },
      "36": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "37": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 34
        }
      },
      "38": {
        start: {
          line: 67,
          column: 2
        },
        end: {
          line: 67,
          column: 47
        }
      },
      "39": {
        start: {
          line: 71,
          column: 2
        },
        end: {
          line: 71,
          column: 31
        }
      },
      "40": {
        start: {
          line: 75,
          column: 17
        },
        end: {
          line: 75,
          column: 19
        }
      },
      "41": {
        start: {
          line: 77,
          column: 15
        },
        end: {
          line: 95,
          column: 4
        }
      },
      "42": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "43": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 80,
          column: 22
        }
      },
      "44": {
        start: {
          line: 81,
          column: 11
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "45": {
        start: {
          line: 84,
          column: 6
        },
        end: {
          line: 86,
          column: 18
        }
      },
      "46": {
        start: {
          line: 88,
          column: 6
        },
        end: {
          line: 92,
          column: 17
        }
      },
      "47": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 94,
          column: 18
        }
      },
      "48": {
        start: {
          line: 97,
          column: 2
        },
        end: {
          line: 101,
          column: 3
        }
      },
      "49": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 24
        }
      },
      "50": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 100,
          column: 18
        }
      },
      "51": {
        start: {
          line: 103,
          column: 2
        },
        end: {
          line: 113,
          column: 3
        }
      },
      "52": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 24
        }
      },
      "53": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 110,
          column: 6
        }
      },
      "54": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 16
        }
      },
      "55": {
        start: {
          line: 117,
          column: 2
        },
        end: {
          line: 131,
          column: 5
        }
      },
      "56": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "57": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 119,
          column: 46
        }
      },
      "58": {
        start: {
          line: 120,
          column: 11
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "59": {
        start: {
          line: 121,
          column: 6
        },
        end: {
          line: 121,
          column: 55
        }
      },
      "60": {
        start: {
          line: 122,
          column: 11
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "61": {
        start: {
          line: 123,
          column: 6
        },
        end: {
          line: 123,
          column: 53
        }
      },
      "62": {
        start: {
          line: 124,
          column: 11
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "63": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 125,
          column: 54
        }
      },
      "64": {
        start: {
          line: 126,
          column: 11
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "65": {
        start: {
          line: 127,
          column: 6
        },
        end: {
          line: 127,
          column: 54
        }
      },
      "66": {
        start: {
          line: 129,
          column: 6
        },
        end: {
          line: 129,
          column: 23
        }
      },
      "67": {
        start: {
          line: 135,
          column: 2
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "68": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "69": {
        start: {
          line: 137,
          column: 6
        },
        end: {
          line: 137,
          column: 13
        }
      },
      "70": {
        start: {
          line: 140,
          column: 19
        },
        end: {
          line: 140,
          column: 24
        }
      },
      "71": {
        start: {
          line: 141,
          column: 19
        },
        end: {
          line: 141,
          column: 27
        }
      },
      "72": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 148,
          column: 7
        }
      },
      "73": {
        start: {
          line: 144,
          column: 6
        },
        end: {
          line: 147,
          column: 7
        }
      },
      "74": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 24
        }
      },
      "75": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 65
        }
      },
      "76": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "77": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "78": {
        start: {
          line: 159,
          column: 2
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "79": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "80": {
        start: {
          line: 161,
          column: 6
        },
        end: {
          line: 161,
          column: 23
        }
      },
      "81": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 21
        }
      },
      "82": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 176,
          column: 7
        }
      },
      "83": {
        start: {
          line: 166,
          column: 6
        },
        end: {
          line: 174,
          column: 7
        }
      },
      "84": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 21
        }
      },
      "85": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 21
        }
      },
      "86": {
        start: {
          line: 175,
          column: 6
        },
        end: {
          line: 175,
          column: 23
        }
      },
      "87": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 197,
          column: 5
        }
      },
      "88": {
        start: {
          line: 179,
          column: 6
        },
        end: {
          line: 196,
          column: 7
        }
      },
      "89": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 186,
          column: 10
        }
      },
      "90": {
        start: {
          line: 187,
          column: 13
        },
        end: {
          line: 196,
          column: 7
        }
      },
      "91": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 195,
          column: 10
        }
      },
      "92": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 198,
          column: 21
        }
      },
      "93": {
        start: {
          line: 203,
          column: 2
        },
        end: {
          line: 203,
          column: 70
        }
      },
      "94": {
        start: {
          line: 207,
          column: 2
        },
        end: {
          line: 207,
          column: 38
        }
      },
      "95": {
        start: {
          line: 215,
          column: 0
        },
        end: {
          line: 217,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "gensym",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 15
          }
        },
        loc: {
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "mapCOW",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 15
          }
        },
        loc: {
          start: {
            line: 12,
            column: 27
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "walk",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 13
          }
        },
        loc: {
          start: {
            line: 29,
            column: 37
          },
          end: {
            line: 68,
            column: 1
          }
        },
        line: 29
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 43,
            column: 42
          },
          end: {
            line: 43,
            column: 43
          }
        },
        loc: {
          start: {
            line: 43,
            column: 52
          },
          end: {
            line: 43,
            column: 80
          }
        },
        line: 43
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 50,
            column: 48
          },
          end: {
            line: 50,
            column: 49
          }
        },
        loc: {
          start: {
            line: 50,
            column: 58
          },
          end: {
            line: 50,
            column: 86
          }
        },
        line: 50
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 56,
            column: 33
          },
          end: {
            line: 56,
            column: 34
          }
        },
        loc: {
          start: {
            line: 56,
            column: 44
          },
          end: {
            line: 56,
            column: 54
          }
        },
        line: 56
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 57,
            column: 33
          },
          end: {
            line: 57,
            column: 34
          }
        },
        loc: {
          start: {
            line: 57,
            column: 43
          },
          end: {
            line: 57,
            column: 71
          }
        },
        line: 57
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 61,
            column: 21
          },
          end: {
            line: 61,
            column: 22
          }
        },
        loc: {
          start: {
            line: 61,
            column: 34
          },
          end: {
            line: 63,
            column: 7
          }
        },
        line: 61
      },
      "8": {
        name: "depthWalk",
        decl: {
          start: {
            line: 70,
            column: 9
          },
          end: {
            line: 70,
            column: 18
          }
        },
        loc: {
          start: {
            line: 70,
            column: 30
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 70
      },
      "9": {
        name: "_liftFilters",
        decl: {
          start: {
            line: 74,
            column: 9
          },
          end: {
            line: 74,
            column: 21
          }
        },
        loc: {
          start: {
            line: 74,
            column: 48
          },
          end: {
            line: 114,
            column: 1
          }
        },
        line: 74
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 77,
            column: 51
          },
          end: {
            line: 77,
            column: 52
          }
        },
        loc: {
          start: {
            line: 77,
            column: 65
          },
          end: {
            line: 95,
            column: 3
          }
        },
        line: 77
      },
      "11": {
        name: "liftFilters",
        decl: {
          start: {
            line: 116,
            column: 9
          },
          end: {
            line: 116,
            column: 20
          }
        },
        loc: {
          start: {
            line: 116,
            column: 40
          },
          end: {
            line: 132,
            column: 1
          }
        },
        line: 116
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 117,
            column: 24
          },
          end: {
            line: 117,
            column: 25
          }
        },
        loc: {
          start: {
            line: 117,
            column: 34
          },
          end: {
            line: 131,
            column: 3
          }
        },
        line: 117
      },
      "13": {
        name: "liftSuper",
        decl: {
          start: {
            line: 134,
            column: 9
          },
          end: {
            line: 134,
            column: 18
          }
        },
        loc: {
          start: {
            line: 134,
            column: 24
          },
          end: {
            line: 156,
            column: 1
          }
        },
        line: 134
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 135,
            column: 19
          },
          end: {
            line: 135,
            column: 20
          }
        },
        loc: {
          start: {
            line: 135,
            column: 34
          },
          end: {
            line: 155,
            column: 3
          }
        },
        line: 135
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 143,
            column: 42
          },
          end: {
            line: 143,
            column: 43
          }
        },
        loc: {
          start: {
            line: 143,
            column: 52
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 143
      },
      "16": {
        name: "convertStatements",
        decl: {
          start: {
            line: 158,
            column: 9
          },
          end: {
            line: 158,
            column: 26
          }
        },
        loc: {
          start: {
            line: 158,
            column: 32
          },
          end: {
            line: 200,
            column: 1
          }
        },
        line: 158
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 159,
            column: 24
          },
          end: {
            line: 159,
            column: 25
          }
        },
        loc: {
          start: {
            line: 159,
            column: 34
          },
          end: {
            line: 199,
            column: 3
          }
        },
        line: 159
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 165,
            column: 15
          },
          end: {
            line: 165,
            column: 16
          }
        },
        loc: {
          start: {
            line: 165,
            column: 26
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 165
      },
      "19": {
        name: "cps",
        decl: {
          start: {
            line: 202,
            column: 9
          },
          end: {
            line: 202,
            column: 12
          }
        },
        loc: {
          start: {
            line: 202,
            column: 32
          },
          end: {
            line: 204,
            column: 1
          }
        },
        line: 202
      },
      "20": {
        name: "transform",
        decl: {
          start: {
            line: 206,
            column: 9
          },
          end: {
            line: 206,
            column: 18
          }
        },
        loc: {
          start: {
            line: 206,
            column: 38
          },
          end: {
            line: 208,
            column: 1
          }
        },
        line: 206
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 6
          },
          end: {
            line: 20,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 6
          },
          end: {
            line: 20,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 19
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 12
          }
        }, {
          start: {
            line: 26,
            column: 16
          },
          end: {
            line: 26,
            column: 19
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 32,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 32,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 2
          },
          end: {
            line: 40,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 2
          },
          end: {
            line: 40,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "5": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "6": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 12
          }
        }, {
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 37,
            column: 28
          }
        }],
        line: 37
      },
      "7": {
        loc: {
          start: {
            line: 42,
            column: 2
          },
          end: {
            line: 65,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 2
          },
          end: {
            line: 65,
            column: 3
          }
        }, {
          start: {
            line: 48,
            column: 9
          },
          end: {
            line: 65,
            column: 3
          }
        }],
        line: 42
      },
      "8": {
        loc: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "9": {
        loc: {
          start: {
            line: 48,
            column: 9
          },
          end: {
            line: 65,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 9
          },
          end: {
            line: 65,
            column: 3
          }
        }, {
          start: {
            line: 55,
            column: 9
          },
          end: {
            line: 65,
            column: 3
          }
        }],
        line: 48
      },
      "10": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "11": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 25
          }
        }, {
          start: {
            line: 52,
            column: 29
          },
          end: {
            line: 52,
            column: 60
          }
        }],
        line: 52
      },
      "12": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "13": {
        loc: {
          start: {
            line: 67,
            column: 9
          },
          end: {
            line: 67,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 23
          },
          end: {
            line: 67,
            column: 39
          }
        }, {
          start: {
            line: 67,
            column: 43
          },
          end: {
            line: 67,
            column: 46
          }
        }],
        line: 67
      },
      "14": {
        loc: {
          start: {
            line: 67,
            column: 23
          },
          end: {
            line: 67,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 23
          },
          end: {
            line: 67,
            column: 32
          }
        }, {
          start: {
            line: 67,
            column: 36
          },
          end: {
            line: 67,
            column: 39
          }
        }],
        line: 67
      },
      "15": {
        loc: {
          start: {
            line: 77,
            column: 25
          },
          end: {
            line: 77,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 32
          },
          end: {
            line: 77,
            column: 42
          }
        }, {
          start: {
            line: 77,
            column: 45
          },
          end: {
            line: 77,
            column: 49
          }
        }],
        line: 77
      },
      "16": {
        loc: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        }, {
          start: {
            line: 81,
            column: 11
          },
          end: {
            line: 93,
            column: 5
          }
        }],
        line: 79
      },
      "17": {
        loc: {
          start: {
            line: 81,
            column: 11
          },
          end: {
            line: 93,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 11
          },
          end: {
            line: 93,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "18": {
        loc: {
          start: {
            line: 81,
            column: 15
          },
          end: {
            line: 83,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 81,
            column: 48
          }
        }, {
          start: {
            line: 82,
            column: 6
          },
          end: {
            line: 82,
            column: 59
          }
        }, {
          start: {
            line: 83,
            column: 6
          },
          end: {
            line: 83,
            column: 50
          }
        }],
        line: 81
      },
      "19": {
        loc: {
          start: {
            line: 97,
            column: 2
          },
          end: {
            line: 101,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 2
          },
          end: {
            line: 101,
            column: 3
          }
        }, {
          start: {
            line: 99,
            column: 9
          },
          end: {
            line: 101,
            column: 3
          }
        }],
        line: 97
      },
      "20": {
        loc: {
          start: {
            line: 103,
            column: 2
          },
          end: {
            line: 113,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 2
          },
          end: {
            line: 113,
            column: 3
          }
        }, {
          start: {
            line: 111,
            column: 9
          },
          end: {
            line: 113,
            column: 3
          }
        }],
        line: 103
      },
      "21": {
        loc: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        }, {
          start: {
            line: 120,
            column: 11
          },
          end: {
            line: 130,
            column: 5
          }
        }],
        line: 118
      },
      "22": {
        loc: {
          start: {
            line: 120,
            column: 11
          },
          end: {
            line: 130,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 11
          },
          end: {
            line: 130,
            column: 5
          }
        }, {
          start: {
            line: 122,
            column: 11
          },
          end: {
            line: 130,
            column: 5
          }
        }],
        line: 120
      },
      "23": {
        loc: {
          start: {
            line: 122,
            column: 11
          },
          end: {
            line: 130,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 11
          },
          end: {
            line: 130,
            column: 5
          }
        }, {
          start: {
            line: 124,
            column: 11
          },
          end: {
            line: 130,
            column: 5
          }
        }],
        line: 122
      },
      "24": {
        loc: {
          start: {
            line: 124,
            column: 11
          },
          end: {
            line: 130,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 11
          },
          end: {
            line: 130,
            column: 5
          }
        }, {
          start: {
            line: 126,
            column: 11
          },
          end: {
            line: 130,
            column: 5
          }
        }],
        line: 124
      },
      "25": {
        loc: {
          start: {
            line: 126,
            column: 11
          },
          end: {
            line: 130,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 11
          },
          end: {
            line: 130,
            column: 5
          }
        }, {
          start: {
            line: 128,
            column: 11
          },
          end: {
            line: 130,
            column: 5
          }
        }],
        line: 126
      },
      "26": {
        loc: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 138,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 138,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "27": {
        loc: {
          start: {
            line: 144,
            column: 6
          },
          end: {
            line: 147,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 6
          },
          end: {
            line: 147,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "28": {
        loc: {
          start: {
            line: 144,
            column: 10
          },
          end: {
            line: 144,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 10
          },
          end: {
            line: 144,
            column: 39
          }
        }, {
          start: {
            line: 144,
            column: 43
          },
          end: {
            line: 144,
            column: 70
          }
        }],
        line: 144
      },
      "29": {
        loc: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "30": {
        loc: {
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "31": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 160,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 160,
            column: 35
          }
        }, {
          start: {
            line: 160,
            column: 39
          },
          end: {
            line: 160,
            column: 67
          }
        }],
        line: 160
      },
      "32": {
        loc: {
          start: {
            line: 166,
            column: 6
          },
          end: {
            line: 174,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 6
          },
          end: {
            line: 174,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "33": {
        loc: {
          start: {
            line: 166,
            column: 10
          },
          end: {
            line: 170,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 10
          },
          end: {
            line: 166,
            column: 44
          }
        }, {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 167,
            column: 38
          }
        }, {
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 168,
            column: 40
          }
        }, {
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 169,
            column: 39
          }
        }, {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 170,
            column: 49
          }
        }],
        line: 166
      },
      "34": {
        loc: {
          start: {
            line: 178,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "35": {
        loc: {
          start: {
            line: 179,
            column: 6
          },
          end: {
            line: 196,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 6
          },
          end: {
            line: 196,
            column: 7
          }
        }, {
          start: {
            line: 187,
            column: 13
          },
          end: {
            line: 196,
            column: 7
          }
        }],
        line: 179
      },
      "36": {
        loc: {
          start: {
            line: 187,
            column: 13
          },
          end: {
            line: 196,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 13
          },
          end: {
            line: 196,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "37": {
        loc: {
          start: {
            line: 187,
            column: 17
          },
          end: {
            line: 187,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 17
          },
          end: {
            line: 187,
            column: 42
          }
        }, {
          start: {
            line: 187,
            column: 46
          },
          end: {
            line: 187,
            column: 79
          }
        }],
        line: 187
      },
      "38": {
        loc: {
          start: {
            line: 207,
            column: 18
          },
          end: {
            line: 207,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 18
          },
          end: {
            line: 207,
            column: 30
          }
        }, {
          start: {
            line: 207,
            column: 34
          },
          end: {
            line: 207,
            column: 36
          }
        }],
        line: 207
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0, 0, 0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7e648f6bee9962de213de0855489d8cf872355b5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1v5k93erme = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1v5k93erme();
var nodes = (cov_1v5k93erme().s[0]++, __webpack_require__(/*! ./nodes */ 8883));
var lib = (cov_1v5k93erme().s[1]++, __webpack_require__(/*! ./lib */ 449));
var sym = (cov_1v5k93erme().s[2]++, 0);
function gensym() {
  cov_1v5k93erme().f[0]++;
  cov_1v5k93erme().s[3]++;
  return 'hole_' + sym++;
}

// copy-on-write version of map
function mapCOW(arr, func) {
  cov_1v5k93erme().f[1]++;
  var res = (cov_1v5k93erme().s[4]++, null);
  cov_1v5k93erme().s[5]++;
  for (let i = (cov_1v5k93erme().s[6]++, 0); i < arr.length; i++) {
    const item = (cov_1v5k93erme().s[7]++, func(arr[i]));
    cov_1v5k93erme().s[8]++;
    if (item !== arr[i]) {
      cov_1v5k93erme().b[0][0]++;
      cov_1v5k93erme().s[9]++;
      if (!res) {
        cov_1v5k93erme().b[1][0]++;
        cov_1v5k93erme().s[10]++;
        res = arr.slice();
      } else {
        cov_1v5k93erme().b[1][1]++;
      }
      cov_1v5k93erme().s[11]++;
      res[i] = item;
    } else {
      cov_1v5k93erme().b[0][1]++;
    }
  }
  cov_1v5k93erme().s[12]++;
  return (cov_1v5k93erme().b[2][0]++, res) || (cov_1v5k93erme().b[2][1]++, arr);
}
function walk(ast, func, depthFirst) {
  cov_1v5k93erme().f[2]++;
  cov_1v5k93erme().s[13]++;
  if (!(ast instanceof nodes.Node)) {
    cov_1v5k93erme().b[3][0]++;
    cov_1v5k93erme().s[14]++;
    return ast;
  } else {
    cov_1v5k93erme().b[3][1]++;
  }
  cov_1v5k93erme().s[15]++;
  if (!depthFirst) {
    cov_1v5k93erme().b[4][0]++;
    const astT = (cov_1v5k93erme().s[16]++, func(ast));
    cov_1v5k93erme().s[17]++;
    if ((cov_1v5k93erme().b[6][0]++, astT) && (cov_1v5k93erme().b[6][1]++, astT !== ast)) {
      cov_1v5k93erme().b[5][0]++;
      cov_1v5k93erme().s[18]++;
      return astT;
    } else {
      cov_1v5k93erme().b[5][1]++;
    }
  } else {
    cov_1v5k93erme().b[4][1]++;
  }
  cov_1v5k93erme().s[19]++;
  if (ast instanceof nodes.NodeList) {
    cov_1v5k93erme().b[7][0]++;
    const children = (cov_1v5k93erme().s[20]++, mapCOW(ast.children, node => {
      cov_1v5k93erme().f[3]++;
      cov_1v5k93erme().s[21]++;
      return walk(node, func, depthFirst);
    }));
    cov_1v5k93erme().s[22]++;
    if (children !== ast.children) {
      cov_1v5k93erme().b[8][0]++;
      cov_1v5k93erme().s[23]++;
      ast = new nodes[ast.typename](ast.lineno, ast.colno, children);
    } else {
      cov_1v5k93erme().b[8][1]++;
    }
  } else {
    cov_1v5k93erme().b[7][1]++;
    cov_1v5k93erme().s[24]++;
    if (ast instanceof nodes.CallExtension) {
      cov_1v5k93erme().b[9][0]++;
      const args = (cov_1v5k93erme().s[25]++, walk(ast.args, func, depthFirst));
      const contentArgs = (cov_1v5k93erme().s[26]++, mapCOW(ast.contentArgs, node => {
        cov_1v5k93erme().f[4]++;
        cov_1v5k93erme().s[27]++;
        return walk(node, func, depthFirst);
      }));
      cov_1v5k93erme().s[28]++;
      if ((cov_1v5k93erme().b[11][0]++, args !== ast.args) || (cov_1v5k93erme().b[11][1]++, contentArgs !== ast.contentArgs)) {
        cov_1v5k93erme().b[10][0]++;
        cov_1v5k93erme().s[29]++;
        ast = new nodes[ast.typename](ast.extName, ast.prop, args, contentArgs);
      } else {
        cov_1v5k93erme().b[10][1]++;
      }
    } else {
      cov_1v5k93erme().b[9][1]++;
      const props = (cov_1v5k93erme().s[30]++, ast.fields.map(field => {
        cov_1v5k93erme().f[5]++;
        cov_1v5k93erme().s[31]++;
        return ast[field];
      }));
      const propsT = (cov_1v5k93erme().s[32]++, mapCOW(props, prop => {
        cov_1v5k93erme().f[6]++;
        cov_1v5k93erme().s[33]++;
        return walk(prop, func, depthFirst);
      }));
      cov_1v5k93erme().s[34]++;
      if (propsT !== props) {
        cov_1v5k93erme().b[12][0]++;
        cov_1v5k93erme().s[35]++;
        ast = new nodes[ast.typename](ast.lineno, ast.colno);
        cov_1v5k93erme().s[36]++;
        propsT.forEach((prop, i) => {
          cov_1v5k93erme().f[7]++;
          cov_1v5k93erme().s[37]++;
          ast[ast.fields[i]] = prop;
        });
      } else {
        cov_1v5k93erme().b[12][1]++;
      }
    }
  }
  cov_1v5k93erme().s[38]++;
  return depthFirst ? (cov_1v5k93erme().b[13][0]++, (cov_1v5k93erme().b[14][0]++, func(ast)) || (cov_1v5k93erme().b[14][1]++, ast)) : (cov_1v5k93erme().b[13][1]++, ast);
}
function depthWalk(ast, func) {
  cov_1v5k93erme().f[8]++;
  cov_1v5k93erme().s[39]++;
  return walk(ast, func, true);
}
function _liftFilters(node, asyncFilters, prop) {
  cov_1v5k93erme().f[9]++;
  var children = (cov_1v5k93erme().s[40]++, []);
  var walked = (cov_1v5k93erme().s[41]++, depthWalk(prop ? (cov_1v5k93erme().b[15][0]++, node[prop]) : (cov_1v5k93erme().b[15][1]++, node), descNode => {
    cov_1v5k93erme().f[10]++;
    let symbol;
    cov_1v5k93erme().s[42]++;
    if (descNode instanceof nodes.Block) {
      cov_1v5k93erme().b[16][0]++;
      cov_1v5k93erme().s[43]++;
      return descNode;
    } else {
      cov_1v5k93erme().b[16][1]++;
      cov_1v5k93erme().s[44]++;
      if ((cov_1v5k93erme().b[18][0]++, descNode instanceof nodes.Filter) && (cov_1v5k93erme().b[18][1]++, lib.indexOf(asyncFilters, descNode.name.value) !== -1) || (cov_1v5k93erme().b[18][2]++, descNode instanceof nodes.CallExtensionAsync)) {
        cov_1v5k93erme().b[17][0]++;
        cov_1v5k93erme().s[45]++;
        symbol = new nodes.Symbol(descNode.lineno, descNode.colno, gensym());
        cov_1v5k93erme().s[46]++;
        children.push(new nodes.FilterAsync(descNode.lineno, descNode.colno, descNode.name, descNode.args, symbol));
      } else {
        cov_1v5k93erme().b[17][1]++;
      }
    }
    cov_1v5k93erme().s[47]++;
    return symbol;
  }));
  cov_1v5k93erme().s[48]++;
  if (prop) {
    cov_1v5k93erme().b[19][0]++;
    cov_1v5k93erme().s[49]++;
    node[prop] = walked;
  } else {
    cov_1v5k93erme().b[19][1]++;
    cov_1v5k93erme().s[50]++;
    node = walked;
  }
  cov_1v5k93erme().s[51]++;
  if (children.length) {
    cov_1v5k93erme().b[20][0]++;
    cov_1v5k93erme().s[52]++;
    children.push(node);
    cov_1v5k93erme().s[53]++;
    return new nodes.NodeList(node.lineno, node.colno, children);
  } else {
    cov_1v5k93erme().b[20][1]++;
    cov_1v5k93erme().s[54]++;
    return node;
  }
}
function liftFilters(ast, asyncFilters) {
  cov_1v5k93erme().f[11]++;
  cov_1v5k93erme().s[55]++;
  return depthWalk(ast, node => {
    cov_1v5k93erme().f[12]++;
    cov_1v5k93erme().s[56]++;
    if (node instanceof nodes.Output) {
      cov_1v5k93erme().b[21][0]++;
      cov_1v5k93erme().s[57]++;
      return _liftFilters(node, asyncFilters);
    } else {
      cov_1v5k93erme().b[21][1]++;
      cov_1v5k93erme().s[58]++;
      if (node instanceof nodes.Set) {
        cov_1v5k93erme().b[22][0]++;
        cov_1v5k93erme().s[59]++;
        return _liftFilters(node, asyncFilters, 'value');
      } else {
        cov_1v5k93erme().b[22][1]++;
        cov_1v5k93erme().s[60]++;
        if (node instanceof nodes.For) {
          cov_1v5k93erme().b[23][0]++;
          cov_1v5k93erme().s[61]++;
          return _liftFilters(node, asyncFilters, 'arr');
        } else {
          cov_1v5k93erme().b[23][1]++;
          cov_1v5k93erme().s[62]++;
          if (node instanceof nodes.If) {
            cov_1v5k93erme().b[24][0]++;
            cov_1v5k93erme().s[63]++;
            return _liftFilters(node, asyncFilters, 'cond');
          } else {
            cov_1v5k93erme().b[24][1]++;
            cov_1v5k93erme().s[64]++;
            if (node instanceof nodes.CallExtension) {
              cov_1v5k93erme().b[25][0]++;
              cov_1v5k93erme().s[65]++;
              return _liftFilters(node, asyncFilters, 'args');
            } else {
              cov_1v5k93erme().b[25][1]++;
              cov_1v5k93erme().s[66]++;
              return undefined;
            }
          }
        }
      }
    }
  });
}
function liftSuper(ast) {
  cov_1v5k93erme().f[13]++;
  cov_1v5k93erme().s[67]++;
  return walk(ast, blockNode => {
    cov_1v5k93erme().f[14]++;
    cov_1v5k93erme().s[68]++;
    if (!(blockNode instanceof nodes.Block)) {
      cov_1v5k93erme().b[26][0]++;
      cov_1v5k93erme().s[69]++;
      return;
    } else {
      cov_1v5k93erme().b[26][1]++;
    }
    let hasSuper = (cov_1v5k93erme().s[70]++, false);
    const symbol = (cov_1v5k93erme().s[71]++, gensym());
    cov_1v5k93erme().s[72]++;
    blockNode.body = walk(blockNode.body, node => {
      cov_1v5k93erme().f[15]++;
      cov_1v5k93erme().s[73]++;
      // eslint-disable-line consistent-return
      if ((cov_1v5k93erme().b[28][0]++, node instanceof nodes.FunCall) && (cov_1v5k93erme().b[28][1]++, node.name.value === 'super')) {
        cov_1v5k93erme().b[27][0]++;
        cov_1v5k93erme().s[74]++;
        hasSuper = true;
        cov_1v5k93erme().s[75]++;
        return new nodes.Symbol(node.lineno, node.colno, symbol);
      } else {
        cov_1v5k93erme().b[27][1]++;
      }
    });
    cov_1v5k93erme().s[76]++;
    if (hasSuper) {
      cov_1v5k93erme().b[29][0]++;
      cov_1v5k93erme().s[77]++;
      blockNode.body.children.unshift(new nodes.Super(0, 0, blockNode.name, new nodes.Symbol(0, 0, symbol)));
    } else {
      cov_1v5k93erme().b[29][1]++;
    }
  });
}
function convertStatements(ast) {
  cov_1v5k93erme().f[16]++;
  cov_1v5k93erme().s[78]++;
  return depthWalk(ast, node => {
    cov_1v5k93erme().f[17]++;
    cov_1v5k93erme().s[79]++;
    if ((cov_1v5k93erme().b[31][0]++, !(node instanceof nodes.If)) && (cov_1v5k93erme().b[31][1]++, !(node instanceof nodes.For))) {
      cov_1v5k93erme().b[30][0]++;
      cov_1v5k93erme().s[80]++;
      return undefined;
    } else {
      cov_1v5k93erme().b[30][1]++;
    }
    let async = (cov_1v5k93erme().s[81]++, false);
    cov_1v5k93erme().s[82]++;
    walk(node, child => {
      cov_1v5k93erme().f[18]++;
      cov_1v5k93erme().s[83]++;
      if ((cov_1v5k93erme().b[33][0]++, child instanceof nodes.FilterAsync) || (cov_1v5k93erme().b[33][1]++, child instanceof nodes.IfAsync) || (cov_1v5k93erme().b[33][2]++, child instanceof nodes.AsyncEach) || (cov_1v5k93erme().b[33][3]++, child instanceof nodes.AsyncAll) || (cov_1v5k93erme().b[33][4]++, child instanceof nodes.CallExtensionAsync)) {
        cov_1v5k93erme().b[32][0]++;
        cov_1v5k93erme().s[84]++;
        async = true;
        // Stop iterating by returning the node
        cov_1v5k93erme().s[85]++;
        return child;
      } else {
        cov_1v5k93erme().b[32][1]++;
      }
      cov_1v5k93erme().s[86]++;
      return undefined;
    });
    cov_1v5k93erme().s[87]++;
    if (async) {
      cov_1v5k93erme().b[34][0]++;
      cov_1v5k93erme().s[88]++;
      if (node instanceof nodes.If) {
        cov_1v5k93erme().b[35][0]++;
        cov_1v5k93erme().s[89]++;
        return new nodes.IfAsync(node.lineno, node.colno, node.cond, node.body, node.else_);
      } else {
        cov_1v5k93erme().b[35][1]++;
        cov_1v5k93erme().s[90]++;
        if ((cov_1v5k93erme().b[37][0]++, node instanceof nodes.For) && (cov_1v5k93erme().b[37][1]++, !(node instanceof nodes.AsyncAll))) {
          cov_1v5k93erme().b[36][0]++;
          cov_1v5k93erme().s[91]++;
          return new nodes.AsyncEach(node.lineno, node.colno, node.arr, node.name, node.body, node.else_);
        } else {
          cov_1v5k93erme().b[36][1]++;
        }
      }
    } else {
      cov_1v5k93erme().b[34][1]++;
    }
    cov_1v5k93erme().s[92]++;
    return undefined;
  });
}
function cps(ast, asyncFilters) {
  cov_1v5k93erme().f[19]++;
  cov_1v5k93erme().s[93]++;
  return convertStatements(liftSuper(liftFilters(ast, asyncFilters)));
}
function transform(ast, asyncFilters) {
  cov_1v5k93erme().f[20]++;
  cov_1v5k93erme().s[94]++;
  return cps(ast, (cov_1v5k93erme().b[38][0]++, asyncFilters) || (cov_1v5k93erme().b[38][1]++, []));
}

// var parser = require('./parser');
// var src = 'hello {% foo %}{% endfoo %} end';
// var ast = transform(parser.parse(src, [new FooExtension()]), ['bar']);
// nodes.printNodes(ast);
cov_1v5k93erme().s[95]++;
module.exports = {
  transform: transform
};

/***/ }),

/***/ 2561:
/*!*************************************!*\
  !*** ./nunjucks/src/web-loaders.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function cov_xnlv6ktdt() {
  var path = "C:\\Projects\\cascada\\nunjucks\\src\\web-loaders.js";
  var hash = "220783b75316bd27bf9b29dbe4340303cb4df0e7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Projects\\cascada\\nunjucks\\src\\web-loaders.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 15
        },
        end: {
          line: 3,
          column: 34
        }
      },
      "1": {
        start: {
          line: 4,
          column: 28
        },
        end: {
          line: 4,
          column: 62
        }
      },
      "2": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 12
        }
      },
      "3": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 34
        }
      },
      "4": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 36
        }
      },
      "6": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 30
        }
      },
      "7": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 73
        }
      },
      "8": {
        start: {
          line: 31,
          column: 19
        },
        end: {
          line: 31,
          column: 32
        }
      },
      "9": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 53,
          column: 7
        }
      },
      "10": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 52,
          column: 7
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "12": {
        start: {
          line: 36,
          column: 10
        },
        end: {
          line: 36,
          column: 26
        }
      },
      "13": {
        start: {
          line: 37,
          column: 15
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "14": {
        start: {
          line: 38,
          column: 10
        },
        end: {
          line: 38,
          column: 24
        }
      },
      "15": {
        start: {
          line: 40,
          column: 10
        },
        end: {
          line: 40,
          column: 28
        }
      },
      "16": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 47,
          column: 10
        }
      },
      "17": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 40
        }
      },
      "18": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "19": {
        start: {
          line: 50,
          column: 10
        },
        end: {
          line: 50,
          column: 27
        }
      },
      "20": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 18
        }
      },
      "21": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "22": {
        start: {
          line: 64,
          column: 6
        },
        end: {
          line: 64,
          column: 65
        }
      },
      "23": {
        start: {
          line: 67,
          column: 17
        },
        end: {
          line: 67,
          column: 37
        }
      },
      "24": {
        start: {
          line: 68,
          column: 18
        },
        end: {
          line: 68,
          column: 22
        }
      },
      "25": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 82,
          column: 6
        }
      },
      "26": {
        start: {
          line: 71,
          column: 6
        },
        end: {
          line: 81,
          column: 7
        }
      },
      "27": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 24
        }
      },
      "28": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "29": {
        start: {
          line: 74,
          column: 10
        },
        end: {
          line: 74,
          column: 38
        }
      },
      "30": {
        start: {
          line: 76,
          column: 10
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "31": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 85,
          column: 27
        }
      },
      "32": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 38
        }
      },
      "33": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 16
        }
      },
      "34": {
        start: {
          line: 92,
          column: 0
        },
        end: {
          line: 95,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 2
          },
          end: {
            line: 7,
            column: 3
          }
        },
        loc: {
          start: {
            line: 7,
            column: 29
          },
          end: {
            line: 24,
            column: 3
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 2
          },
          end: {
            line: 26,
            column: 3
          }
        },
        loc: {
          start: {
            line: 26,
            column: 20
          },
          end: {
            line: 28,
            column: 3
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 30,
            column: 3
          }
        },
        loc: {
          start: {
            line: 30,
            column: 22
          },
          end: {
            line: 59,
            column: 3
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 33,
            column: 42
          },
          end: {
            line: 33,
            column: 43
          }
        },
        loc: {
          start: {
            line: 33,
            column: 56
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 33
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 61,
            column: 2
          },
          end: {
            line: 61,
            column: 3
          }
        },
        loc: {
          start: {
            line: 61,
            column: 17
          },
          end: {
            line: 89,
            column: 3
          }
        },
        line: 61
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 70,
            column: 30
          },
          end: {
            line: 70,
            column: 31
          }
        },
        loc: {
          start: {
            line: 70,
            column: 36
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 70
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 19
          },
          end: {
            line: 9,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 19
          },
          end: {
            line: 9,
            column: 26
          }
        }, {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 9,
            column: 33
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 10,
            column: 11
          },
          end: {
            line: 10,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 11
          },
          end: {
            line: 10,
            column: 15
          }
        }, {
          start: {
            line: 10,
            column: 19
          },
          end: {
            line: 10,
            column: 21
          }
        }],
        line: 10
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 52,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 52,
            column: 7
          }
        }, {
          start: {
            line: 42,
            column: 13
          },
          end: {
            line: 52,
            column: 7
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: 37,
            column: 15
          },
          end: {
            line: 41,
            column: 9
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 15
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 15
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: 39,
            column: 15
          },
          end: {
            line: 41,
            column: 9
          }
        }],
        line: 37
      },
      "5": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "6": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "7": {
        loc: {
          start: {
            line: 71,
            column: 6
          },
          end: {
            line: 81,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 6
          },
          end: {
            line: 81,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "8": {
        loc: {
          start: {
            line: 71,
            column: 10
          },
          end: {
            line: 71,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 10
          },
          end: {
            line: 71,
            column: 31
          }
        }, {
          start: {
            line: 71,
            column: 35
          },
          end: {
            line: 71,
            column: 42
          }
        }],
        line: 71
      },
      "9": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        }, {
          start: {
            line: 75,
            column: 15
          },
          end: {
            line: 80,
            column: 9
          }
        }],
        line: 73
      },
      "10": {
        loc: {
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 73,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 73,
            column: 29
          }
        }, {
          start: {
            line: 73,
            column: 33
          },
          end: {
            line: 73,
            column: 52
          }
        }],
        line: 73
      },
      "11": {
        loc: {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 84,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 38
          },
          end: {
            line: 84,
            column: 41
          }
        }, {
          start: {
            line: 84,
            column: 44
          },
          end: {
            line: 84,
            column: 47
          }
        }],
        line: 84
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "220783b75316bd27bf9b29dbe4340303cb4df0e7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_xnlv6ktdt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_xnlv6ktdt();
const Loader = (cov_xnlv6ktdt().s[0]++, __webpack_require__(/*! ./loader */ 7491));
const {
  PrecompiledLoader
} = (cov_xnlv6ktdt().s[1]++, __webpack_require__(/*! ./precompiled-loader.js */ 2742));
class WebLoader extends Loader {
  constructor(baseURL, opts) {
    cov_xnlv6ktdt().f[0]++;
    cov_xnlv6ktdt().s[2]++;
    super();
    cov_xnlv6ktdt().s[3]++;
    this.baseURL = (cov_xnlv6ktdt().b[0][0]++, baseURL) || (cov_xnlv6ktdt().b[0][1]++, '.');
    cov_xnlv6ktdt().s[4]++;
    opts = (cov_xnlv6ktdt().b[1][0]++, opts) || (cov_xnlv6ktdt().b[1][1]++, {});

    // By default, the cache is turned off because there's no way
    // to "watch" templates over HTTP, so they are re-downloaded
    // and compiled each time. (Remember, PRECOMPILE YOUR
    // TEMPLATES in production!)
    cov_xnlv6ktdt().s[5]++;
    this.useCache = !!opts.useCache;

    // We default `async` to false so that the simple synchronous
    // API can be used when you aren't doing anything async in
    // your templates (which is most of the time). This performs a
    // sync ajax request, but that's ok because it should *only*
    // happen in development. PRECOMPILE YOUR TEMPLATES.
    cov_xnlv6ktdt().s[6]++;
    this.async = !!opts.async;
  }
  resolve(from, to) {
    cov_xnlv6ktdt().f[1]++;
    cov_xnlv6ktdt().s[7]++;
    throw new Error('relative templates not support in the browser yet');
  }
  getSource(name, cb) {
    cov_xnlv6ktdt().f[2]++;
    var useCache = (cov_xnlv6ktdt().s[8]++, this.useCache);
    var result;
    cov_xnlv6ktdt().s[9]++;
    this.fetch(this.baseURL + '/' + name, (err, src) => {
      cov_xnlv6ktdt().f[3]++;
      cov_xnlv6ktdt().s[10]++;
      if (err) {
        cov_xnlv6ktdt().b[2][0]++;
        cov_xnlv6ktdt().s[11]++;
        if (cb) {
          cov_xnlv6ktdt().b[3][0]++;
          cov_xnlv6ktdt().s[12]++;
          cb(err.content);
        } else {
          cov_xnlv6ktdt().b[3][1]++;
          cov_xnlv6ktdt().s[13]++;
          if (err.status === 404) {
            cov_xnlv6ktdt().b[4][0]++;
            cov_xnlv6ktdt().s[14]++;
            result = null;
          } else {
            cov_xnlv6ktdt().b[4][1]++;
            cov_xnlv6ktdt().s[15]++;
            throw err.content;
          }
        }
      } else {
        cov_xnlv6ktdt().b[2][1]++;
        cov_xnlv6ktdt().s[16]++;
        result = {
          src: src,
          path: name,
          noCache: !useCache
        };
        cov_xnlv6ktdt().s[17]++;
        this.emit('load', name, result);
        cov_xnlv6ktdt().s[18]++;
        if (cb) {
          cov_xnlv6ktdt().b[5][0]++;
          cov_xnlv6ktdt().s[19]++;
          cb(null, result);
        } else {
          cov_xnlv6ktdt().b[5][1]++;
        }
      }
    });

    // if this WebLoader isn't running asynchronously, the
    // fetch above would actually run sync and we'll have a
    // result here
    cov_xnlv6ktdt().s[20]++;
    return result;
  }
  fetch(url, cb) {
    cov_xnlv6ktdt().f[4]++;
    cov_xnlv6ktdt().s[21]++;
    // Only in the browser please
    if (typeof window === 'undefined') {
      cov_xnlv6ktdt().b[6][0]++;
      cov_xnlv6ktdt().s[22]++;
      throw new Error('WebLoader can only by used in a browser');
    } else {
      cov_xnlv6ktdt().b[6][1]++;
    }
    const ajax = (cov_xnlv6ktdt().s[23]++, new XMLHttpRequest());
    let loading = (cov_xnlv6ktdt().s[24]++, true);
    cov_xnlv6ktdt().s[25]++;
    ajax.onreadystatechange = () => {
      cov_xnlv6ktdt().f[5]++;
      cov_xnlv6ktdt().s[26]++;
      if ((cov_xnlv6ktdt().b[8][0]++, ajax.readyState === 4) && (cov_xnlv6ktdt().b[8][1]++, loading)) {
        cov_xnlv6ktdt().b[7][0]++;
        cov_xnlv6ktdt().s[27]++;
        loading = false;
        cov_xnlv6ktdt().s[28]++;
        if ((cov_xnlv6ktdt().b[10][0]++, ajax.status === 0) || (cov_xnlv6ktdt().b[10][1]++, ajax.status === 200)) {
          cov_xnlv6ktdt().b[9][0]++;
          cov_xnlv6ktdt().s[29]++;
          cb(null, ajax.responseText);
        } else {
          cov_xnlv6ktdt().b[9][1]++;
          cov_xnlv6ktdt().s[30]++;
          cb({
            status: ajax.status,
            content: ajax.responseText
          });
        }
      } else {
        cov_xnlv6ktdt().b[7][1]++;
      }
    };
    cov_xnlv6ktdt().s[31]++;
    url += (url.indexOf('?') === -1 ? (cov_xnlv6ktdt().b[11][0]++, '?') : (cov_xnlv6ktdt().b[11][1]++, '&')) + 's=' + new Date().getTime();
    cov_xnlv6ktdt().s[32]++;
    ajax.open('GET', url, this.async);
    cov_xnlv6ktdt().s[33]++;
    ajax.send();
  }
}
cov_xnlv6ktdt().s[34]++;
module.exports = {
  WebLoader: WebLoader,
  PrecompiledLoader: PrecompiledLoader
};

/***/ }),

/***/ 5905:
/*!***************************!*\
  !*** ./nunjucks/index.js ***!
  \***************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


const lib = __webpack_require__(/*! ./src/lib */ 449);
const {Environment, Template} = __webpack_require__(/*! ./src/environment */ 2887);
const Loader = __webpack_require__(/*! ./src/loader */ 7491);
const loaders = __webpack_require__(/*! ./src/loaders */ 7494);
const precompile = __webpack_require__(/*! ./src/precompile */ 6470);
const compiler = __webpack_require__(/*! ./src/compiler */ 6933);
const parser = __webpack_require__(/*! ./src/parser */ 999);
const lexer = __webpack_require__(/*! ./src/lexer */ 3608);
const runtime = __webpack_require__(/*! ./src/runtime */ 5434);
const nodes = __webpack_require__(/*! ./src/nodes */ 8883);
const installJinjaCompat = __webpack_require__(/*! ./src/jinja-compat */ 433);

// A single instance of an environment, since this is so commonly used
let e;

function configure(templatesPath, opts) {
  opts = opts || {};
  if (lib.isObject(templatesPath)) {
    opts = templatesPath;
    templatesPath = null;
  }

  let TemplateLoader;
  if (loaders.FileSystemLoader) {
    TemplateLoader = new loaders.FileSystemLoader(templatesPath, {
      watch: opts.watch,
      noCache: opts.noCache
    });
  } else if (loaders.WebLoader) {
    TemplateLoader = new loaders.WebLoader(templatesPath, {
      useCache: opts.web && opts.web.useCache,
      async: opts.web && opts.web.async
    });
  }

  e = new Environment(TemplateLoader, opts);

  if (opts && opts.express) {
    e.express(opts.express);
  }

  return e;
}

module.exports = {
  Environment: Environment,
  Template: Template,
  Loader: Loader,
  FileSystemLoader: loaders.FileSystemLoader,
  NodeResolveLoader: loaders.NodeResolveLoader,
  PrecompiledLoader: loaders.PrecompiledLoader,
  WebLoader: loaders.WebLoader,
  compiler: compiler,
  parser: parser,
  lexer: lexer,
  runtime: runtime,
  lib: lib,
  nodes: nodes,
  installJinjaCompat: installJinjaCompat,
  configure: configure,
  reset() {
    e = undefined;
  },
  compile(src, env, path, eagerCompile, isAsync) {
    if (!e) {
      configure();
    }
    return new Template(src, env, path, eagerCompile, isAsync);
  },
  render(name, ctx, isAsync, cb) {
    if (!e) {
      configure();
    }

    return e.render(name, ctx, isAsync, cb);
  },
  renderString(src, ctx, cb) {
    if (!e) {
      configure();
    }

    return e.renderString(src, ctx, cb);
  },
  precompile: (precompile) ? precompile.precompile : undefined,
  precompileString: (precompile) ? precompile.precompileString : undefined,
};


/***/ }),

/***/ 4841:
/*!****************************!*\
  !*** ./nunjucks/src/ sync ***!
  \****************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = 4841;
module.exports = webpackEmptyContext;

/***/ }),

/***/ 2119:
/*!**********************!*\
  !*** ./tests/api.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

(function() {
  'use strict';

  var expect;
  var util;
  var Environment;
  var Loader;
  var templatesPath;
  var path;

  if (true) {
    expect = __webpack_require__(/*! expect.js */ 1801);
    util = __webpack_require__(/*! ./util */ 9099);
    Environment = (__webpack_require__(/*! ../nunjucks/src/environment */ 2887).Environment);
    Loader = (__webpack_require__(/*! ../nunjucks/src/node-loaders */ 5257).FileSystemLoader);
    templatesPath = 'tests/templates';
    path = __webpack_require__(/*! path */ 7975);
  } else {}

  describe('api', function() {
    it('should always force compilation of parent template', function() {
      var env = new Environment(new Loader(templatesPath));

      var child = env.getTemplate('base-inherit.njk');
      expect(child.render()).to.be('Foo*Bar*BazFizzle');
    });

    it('should only call the callback once when conditional import fails', function(done) {
      var env = new Environment(new Loader(templatesPath));
      var called = 0;
      env.render('broken-conditional-include.njk',
        function() {
          expect(++called).to.be(1);
        }
      );
      setTimeout(done, 0);
    });


    it('should handle correctly relative paths', function() {
      var env;
      var child1;
      var child2;
      if (typeof path === 'undefined') {
        this.skip();
        return;
      }
      env = new Environment(new Loader(templatesPath));
      child1 = env.getTemplate('relative/test1.njk');
      child2 = env.getTemplate('relative/test2.njk');

      expect(child1.render()).to.be('FooTest1BazFizzle');
      expect(child2.render()).to.be('FooTest2BazFizzle');
    });

    it('should handle correctly cache for relative paths', function() {
      var env;
      var test;
      if (typeof path === 'undefined') {
        this.skip();
        return;
      }
      env = new Environment(new Loader(templatesPath));
      test = env.getTemplate('relative/test-cache.njk');

      expect(util.normEOL(test.render())).to.be('Test1\nTest2');
    });

    it('should handle correctly relative paths in renderString', function() {
      var env;
      if (typeof path === 'undefined') {
        this.skip();
        return;
      }
      env = new Environment(new Loader(templatesPath));
      expect(env.renderString('{% extends "./relative/test1.njk" %}{% block block1 %}Test3{% endblock %}', {}, {
        path: path.resolve(templatesPath, 'string.njk')
      })).to.be('FooTest3BazFizzle');
    });

    it('should emit "load" event on Environment instance', function(done) {
      var env = new Environment(new Loader(templatesPath));
      env.on('load', function(name, source) {
        expect(name).to.equal('item.njk');
        done();
      });
      env.render('item.njk', {});
    });
  });
}());


/***/ }),

/***/ 9696:
/*!********************************!*\
  !*** ./tests/browser/index.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// Include the necessary test files
__webpack_require__(/*! ../util.js */ 9099);
__webpack_require__(/*! ../api.js */ 2119);
__webpack_require__(/*! ../lexer.js */ 7501);
__webpack_require__(/*! ../loader.js */ 2720);
__webpack_require__(/*! ../parser.js */ 6124);
__webpack_require__(/*! ../compiler.js */ 8630);
__webpack_require__(/*! ../runtime.js */ 9739);
__webpack_require__(/*! ../filters.js */ 7488);
__webpack_require__(/*! ../globals.js */ 6571);
__webpack_require__(/*! ../jinja-compat.js */ 1922);
__webpack_require__(/*! ../tests.js */ 6438);

// Set up the test environment
nunjucks.testing = true;
mocha.checkLeaks();
mocha.run();


/***/ }),

/***/ 8630:
/*!***************************!*\
  !*** ./tests/compiler.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

(function() {
  'use strict';

  var expect;
  var util;
  var Template;
  var Loader;
  var Environment;
  var fs;
  var render;
  var equal;
  var finish;
  var isSlim;

  if (true) {
    expect = __webpack_require__(/*! expect.js */ 1801);
    util = __webpack_require__(/*! ./util */ 9099);
    Template = (__webpack_require__(/*! ../nunjucks/src/environment */ 2887).Template);
    Environment = (__webpack_require__(/*! ../nunjucks/src/environment */ 2887).Environment);
    fs = __webpack_require__(/*! fs */ 2564);
  } else {}

  render = util.render;
  equal = util.equal;
  finish = util.finish;
  isSlim = util.isSlim;
  Loader = util.Loader;

  describe('compiler', function() {
    it('should compile templates', function(done) {
      equal('Hello world', 'Hello world');
      equal('Hello world, {{ name }}',
        {
          name: 'James'
        },
        'Hello world, James');

      equal('Hello world, {{name}}{{suffix}}, how are you',
        {
          name: 'James',
          suffix: ' Long'
        },
        'Hello world, James Long, how are you');

      finish(done);
    });

    it('should escape newlines', function(done) {
      equal('foo\\nbar', 'foo\\nbar');
      finish(done);
    });

    it('should escape Unicode line seperators', function(done) {
      equal('\u2028', '\u2028');
      finish(done);
    });

    it('should compile references', function(done) {
      equal('{{ foo.bar }}',
        {
          foo: {
            bar: 'baz'
          }
        },
        'baz');

      equal('{{ foo["bar"] }}',
        {
          foo: {
            bar: 'baz'
          }
        },
        'baz');

      finish(done);
    });

    it('should compile references - object without prototype', function(done) {
      var context = Object.create(null);
      context.foo = Object.create(null);
      context.foo.bar = 'baz';

      equal('{{ foo.bar }}',
        context,
        'baz');

      equal('{{ foo["bar"] }}',
        context,
        'baz');

      finish(done);
    });

    it('should fail silently on undefined values', function(done) {
      equal('{{ foo }}', '');
      equal('{{ foo.bar }}', '');
      equal('{{ foo.bar.baz }}', '');
      equal('{{ foo.bar.baz["biz"].mumble }}', '');
      finish(done);
    });

    it('should not treat falsy values the same as undefined', function(done) {
      equal('{{ foo }}', {
        foo: 0
      }, '0');
      equal('{{ foo }}', {
        foo: false
      }, 'false');
      finish(done);
    });

    it('should display none as empty string', function(done) {
      equal('{{ none }}', '');
      finish(done);
    });

    it('should compile none as falsy', function(done) {
      equal('{% if not none %}yes{% endif %}', 'yes');
      finish(done);
    });

    it('should compile none as null, not undefined', function(done) {
      equal('{{ none|default("d", false) }}', '');
      finish(done);
    });

    it('should compile function calls', function(done) {
      equal('{{ foo("msg") }}',
        {
          foo: function(str) {
            return str + 'hi';
          }
        },
        'msghi');
      finish(done);
    });

    it('should compile function calls with correct scope', function(done) {
      equal('{{ foo.bar() }}', {
        foo: {
          bar: function() {
            return this.baz;
          },
          baz: 'hello'
        }
      }, 'hello');

      finish(done);
    });

    it('should compile switch statements', function() {
      // standard switches
      var tpl1 = '{% switch foo %}{% case "bar" %}BAR{% case "baz" %}BAZ{% default %}NEITHER FOO NOR BAR{% endswitch %}';
      // test no-default switches
      var tpl2 = '{% switch foo %}{% case "bar" %}BAR{% case "baz" %}BAZ{% endswitch %}';
      // test fall-through cases
      var tpl3 = '{% switch foo %}{% case "bar" %}{% case "baz" %}BAR{% endswitch %}';
      equal(tpl1, 'NEITHER FOO NOR BAR');
      equal(tpl1, {
        foo: 'bar'
      }, 'BAR');
      equal(tpl1, {
        foo: 'baz'
      }, 'BAZ');
      equal(tpl2, '');
      equal(tpl3, {
        foo: 'bar'
      }, 'BAR');
      equal(tpl3, {
        foo: 'baz'
      }, 'BAR');
    });

    it('should compile if blocks', function(done) {
      var tmpl = ('Give me some {% if hungry %}pizza' +
        '{% else %}water{% endif %}');

      equal(tmpl, {
        hungry: true
      }, 'Give me some pizza');
      equal(tmpl, {
        hungry: false
      }, 'Give me some water');
      equal('{% if not hungry %}good{% endif %}',
        {
          hungry: false
        },
        'good');

      equal('{% if hungry and like_pizza %}good{% endif %}',
        {
          hungry: true,
          like_pizza: true
        },
        'good');

      equal('{% if hungry or like_pizza %}good{% endif %}',
        {
          hungry: false,
          like_pizza: true
        },
        'good');

      equal('{% if (hungry or like_pizza) and anchovies %}good{% endif %}',
        {
          hungry: false,
          like_pizza: true,
          anchovies: true
        },
        'good');

      equal(
        '{% if food == "pizza" %}pizza{% endif %}' +
        '{% if food =="beer" %}beer{% endif %}',
        {
          food: 'beer'
        },
        'beer');

      equal('{% if "pizza" in food %}yum{% endif %}',
        {
          food: {
            pizza: true
          }
        },
        'yum');

      equal('{% if pizza %}yum{% elif anchovies %}yuck{% endif %}',
        {
          pizza: true
        },
        'yum');

      equal('{% if pizza %}yum{% elseif anchovies %}yuck{% endif %}',
        {
          pizza: true
        },
        'yum');

      equal('{% if pizza %}yum{% elif anchovies %}yuck{% endif %}',
        {
          anchovies: true
        },
        'yuck');

      equal('{% if pizza %}yum{% elseif anchovies %}yuck{% endif %}',
        {
          anchovies: true
        },
        'yuck');

      equal(
        '{% if topping == "pepperoni" %}yum{% elseif topping == "anchovies" %}' +
        'yuck{% else %}hmmm{% endif %}',
        {
          topping: 'sausage'
        },
        'hmmm');

      finish(done);
    });

    it('should compile the ternary operator', function(done) {
      equal('{{ "foo" if bar else "baz" }}', 'baz');
      equal('{{ "foo" if bar else "baz" }}', {
        bar: true
      }, 'foo');

      finish(done);
    });

    it('should compile inline conditionals', function(done) {
      var tmpl = 'Give me some {{ "pizza" if hungry else "water" }}';

      equal(tmpl, {
        hungry: true
      }, 'Give me some pizza');
      equal(tmpl, {
        hungry: false
      }, 'Give me some water');
      equal('{{ "good" if not hungry }}',
        {
          hungry: false
        }, 'good');
      equal('{{ "good" if hungry and like_pizza }}',
        {
          hungry: true,
          like_pizza: true
        }, 'good');
      equal('{{ "good" if hungry or like_pizza }}',
        {
          hungry: false,
          like_pizza: true
        }, 'good');
      equal('{{ "good" if (hungry or like_pizza) and anchovies }}',
        {
          hungry: false,
          like_pizza: true,
          anchovies: true
        }, 'good');
      equal(
        '{{ "pizza" if food == "pizza" }}' +
        '{{ "beer" if food == "beer" }}',
        {
          food: 'beer'
        }, 'beer');

      finish(done);
    });

    function runLoopTests(block) {
      var end = {
        asyncAll: 'endall',
        asyncEach: 'endeach',
        for: 'endfor'
      }[block];

      describe('the ' + block + ' tag', function() {
        it('should loop over simple arrays', function() {
          equal(
            '{% ' + block + ' i in arr %}{{ i }}{% ' + end + ' %}',
            { arr: [1, 2, 3, 4, 5] },
            '12345');
        });
        it('should loop normally with an {% else %} tag and non-empty array', function() {
          equal(
            '{% ' + block + ' i in arr %}{{ i }}{% else %}empty{% ' + end + ' %}',
            { arr: [1, 2, 3, 4, 5] },
            '12345');
        });
        it('should execute the {% else %} block when looping over an empty array', function() {
          equal(
            '{% ' + block + ' i in arr %}{{ i }}{% else %}empty{% ' + end + ' %}',
            { arr: [] },
            'empty');
        });
        it('should support destructured looping', function() {
          equal(
            '{% ' + block + ' a, b, c in arr %}' +
            '{{ a }},{{ b }},{{ c }}.{% ' + end + ' %}',
            { arr: [['x', 'y', 'z'], ['1', '2', '3']] },
            'x,y,z.1,2,3.');
        });
        it('should do loop over key-values of a literal in-template Object', function() {
          equal(
            '{% ' + block + ' k, v in { one: 1, two: 2 } %}' +
            '-{{ k }}:{{ v }}-{% ' + end + ' %}', '-one:1--two:2-');
        });
        it('should support loop.index', function() {
          equal('{% ' + block + ' i in [7,3,6] %}{{ loop.index }}{% ' + end + ' %}', '123');
        });
        it('should support loop.index0', function() {
          equal('{% ' + block + ' i in [7,3,6] %}{{ loop.index0 }}{% ' + end + ' %}', '012');
        });
        it('should support loop.revindex', function() {
          equal('{% ' + block + ' i in [7,3,6] %}{{ loop.revindex }}{% ' + end + ' %}', '321');
        });
        it('should support loop.revindex0', function() {
          equal('{% ' + block + ' i in [7,3,6] %}{{ loop.revindex0 }}{% ' + end + ' %}', '210');
        });
        it('should support loop.first', function() {
          equal(
            '{% ' + block + ' i in [7,3,6] %}' +
            '{% if loop.first %}{{ i }}{% endif %}' +
            '{% ' + end + ' %}',
            '7');
        });
        it('should support loop.last', function() {
          equal(
            '{% ' + block + ' i in [7,3,6] %}' +
            '{% if loop.last %}{{ i }}{% endif %}' +
            '{% ' + end + ' %}',
            '6');
        });
        it('should support loop.length', function() {
          equal('{% ' + block + ' i in [7,3,6] %}{{ loop.length }}{% ' + end + ' %}', '333');
        });
        it('should fail silently when looping over an undefined variable', function() {
          equal('{% ' + block + ' i in foo %}{{ i }}{% ' + end + ' %}', '');
        });
        it('should fail silently when looping over an undefined property', function() {
          equal(
            '{% ' + block + ' i in foo.bar %}{{ i }}{% ' + end + ' %}',
            { foo: {} },
            '');
        });
        // TODO: this behavior differs from jinja2
        it('should fail silently when looping over a null variable', function() {
          equal(
            '{% ' + block + ' i in foo %}{{ i }}{% ' + end + ' %}',
            { foo: null },
            '');
        });
        it('should loop over two-dimensional arrays', function() {
          equal('{% ' + block + ' x, y in points %}[{{ x }},{{ y }}]{% ' + end + ' %}',
            { points: [[1, 2], [3, 4], [5, 6]] },
            '[1,2][3,4][5,6]');
        });
        it('should loop over four-dimensional arrays', function() {
          equal(
            '{% ' + block + ' a, b, c, d in arr %}[{{ a }},{{ b }},{{ c }},{{ d }}]{% ' + end + '%}',
            { arr: [[1, 2, 3, 4], [5, 6, 7, 8]] },
            '[1,2,3,4][5,6,7,8]');
        });
        it('should support loop.index with two-dimensional loops', function() {
          equal('{% ' + block + ' x, y in points %}{{ loop.index }}{% ' + end + ' %}',
            {
              points: [[1, 2], [3, 4], [5, 6]]
            },
            '123');
        });
        it('should support loop.revindex with two-dimensional loops', function() {
          equal('{% ' + block + ' x, y in points %}{{ loop.revindex }}{% ' + end + ' %}',
            {
              points: [[1, 2], [3, 4], [5, 6]]
            },
            '321');
        });
        it('should support key-value looping over an Object variable', function() {
          equal('{% ' + block + ' k, v in items %}({{ k }},{{ v }}){% ' + end + ' %}',
            {
              items: {
                foo: 1,
                bar: 2
              }
            },
            '(foo,1)(bar,2)');
        });
        it('should support loop.index when looping over an Object\'s key-value pairs', function() {
          equal('{% ' + block + ' k, v in items %}{{ loop.index }}{% ' + end + ' %}',
            {
              items: {
                foo: 1,
                bar: 2
              }
            },
            '12');
        });
        it('should support loop.revindex when looping over an Object\'s key-value pairs', function() {
          equal('{% ' + block + ' k, v in items %}{{ loop.revindex }}{% ' + end + ' %}',
            {
              items: {
                foo: 1,
                bar: 2
              }
            },
            '21');
        });
        it('should support loop.length when looping over an Object\'s key-value pairs', function() {
          equal('{% ' + block + ' k, v in items %}{{ loop.length }}{% ' + end + ' %}',
            {
              items: {
                foo: 1,
                bar: 2
              }
            },
            '22');
        });
        it('should support include tags in the body of the loop', function() {
          equal('{% ' + block + ' item, v in items %}{% include "item.njk" %}{% ' + end + ' %}',
            {
              items: {
                foo: 1,
                bar: 2
              }
            },
            'showing fooshowing bar');
        });
        it('should work with {% set %} and {% include %} tags', function() {
          equal(
            '{% set item = passed_var %}' +
            '{% include "item.njk" %}\n' +
            '{% ' + block + ' i in passed_iter %}' +
            '{% set item = i %}' +
            '{% include "item.njk" %}\n' +
            '{% ' + end + ' %}',
            {
              passed_var: 'test',
              passed_iter: ['1', '2', '3']
            },
            'showing test\nshowing 1\nshowing 2\nshowing 3\n');
        });
        /* global Set */
        it('should work with Set builtin', function() {
          if (typeof Set === 'undefined') {
            this.skip();
          } else {
            equal('{% ' + block + ' i in set %}{{ i }}{% ' + end + ' %}',
              { set: new Set([1, 2, 3, 4, 5]) },
              '12345');

            equal('{% ' + block + ' i in set %}{{ i }}{% else %}empty{% ' + end + ' %}',
              { set: new Set([1, 2, 3, 4, 5]) },
              '12345');

            equal('{% ' + block + ' i in set %}{{ i }}{% else %}empty{% ' + end + ' %}',
              { set: new Set() },
              'empty');
          }
        });
        /* global Map */
        it('should work with Map builtin', function() {
          if (typeof Map === 'undefined') {
            this.skip();
          } else {
            equal('{% ' + block + ' k, v in map %}[{{ k }},{{ v }}]{% ' + end + ' %}',
              { map: new Map([[1, 2], [3, 4], [5, 6]]) },
              '[1,2][3,4][5,6]');

            equal('{% ' + block + ' k, v in map %}[{{ k }},{{ v }}]{% else %}empty{% ' + end + ' %}',
              { map: new Map([[1, 2], [3, 4], [5, 6]]) },
              '[1,2][3,4][5,6]');

            equal('{% ' + block + ' k, v in map %}[{{ k }},{{ v }}]{% else %}empty{% ' + end + ' %}',
              { map: new Map() },
              'empty');
          }
        });
      });
    }

    runLoopTests('for');
    runLoopTests('asyncEach');
    runLoopTests('asyncAll');

    it('should allow overriding var with none inside nested scope', function(done) {
      equal(
        '{% set var = "foo" %}' +
        '{% for i in [1] %}{% set var = none %}{{ var }}{% endfor %}',
        '');

      finish(done);
    });

    it('should compile async control', function(done) {
      var opts;
      if (!fs) {
        this.skip();
      } else {
        opts = {
          asyncFilters: {
            getContents: function(tmpl, cb) {
              fs.readFile(tmpl, cb);
            },

            getContentsArr: function(arr, cb) {
              fs.readFile(arr[0], function(err, res) {
                cb(err, [res]);
              });
            }
          }
        };

        render('{{ tmpl | getContents }}',
          {
            tmpl: 'tests/templates/for-async-content.njk'
          },
          opts,
          function(err, res) {
            expect(res).to.be('somecontenthere');
          });

        render('{% if tmpl %}{{ tmpl | getContents }}{% endif %}',
          {
            tmpl: 'tests/templates/for-async-content.njk'
          },
          opts,
          function(err, res) {
            expect(res).to.be('somecontenthere');
          });

        render('{% if tmpl | getContents %}yes{% endif %}',
          {
            tmpl: 'tests/templates/for-async-content.njk'
          },
          opts,
          function(err, res) {
            expect(res).to.be('yes');
          });

        render('{% for t in [tmpl, tmpl] %}{{ t | getContents }}*{% endfor %}',
          {
            tmpl: 'tests/templates/for-async-content.njk'
          },
          opts,
          function(err, res) {
            expect(res).to.be('somecontenthere*somecontenthere*');
          });

        render('{% for t in [tmpl, tmpl] | getContentsArr %}{{ t }}{% endfor %}',
          {
            tmpl: 'tests/templates/for-async-content.njk'
          },
          opts,
          function(err, res) {
            expect(res).to.be('somecontenthere');
          });

        render('{% if test %}{{ tmpl | getContents }}{% endif %}oof',
          {
            tmpl: 'tests/templates/for-async-content.njk'
          },
          opts,
          function(err, res) {
            expect(res).to.be('oof');
          });

        render(
          '{% if tmpl %}' +
          '{% for i in [0, 1] %}{{ tmpl | getContents }}*{% endfor %}' +
          '{% endif %}',
          {
            tmpl: 'tests/templates/for-async-content.njk'
          },
          opts,
          function(err, res) {
            expect(res).to.be('somecontenthere*somecontenthere*');
          });

        render('{% block content %}{{ tmpl | getContents }}{% endblock %}',
          {
            tmpl: 'tests/templates/for-async-content.njk'
          },
          opts,
          function(err, res) {
            expect(res).to.be('somecontenthere');
          });

        render('{% block content %}hello{% endblock %} {{ tmpl | getContents }}',
          {
            tmpl: 'tests/templates/for-async-content.njk'
          },
          opts,
          function(err, res) {
            expect(res).to.be('hello somecontenthere');
          });

        render('{% block content %}{% set foo = tmpl | getContents %}{{ foo }}{% endblock %}',
          {
            tmpl: 'tests/templates/for-async-content.njk'
          },
          opts,
          function(err, res) {
            expect(res).to.be('somecontenthere');
          });

        render('{% block content %}{% include "async.njk" %}{% endblock %}',
          {
            tmpl: 'tests/templates/for-async-content.njk'
          },
          opts,
          function(err, res) {
            expect(res).to.be('somecontenthere\n');
          });

        render('{% asyncEach i in [0, 1] %}{% include "async.njk" %}{% endeach %}',
          {
            tmpl: 'tests/templates/for-async-content.njk'
          },
          opts,
          function(err, res) {
            expect(res).to.be('somecontenthere\nsomecontenthere\n');
          });

        render('{% asyncAll i in [0, 1, 2, 3, 4] %}-{{ i }}:{% include "async.njk" %}-{% endall %}',
          {
            tmpl: 'tests/templates/for-async-content.njk'
          },
          opts,
          function(err, res) {
            expect(res).to.be('-0:somecontenthere\n-' +
              '-1:somecontenthere\n-' +
              '-2:somecontenthere\n-' +
              '-3:somecontenthere\n-' +
              '-4:somecontenthere\n-');
          });
      }

      finish(done);
    });

    it('should compile basic arithmetic operators', function() {
      equal('{{ 3 + 4 - 5 * 6 / 10 }}', '4');
    });

    it('should compile the exponentiation (**) operator', function() {
      equal('{{ 4**5 }}', '1024');
    });

    it('should compile the integer division (//) operator', function() {
      equal('{{ 9//5 }}', '1');
    });

    it('should compile the modulus operator', function() {
      equal('{{ 9%5 }}', '4');
    });

    it('should compile numeric negation operator', function() {
      equal('{{ -5 }}', '-5');
    });

    it('should compile comparison operators', function() {
      equal('{% if 3 < 4 %}yes{% endif %}', 'yes');
      equal('{% if 3 > 4 %}yes{% endif %}', '');
      equal('{% if 9 >= 10 %}yes{% endif %}', '');
      equal('{% if 10 >= 10 %}yes{% endif %}', 'yes');
      equal('{% if 9 <= 10 %}yes{% endif %}', 'yes');
      equal('{% if 10 <= 10 %}yes{% endif %}', 'yes');
      equal('{% if 11 <= 10 %}yes{% endif %}', '');

      equal('{% if 10 != 10 %}yes{% endif %}', '');
      equal('{% if 10 == 10 %}yes{% endif %}', 'yes');

      equal('{% if "0" == 0 %}yes{% endif %}', 'yes');
      equal('{% if "0" === 0 %}yes{% endif %}', '');
      equal('{% if "0" !== 0 %}yes{% endif %}', 'yes');
      equal('{% if 0 == false %}yes{% endif %}', 'yes');
      equal('{% if 0 === false %}yes{% endif %}', '');

      equal('{% if foo(20) > bar %}yes{% endif %}',
        {
          foo: function(n) {
            return n - 1;
          },
          bar: 15
        },
        'yes');
    });

    it('should compile python-style ternary operators', function() {
      equal('{{ "yes" if 1 is odd else "no"  }}', 'yes');
      equal('{{ "yes" if 2 is even else "no"  }}', 'yes');
      equal('{{ "yes" if 2 is odd else "no"  }}', 'no');
      equal('{{ "yes" if 1 is even else "no"  }}', 'no');
    });

    it('should compile the "in" operator for Arrays', function() {
      equal('{% if 1 in [1, 2] %}yes{% endif %}', 'yes');
      equal('{% if 1 in [2, 3] %}yes{% endif %}', '');
      equal('{% if 1 not in [1, 2] %}yes{% endif %}', '');
      equal('{% if 1 not in [2, 3] %}yes{% endif %}', 'yes');
      equal('{% if "a" in vals %}yes{% endif %}',
        { vals: ['a', 'b'] },
        'yes');
    });

    it('should compile the "in" operator for objects', function() {
      equal('{% if "a" in obj %}yes{% endif %}',
        { obj: { a: true } },
        'yes');
      equal('{% if "a" in obj %}yes{% endif %}',
        { obj: { b: true } },
        '');
    });

    it('should compile the "in" operator for strings', function() {
      equal('{% if "foo" in "foobar" %}yes{% endif %}', 'yes');
    });

    it('should throw an error when using the "in" operator on unexpected types', function(done) {
      render(
        '{% if "a" in 1 %}yes{% endif %}',
        {},
        {
          noThrow: true
        },
        function(err, res) {
          expect(res).to.be(undefined);
          expect(err).to.match(
            /Cannot use "in" operator to search for "a" in unexpected types\./
          );
        }
      );

      render(
        '{% if "a" in obj %}yes{% endif %}',
        {},
        {
          noThrow: true
        },
        function(err, res) {
          expect(res).to.be(undefined);
          expect(err).to.match(
            /Cannot use "in" operator to search for "a" in unexpected types\./
          );
        }
      );

      finish(done);
    });

    if (!isSlim) {
      it('should throw exceptions when called synchronously', function() {
        var tmpl = new Template('{% from "doesnotexist" import foo %}');
        function templateRender() {
          tmpl.render();
        }
        expect(templateRender).to.throwException(/template not found: doesnotexist/);
      });

      it('should include error line in raised TemplateError', function(done) {
        var tmplStr = [
          '{% set items = ["a", "b",, "c"] %}',
          '{{ items | join(",") }}',
        ].join('\n');

        var loader = new Loader('tests/templates');
        var env = new Environment(loader);
        var tmpl = new Template(tmplStr, env, 'parse-error.njk');

        tmpl.render({}, function(err, res) {
          expect(res).to.be(undefined);
          expect(err.toString()).to.be([
            'Template render error: (parse-error.njk) [Line 1, Column 26]',
            '  unexpected token: ,',
          ].join('\n'));
          done();
        });
      });

      it('should include error line when exception raised in user function', function(done) {
        var tmplStr = [
          '{% block content %}',
          '<div>{{ foo() }}</div>',
          '{% endblock %}',
        ].join('\n');
        var env = new Environment(new Loader('tests/templates'));
        var tmpl = new Template(tmplStr, env, 'user-error.njk');

        function foo() {
          throw new Error('ERROR');
        }

        tmpl.render({foo: foo}, function(err, res) {
          expect(res).to.be(undefined);
          expect(err.toString()).to.be([
            'Template render error: (user-error.njk) [Line 1, Column 11]',
            '  Error: ERROR',
          ].join('\n'));
          done();
        });
      });
    }

    it('should throw exceptions from included templates when called synchronously', function() {
      function templateRender() {
        render('{% include "broken-import.njk" %}', {str: 'abc'});
      }
      expect(templateRender).to.throwException(/template not found: doesnotexist/);
    });

    it('should pass errors from included templates to callback when async', function(done) {
      render(
        '{% include "broken-import.njk" %}',
        {str: 'abc'},
        {noThrow: true},
        function(err, res) {
          expect(err).to.match(/template not found: doesnotexist/);
          expect(res).to.be(undefined);
          done();
        });
    });

    it('should compile string concatenations with tilde', function(done) {
      equal('{{ 4 ~ \'hello\' }}', '4hello');
      equal('{{ 4 ~ 5 }}', '45');
      equal('{{ \'a\' ~ \'b\' ~ 5 }}', 'ab5');
      finish(done);
    });

    it('should compile macros', function(done) {
      equal(
        '{% macro foo() %}This is a macro{% endmacro %}' +
        '{{ foo() }}',
        'This is a macro');
      finish(done);
    });

    it('should compile macros with optional args', function(done) {
      equal(
        '{% macro foo(x, y) %}{{ y }}{% endmacro %}' +
        '{{ foo(1) }}',
        '');
      finish(done);
    });

    it('should compile macros with args that can be passed to filters', function(done) {
      equal(
        '{% macro foo(x) %}{{ x|title }}{% endmacro %}' +
        '{{ foo("foo") }}',
        'Foo');
      finish(done);
    });

    it('should compile macros with positional args', function(done) {
      equal(
        '{% macro foo(x, y) %}{{ y }}{% endmacro %}' +
        '{{ foo(1, 2) }}',
        '2');
      finish(done);
    });

    it('should compile macros with arg defaults', function(done) {
      equal(
        '{% macro foo(x, y, z=5) %}{{ y }}{% endmacro %}' +
        '{{ foo(1, 2) }}',
        '2');
      equal(
        '{% macro foo(x, y, z=5) %}{{ z }}{% endmacro %}' +
        '{{ foo(1, 2) }}',
        '5');
      finish(done);
    });

    it('should compile macros with keyword args', function(done) {
      equal(
        '{% macro foo(x, y, z=5) %}{{ y }}{% endmacro %}' +
        '{{ foo(1, y=2) }}',
        '2');
      finish(done);
    });

    it('should compile macros with only keyword args', function(done) {
      equal(
        '{% macro foo(x, y, z=5) %}{{ x }}{{ y }}{{ z }}' +
        '{% endmacro %}' +
        '{{ foo(x=1, y=2) }}',
        '125');
      finish(done);
    });

    it('should compile macros with keyword args overriding defaults', function(done) {
      equal(
        '{% macro foo(x, y, z=5) %}{{ x }}{{ y }}{{ z }}' +
        '{% endmacro %}' +
        '{{ foo(x=1, y=2, z=3) }}',
        '123');
      finish(done);
    });

    it('should compile macros with out-of-order keyword args', function(done) {
      equal(
        '{% macro foo(x, y=2, z=5) %}{{ x }}{{ y }}{{ z }}' +
        '{% endmacro %}' +
        '{{ foo(1, z=3) }}',
        '123');
      finish(done);
    });

    it('should compile macros', function(done) {
      equal(
        '{% macro foo(x, y=2, z=5) %}{{ x }}{{ y }}{{ z }}' +
        '{% endmacro %}' +
        '{{ foo(1) }}',
        '125');
      finish(done);
    });

    it('should compile macros with multiple overridden arg defaults', function(done) {
      equal(
        '{% macro foo(x, y=2, z=5) %}{{ x }}{{ y }}{{ z }}' +
        '{% endmacro %}' +
        '{{ foo(1, 10, 20) }}',
        '11020');
      finish(done);
    });

    it('should compile macro calls inside blocks', function(done) {
      equal(
        '{% extends "base.njk" %}' +
        '{% macro foo(x, y=2, z=5) %}{{ x }}{{ y }}{{ z }}' +
        '{% endmacro %}' +
        '{% block block1 %}' +
        '{{ foo(1) }}' +
        '{% endblock %}',
        'Foo125BazFizzle');
      finish(done);
    });

    it('should compile macros defined in one block and called in another', function(done) {
      equal(
        '{% block bar %}' +
        '{% macro foo(x, y=2, z=5) %}{{ x }}{{ y }}{{ z }}' +
        '{% endmacro %}' +
        '{% endblock %}' +
        '{% block baz %}' +
        '{{ foo(1) }}' +
        '{% endblock %}',
        '125');
      finish(done);
    });

    it('should compile macros that include other templates', function(done) {
      equal(
        '{% macro foo() %}{% include "include.njk" %}{% endmacro %}' +
        '{{ foo() }}',
        {
          name: 'james'
        },
        'FooInclude james');
      finish(done);
    });

    it('should compile macros that set vars', function(done) {
      equal(
        '{% macro foo() %}{% set x = "foo"%}{{ x }}{% endmacro %}' +
        '{% set x = "bar" %}' +
        '{{ x }}' +
        '{{ foo() }}' +
        '{{ x }}',
        'barfoobar');

      finish(done);
    });

    it('should not leak variables set in macro to calling scope', function(done) {
      equal(
        '{% macro setFoo() %}' +
        '{% set x = "foo" %}' +
        '{{ x }}' +
        '{% endmacro %}' +
        '{% macro display() %}' +
        '{% set x = "bar" %}' +
        '{{ setFoo() }}' +
        '{{ x }}' +
        '{% endmacro %}' +
        '{{ display() }}',
        'foobar');

      finish(done);
    });

    it('should not leak variables set in nested scope within macro out to calling scope', function(done) {
      equal(
        '{% macro setFoo() %}' +
        '{% for y in [1] %}{% set x = "foo" %}{{ x }}{% endfor %}' +
        '{% endmacro %}' +
        '{% macro display() %}' +
        '{% set x = "bar" %}' +
        '{{ setFoo() }}' +
        '{{ x }}' +
        '{% endmacro %}' +
        '{{ display() }}',
        'foobar');

      finish(done);
    });

    it('should compile macros without leaking set to calling scope', function(done) {
      // This test checks that the issue #577 is resolved.
      // If the bug is not fixed, and set variables leak into the
      // caller scope, there will be too many "foo"s here ("foofoofoo"),
      // because each recursive call will append a "foo" to the
      // variable x in its caller's scope, instead of just its own.
      equal(
        '{% macro foo(topLevel, prefix="") %}' +
        '{% if topLevel %}' +
        '{% set x = "" %}' +
        '{% for i in [1,2] %}' +
        '{{ foo(false, x) }}' +
        '{% endfor %}' +
        '{% else %}' +
        '{% set x = prefix + "foo" %}' +
        '{{ x }}' +
        '{% endif %}' +
        '{% endmacro %}' +
        '{{ foo(true) }}',
        'foofoo');

      finish(done);
    });

    it('should compile macros that cannot see variables in caller scope', function(done) {
      equal(
        '{% macro one(var) %}{{ two() }}{% endmacro %}' +
        '{% macro two() %}{{ var }}{% endmacro %}' +
        '{{ one("foo") }}',
        '');
      finish(done);
    });

    it('should compile call blocks', function(done) {
      equal(
        '{% macro wrap(el) %}' +
        '<{{ el }}>{{ caller() }}</{{ el }}>' +
        '{% endmacro %}' +
        '{% call wrap("div") %}Hello{% endcall %}',
        '<div>Hello</div>');

      finish(done);
    });

    it('should compile call blocks with args', function(done) {
      equal(
        '{% macro list(items) %}' +
        '<ul>{% for i in items %}' +
        '<li>{{ caller(i) }}</li>' +
        '{% endfor %}</ul>' +
        '{% endmacro %}' +
        '{% call(item) list(["a", "b"]) %}{{ item }}{% endcall %}',
        '<ul><li>a</li><li>b</li></ul>');

      finish(done);
    });

    it('should compile call blocks using imported macros', function(done) {
      equal(
        '{% import "import.njk" as imp %}' +
        '{% call imp.wrap("span") %}Hey{% endcall %}',
        '<span>Hey</span>');
      finish(done);
    });

    it('should import templates', function(done) {
      equal(
        '{% import "import.njk" as imp %}' +
        '{{ imp.foo() }} {{ imp.bar }}',
        'Here\'s a macro baz');

      equal(
        '{% from "import.njk" import foo as baz, bar %}' +
        '{{ bar }} {{ baz() }}',
        'baz Here\'s a macro');

      // TODO: Should the for loop create a new frame for each
      // iteration? As it is, `num` is set on all iterations after
      // the first one sets it
      equal(
        '{% for i in [1,2] %}' +
        'start: {{ num }}' +
        '{% from "import.njk" import bar as num %}' +
        'end: {{ num }}' +
        '{% endfor %}' +
        'final: {{ num }}',
        'start: end: bazstart: bazend: bazfinal: ');

      finish(done);
    });

    it('should import templates with context', function(done) {
      equal(
        '{% set bar = "BAR" %}' +
        '{% import "import-context.njk" as imp with context %}' +
        '{{ imp.foo() }}',
        'Here\'s BAR');

      equal(
        '{% set bar = "BAR" %}' +
        '{% from "import-context.njk" import foo with context %}' +
        '{{ foo() }}',
        'Here\'s BAR');

      equal(
        '{% set bar = "BAR" %}' +
        '{% import "import-context-set.njk" as imp %}' +
        '{{ bar }}',
        'BAR');

      equal(
        '{% set bar = "BAR" %}' +
        '{% import "import-context-set.njk" as imp %}' +
        '{{ imp.bar }}',
        'FOO');

      equal(
        '{% set bar = "BAR" %}' +
        '{% import "import-context-set.njk" as imp with context %}' +
        '{{ bar }}{{ buzz }}',
        'FOO');

      equal(
        '{% set bar = "BAR" %}' +
        '{% import "import-context-set.njk" as imp with context %}' +
        '{{ imp.bar }}{{ buzz }}',
        'FOO');

      finish(done);
    });

    it('should import templates without context', function(done) {
      equal(
        '{% set bar = "BAR" %}' +
        '{% import "import-context.njk" as imp without context %}' +
        '{{ imp.foo() }}',
        'Here\'s ');

      equal(
        '{% set bar = "BAR" %}' +
        '{% from "import-context.njk" import foo without context %}' +
        '{{ foo() }}',
        'Here\'s ');

      finish(done);
    });

    it('should default to importing without context', function(done) {
      equal(
        '{% set bar = "BAR" %}' +
        '{% import "import-context.njk" as imp %}' +
        '{{ imp.foo() }}',
        'Here\'s ');

      equal(
        '{% set bar = "BAR" %}' +
        '{% from "import-context.njk" import foo %}' +
        '{{ foo() }}',
        'Here\'s ');

      finish(done);
    });

    it('should inherit templates', function(done) {
      equal('{% extends "base.njk" %}', 'FooBarBazFizzle');
      equal('hola {% extends "base.njk" %} hizzle mumble', 'FooBarBazFizzle');

      equal('{% extends "base.njk" %}{% block block1 %}BAR{% endblock %}',
        'FooBARBazFizzle');

      equal(
        '{% extends "base.njk" %}' +
        '{% block block1 %}BAR{% endblock %}' +
        '{% block block2 %}BAZ{% endblock %}',
        'FooBARBAZFizzle');

      equal('hola {% extends tmpl %} hizzle mumble',
        { tmpl: 'base.njk' },
        'FooBarBazFizzle');

      finish(done);
    });
    it('should not call blocks not defined from template inheritance', function(done) {
      var count = 0;
      render(
        '{% extends "base.njk" %}' +
        '{% block notReal %}{{ foo() }}{% endblock %}',
        { foo: function() { count++; } },
        function() {
          expect(count).to.be(0);
        });

      finish(done);
    });

    it('should conditionally inherit templates', function(done) {
      equal(
        '{% if false %}{% extends "base.njk" %}{% endif %}' +
        '{% block block1 %}BAR{% endblock %}',
        'BAR');

      equal(
        '{% if true %}{% extends "base.njk" %}{% endif %}' +
        '{% block block1 %}BAR{% endblock %}',
        'FooBARBazFizzle');

      equal(
        '{% if true %}' +
        '{% extends "base.njk" %}' +
        '{% else %}' +
        '{% extends "base2.njk" %}' +
        '{% endif %}' +
        '{% block block1 %}HELLO{% endblock %}',
        'FooHELLOBazFizzle');

      equal(
        '{% if false %}' +
        '{% extends "base.njk" %}' +
        '{% else %}' +
        '{% extends "base2.njk" %}' +
        '{% endif %}' +
        '{% block item %}hello{{ item }}{% endblock %}',
        'hello1hello2');

      finish(done);
    });

    it('should error if same block is defined multiple times', function(done) {
      var func = function() {
        render(
          '{% extends "simple-base.njk" %}' +
          '{% block test %}{% endblock %}' +
          '{% block test %}{% endblock %}');
      };

      expect(func).to.throwException(/Block "test" defined more than once./);

      finish(done);
    });

    it('should render nested blocks in child template', function(done) {
      equal(
        '{% extends "base.njk" %}' +
        '{% block block1 %}{% block nested %}BAR{% endblock %}{% endblock %}',
        'FooBARBazFizzle');

      finish(done);
    });

    it('should render parent blocks with super()', function(done) {
      equal(
        '{% extends "base.njk" %}' +
        '{% block block1 %}{{ super() }}BAR{% endblock %}',
        'FooBarBARBazFizzle');

      // two levels of `super` should work
      equal(
        '{% extends "base-inherit.njk" %}' +
        '{% block block1 %}*{{ super() }}*{% endblock %}',
        'Foo**Bar**BazFizzle');

      finish(done);
    });

    it('should let super() see global vars from child template', function(done) {
      equal(
        '{% extends "base-show.njk" %}{% set var = "child" %}' +
        '{% block main %}{{ super() }}{% endblock %}',
        'child');

      finish(done);
    });

    it('should not let super() see vars from child block', function(done) {
      equal(
        '{% extends "base-show.njk" %}' +
        '{% block main %}{% set var = "child" %}{{ super() }}{% endblock %}',
        '');

      finish(done);
    });

    it('should let child templates access parent global scope', function(done) {
      equal(
        '{% extends "base-set.njk" %}' +
        '{% block main %}{{ var }}{% endblock %}',
        'parent');

      finish(done);
    });

    it('should not let super() modify calling scope', function(done) {
      equal(
        '{% extends "base-set-inside-block.njk" %}' +
        '{% block main %}{{ super() }}{{ var }}{% endblock %}',
        '');

      finish(done);
    });

    it('should not let child templates set vars in parent scope', function(done) {
      equal(
        '{% extends "base-set-and-show.njk" %}' +
        '{% block main %}{% set var = "child" %}{% endblock %}',
        'parent');

      finish(done);
    });

    it('should render blocks in their own scope', function(done) {
      equal(
        '{% set var = "parent" %}' +
        '{% block main %}{% set var = "inner" %}{% endblock %}' +
        '{{ var }}',
        'parent');

      finish(done);
    });

    it('should include templates', function(done) {
      equal('hello world {% include "include.njk" %}',
        'hello world FooInclude ');
      finish(done);
    });

    it('should include 130 templates without call stack size exceed', function(done) {
      equal('{% include "includeMany.njk" %}',
        new Array(131).join('FooInclude \n'));
      finish(done);
    });

    it('should include templates with context', function(done) {
      equal('hello world {% include "include.njk" %}',
        {
          name: 'james'
        },
        'hello world FooInclude james');
      finish(done);
    });

    it('should include templates that can see including scope, but not write to it', function(done) {
      equal('{% set var = 1 %}{% include "include-set.njk" %}{{ var }}', '12\n1');
      finish(done);
    });

    it('should include templates dynamically', function(done) {
      equal('hello world {% include tmpl %}',
        {
          name: 'thedude',
          tmpl: 'include.njk'
        },
        'hello world FooInclude thedude');
      finish(done);
    });

    it('should include templates dynamically based on a set var', function(done) {
      equal('hello world {% set tmpl = "include.njk" %}{% include tmpl %}',
        {
          name: 'thedude'
        },
        'hello world FooInclude thedude');
      finish(done);
    });

    it('should include templates dynamically based on an object attr', function(done) {
      equal('hello world {% include data.tmpl %}',
        {
          name: 'thedude',
          data: {
            tmpl: 'include.njk'
          }
        },
        'hello world FooInclude thedude');

      finish(done);
    });

    it('should throw an error when including a file that does not exist', function(done) {
      render(
        '{% include "missing.njk" %}',
        {},
        {
          noThrow: true
        },
        function(err, res) {
          expect(res).to.be(undefined);
          expect(err).to.match(/template not found: missing.njk/);
        }
      );

      finish(done);
    });

    it('should fail silently on missing templates if requested', function(done) {
      equal('hello world {% include "missing.njk" ignore missing %}',
        'hello world ');

      equal('hello world {% include "missing.njk" ignore missing %}',
        {
          name: 'thedude'
        },
        'hello world ');

      finish(done);
    });

    /**
     * This test checks that this issue is resolved: http://stackoverflow.com/questions/21777058/loop-index-in-included-nunjucks-file
     */
    it('should have access to "loop" inside an include', function(done) {
      equal('{% for item in [1,2,3] %}{% include "include-in-loop.njk" %}{% endfor %}',
        '1,0,true\n2,1,false\n3,2,false\n');

      equal('{% for k,v in items %}{% include "include-in-loop.njk" %}{% endfor %}',
        {
          items: {
            a: 'A',
            b: 'B'
          }
        },
        '1,0,true\n2,1,false\n');

      finish(done);
    });

    it('should maintain nested scopes', function(done) {
      equal(
        '{% for i in [1,2] %}' +
        '{% for i in [3,4] %}{{ i }}{% endfor %}' +
        '{{ i }}{% endfor %}',
        '341342');

      finish(done);
    });

    it('should allow blocks in for loops', function(done) {
      equal(
        '{% extends "base2.njk" %}' +
        '{% block item %}hello{{ item }}{% endblock %}',
        'hello1hello2');

      finish(done);
    });

    it('should make includes inherit scope', function(done) {
      equal(
        '{% for item in [1,2] %}' +
        '{% include "item.njk" %}' +
        '{% endfor %}',
        'showing 1showing 2');

      finish(done);
    });

    it('should compile a set block', function(done) {
      equal('{% set username = "foo" %}{{ username }}',
        {
          username: 'james'
        },
        'foo');

      equal('{% set x, y = "foo" %}{{ x }}{{ y }}',
        'foofoo');

      equal('{% set x = 1 + 2 %}{{ x }}',
        '3');

      equal('{% for i in [1] %}{% set foo=1 %}{% endfor %}{{ foo }}',
        {
          foo: 2
        },
        '2');

      equal('{% include "set.njk" %}{{ foo }}',
        {
          foo: 'bar'
        },
        'bar');

      equal('{% set username = username + "pasta" %}{{ username }}',
        {
          username: 'basta'
        },
        'bastapasta');

      // `set` should only set within its current scope
      equal(
        '{% for i in [1] %}{% set val=5 %}{% endfor %}' +
        '{{ val }}',
        '');

      equal(
        '{% for i in [1,2,3] %}' +
        '{% if not val %}{% set val=5 %}{% endif %}' +
        '{% set val=val+1 %}{{ val }}' +
        '{% endfor %}' +
        'afterwards: {{ val }}',
        '678afterwards: ');

      // however, like Python, if a variable has been set in an
      // above scope, any other set should correctly resolve to
      // that frame
      equal(
        '{% set val=1 %}' +
        '{% for i in [1] %}{% set val=5 %}{% endfor %}' +
        '{{ val }}',
        '5');

      equal(
        '{% set val=5 %}' +
        '{% for i in [1,2,3] %}' +
        '{% set val=val+1 %}{{ val }}' +
        '{% endfor %}' +
        'afterwards: {{ val }}',
        '678afterwards: 8');

      finish(done);
    });

    it('should compile set with frame references', function(done) {
      equal('{% set username = user.name %}{{ username }}',
        {
          user: {
            name: 'james'
          }
        },
        'james');

      finish(done);
    });

    it('should compile set assignments of the same variable', function(done) {
      equal(
        '{% set x = "hello" %}' +
        '{% if false %}{% set x = "world" %}{% endif %}' +
        '{{ x }}',
        'hello');

      equal(
        '{% set x = "blue" %}' +
        '{% if true %}{% set x = "green" %}{% endif %}' +
        '{{ x }}',
        'green');

      finish(done);
    });

    it('should compile block-set', function(done) {
      equal(
        '{% set block_content %}{% endset %}' +
        '{{ block_content }}',
        ''
      );

      /**
       * Capture blocks inside macros were printing to the main buffer instead of
       * the temporary one, see https://github.com/mozilla/nunjucks/issues/914.
       **/
      equal(
        '{%- macro foo(bar) -%}' +
        '{%- set test -%}foo{%- endset -%}' +
        '{{ bar }}{{ test }}' +
        '{%- endmacro -%}' +
        '{{ foo("bar") }}',
        'barfoo'
      );

      equal(
        '{% set block_content %}test string{% endset %}' +
        '{{ block_content }}',
        'test string'
      );

      equal(
        '{% set block_content %}' +
        '{% for item in [1, 2, 3] %}' +
        '{% include "item.njk" %} ' +
        '{% endfor %}' +
        '{% endset %}' +
        '{{ block_content }}',
        'showing 1 showing 2 showing 3 '
      );

      equal(
        '{% set block_content %}' +
        '{% set inner_block_content %}' +
        '{% for i in [1, 2, 3] %}' +
        'item {{ i }} ' +
        '{% endfor %}' +
        '{% endset %}' +
        '{% for i in [1, 2, 3] %}' +
        'inner {{i}}: "{{ inner_block_content }}" ' +
        '{% endfor %}' +
        '{% endset %}' +
        '{{ block_content | safe }}',
        'inner 1: "item 1 item 2 item 3 " ' +
        'inner 2: "item 1 item 2 item 3 " ' +
        'inner 3: "item 1 item 2 item 3 " '
      );

      equal(
        '{% set x,y,z %}' +
        'cool' +
        '{% endset %}' +
        '{{ x }} {{ y }} {{ z }}',
        'cool cool cool'
      );

      finish(done);
    });

    it('should compile block-set wrapping an inherited block', function(done) {
      equal(
        '{% extends "base-set-wraps-block.njk" %}' +
        '{% block somevar %}foo{% endblock %}',
        'foo\n'
      );
      finish(done);
    });

    it('should throw errors', function(done) {
      render('{% from "import.njk" import boozle %}',
        {},
        {
          noThrow: true
        },
        function(err) {
          expect(err).to.match(/cannot import 'boozle'/);
        });

      finish(done);
    });

    it('should allow custom tag compilation', function(done) {
      function TestExtension() {
        this.tags = ['test'];

        this.parse = function(parser, nodes) {
          var content;
          var tag;
          parser.advanceAfterBlockEnd();

          content = parser.parseUntilBlocks('endtest');
          tag = new nodes.CallExtension(this, 'run', null, [content]);
          parser.advanceAfterBlockEnd();

          return tag;
        };

        this.run = function(context, content) {
          // Reverse the string
          return content().split('').reverse().join('');
        };
      }

      equal('{% test %}123456789{% endtest %}', null,
        { extensions: { TestExtension: new TestExtension() } },
        '987654321');

      finish(done);
    });

    it('should allow custom tag compilation without content', function(done) {
      function TestExtension() {
        // jshint validthis: true
        this.tags = ['test'];

        this.parse = function(parser, nodes) {
          var tok = parser.nextToken();
          var args = parser.parseSignature(null, true);
          parser.advanceAfterBlockEnd(tok.value);

          return new nodes.CallExtension(this, 'run', args, null);
        };

        this.run = function(context, arg1) {
          // Reverse the string
          return arg1.split('').reverse().join('');
        };
      }

      equal('{% test "123456" %}', null,
        { extensions: { TestExtension: new TestExtension() } },
        '654321');

      finish(done);
    });

    it('should allow complicated custom tag compilation', function(done) {
      function TestExtension() {
        // jshint validthis: true
        this.tags = ['test'];

        /* normally this is automatically done by Environment */
        this._name = TestExtension;

        this.parse = function(parser, nodes, lexer) {
          var body;
          var intermediate = null;

          parser.advanceAfterBlockEnd();

          body = parser.parseUntilBlocks('intermediate', 'endtest');

          if (parser.skipSymbol('intermediate')) {
            parser.skip(lexer.TOKEN_BLOCK_END);
            intermediate = parser.parseUntilBlocks('endtest');
          }

          parser.advanceAfterBlockEnd();

          return new nodes.CallExtension(this, 'run', null, [body, intermediate]);
        };

        this.run = function(context, body, intermediate) {
          var output = body().split('').join(',');
          if (intermediate) {
            // Reverse the string.
            output += intermediate().split('').reverse().join('');
          }
          return output;
        };
      }

      equal('{% test %}abcdefg{% endtest %}', null,
        { extensions: { TestExtension: new TestExtension() } },
        'a,b,c,d,e,f,g');

      equal('{% test %}abcdefg{% intermediate %}second half{% endtest %}',
        null,
        { extensions: { TestExtension: new TestExtension() } },
        'a,b,c,d,e,f,gflah dnoces');

      finish(done);
    });

    it('should allow custom tag with args compilation', function(done) {
      var opts;

      function TestExtension() {
        // jshint validthis: true
        this.tags = ['test'];

        /* normally this is automatically done by Environment */
        this._name = TestExtension;

        this.parse = function(parser, nodes) {
          var body;
          var args;
          var tok = parser.nextToken();

          // passing true makes it tolerate when no args exist
          args = parser.parseSignature(true);
          parser.advanceAfterBlockEnd(tok.value);

          body = parser.parseUntilBlocks('endtest');
          parser.advanceAfterBlockEnd();

          return new nodes.CallExtension(this, 'run', args, [body]);
        };

        this.run = function(context, prefix, kwargs, body) {
          var output;
          if (typeof prefix === 'function') {
            body = prefix;
            prefix = '';
            kwargs = {};
          } else if (typeof kwargs === 'function') {
            body = kwargs;
            kwargs = {};
          }

          output = prefix + body().split('').reverse().join('');
          if (kwargs.cutoff) {
            output = output.slice(0, kwargs.cutoff);
          }

          return output;
        };
      }

      opts = {
        extensions: {
          TestExtension: new TestExtension()
        }
      };

      equal(
        '{% test %}foobar{% endtest %}', null, opts,
        'raboof');

      equal(
        '{% test("biz") %}foobar{% endtest %}', null, opts,
        'bizraboof');

      equal(
        '{% test("biz", cutoff=5) %}foobar{% endtest %}', null, opts,
        'bizra');

      finish(done);
    });

    it('should autoescape by default', function(done) {
      equal('{{ foo }}', {
        foo: '"\'<>&'
      }, '&quot;&#39;&lt;&gt;&amp;');
      finish(done);
    });

    it('should autoescape if autoescape is on', function(done) {
      equal(
        '{{ foo }}',
        { foo: '"\'<>&' },
        { autoescape: true },
        '&quot;&#39;&lt;&gt;&amp;');

      equal('{{ foo|reverse }}',
        { foo: '"\'<>&' },
        { autoescape: true },
        '&amp;&gt;&lt;&#39;&quot;');

      equal(
        '{{ foo|reverse|safe }}',
        { foo: '"\'<>&' },
        { autoescape: true },
        '&><\'"');

      equal(
        '{{ foo }}',
        { foo: null },
        { autoescape: true },
        '');

      equal(
        '{{ foo }}',
        { foo: ['<p>foo</p>'] },
        { autoescape: true },
        '&lt;p&gt;foo&lt;/p&gt;');

      equal(
        '{{ foo }}',
        { foo: { toString: function() { return '<p>foo</p>'; } } },
        { autoescape: true },
        '&lt;p&gt;foo&lt;/p&gt;');

      equal('{{ foo | safe }}',
        { foo: null },
        { autoescape: true },
        '');

      equal(
        '{{ foo | safe }}',
        { foo: '<p>foo</p>' },
        { autoescape: true },
        '<p>foo</p>');

      equal(
        '{{ foo | safe }}',
        { foo: ['<p>foo</p>'] },
        { autoescape: true },
        '<p>foo</p>');

      equal(
        '{{ foo | safe }}',
        { foo: { toString: function() { return '<p>foo</p>'; } } },
        { autoescape: true },
        '<p>foo</p>');

      finish(done);
    });

    it('should not autoescape safe strings', function(done) {
      equal(
        '{{ foo|safe }}',
        { foo: '"\'<>&' },
        { autoescape: true },
        '"\'<>&');

      finish(done);
    });

    it('should not autoescape macros', function(done) {
      render(
        '{% macro foo(x, y) %}{{ x }} and {{ y }}{% endmacro %}' +
        '{{ foo("<>&", "<>") }}',
        null,
        {
          autoescape: true
        },
        function(err, res) {
          expect(res).to.be('&lt;&gt;&amp; and &lt;&gt;');
        }
      );

      render(
        '{% macro foo(x, y) %}{{ x|safe }} and {{ y }}{% endmacro %}' +
        '{{ foo("<>&", "<>") }}',
        null,
        {
          autoescape: true
        },
        function(err, res) {
          expect(res).to.be('<>& and &lt;&gt;');
        }
      );

      finish(done);
    });

    it('should not autoescape super()', function(done) {
      render(
        '{% extends "base3.njk" %}' +
        '{% block block1 %}{{ super() }}{% endblock %}',
        null,
        {
          autoescape: true
        },
        function(err, res) {
          expect(res).to.be('<b>Foo</b>');
        }
      );

      finish(done);
    });

    it('should autoescape backslashes', function(done) {
      equal(
        '{{ foo }}',
        { foo: 'foo \\\' bar' },
        { autoescape: true },
        'foo &#92;&#39; bar');

      finish(done);
    });

    it('should not autoescape when extension set false', function(done) {
      function TestExtension() {
        // jshint validthis: true
        this.tags = ['test'];

        this.autoescape = false;

        this.parse = function(parser, nodes) {
          var tok = parser.nextToken();
          var args = parser.parseSignature(null, true);
          parser.advanceAfterBlockEnd(tok.value);
          return new nodes.CallExtension(this, 'run', args, null);
        };

        this.run = function() {
          // Reverse the string
          return '<b>Foo</b>';
        };
      }

      render(
        '{% test "123456" %}',
        null,
        {
          extensions: { TestExtension: new TestExtension() },
          autoescape: true
        },
        function(err, res) {
          expect(res).to.be('<b>Foo</b>');
        }
      );

      finish(done);
    });

    it('should pass context as this to filters', function(done) {
      render(
        '{{ foo | hallo }}',
        { foo: 1, bar: 2 },
        {
          filters: {
            hallo: function(foo) {
              return foo + this.lookup('bar');
            }
          }
        },
        function(err, res) {
          expect(res).to.be('3');
        }
      );

      finish(done);
    });

    it('should render regexs', function(done) {
      equal('{{ r/name [0-9] \\// }}', {}, { autoescape: false },
        '/name [0-9] \\//');

      equal('{{ r/x/gi }}',
        '/x/gi');

      finish(done);
    });

    it('should throw an error when {% call %} is passed an object that is not a function', function(done) {
      render(
        '{% call foo() %}{% endcall %}',
        {foo: 'bar'},
        {noThrow: true},
        function(err, res) {
          expect(res).to.be(undefined);
          expect(err).to.match(/Unable to call `\w+`, which is not a function/);
        });

      finish(done);
    });

    it('should throw an error when including a file that calls an undefined macro', function(done) {
      render(
        '{% include "undefined-macro.njk" %}',
        {},
        {
          noThrow: true
        },
        function(err, res) {
          expect(res).to.be(undefined);
          expect(err).to.match(/Unable to call `\w+`, which is undefined or falsey/);
        }
      );

      finish(done);
    });

    it('should throw an error when including a file that calls an undefined macro even inside {% if %} tag', function(done) {
      render(
        '{% if true %}{% include "undefined-macro.njk" %}{% endif %}',
        {},
        {
          noThrow: true
        },
        function(err, res) {
          expect(res).to.be(undefined);
          expect(err).to.match(/Unable to call `\w+`, which is undefined or falsey/);
        }
      );

      finish(done);
    });

    it('should throw an error when including a file that imports macro that calls an undefined macro', function(done) {
      render(
        '{% include "import-macro-call-undefined-macro.njk" %}',
        { list: [1, 2, 3] },
        { noThrow: true },
        function(err, res) {
          expect(res).to.be(undefined);
          expect(err).to.match(/Unable to call `\w+`, which is undefined or falsey/);
        }
      );

      finish(done);
    });


    it('should control whitespaces correctly', function(done) {
      equal(
        '{% if true -%}{{"hello"}} {{"world"}}{% endif %}',
        'hello world');

      equal(
        '{% if true -%}{% if true %} {{"hello"}} {{"world"}}'
        + '{% endif %}{% endif %}',
        ' hello world');

      equal(
        '{% if true -%}{# comment #} {{"hello"}}{% endif %}',
        ' hello');

      finish(done);
    });

    it('should control expression whitespaces correctly', function(done) {
      equal(
        'Well, {{- \' hello, \' -}} my friend',
        'Well, hello, my friend'
      );

      equal(' {{ 2 + 2 }} ', ' 4 ');

      equal(' {{-2 + 2 }} ', '4 ');

      equal(' {{ -2 + 2 }} ', ' 0 ');

      equal(' {{ 2 + 2 -}} ', ' 4');

      finish(done);
    });

    it('should get right value when macro parameter conflict with global macro name', function(done) {
      render(
        '{# macro1 and macro2 definition #}' +
        '{% macro macro1() %}' +
        '{% endmacro %}' +
        '' +
        '{% macro macro2(macro1="default") %}' +
        '{{macro1}}' +
        '{% endmacro %}' +
        '' +
        '{# calling macro2 #}' +
        '{{macro2("this should be outputted") }}', {}, {}, function(err, res) {
          expect(res.trim()).to.eql('this should be outputted');
        });

      finish(done);
    });

    it('should get right value when macro include macro', function(done) {
      render(
        '{# macro1 and macro2 definition #}' +
        '{% macro macro1() %} foo' +
        '{% endmacro %}' +
        '' +
        '{% macro macro2(text="default") %}' +
        '{{macro1()}}' +
        '{% endmacro %}' +
        '' +
        '{# calling macro2 #}' +
        '{{macro2("this should not be outputted") }}', {}, {}, function(err, res) {
          expect(res.trim()).to.eql('foo');
        });

      finish(done);
    });

    it('should allow access to outer scope in call blocks', function(done) {
      render(
        '{% macro inside() %}' +
        '{{ caller() }}' +
        '{% endmacro %}' +
        '{% macro outside(var) %}' +
        '{{ var }}\n' +
        '{% call inside() %}' +
        '{{ var }}' +
        '{% endcall %}' +
        '{% endmacro %}' +
        '{{ outside("foobar") }}', {}, {}, function(err, res) {
          expect(res.trim()).to.eql('foobar\nfoobar');
        });

      finish(done);
    });

    it('should not leak scope from call blocks to parent', function(done) {
      render(
        '{% set var = "expected" %}' +
        '{% macro inside() %}' +
        '{% set var = "incorrect-value" %}' +
        '{{ caller() }}' +
        '{% endmacro %}' +
        '{% macro outside() %}' +
        '{% call inside() %}' +
        '{% endcall %}' +
        '{% endmacro %}' +
        '{{ outside() }}' +
        '{{ var }}', {}, {}, function(err, res) {
          expect(res.trim()).to.eql('expected');
        });

      finish(done);
    });


    if (!isSlim) {
      it('should import template objects', function(done) {
        var tmpl = new Template('{% macro foo() %}Inside a macro{% endmacro %}' +
          '{% set bar = "BAZ" %}');

        equal(
          '{% import tmpl as imp %}' +
          '{{ imp.foo() }} {{ imp.bar }}',
          {
            tmpl: tmpl
          },
          'Inside a macro BAZ');

        equal(
          '{% from tmpl import foo as baz, bar %}' +
          '{{ bar }} {{ baz() }}',
          {
            tmpl: tmpl
          },
          'BAZ Inside a macro');

        finish(done);
      });

      it('should inherit template objects', function(done) {
        var tmpl = new Template('Foo{% block block1 %}Bar{% endblock %}' +
          '{% block block2 %}Baz{% endblock %}Whizzle');

        equal('hola {% extends tmpl %} fizzle mumble',
          {
            tmpl: tmpl
          },
          'FooBarBazWhizzle');

        equal(
          '{% extends tmpl %}' +
          '{% block block1 %}BAR{% endblock %}' +
          '{% block block2 %}BAZ{% endblock %}',
          {
            tmpl: tmpl
          },
          'FooBARBAZWhizzle');

        finish(done);
      });

      it('should include template objects', function(done) {
        var tmpl = new Template('FooInclude {{ name }}');

        equal('hello world {% include tmpl %}',
          {
            name: 'thedude',
            tmpl: tmpl
          },
          'hello world FooInclude thedude');

        finish(done);
      });

      it('should throw an error when invalid expression whitespaces are used', function(done) {
        render(
          ' {{ 2 + 2- }}',
          {},
          {
            noThrow: true
          },
          function(err, res) {
            expect(res).to.be(undefined);
            expect(err).to.match(/unexpected token: }}/);
          }
        );

        finish(done);
      });
    }
  });

  describe('the filter tag', function() {
    it('should apply the title filter to the body', function(done) {
      equal('{% filter title %}may the force be with you{% endfilter %}',
        'May The Force Be With You');
      finish(done);
    });

    it('should apply the replace filter to the body', function(done) {
      equal('{% filter replace("force", "forth") %}may the force be with you{% endfilter %}',
        'may the forth be with you');
      finish(done);
    });

    it('should work with variables in the body', function(done) {
      equal('{% set foo = "force" %}{% filter replace("force", "forth") %}may the {{ foo }} be with you{% endfilter %}',
        'may the forth be with you');
      finish(done);
    });

    it('should work with blocks in the body', function(done) {
      equal(
        '{% extends "filter-block.html" %}' +
        '{% block block1 %}force{% endblock %}',
        'may the forth be with you\n');
      finish(done);
    });
  });
}());


/***/ }),

/***/ 7488:
/*!**************************!*\
  !*** ./tests/filters.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

(function() {
  'use strict';

  var expect;
  var util;
  var lib;
  var r;
  var render;
  var equal;
  var finish;

  if (true) {
    expect = __webpack_require__(/*! expect.js */ 1801);
    util = __webpack_require__(/*! ./util */ 9099);
    lib = __webpack_require__(/*! ../nunjucks/src/lib */ 449);
    r = __webpack_require__(/*! ../nunjucks/src/runtime */ 5434);
  } else {}

  render = util.render;
  equal = util.equal;
  finish = util.finish;

  describe('filter', function() {
    it('abs', function(done) {
      equal('{{ -3|abs }}', '3');
      equal('{{ -3.456|abs }}', '3.456');
      finish(done);
    });

    it('batch', function(done) {
      equal(
        [
          '{% for a in [1,2,3,4,5,6]|batch(2) %}',
          '-{% for b in a %}',
          '{{ b }}',
          '{% endfor %}-',
          '{% endfor %}'].join(''),
        '-12--34--56-');

      finish(done);
    });

    it('capitalize', function(done) {
      equal('{{ "foo" | capitalize }}', 'Foo');
      equal('{{ str | capitalize }}', {
        str: r.markSafe('foo')
      }, 'Foo');
      equal('{{ undefined | capitalize }}', '');
      equal('{{ null | capitalize }}', '');
      equal('{{ nothing | capitalize }}', '');
      finish(done);
    });

    it('center', function(done) {
      equal('{{ "fooo" | center }}',
        lib.repeat(' ', 38) + 'fooo' +
        lib.repeat(' ', 38));

      equal('{{ str | center }}',
        {str: r.markSafe('fooo')},
        lib.repeat(' ', 38) + 'fooo' + lib.repeat(' ', 38));

      equal('{{ undefined | center }}',
        lib.repeat(' ', 40) + '' +
        lib.repeat(' ', 40));

      equal('{{ null | center }}',
        lib.repeat(' ', 40) + '' +
        lib.repeat(' ', 40));

      equal('{{ nothing | center }}',
        lib.repeat(' ', 40) + '' +
        lib.repeat(' ', 40));

      equal('{{ "foo" | center }}',
        lib.repeat(' ', 38) + 'foo' +
        lib.repeat(' ', 39));
      finish(done);
    });

    it('default', function(done) {
      equal('{{ undefined | default("foo") }}', 'foo');
      equal('{{ bar | default("foo") }}', {
        bar: null
      }, '');
      equal('{{ false | default("foo") }}', 'false');
      equal('{{ false | default("foo", true) }}', 'foo');
      equal('{{ bar | default("foo") }}', 'foo');
      equal('{{ "bar" | default("foo") }}', 'bar');
      finish(done);
    });

    it('dump', function() {
      equal('{{ [\'a\', 1, {b: true}] | dump  }}',
        '[&quot;a&quot;,1,{&quot;b&quot;:true}]');
      equal('{{ [\'a\', 1, {b: true}] | dump(2) }}',
        '[\n  &quot;a&quot;,\n  1,\n  {\n    &quot;b&quot;: true\n  }\n]');
      equal('{{ [\'a\', 1, {b: true}] | dump(4) }}',
        '[\n    &quot;a&quot;,\n    1,\n    {\n        &quot;b&quot;: true\n    }\n]');
      equal('{{ [\'a\', 1, {b: true}] | dump(\'\t\') }}',
        '[\n\t&quot;a&quot;,\n\t1,\n\t{\n\t\t&quot;b&quot;: true\n\t}\n]');
    });

    it('escape', function() {
      equal(
        '{{ "<html>\\\\" | escape }}', {},
        { autoescape: false },
        '&lt;html&gt;&#92;');
    });

    it('escape skip safe', function() {
      equal('{{ "<html>" | safe | escape }}', {},
        { autoescape: false },
        '<html>');
    });

    it('should not double escape strings', function() {
      equal('{{ "<html>" | escape | escape }}', {},
        { autoescape: false },
        '&lt;html&gt;');
    });

    it('should not double escape with autoescape on', function() {
      equal('{% set val = "<html>" | escape %}{{ val }}', {},
        { autoescape: true },
        '&lt;html&gt;');
    });

    it('should work with non-string values', function() {
      equal(
        '{{ foo | escape }}',
        { foo: ['<html>'] },
        { autoescape: false },
        '&lt;html&gt;');

      equal(
        '{{ foo | escape }}',
        { foo: { toString: function() { return '<html>'; } } },
        { autoescape: false },
        '&lt;html&gt;');

      equal('{{ foo | escape }}',
        { foo: null },
        { autoescape: false },
        '');
    });

    it('should not escape safe strings with autoescape on', function() {
      equal(
        '{{ "<html>" | safe | escape }}', {},
        { autoescape: true },
        '<html>');

      equal(
        '{% set val = "<html>" | safe | e %}{{ val }}', {},
        { autoescape: true },
        '<html>');
    });

    it('should keep strings escaped after they have been escaped', function() {
      equal(
        '{% set val = "<html>" | e | safe %}{{ val }}', {},
        { autoescape: false },
        '&lt;html&gt;');
    });

    it('dictsort', function(done) {
      // no real foolproof way to test that a js obj has been transformed
      // from unsorted -> sorted, as its enumeration ordering is undefined
      // and might fluke being sorted originally .. lets just init with some jumbled
      // keys

      // no params - should be case insensitive, by key
      equal(
        '{% for item in items | dictsort %}' +
        '{{ item[0] }}{% endfor %}',
        {
          items: {
            e: 1,
            d: 2,
            c: 3,
            a: 4,
            f: 5,
            b: 6
          }
        },
        'abcdef');

      // case sensitive = true
      equal(
        '{% for item in items | dictsort(true) %}{{ item[0] }},{% endfor %}', {
          items: {
            ABC: 6,
            ABc: 5,
            Abc: 1,
            abc: 2
          }
        },
        'ABC,ABc,Abc,abc,');

      // use values for sort
      equal(
        '{% for item in items | dictsort(false, "value") %}{{ item[0] }}{% endfor %}', {
          items: {
            a: 6,
            b: 5,
            c: 1,
            d: 2
          }
        },
        'cdba');

      finish(done);
    });

    it('first', function(done) {
      equal('{{ [1,2,3] | first }}', '1');
      finish(done);
    });

    it('float', function() {
      equal('{{ "3.5" | float }}', '3.5');
      equal('{{ "0" | float }}', '0');
    });

    it('forceescape', function(done) {
      equal('{{ str | forceescape }}', { str: r.markSafe('<html>')}, '&lt;html&gt;');
      equal('{{ "<html>" | safe | forceescape }}', '&lt;html&gt;');
      finish(done);
    });

    it('int', function() {
      equal('{{ "3.5" | int }}', '3');
      equal('{{ "0" | int }}', '0');
      equal('{{ "foobar" | int("42") }}', '42');
      equal('{{ "0x4d32" | int(base=16) }}', '19762');
      equal('{{ "011" | int(base=8) }}', '9');
    });

    it('int (default value)', function() {
      equal('{{ "bob" | int("cat") }}', 'cat');
    });

    it('float (default value)', function() {
      equal('{{ "bob" | float("cat") }}', 'cat');
    });

    it('groupby', function(done) {
      const namesContext = {
        items: [{
          name: 'james',
          type: 'green'
        },
        {
          name: 'john',
          type: 'blue'
        },
        {
          name: 'jim',
          type: 'blue'
        },
        {
          name: 'jessie',
          type: 'green'
        }]
      };
      equal(
        '{% for type, items in items | groupby("type") %}' +
        ':{{ type }}:' +
        '{% for item in items %}' +
        '{{ item.name }}' +
        '{% endfor %}' +
        '{% endfor %}',
        namesContext,
        ':green:jamesjessie:blue:johnjim');

      equal(
        '{% for type, items in items | groupby("type") %}' +
        ':{{ type }}:' +
        '{% for item in items %}' +
        '{{ item.name }}' +
        '{% endfor %}' +
        '{% endfor %}',
        {
          items: [{
            name: 'james',
            type: 'green'
          },
          {
            name: 'john',
            type: 'blue'
          },
          {
            name: 'jim',
            type: 'blue'
          },
          {
            name: 'jessie',
            color: 'green'
          }]
        },
        ':green:james:blue:johnjim:undefined:jessie');

      equal(
        '{% for year, posts in posts | groupby("date.year") %}' +
        ':{{ year }}:' +
        '{% for post in posts %}' +
        '{{ post.title }}' +
        '{% endfor %}' +
        '{% endfor %}',
        {
          posts: [
            {
              date: {
                year: 2019
              },
              title: 'Post 1'
            },
            {
              date: {
                year: 2018
              },
              title: 'Post 2'
            },
            {
              date: {
                year: 2019
              },
              title: 'Post 3'
            }
          ]
        },
        ':2018:Post 2:2019:Post 1Post 3');

      equal(
        '{% for year, posts in posts | groupby("date.year") %}' +
        ':{{ year }}:' +
        '{% for post in posts %}' +
        '{{ post.title }}' +
        '{% endfor %}' +
        '{% endfor %}',
        {
          posts: [
            {
              date: {
                year: 2019
              },
              title: 'Post 1'
            },
            {
              date: {
                year: 2018
              },
              title: 'Post 2'
            },
            {
              meta: {
                month: 2
              },
              title: 'Post 3'
            }
          ]
        },
        ':2018:Post 2:2019:Post 1:undefined:Post 3');

      equal(
        '{% for type, items in items | groupby({}) %}' +
        ':{{ type }}:' +
        '{% for item in items %}' +
        '{{ item.name }}' +
        '{% endfor %}' +
        '{% endfor %}',
        namesContext,
        ':undefined:jamesjohnjimjessie'
      );

      const undefinedTemplate = (
        '{% for type, items in items | groupby("a.b.c") %}' +
        ':{{ type }}:' +
        '{% for item in items %}' +
        '{{ item.name }}' +
        '{% endfor %}' +
        '{% endfor %}'
      );
      equal(
        undefinedTemplate,
        namesContext,
        ':undefined:jamesjohnjimjessie'
      );

      expect(function() {
        render(
          undefinedTemplate,
          namesContext,
          {
            throwOnUndefined: true
          }
        );
      }).to.throwError(/groupby: attribute "a\.b\.c" resolved to undefined/);

      finish(done);
    });

    it('indent', function(done) {
      equal('{{ "one\ntwo\nthree" | indent }}',
        'one\n    two\n    three');
      equal('{{ "one\ntwo\nthree" | indent(2) }}',
        'one\n  two\n  three');
      equal('{{ "one\ntwo\nthree" | indent(2, true) }}',
        '  one\n  two\n  three');

      equal('{{ str | indent }}', {
        str: r.markSafe('one\ntwo\nthree')
      }, 'one\n    two\n    three');

      equal('{{ "" | indent }}', '');
      equal('{{ undefined | indent }}', '');
      equal('{{ undefined | indent(2) }}', '');
      equal('{{ undefined | indent(2, true) }}', '');

      equal('{{ null | indent }}', '');
      equal('{{ null | indent(2) }}', '');
      equal('{{ null | indent(2, true) }}', '');

      equal('{{ nothing | indent }}', '');
      equal('{{ nothing | indent(2) }}', '');
      equal('{{ nothing | indent(2, true) }}', '');
      finish(done);
    });

    it('join', function(done) {
      equal('{{ items | join }}',
        {
          items: [1, 2, 3]
        },
        '123');

      equal('{{ items | join(",") }}',
        {
          items: ['foo', 'bar', 'bear']
        },
        'foo,bar,bear');

      equal('{{ items | join(",", "name") }}',
        {
          items: [{
            name: 'foo'
          },
          {
            name: 'bar'
          },
          {
            name: 'bear'
          }]
        },
        'foo,bar,bear');
      finish(done);
    });

    it('last', function(done) {
      equal('{{ [1,2,3] | last }}', '3');
      finish(done);
    });

    describe('the length filter', function suite() {
      it('should return length of a list literal', function test() {
        equal('{{ [1,2,3] | length }}', '3');
      });
      it('should output 0 for a missing context variable', function test() {
        equal('{{ blah|length }}', '0');
      });
      it('should output string length for string variables', function test() {
        equal('{{ str | length }}', {
          str: 'blah'
        }, '4');
      });
      it('should output string length for a SafeString variable', function test() {
        equal('{{ str | length }}', {
          str: r.markSafe('<blah>')
        }, '6');
      });
      it('should output the correct length of a string created with new String()', function test() {
        equal('{{ str | length }}', {
          str: new String('blah') // eslint-disable-line no-new-wrappers
        }, '4');
      });
      it('should output 0 for a literal "undefined"', function test() {
        equal('{{ undefined | length }}', '0');
      });
      it('should output 0 for a literal "null"', function test() {
        equal('{{ null | length }}', '0');
      });
      it('should output 0 for an Object with no properties', function test() {
        equal('{{ obj | length }}', {
          obj: {}
        }, '0');
      });
      it('should output 1 for an Object with 1 property', function test() {
        equal('{{ obj | length }}', {
          obj: {
            key: 'value'
          }
        }, '1');
      });
      it('should output the number of properties for a plain Object, not the value of its length property', function test() {
        equal('{{ obj | length }}', {
          obj: {
            key: 'value',
            length: 5
          }
        }, '2');
      });
      it('should output the length of an array', function test() {
        equal('{{ arr | length }}', {
          arr: [0, 1]
        }, '2');
      });
      it('should output the full length of a sparse array', function test() {
        equal('{{ arr | length }}', {
          arr: [0,, 2]  // eslint-disable-line
        }, '3');
      });
      it('should output the length of an array created with "new Array"', function test() {
        equal('{{ arr | length }}', {
          arr: new Array(0, 1) // eslint-disable-line no-array-constructor
        }, '2');
      });
      it('should output the length of an array created with "new Array" with user-defined properties', function test() {
        var arr = new Array(0, 1); // eslint-disable-line no-array-constructor
        arr.key = 'value';
        equal('{{ arr | length }}', {
          arr: arr
        }, '2');
      });
      it('should output the length of a Map', function test() {
        /* global Map */
        var map;
        if (typeof Map === 'undefined') {
          this.skip();
        } else {
          map = new Map([['key1', 'value1'], ['key2', 'value2']]);
          map.set('key3', 'value3');
          equal('{{ map | length }}', {
            map: map
          }, '3');
        }
      });
      it('should output the length of a Set', function test() {
        /* global Set */
        var set;
        if (typeof Set === 'undefined') {
          this.skip();
        } else {
          set = new Set(['value1']);
          set.add('value2');
          equal('{{ set | length }}', { set: set }, '2');
        }
      });
    });

    it('list', function(done) {
      var person = {
        name: 'Joe',
        age: 83
      };
      equal('{% for i in "foobar" | list %}{{ i }},{% endfor %}',
        'f,o,o,b,a,r,');
      equal('{% for pair in person | list %}{{ pair.key }}: {{ pair.value }} - {% endfor %}',
        {
          person: person
        }, 'name: Joe - age: 83 - ');
      equal('{% for i in [1, 2] | list %}{{ i }}{% endfor %}', '12');
      finish(done);
    });

    it('lower', function(done) {
      equal('{{ "fOObAr" | lower }}', 'foobar');
      equal('{{ str | lower }}', {
        str: r.markSafe('fOObAr')
      }, 'foobar');
      equal('{{ null | lower }}', '');
      equal('{{ undefined | lower }}', '');
      equal('{{ nothing | lower }}', '');
      finish(done);
    });

    it('nl2br', function(done) {
      equal('{{ null | nl2br }}', '');
      equal('{{ undefined | nl2br }}', '');
      equal('{{ nothing | nl2br }}', '');
      equal('{{ str | nl2br }}', {
        str: r.markSafe('foo\r\nbar')
      }, 'foo<br />\nbar');
      equal('{{ str | nl2br }}', {
        str: r.markSafe('foo\nbar')
      }, 'foo<br />\nbar');
      equal('{{ str | nl2br }}', {
        str: r.markSafe('foo\n\nbar')
      }, 'foo<br />\n<br />\nbar');
      equal('{{ "foo\nbar" | nl2br }}', 'foo&lt;br /&gt;\nbar');
      finish(done);
    });

    it('random', function(done) {
      var i;
      for (i = 0; i < 100; i++) {
        render('{{ [1,2,3,4,5,6,7,8,9] | random }}', function(err, res) {
          var val = parseInt(res, 10);
          expect(val).to.be.within(1, 9);
        });
      }

      finish(done);
    });

    it('reject', function(done) {
      var context = {
        numbers: [0, 1, 2, 3, 4, 5]
      };

      equal('{{ numbers | reject("odd") | join }}', context, '024');

      equal('{{ numbers | reject("even") | join }}', context, '135');

      equal('{{ numbers | reject("divisibleby", 3) | join }}', context, '1245');

      equal('{{ numbers | reject() | join }}', context, '0');

      finish(done);
    });

    it('rejectattr', function(done) {
      var foods = [{
        tasty: true
      }, {
        tasty: false
      }, {
        tasty: true
      }];
      equal('{{ foods | rejectattr("tasty") | length }}', {
        foods: foods
      }, '1');
      finish(done);
    });

    it('select', function(done) {
      var context = {
        numbers: [0, 1, 2, 3, 4, 5]
      };

      equal('{{ numbers | select("odd") | join }}', context, '135');

      equal('{{ numbers | select("even") | join }}', context, '024');

      equal('{{ numbers | select("divisibleby", 3) | join }}', context, '03');

      equal('{{ numbers | select() | join }}', context, '12345');

      finish(done);
    });

    it('selectattr', function(done) {
      var foods = [{
        tasty: true
      }, {
        tasty: false
      }, {
        tasty: true
      }];
      equal('{{ foods | selectattr("tasty") | length }}', {
        foods: foods
      }, '2');
      finish(done);
    });

    it('replace', function(done) {
      equal('{{ 123456 | replace("4", ".") }}', '123.56');
      equal('{{ 123456 | replace("4", ".") }}', '123.56');
      equal('{{ 12345.6 | replace("4", ".") }}', '123.5.6');
      equal('{{ 12345.6 | replace(4, ".") }}', '123.5.6');
      equal('{{ 12345.6 | replace("4", "7") }}', '12375.6');
      equal('{{ 12345.6 | replace(4, 7) }}', '12375.6');
      equal('{{ 123450.6 | replace(0, 7) }}', '123457.6');
      equal('{{ "aaabbbccc" | replace("", ".") }}', '.a.a.a.b.b.b.c.c.c.');
      equal('{{ "aaabbbccc" | replace(null, ".") }}', 'aaabbbccc');
      equal('{{ "aaabbbccc" | replace(undefined, ".") }}', 'aaabbbccc');
      equal('{{ "aaabbbccc" | replace({}, ".") }}', 'aaabbbccc');
      equal('{{ "aaabbbccc" | replace(true, ".") }}', 'aaabbbccc');
      equal('{{ "aaabbbccc" | replace(false, ".") }}', 'aaabbbccc');
      equal('{{ "aaabbbccc" | replace(["wrong"], ".") }}', 'aaabbbccc');
      equal('{{ "aaabbbccc" | replace("a", "x") }}', 'xxxbbbccc');
      equal('{{ "aaabbbccc" | replace("a", "x", 2) }}', 'xxabbbccc');
      equal('{{ "aaabbbbbccc" | replace("b", "y", 4) }}', 'aaayyyybccc');
      equal('{{ "aaabbbbbccc" | replace("", "") }}', 'aaabbbbbccc');
      equal('{{ "aaabbbbbccc" | replace("b", "") }}', 'aaaccc');
      equal('{{ "aaabbbbbccc" | replace("b", "", 4) }}', 'aaabccc');
      equal('{{ "aaabbbbbccc" | replace("ab", "y", 4) }}', 'aaybbbbccc');
      equal('{{ "aaabbbbbccc" | replace("b", "y", 4) }}', 'aaayyyybccc');
      equal('{{ "aaabbbbbccc" | replace("d", "y", 4) }}', 'aaabbbbbccc');
      equal('{{ "aaabbcccbbb" | replace("b", "y", 4) }}', 'aaayycccyyb');


      // Bad initial inputs
      equal('{{ undefined | replace("b", "y", 4) }}', '');
      equal('{{ null | replace("b", "y", 4) }}', '');
      equal('{{ {} | replace("b", "y", 4) }}', '[object Object]'); // End up with the object passed out of replace, then toString called on it
      equal('{{ [] | replace("b", "y", 4) }}', '');
      equal('{{ true | replace("rue", "afafasf", 4) }}', 'true');
      equal('{{ false | replace("rue", "afafasf", 4) }}', 'false');

      // Will result in an infinite loop if unbounded otherwise test will pass
      equal('{{ "<img src=" | replace("<img", "<img alt=val") | safe }}',
        '<img alt=val src=');
      equal('{{ "<img src=\\"http://www.example.com\\" />" | replace("<img", "replacement text") | safe }}',
        'replacement text src=\"http://www.example.com\" />');

      // Regex
      equal('{{ "aabbbb" | replace(r/ab{2}/, "z") }}', 'azbb');
      equal('{{ "aaaAAA" | replace(r/a/i, "z") }}', 'zaaAAA');
      equal('{{ "aaaAAA" | replace(r/a/g, "z") }}', 'zzzAAA');
      equal('{{ "aaaAAA" | replace(r/a/gi, "z") }}', 'zzzzzz');
      equal('{{ str | replace("a", "x") }}', {
        str: r.markSafe('aaabbbccc')
      }, 'xxxbbbccc');
      finish(done);
    });

    it('reverse', function(done) {
      equal('{{ "abcdef" | reverse }}', 'fedcba');
      equal('{% for i in [1, 2, 3, 4] | reverse %}{{ i }}{% endfor %}', '4321');
      finish(done);
    });

    it('round', function(done) {
      equal('{{ 4.5 | round }}', '5');
      equal('{{ 4.5 | round(0, "floor") }}', '4');
      equal('{{ 4.12345 | round(4) }}', '4.1235');
      equal('{{ 4.12344 | round(4) }}', ('4.1234'));
      finish(done);
    });

    it('slice', function(done) {
      var tmpl = '{% for items in arr | slice(3) %}' +
        '--' +
        '{% for item in items %}' +
        '{{ item }}' +
        '{% endfor %}' +
        '--' +
        '{% endfor %}';

      equal(tmpl,
        {
          arr: [1, 2, 3, 4, 5, 6, 7, 8, 9]
        },
        '--123----456----789--');

      equal(tmpl,
        {
          arr: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        },
        '--1234----567----8910--');

      finish(done);
    });

    it('sum', function(done) {
      equal('{{ items | sum }}',
        {
          items: [1, 2, 3]
        },
        '6');

      equal('{{ items | sum("value") }}',
        {
          items: [{
            value: 1
          },
          {
            value: 2
          },
          {
            value: 3
          }]
        },
        '6');

      equal('{{ items | sum("value", 10) }}',
        {
          items: [
            {value: 1},
            {value: 2},
            {value: 3}
          ]
        },
        '16');

      finish(done);
    });

    it('sort', function(done) {
      equal('{% for i in [3,5,2,1,4,6] | sort %}{{ i }}{% endfor %}',
        '123456');

      equal('{% for i in ["fOo", "Foo"] | sort %}{{ i }}{% endfor %}',
        'fOoFoo');

      equal('{% for i in [1,6,3,7] | sort(true) %}{{ i }}{% endfor %}',
        '7631');

      equal('{% for i in ["fOo", "Foo"] | sort(false, true) %}{{ i }}{% endfor %}',
        'FoofOo');

      equal('{% for item in items | sort(false, false, "name") %}{{ item.name }}{% endfor %}',
        {
          items: [
            {name: 'james'},
            {name: 'fred'},
            {name: 'john'}
          ]
        },
        'fredjamesjohn');

      equal('{% for i in [ {n:3},{n:5},{n:2},{n:1},{n:4},{n:6}] | sort(attribute="n") %}{{ i.n }}{% endfor %}',
        '123456');

      const nestedAttributeSortTemplate = '{% for item in items | sort(attribute="meta.age") %}{{ item.name }}{% endfor %}';
      equal(
        nestedAttributeSortTemplate,
        {
          items: [
            {name: 'james', meta: {age: 25}},
            {name: 'fred', meta: {age: 18}},
            {name: 'john', meta: {age: 19}}
          ]
        },
        'fredjohnjames'
      );

      expect(function() {
        render(
          nestedAttributeSortTemplate,
          {
            items: [
              {name: 'james', meta: {age: 25}},
              {name: 'fred', meta: {age: 18}},
              {name: 'john', meta: {title: 'Developer'}}
            ]
          },
          {
            throwOnUndefined: true
          }
        );
      }).to.throwError(/sort: attribute "meta\.age" resolved to undefined/);

      finish(done);
    });

    it('string', function(done) {
      equal('{% for i in 1234 | string | list %}{{ i }},{% endfor %}',
        '1,2,3,4,');
      finish(done);
    });

    it('striptags', function(done) {
      equal('{{ html | striptags }}', {
        html: '<foo>bar'
      }, 'bar');
      equal('{{ html | striptags }}',
        {
          html: '  <p>an  \n <a href="#">example</a> link</p>\n<p>to a webpage</p> ' +
            '<!-- <p>and some comments</p> -->'
        },
        'an example link to a webpage');
      equal('{{ undefined | striptags }}', '');
      equal('{{ null | striptags }}', '');
      equal('{{ nothing | striptags }}', '');
      equal('{{ html | striptags(true) }}',
        {
          html: '<div>\n  row1\nrow2  \n  <strong>row3</strong>\n</div>\n\n' +
            ' HEADER \n\n<ul>\n  <li>option  1</li>\n<li>option  2</li>\n</ul>'
        },
        'row1\nrow2\nrow3\n\nHEADER\n\noption 1\noption 2');
      finish(done);
    });

    it('title', function(done) {
      equal('{{ "foo bar baz" | title }}', 'Foo Bar Baz');
      equal('{{ str | title }}', {
        str: r.markSafe('foo bar baz')
      }, 'Foo Bar Baz');
      equal('{{ undefined | title }}', '');
      equal('{{ null | title }}', '');
      equal('{{ nothing | title }}', '');
      finish(done);
    });

    it('trim', function(done) {
      equal('{{ "  foo " | trim }}', 'foo');
      equal('{{ str | trim }}', {
        str: r.markSafe('  foo ')
      }, 'foo');
      finish(done);
    });

    it('truncate', function(done) {
      equal('{{ "foo bar" | truncate(3) }}', 'foo...');
      equal('{{ "foo bar baz" | truncate(6) }}', 'foo...');
      equal('{{ "foo bar baz" | truncate(7) }}', 'foo bar...');
      equal('{{ "foo bar baz" | truncate(5, true) }}', 'foo b...');
      equal('{{ "foo bar baz" | truncate(6, true, "?") }}', 'foo ba?');
      equal('{{ "foo bar" | truncate(3) }}', {
        str: r.markSafe('foo bar')
      }, 'foo...');

      equal('{{ undefined | truncate(3) }}', '');
      equal('{{ undefined | truncate(6) }}', '');
      equal('{{ undefined | truncate(7) }}', '');
      equal('{{ undefined | truncate(5, true) }}', '');
      equal('{{ undefined | truncate(6, true, "?") }}', '');

      equal('{{ null | truncate(3) }}', '');
      equal('{{ null | truncate(6) }}', '');
      equal('{{ null | truncate(7) }}', '');
      equal('{{ null | truncate(5, true) }}', '');
      equal('{{ null | truncate(6, true, "?") }}', '');

      equal('{{ nothing | truncate(3) }}', '');
      equal('{{ nothing | truncate(6) }}', '');
      equal('{{ nothing | truncate(7) }}', '');
      equal('{{ nothing | truncate(5, true) }}', '');
      equal('{{ nothing | truncate(6, true, "?") }}', '');

      finish(done);
    });

    it('upper', function(done) {
      equal('{{ "foo" | upper }}', 'FOO');
      equal('{{ str | upper }}', {
        str: r.markSafe('foo')
      }, 'FOO');
      equal('{{ null | upper }}', '');
      equal('{{ undefined | upper }}', '');
      equal('{{ nothing | upper }}', '');
      finish(done);
    });

    it('urlencode', function(done) {
      equal('{{ "&" | urlencode }}', '%26');
      equal('{{ arr | urlencode | safe }}', {
        arr: [[1, 2], ['&1', '&2']]
      }, '1=2&%261=%262');
      equal('{{ obj | urlencode | safe }}', {
        obj: {
          1: 2,
          '&1': '&2'
        }
      }, '1=2&%261=%262');
      finish(done);
    });

    it('urlencode - object without prototype', function(done) {
      var obj = Object.create(null);
      obj['1'] = 2;
      obj['&1'] = '&2';

      equal('{{ obj | urlencode | safe }}', {
        obj: obj
      }, '1=2&%261=%262');
      finish(done);
    });

    it('urlize', function(done) {
      // from jinja test suite:
      // https://github.com/mitsuhiko/jinja2/blob/8db47916de0e888dd8664b2511e220ab5ecf5c15/jinja2/testsuite/filters.py#L236-L239
      equal('{{ "foo http://www.example.com/ bar" | urlize | safe }}',
        'foo <a href="http://www.example.com/">' +
        'http://www.example.com/</a> bar');

      // additional tests
      equal('{{ "" | urlize }}', '');
      equal('{{ "foo" | urlize }}', 'foo');

      // http
      equal('{{ "http://jinja.pocoo.org/docs/templates/" | urlize | safe }}',
        '<a href="http://jinja.pocoo.org/docs/templates/">http://jinja.pocoo.org/docs/templates/</a>');

      // https
      equal('{{ "https://jinja.pocoo.org/docs/templates/" | urlize | safe }}',
        '<a href="https://jinja.pocoo.org/docs/templates/">https://jinja.pocoo.org/docs/templates/</a>');

      // www without protocol
      equal('{{ "www.pocoo.org/docs/templates/" | urlize | safe }}',
        '<a href="http://www.pocoo.org/docs/templates/">www.pocoo.org/docs/templates/</a>');

      // .org, .net, .com without protocol or www
      equal('{{ "pocoo.org/docs/templates/" | urlize | safe }}',
        '<a href="http://pocoo.org/docs/templates/">pocoo.org/docs/templates/</a>');
      equal('{{ "pocoo.net/docs/templates/" | urlize | safe }}',
        '<a href="http://pocoo.net/docs/templates/">pocoo.net/docs/templates/</a>');
      equal('{{ "pocoo.com/docs/templates/" | urlize | safe }}',
        '<a href="http://pocoo.com/docs/templates/">pocoo.com/docs/templates/</a>');
      equal('{{ "pocoo.com:80" | urlize | safe }}',
        '<a href="http://pocoo.com:80">pocoo.com:80</a>');
      equal('{{ "pocoo.com" | urlize | safe }}',
        '<a href="http://pocoo.com">pocoo.com</a>');
      equal('{{ "pocoo.commune" | urlize | safe }}',
        'pocoo.commune');

      // truncate the printed URL
      equal('{{ "http://jinja.pocoo.org/docs/templates/" | urlize(12, true) | safe }}',
        '<a href="http://jinja.pocoo.org/docs/templates/" rel="nofollow">http://jinja</a>');

      // punctuation on the beginning of line.
      equal('{{ "(http://jinja.pocoo.org/docs/templates/" | urlize | safe }}',
        '<a href="http://jinja.pocoo.org/docs/templates/">http://jinja.pocoo.org/docs/templates/</a>');
      equal('{{ "<http://jinja.pocoo.org/docs/templates/" | urlize | safe }}',
        '<a href="http://jinja.pocoo.org/docs/templates/">http://jinja.pocoo.org/docs/templates/</a>');
      equal('{{ "&lt;http://jinja.pocoo.org/docs/templates/" | urlize | safe }}',
        '<a href="http://jinja.pocoo.org/docs/templates/">http://jinja.pocoo.org/docs/templates/</a>');

      // punctuation on the end of line
      equal('{{ "http://jinja.pocoo.org/docs/templates/," | urlize | safe }}',
        '<a href="http://jinja.pocoo.org/docs/templates/">http://jinja.pocoo.org/docs/templates/</a>');
      equal('{{ "http://jinja.pocoo.org/docs/templates/." | urlize | safe }}',
        '<a href="http://jinja.pocoo.org/docs/templates/">http://jinja.pocoo.org/docs/templates/</a>');
      equal('{{ "http://jinja.pocoo.org/docs/templates/)" | urlize | safe }}',
        '<a href="http://jinja.pocoo.org/docs/templates/">http://jinja.pocoo.org/docs/templates/</a>');
      equal('{{ "http://jinja.pocoo.org/docs/templates/\n" | urlize | safe }}',
        '<a href="http://jinja.pocoo.org/docs/templates/">http://jinja.pocoo.org/docs/templates/</a>\n');
      equal('{{ "http://jinja.pocoo.org/docs/templates/&gt;" | urlize | safe }}',
        '<a href="http://jinja.pocoo.org/docs/templates/">http://jinja.pocoo.org/docs/templates/</a>');

      // http url with username
      equal('{{ "http://testuser@testuser.com" | urlize | safe }}',
        '<a href="http://testuser@testuser.com">http://testuser@testuser.com</a>');

      // email addresses
      equal('{{ "testuser@testuser.com" | urlize | safe }}',
        '<a href="mailto:testuser@testuser.com">testuser@testuser.com</a>');

      // periods in the text
      equal('{{ "foo." | urlize }}', 'foo.');
      equal('{{ "foo.foo" | urlize }}', 'foo.foo');

      // markup in the text
      equal('{{ "<b>what up</b>" | urlize | safe }}', '<b>what up</b>');

      // breaklines and tabs in the text
      equal('{{ "what\nup" | urlize | safe }}', 'what\nup');
      equal('{{ "what\tup" | urlize | safe }}', 'what\tup');

      finish(done);
    });

    it('wordcount', function(done) {
      equal('{{ "foo bar baz" | wordcount }}', '3');
      equal(
        '{{ str | wordcount }}',
        { str: r.markSafe('foo bar baz') },
        '3');
      equal('{{ null | wordcount }}', '');
      equal('{{ undefined | wordcount }}', '');
      equal('{{ nothing | wordcount }}', '');
      finish(done);
    });
  });
}());


/***/ }),

/***/ 6571:
/*!**************************!*\
  !*** ./tests/globals.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

(function() {
  'use strict';

  var expect;
  var util;
  var Environment;
  var equal;
  var render;
  var finish;

  if (true) {
    expect = __webpack_require__(/*! expect.js */ 1801);
    util = __webpack_require__(/*! ./util */ 9099);
    Environment = (__webpack_require__(/*! ../nunjucks/src/environment */ 2887).Environment);
  } else {}

  equal = util.equal;
  render = util.render;
  finish = util.finish;

  describe('global', function() {
    it('should have range', function(done) {
      equal('{% for i in range(0, 10) %}{{ i }}{% endfor %}', '0123456789');
      equal('{% for i in range(10) %}{{ i }}{% endfor %}', '0123456789');
      equal('{% for i in range(5, 10) %}{{ i }}{% endfor %}', '56789');
      equal('{% for i in range(-2, 0) %}{{ i }}{% endfor %}', '-2-1');
      equal('{% for i in range(5, 10, 2) %}{{ i }}{% endfor %}', '579');
      equal('{% for i in range(5, 10, 2.5) %}{{ i }}{% endfor %}', '57.5');
      equal('{% for i in range(5, 10, 2.5) %}{{ i }}{% endfor %}', '57.5');

      equal('{% for i in range(10, 5, -1) %}{{ i }}{% endfor %}', '109876');
      equal('{% for i in range(10, 5, -2.5) %}{{ i }}{% endfor %}', '107.5');

      finish(done);
    });

    it('should have cycler', function(done) {
      equal(
        '{% set cls = cycler("odd", "even") %}' +
        '{{ cls.next() }}' +
        '{{ cls.next() }}' +
        '{{ cls.next() }}',
        'oddevenodd');

      equal(
        '{% set cls = cycler("odd", "even") %}' +
        '{{ cls.next() }}' +
        '{{ cls.reset() }}' +
        '{{ cls.next() }}',
        'oddodd');

      equal(
        '{% set cls = cycler("odd", "even") %}' +
        '{{ cls.next() }}' +
        '{{ cls.next() }}' +
        '{{ cls.current }}',
        'oddeveneven');

      finish(done);
    });

    it('should have joiner', function(done) {
      equal(
        '{% set comma = joiner() %}' +
        'foo{{ comma() }}bar{{ comma() }}baz{{ comma() }}',
        'foobar,baz,');

      equal(
        '{% set pipe = joiner("|") %}' +
        'foo{{ pipe() }}bar{{ pipe() }}baz{{ pipe() }}',
        'foobar|baz|');

      finish(done);
    });

    it('should allow addition of globals', function(done) {
      var env = new Environment();

      env.addGlobal('hello', function(arg1) {
        return 'Hello ' + arg1;
      });

      equal('{{ hello("World!") }}', 'Hello World!', env);

      finish(done);
    });

    it('should allow chaining of globals', function(done) {
      var env = new Environment();

      env.addGlobal('hello', function(arg1) {
        return 'Hello ' + arg1;
      }).addGlobal('goodbye', function(arg1) {
        return 'Goodbye ' + arg1;
      });

      equal('{{ hello("World!") }}', 'Hello World!', env);
      equal('{{ goodbye("World!") }}', 'Goodbye World!', env);

      finish(done);
    });

    it('should allow getting of globals', function(done) {
      var env = new Environment();
      var hello = function(arg1) {
        return 'Hello ' + arg1;
      };

      env.addGlobal('hello', hello);

      expect(env.getGlobal('hello')).to.be.equal(hello);

      finish(done);
    });

    it('should allow getting boolean globals', function(done) {
      var env = new Environment();
      var hello = false;

      env.addGlobal('hello', hello);

      expect(env.getGlobal('hello')).to.be.equal(hello);

      finish(done);
    });

    it('should fail on getting non-existent global', function(done) {
      var env = new Environment();

      // Using this format instead of .withArgs since env.getGlobal uses 'this'
      expect(function() {
        env.getGlobal('hello');
      }).to.throwError();

      finish(done);
    });

    it('should pass context as this to global functions', function(done) {
      var env = new Environment();

      env.addGlobal('hello', function() {
        return 'Hello ' + this.lookup('user');
      });

      equal('{{ hello() }}', {
        user: 'James'
      }, 'Hello James', env);
      finish(done);
    });

    it('should be exclusive to each environment', function(done) {
      var env = new Environment();
      var env2;

      env.addGlobal('hello', 'konichiwa');
      env2 = new Environment();

      // Using this format instead of .withArgs since env2.getGlobal uses 'this'
      expect(function() {
        env2.getGlobal('hello');
      }).to.throwError();

      finish(done);
    });

    it('should return errors from globals', function(done) {
      var env = new Environment();

      env.addGlobal('err', function() {
        throw new Error('Global error');
      });

      try {
        render('{{ err() }}', null, {}, env);
      } catch (e) {
        expect(e).to.be.a(Error);
      }

      finish(done);
    });
  });
}());


/***/ }),

/***/ 1922:
/*!*******************************!*\
  !*** ./tests/jinja-compat.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

(function() {
  'use strict';

  var util;
  var equal;
  var finish;

  if (true) {
    util = __webpack_require__(/*! ./util */ 9099);
  } else {}

  equal = util.jinjaEqual;
  finish = util.finish;

  describe('jinja-compat', function() {
    var arr = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];

    it('should support array slices with start and stop', function(done) {
      equal('{% for i in arr[1:4] %}{{ i }}{% endfor %}',
        {
          arr: arr
        },
        'bcd');
      finish(done);
    });
    it('should support array slices using expressions', function(done) {
      equal('{% for i in arr[n:n+3] %}{{ i }}{% endfor %}',
        {
          n: 1,
          arr: arr
        },
        'bcd');
      finish(done);
    });
    it('should support array slices with start', function(done) {
      equal('{% for i in arr[3:] %}{{ i }}{% endfor %}',
        {
          arr: arr
        },
        'defgh');
      finish(done);
    });
    it('should support array slices with negative start', function(done) {
      equal('{% for i in arr[-3:] %}{{ i }}{% endfor %}',
        {
          arr: arr
        },
        'fgh');
      finish(done);
    });
    it('should support array slices with stop', function(done) {
      equal('{% for i in arr[:4] %}{{ i }}{% endfor %}',
        {
          arr: arr
        },
        'abcd');
      finish(done);
    });
    it('should support array slices with negative stop', function(done) {
      equal('{% for i in arr[:-3] %}{{ i }}{% endfor %}',
        {
          arr: arr
        },
        'abcde');
      finish(done);
    });
    it('should support array slices with step', function(done) {
      equal('{% for i in arr[::2] %}{{ i }}{% endfor %}',
        {
          arr: arr
        },
        'aceg');
      finish(done);
    });
    it('should support array slices with negative step', function(done) {
      equal('{% for i in arr[::-1] %}{{ i }}{% endfor %}',
        {
          arr: arr
        },
        'hgfedcba');
      finish(done);
    });
    it('should support array slices with start and negative step', function(done) {
      equal('{% for i in arr[4::-1] %}{{ i }}{% endfor %}',
        {
          arr: arr
        },
        'edcba');
      finish(done);
    });
    it('should support array slices with negative start and negative step', function(done) {
      equal('{% for i in arr[-5::-1] %}{{ i }}{% endfor %}',
        {
          arr: arr
        },
        'dcba');
      finish(done);
    });
    it('should support array slices with stop and negative step', function(done) {
      equal('{% for i in arr[:3:-1] %}{{ i }}{% endfor %}',
        {
          arr: arr
        },
        'hgfe');
      finish(done);
    });
    it('should support array slices with start and step', function(done) {
      equal('{% for i in arr[1::2] %}{{ i }}{% endfor %}',
        {
          arr: arr
        },
        'bdfh');
      finish(done);
    });
    it('should support array slices with start, stop, and step', function(done) {
      equal('{% for i in arr[1:7:2] %}{{ i }}{% endfor %}',
        {
          arr: arr
        },
        'bdf');
      finish(done);
    });
  });
}());


/***/ }),

/***/ 7501:
/*!************************!*\
  !*** ./tests/lexer.js ***!
  \************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

(function() {
  'use strict';

  var expect;
  var lib;
  var lexer;

  if (true) {
    expect = __webpack_require__(/*! expect.js */ 1801);
    lib = __webpack_require__(/*! ../nunjucks/src/lib */ 449);
    lexer = __webpack_require__(/*! ../nunjucks/src/lexer */ 3608);
  } else {}

  function _hasTokens(ws, tokens, types) {
    var i;
    var type;
    var tok;
    for (i = 0; i < types.length; i++) {
      type = types[i];
      tok = tokens.nextToken();

      if (!ws) {
        while (tok && tok.type === lexer.TOKEN_WHITESPACE) {
          tok = tokens.nextToken();
        }
      }

      if (lib.isArray(type)) {
        expect(tok.type).to.be(type[0]);
        expect(tok.value).to.be(type[1]);
      } else if (lib.isObject(type)) {
        expect(tok.type).to.be(type.type);
        if (type.value != null) {
          expect(tok.value).to.be(type.value);
        }
        if (type.lineno != null) {
          expect(tok.lineno).to.be(type.lineno);
        }
        if (type.colno != null) {
          expect(tok.colno).to.be(type.colno);
        }
      } else {
        expect(tok.type).to.be(type);
      }
    }
  }

  function hasTokens(tokens /* , types */) {
    return _hasTokens(false, tokens, lib.toArray(arguments).slice(1));
  }

  function hasTokensWithWS(tokens /* , types */) {
    return _hasTokens(true, tokens, lib.toArray(arguments).slice(1));
  }

  describe('lexer', function() {
    var tok;
    var tmpl;
    var tokens;

    it('should parse template data', function() {
      tok = lexer.lex('3').nextToken();
      expect(tok.type).to.be(lexer.TOKEN_DATA);
      expect(tok.value).to.be('3');

      tmpl = 'foo bar bizzle 3 [1,2] !@#$%^&*()<>?:"{}|';
      tok = lexer.lex(tmpl).nextToken();
      expect(tok.type).to.be(lexer.TOKEN_DATA);
      expect(tok.value).to.be(tmpl);
    });

    it('should keep track of whitespace', function() {
      tokens = lexer.lex('data {% 1 2\n   3  %} data');
      hasTokensWithWS(tokens,
        lexer.TOKEN_DATA,
        lexer.TOKEN_BLOCK_START,
        [lexer.TOKEN_WHITESPACE, ' '],
        lexer.TOKEN_INT,
        [lexer.TOKEN_WHITESPACE, ' '],
        lexer.TOKEN_INT,
        [lexer.TOKEN_WHITESPACE, '\n   '],
        lexer.TOKEN_INT,
        [lexer.TOKEN_WHITESPACE, '  '],
        lexer.TOKEN_BLOCK_END,
        lexer.TOKEN_DATA);
    });

    it('should trim blocks', function() {
      tokens = lexer.lex('  {% if true %}\n    foo\n  {% endif %}\n', {
        trimBlocks: true
      });
      hasTokens(tokens,
        [lexer.TOKEN_DATA, '  '],
        lexer.TOKEN_BLOCK_START,
        lexer.TOKEN_SYMBOL,
        lexer.TOKEN_BOOLEAN,
        lexer.TOKEN_BLOCK_END,
        [lexer.TOKEN_DATA, '    foo\n  '],
        lexer.TOKEN_BLOCK_START,
        lexer.TOKEN_SYMBOL,
        lexer.TOKEN_BLOCK_END);
    });

    it('should trim windows-style CRLF line endings after blocks', function() {
      tokens = lexer.lex('  {% if true %}\r\n    foo\r\n  {% endif %}\r\n', {
        trimBlocks: true
      });
      hasTokens(tokens,
        [lexer.TOKEN_DATA, '  '],
        lexer.TOKEN_BLOCK_START,
        lexer.TOKEN_SYMBOL,
        lexer.TOKEN_BOOLEAN,
        lexer.TOKEN_BLOCK_END,
        [lexer.TOKEN_DATA, '    foo\r\n  '],
        lexer.TOKEN_BLOCK_START,
        lexer.TOKEN_SYMBOL,
        lexer.TOKEN_BLOCK_END);
    });

    it('should not trim CR after blocks', function() {
      tokens = lexer.lex('  {% if true %}\r    foo\r\n  {% endif %}\r', {
        trimBlocks: true
      });
      hasTokens(tokens,
        [lexer.TOKEN_DATA, '  '],
        lexer.TOKEN_BLOCK_START,
        lexer.TOKEN_SYMBOL,
        lexer.TOKEN_BOOLEAN,
        lexer.TOKEN_BLOCK_END,
        [lexer.TOKEN_DATA, '\r    foo\r\n  '],
        lexer.TOKEN_BLOCK_START,
        lexer.TOKEN_SYMBOL,
        lexer.TOKEN_BLOCK_END,
        [lexer.TOKEN_DATA, '\r']);
    });

    it('should lstrip and trim blocks', function() {
      tokens = lexer.lex('test\n {% if true %}\n  foo\n {% endif %}\n</div>', {
        lstripBlocks: true,
        trimBlocks: true
      });
      hasTokens(tokens,
        [lexer.TOKEN_DATA, 'test\n'],
        lexer.TOKEN_BLOCK_START,
        lexer.TOKEN_SYMBOL,
        lexer.TOKEN_BOOLEAN,
        lexer.TOKEN_BLOCK_END,
        [lexer.TOKEN_DATA, '  foo\n'],
        lexer.TOKEN_BLOCK_START,
        lexer.TOKEN_SYMBOL,
        lexer.TOKEN_BLOCK_END,
        [lexer.TOKEN_DATA, '</div>']);
    });

    it('should lstrip and not collapse whitespace between blocks', function() {
      tokens = lexer.lex('   {% t %} {% t %}', {
        lstripBlocks: true
      });
      hasTokens(tokens,
        lexer.TOKEN_BLOCK_START,
        lexer.TOKEN_SYMBOL,
        lexer.TOKEN_BLOCK_END,
        [lexer.TOKEN_DATA, ' '],
        lexer.TOKEN_BLOCK_START,
        lexer.TOKEN_SYMBOL,
        lexer.TOKEN_BLOCK_END);
    });


    it('should parse variable start and end', function() {
      tokens = lexer.lex('data {{ foo }} bar bizzle');
      hasTokens(tokens,
        lexer.TOKEN_DATA,
        lexer.TOKEN_VARIABLE_START,
        lexer.TOKEN_SYMBOL,
        lexer.TOKEN_VARIABLE_END,
        lexer.TOKEN_DATA);
    });

    it('should treat the non-breaking space as valid whitespace', function() {
      tokens = lexer.lex('{{\u00A0foo }}');
      tok = tokens.nextToken();
      tok = tokens.nextToken();
      tok = tokens.nextToken();
      expect(tok.type).to.be(lexer.TOKEN_SYMBOL);
      expect(tok.value).to.be('foo');
    });

    it('should parse block start and end', function() {
      tokens = lexer.lex('data {% foo %} bar bizzle');
      hasTokens(tokens,
        lexer.TOKEN_DATA,
        lexer.TOKEN_BLOCK_START,
        lexer.TOKEN_SYMBOL,
        lexer.TOKEN_BLOCK_END,
        lexer.TOKEN_DATA);
    });

    it('should parse basic types', function() {
      tokens = lexer.lex('{{ 3 4.5 true false none foo "hello" \'boo\' r/regex/ }}');
      hasTokens(tokens,
        lexer.TOKEN_VARIABLE_START,
        lexer.TOKEN_INT,
        lexer.TOKEN_FLOAT,
        lexer.TOKEN_BOOLEAN,
        lexer.TOKEN_BOOLEAN,
        lexer.TOKEN_NONE,
        lexer.TOKEN_SYMBOL,
        lexer.TOKEN_STRING,
        lexer.TOKEN_STRING,
        lexer.TOKEN_REGEX,
        lexer.TOKEN_VARIABLE_END);
    });

    it('should parse function calls', function() {
      tokens = lexer.lex('{{ foo(bar) }}');
      hasTokens(tokens,
        lexer.TOKEN_VARIABLE_START,
        [lexer.TOKEN_SYMBOL, 'foo'],
        lexer.TOKEN_LEFT_PAREN,
        [lexer.TOKEN_SYMBOL, 'bar'],
        lexer.TOKEN_RIGHT_PAREN,
        lexer.TOKEN_VARIABLE_END);
    });

    it('should parse groups', function() {
      tokens = lexer.lex('{{ (1, 2, 3) }}');
      hasTokens(tokens,
        lexer.TOKEN_VARIABLE_START,
        lexer.TOKEN_LEFT_PAREN,
        lexer.TOKEN_INT,
        lexer.TOKEN_COMMA,
        lexer.TOKEN_INT,
        lexer.TOKEN_COMMA,
        lexer.TOKEN_INT,
        lexer.TOKEN_RIGHT_PAREN,
        lexer.TOKEN_VARIABLE_END);
    });

    it('should parse arrays', function() {
      tokens = lexer.lex('{{ [1, 2, 3] }}');
      hasTokens(tokens,
        lexer.TOKEN_VARIABLE_START,
        lexer.TOKEN_LEFT_BRACKET,
        lexer.TOKEN_INT,
        lexer.TOKEN_COMMA,
        lexer.TOKEN_INT,
        lexer.TOKEN_COMMA,
        lexer.TOKEN_INT,
        lexer.TOKEN_RIGHT_BRACKET,
        lexer.TOKEN_VARIABLE_END);
    });

    it('should parse dicts', function() {
      tokens = lexer.lex('{{ {one:1, "two":2} }}');
      hasTokens(tokens,
        lexer.TOKEN_VARIABLE_START,
        lexer.TOKEN_LEFT_CURLY,
        [lexer.TOKEN_SYMBOL, 'one'],
        lexer.TOKEN_COLON,
        [lexer.TOKEN_INT, '1'],
        lexer.TOKEN_COMMA,
        [lexer.TOKEN_STRING, 'two'],
        lexer.TOKEN_COLON,
        [lexer.TOKEN_INT, '2'],
        lexer.TOKEN_RIGHT_CURLY,
        lexer.TOKEN_VARIABLE_END);
    });

    it('should parse blocks without whitespace', function() {
      tokens = lexer.lex('data{{hello}}{%if%}data');
      hasTokens(tokens,
        lexer.TOKEN_DATA,
        lexer.TOKEN_VARIABLE_START,
        [lexer.TOKEN_SYMBOL, 'hello'],
        lexer.TOKEN_VARIABLE_END,
        lexer.TOKEN_BLOCK_START,
        [lexer.TOKEN_SYMBOL, 'if'],
        lexer.TOKEN_BLOCK_END,
        lexer.TOKEN_DATA);
    });

    it('should parse filters', function() {
      hasTokens(lexer.lex('{{ foo|bar }}'),
        lexer.TOKEN_VARIABLE_START,
        [lexer.TOKEN_SYMBOL, 'foo'],
        lexer.TOKEN_PIPE,
        [lexer.TOKEN_SYMBOL, 'bar'],
        lexer.TOKEN_VARIABLE_END);
    });

    it('should parse operators', function() {
      hasTokens(lexer.lex('{{ 3+3-3*3/3 }}'),
        lexer.TOKEN_VARIABLE_START,
        lexer.TOKEN_INT,
        lexer.TOKEN_OPERATOR,
        lexer.TOKEN_INT,
        lexer.TOKEN_OPERATOR,
        lexer.TOKEN_INT,
        lexer.TOKEN_OPERATOR,
        lexer.TOKEN_INT,
        lexer.TOKEN_OPERATOR,
        lexer.TOKEN_INT,
        lexer.TOKEN_VARIABLE_END);

      hasTokens(lexer.lex('{{ 3**4//5 }}'),
        lexer.TOKEN_VARIABLE_START,
        lexer.TOKEN_INT,
        lexer.TOKEN_OPERATOR,
        lexer.TOKEN_INT,
        lexer.TOKEN_OPERATOR,
        lexer.TOKEN_INT,
        lexer.TOKEN_VARIABLE_END);

      hasTokens(lexer.lex('{{ 3 != 4 == 5 <= 6 >= 7 < 8 > 9 }}'),
        lexer.TOKEN_VARIABLE_START,
        lexer.TOKEN_INT,
        lexer.TOKEN_OPERATOR,
        lexer.TOKEN_INT,
        lexer.TOKEN_OPERATOR,
        lexer.TOKEN_INT,
        lexer.TOKEN_OPERATOR,
        lexer.TOKEN_INT,
        lexer.TOKEN_OPERATOR,
        lexer.TOKEN_INT,
        lexer.TOKEN_OPERATOR,
        lexer.TOKEN_INT,
        lexer.TOKEN_OPERATOR,
        lexer.TOKEN_INT,
        lexer.TOKEN_VARIABLE_END);
    });

    it('should parse comments', function() {
      tokens = lexer.lex('data data {# comment #} data');
      hasTokens(tokens,
        lexer.TOKEN_DATA,
        lexer.TOKEN_COMMENT,
        lexer.TOKEN_DATA);
    });

    it('should allow changing the variable start and end', function() {
      tokens = lexer.lex('data {= var =}', {
        tags: {
          variableStart: '{=',
          variableEnd: '=}'
        }
      });
      hasTokens(tokens,
        lexer.TOKEN_DATA,
        lexer.TOKEN_VARIABLE_START,
        lexer.TOKEN_SYMBOL,
        lexer.TOKEN_VARIABLE_END);
    });

    it('should allow changing the block start and end', function() {
      tokens = lexer.lex('{= =}', {
        tags: {
          blockStart: '{=',
          blockEnd: '=}'
        }
      });
      hasTokens(tokens,
        lexer.TOKEN_BLOCK_START,
        lexer.TOKEN_BLOCK_END);
    });

    it('should allow changing the variable start and end', function() {
      tokens = lexer.lex('data {= var =}', {
        tags: {
          variableStart: '{=',
          variableEnd: '=}'
        }
      });
      hasTokens(tokens,
        lexer.TOKEN_DATA,
        lexer.TOKEN_VARIABLE_START,
        lexer.TOKEN_SYMBOL,
        lexer.TOKEN_VARIABLE_END);
    });

    it('should allow changing the comment start and end', function() {
      tokens = lexer.lex('<!-- A comment! -->', {
        tags: {
          commentStart: '<!--',
          commentEnd: '-->'
        }
      });
      hasTokens(tokens,
        lexer.TOKEN_COMMENT);
    });

    /**
     * Test that this bug is fixed: https://github.com/mozilla/nunjucks/issues/235
     */
    it('should have individual lexer tag settings for each environment', function() {
      tokens = lexer.lex('{=', {
        tags: {
          variableStart: '{='
        }
      });
      hasTokens(tokens, lexer.TOKEN_VARIABLE_START);

      tokens = lexer.lex('{{');
      hasTokens(tokens, lexer.TOKEN_VARIABLE_START);

      tokens = lexer.lex('{{', {
        tags: {
          variableStart: '<<<'
        }
      });
      hasTokens(tokens, lexer.TOKEN_DATA);

      tokens = lexer.lex('{{');
      hasTokens(tokens, lexer.TOKEN_VARIABLE_START);
    });

    it('should parse regular expressions', function() {
      tokens = lexer.lex('{{ r/basic regex [a-z]/ }}');
      hasTokens(tokens,
        lexer.TOKEN_VARIABLE_START,
        lexer.TOKEN_REGEX,
        lexer.TOKEN_VARIABLE_END);

      // A more complex regex with escaped slashes.
      tokens = lexer.lex('{{ r/{a*b} \\/regex! [0-9]\\// }}');
      hasTokens(tokens,
        lexer.TOKEN_VARIABLE_START,
        lexer.TOKEN_REGEX,
        lexer.TOKEN_VARIABLE_END);

      // This one has flags.
      tokens = lexer.lex('{{ r/^x/gim }}');
      hasTokens(tokens,
        lexer.TOKEN_VARIABLE_START,
        lexer.TOKEN_REGEX,
        lexer.TOKEN_VARIABLE_END);

      // This one has a valid flag then an invalid flag.
      tokens = lexer.lex('{{ r/x$/iv }}');
      hasTokens(tokens,
        lexer.TOKEN_VARIABLE_START,
        lexer.TOKEN_REGEX,
        lexer.TOKEN_SYMBOL,
        lexer.TOKEN_VARIABLE_END);
    });

    it('should keep track of token positions', function() {
      hasTokens(lexer.lex('{{ 3 != 4 == 5 <= 6 >= 7 < 8 > 9 }}'),
        {
          type: lexer.TOKEN_VARIABLE_START,
          lineno: 0,
          colno: 0,
        },
        {
          type: lexer.TOKEN_INT,
          value: '3',
          lineno: 0,
          colno: 3,
        },
        {
          type: lexer.TOKEN_OPERATOR,
          value: '!=',
          lineno: 0,
          colno: 5,
        },
        {
          type: lexer.TOKEN_INT,
          value: '4',
          lineno: 0,
          colno: 8,
        },
        {
          type: lexer.TOKEN_OPERATOR,
          value: '==',
          lineno: 0,
          colno: 10,
        },
        {
          type: lexer.TOKEN_INT,
          value: '5',
          lineno: 0,
          colno: 13,
        },
        {
          type: lexer.TOKEN_OPERATOR,
          value: '<=',
          lineno: 0,
          colno: 15,
        },
        {
          type: lexer.TOKEN_INT,
          value: '6',
          lineno: 0,
          colno: 18,
        },
        {
          type: lexer.TOKEN_OPERATOR,
          lineno: 0,
          colno: 20,
          value: '>=',
        },
        {
          type: lexer.TOKEN_INT,
          lineno: 0,
          colno: 23,
          value: '7',
        },
        {
          type: lexer.TOKEN_OPERATOR,
          value: '<',
          lineno: 0,
          colno: 25,
        },
        {
          type: lexer.TOKEN_INT,
          value: '8',
          lineno: 0,
          colno: 27,
        },
        {
          type: lexer.TOKEN_OPERATOR,
          value: '>',
          lineno: 0,
          colno: 29,
        },
        {
          type: lexer.TOKEN_INT,
          value: '9',
          lineno: 0,
          colno: 31,
        },
        {
          type: lexer.TOKEN_VARIABLE_END,
          lineno: 0,
          colno: 33,
        });

      hasTokens(lexer.lex('{% if something %}{{ value }}{% else %}{{ otherValue }}{% endif %}'),
        {
          type: lexer.TOKEN_BLOCK_START,
          lineno: 0,
          colno: 0,
        },
        {
          type: lexer.TOKEN_SYMBOL,
          value: 'if',
          lineno: 0,
          colno: 3,
        },
        {
          type: lexer.TOKEN_SYMBOL,
          value: 'something',
          lineno: 0,
          colno: 6,
        },
        {
          type: lexer.TOKEN_BLOCK_END,
          lineno: 0,
          colno: 16,
        },
        {
          type: lexer.TOKEN_VARIABLE_START,
          lineno: 0,
          colno: 18,
        },
        {
          type: lexer.TOKEN_SYMBOL,
          value: 'value',
          lineno: 0,
          colno: 21,
        },
        {
          type: lexer.TOKEN_VARIABLE_END,
          lineno: 0,
          colno: 27,
        },
        {
          type: lexer.TOKEN_BLOCK_START,
          lineno: 0,
          colno: 29,
        },
        {
          type: lexer.TOKEN_SYMBOL,
          value: 'else',
          lineno: 0,
          colno: 32,
        },
        {
          type: lexer.TOKEN_BLOCK_END,
          lineno: 0,
          colno: 37,
        },
        {
          type: lexer.TOKEN_VARIABLE_START,
          lineno: 0,
          colno: 39,
        },
        {
          type: lexer.TOKEN_SYMBOL,
          value: 'otherValue',
          lineno: 0,
          colno: 42,
        },
        {
          type: lexer.TOKEN_VARIABLE_END,
          lineno: 0,
          colno: 53,
        },
        {
          type: lexer.TOKEN_BLOCK_START,
          lineno: 0,
          colno: 55,
        },
        {
          type: lexer.TOKEN_SYMBOL,
          value: 'endif',
          lineno: 0,
          colno: 58,
        },
        {
          type: lexer.TOKEN_BLOCK_END,
          lineno: 0,
          colno: 64,
        });

      hasTokens(lexer.lex('{% if something %}\n{{ value }}\n{% else %}\n{{ otherValue }}\n{% endif %}'),
        {
          type: lexer.TOKEN_BLOCK_START,
          lineno: 0,
          colno: 0,
        },
        {
          type: lexer.TOKEN_SYMBOL,
          value: 'if',
          lineno: 0,
          colno: 3,
        },
        {
          type: lexer.TOKEN_SYMBOL,
          value: 'something',
          lineno: 0,
          colno: 6,
        },
        {
          type: lexer.TOKEN_BLOCK_END,
          lineno: 0,
          colno: 16,
        },
        {
          type: lexer.TOKEN_DATA,
          value: '\n',
        },
        {
          type: lexer.TOKEN_VARIABLE_START,
          lineno: 1,
          colno: 0,
        },
        {
          type: lexer.TOKEN_SYMBOL,
          value: 'value',
          lineno: 1,
          colno: 3,
        },
        {
          type: lexer.TOKEN_VARIABLE_END,
          lineno: 1,
          colno: 9,
        },
        {
          type: lexer.TOKEN_DATA,
          value: '\n',
        },
        {
          type: lexer.TOKEN_BLOCK_START,
          lineno: 2,
          colno: 0,
        },
        {
          type: lexer.TOKEN_SYMBOL,
          value: 'else',
          lineno: 2,
          colno: 3,
        },
        {
          type: lexer.TOKEN_BLOCK_END,
          lineno: 2,
          colno: 8,
        },
        {
          type: lexer.TOKEN_DATA,
          value: '\n',
        },
        {
          type: lexer.TOKEN_VARIABLE_START,
          lineno: 3,
          colno: 0,
        },
        {
          type: lexer.TOKEN_SYMBOL,
          value: 'otherValue',
          lineno: 3,
          colno: 3,
        },
        {
          type: lexer.TOKEN_VARIABLE_END,
          lineno: 3,
          colno: 14,
        },
        {
          type: lexer.TOKEN_DATA,
          value: '\n',
        },
        {
          type: lexer.TOKEN_BLOCK_START,
          lineno: 4,
          colno: 0,
        },
        {
          type: lexer.TOKEN_SYMBOL,
          value: 'endif',
          lineno: 4,
          colno: 3,
        },
        {
          type: lexer.TOKEN_BLOCK_END,
          lineno: 4,
          colno: 9,
        });
    });
  });
}());


/***/ }),

/***/ 2720:
/*!*************************!*\
  !*** ./tests/loader.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

(function() {
  'use strict';

  var expect,
    Environment,
    WebLoader,
    FileSystemLoader,
    NodeResolveLoader,
    templatesPath;

  if (true) {
    expect = __webpack_require__(/*! expect.js */ 1801);
    Environment = (__webpack_require__(/*! ../nunjucks/src/environment */ 2887).Environment);
    WebLoader = (__webpack_require__(/*! ../nunjucks/src/web-loaders */ 2561).WebLoader);
    FileSystemLoader = (__webpack_require__(/*! ../nunjucks/src/node-loaders */ 5257).FileSystemLoader);
    NodeResolveLoader = (__webpack_require__(/*! ../nunjucks/src/node-loaders */ 5257).NodeResolveLoader);
    templatesPath = 'tests/templates';
  } else {}

  describe('loader', function() {
    it('should allow a simple loader to be created', function() {
      // From Docs: http://mozilla.github.io/nunjucks/api.html#writing-a-loader
      // We should be able to create a loader that only exposes getSource
      var env, parent;

      function MyLoader() {
        // configuration
      }

      MyLoader.prototype.getSource = function() {
        return {
          src: 'Hello World',
          path: '/tmp/somewhere'
        };
      };

      env = new Environment(new MyLoader(templatesPath));
      parent = env.getTemplate('fake.njk');
      expect(parent.render()).to.be('Hello World');
    });

    it('should catch loader error', function(done) {
      // From Docs: http://mozilla.github.io/nunjucks/api.html#writing-a-loader
      // We should be able to create a loader that only exposes getSource
      var env;

      function MyLoader() {
        // configuration
        this.async = true;
      }

      MyLoader.prototype.getSource = function(s, cb) {
        setTimeout(function() {
          cb(new Error('test'));
        }, 1);
      };

      env = new Environment(new MyLoader(templatesPath));
      env.getTemplate('fake.njk', function(err, parent) {
        expect(err).to.be.a(Error);
        expect(parent).to.be(undefined);

        done();
      });
    });

    describe('WebLoader', function() {
      it('should have default opts for WebLoader', function() {
        var webLoader = new WebLoader(templatesPath);
        expect(webLoader).to.be.a(WebLoader);
        expect(webLoader.useCache).to.be(false);
        expect(webLoader.async).to.be(false);
      });

      it('should emit a "load" event', function(done) {
        var loader = new WebLoader(templatesPath);

        if (typeof window === 'undefined') {
          this.skip();
        }

        loader.on('load', function(name, source) {
          expect(name).to.equal('simple-base.njk');
          done();
        });

        loader.getSource('simple-base.njk');
      });
    });

    if (typeof FileSystemLoader !== 'undefined') {
      describe('FileSystemLoader', function() {
        it('should have default opts', function() {
          var loader = new FileSystemLoader(templatesPath);
          expect(loader).to.be.a(FileSystemLoader);
          expect(loader.noCache).to.be(false);
        });

        it('should emit a "load" event', function(done) {
          var loader = new FileSystemLoader(templatesPath);
          loader.on('load', function(name, source) {
            expect(name).to.equal('simple-base.njk');
            done();
          });

          loader.getSource('simple-base.njk');
        });
      });
    }

    if (typeof NodeResolveLoader !== 'undefined') {
      describe('NodeResolveLoader', function() {
        it('should have default opts', function() {
          var loader = new NodeResolveLoader();
          expect(loader).to.be.a(NodeResolveLoader);
          expect(loader.noCache).to.be(false);
        });

        it('should emit a "load" event', function(done) {
          var loader = new NodeResolveLoader();
          loader.on('load', function(name, source) {
            expect(name).to.equal('dummy-pkg/simple-template.html');
            done();
          });

          loader.getSource('dummy-pkg/simple-template.html');
        });

        it('should render templates', function() {
          var env = new Environment(new NodeResolveLoader());
          var tmpl = env.getTemplate('dummy-pkg/simple-template.html');
          expect(tmpl.render({foo: 'foo'})).to.be('foo');
        });

        it('should not allow directory traversal', function() {
          var loader = new NodeResolveLoader();
          var dummyPkgPath = /*require.resolve*/(/*! dummy-pkg/simple-template.html */ 8824);
          expect(loader.getSource(dummyPkgPath)).to.be(null);
        });

        it('should return null if no match', function() {
          var loader = new NodeResolveLoader();
          var tmplName = 'dummy-pkg/does-not-exist.html';
          expect(loader.getSource(tmplName)).to.be(null);
        });
      });
    }
  });
}());


/***/ }),

/***/ 6124:
/*!*************************!*\
  !*** ./tests/parser.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

(function() {
  'use strict';

  var expect,
    lib,
    nodes,
    parser;

  if (true) {
    expect = __webpack_require__(/*! expect.js */ 1801);
    lib = __webpack_require__(/*! ../nunjucks/src/lib */ 449);
    nodes = __webpack_require__(/*! ../nunjucks/src/nodes */ 8883);
    parser = __webpack_require__(/*! ../nunjucks/src/parser */ 999);
  } else {}

  function _isAST(node1, node2) {
    // Compare ASTs
    // TODO: Clean this up (seriously, really)
    /* eslint-disable vars-on-top */

    expect(node1.typename).to.be(node2.typename);

    if (node2 instanceof nodes.NodeList) {
      var lit = ': num-children: ';
      var sig2 = (node2.typename + lit + node2.children.length);

      expect(node1.children).to.be.ok();
      var sig1 = (node1.typename + lit + node1.children.length);

      expect(sig1).to.be(sig2);

      for (var n = 0, l = node2.children.length; n < l; n++) {
        _isAST(node1.children[n], node2.children[n]);
      }
    } else {
      node2.iterFields(function(value, field) {
        var ofield = node1[field];

        if (value instanceof nodes.Node) {
          _isAST(ofield, value);
        } else if (lib.isArray(ofield) && lib.isArray(value)) {
          expect('num-children: ' + ofield.length).to.be('num-children: ' + value.length);

          lib.each(ofield, function(v, i) {
            if (ofield[i] instanceof nodes.Node) {
              _isAST(ofield[i], value[i]);
            } else if (ofield[i] !== null && value[i] !== null) {
              expect(ofield[i]).to.be(value[i]);
            }
          });
        } else if ((ofield !== null || value !== null) &&
          (ofield !== undefined || value !== undefined)) {
          if (ofield === null) {
            throw new Error(value + ' expected for "' + field +
              '", null found');
          }

          if (value === null) {
            throw new Error(ofield + ' expected to be null for "' +
              field + '"');
          }

          // We want good errors and tracebacks, so test on
          // whichever object exists
          if (!ofield) {
            expect(value).to.be(ofield);
          } else if (ofield !== null && ofield instanceof RegExp) {
            // This conditional check for RegExp is needed because /a/ != /a/
            expect(String(ofield)).to.be(String(value));
          } else {
            expect(ofield).to.be(value);
          }
        }
      });
    }
  }

  function isAST(node1, ast) {
    // Compare the ASTs, the second one is an AST literal so transform
    // it into a real one
    return _isAST(node1, toNodes(ast));
  }

  // We'll be doing a lot of AST comparisons, so this defines a kind
  // of "AST literal" that you can specify with arrays. This
  // transforms it into a real AST.
  function toNodes(ast) {
    if (!(ast && lib.isArray(ast))) {
      return ast;
    }

    var Type = ast[0];
    // some nodes have fields (e.g. Compare.ops) which are plain arrays
    if (Type instanceof Array) {
      return lib.map(ast, toNodes);
    }
    var F = function() {};
    F.prototype = Type.prototype;

    var dummy = new F();

    if (dummy instanceof nodes.NodeList) {
      return new Type(0, 0, lib.map(ast.slice(1), toNodes));
    } else if (dummy instanceof nodes.CallExtension) {
      return new Type(ast[1], ast[2], ast[3] ? toNodes(ast[3]) : ast[3],
        lib.isArray(ast[4]) ? lib.map(ast[4], toNodes) : ast[4]);
    } else {
      return new Type(0, 0,
        toNodes(ast[1]),
        toNodes(ast[2]),
        toNodes(ast[3]),
        toNodes(ast[4]),
        toNodes(ast[5]));
    }
  }

  describe('parser', function() {
    it('should parse basic types', function() {
      isAST(parser.parse('{{ 1 }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Literal, 1]]]);

      isAST(parser.parse('{{ 4.567 }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Literal, 4.567]]]);

      isAST(parser.parse('{{ "foo" }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Literal, 'foo']]]);

      isAST(parser.parse('{{ \'foo\' }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Literal, 'foo']]]);

      isAST(parser.parse('{{ true }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Literal, true]]]);

      isAST(parser.parse('{{ false }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Literal, false]]]);

      isAST(parser.parse('{{ none }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Literal, null]]]);

      isAST(parser.parse('{{ foo }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Symbol, 'foo']]]);

      isAST(parser.parse('{{ r/23/gi }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Literal, new RegExp('23', 'gi')]]]);
    });

    it('should parse aggregate types', function() {
      isAST(parser.parse('{{ [1,2,3] }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Array,
              [nodes.Literal, 1],
              [nodes.Literal, 2],
              [nodes.Literal, 3]]]]);

      isAST(parser.parse('{{ (1,2,3) }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Group,
              [nodes.Literal, 1],
              [nodes.Literal, 2],
              [nodes.Literal, 3]]]]);

      isAST(parser.parse('{{ {foo: 1, \'two\': 2} }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Dict,
              [nodes.Pair,
                [nodes.Symbol, 'foo'],
                [nodes.Literal, 1]],
              [nodes.Pair,
                [nodes.Literal, 'two'],
                [nodes.Literal, 2]]]]]);
    });

    it('should parse variables', function() {
      isAST(parser.parse('hello {{ foo }}, how are you'),
        [nodes.Root,
          [nodes.Output, [nodes.TemplateData, 'hello ']],
          [nodes.Output, [nodes.Symbol, 'foo']],
          [nodes.Output, [nodes.TemplateData, ', how are you']]]);
    });

    it('should parse operators', function() {
      isAST(parser.parse('{{ x == y }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Compare,
              [nodes.Symbol, 'x'],
              [[nodes.CompareOperand, [nodes.Symbol, 'y'], '==']]]]]);

      isAST(parser.parse('{{ x or y }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Or,
              [nodes.Symbol, 'x'],
              [nodes.Symbol, 'y']]]]);

      isAST(parser.parse('{{ x in y }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.In,
              [nodes.Symbol, 'x'],
              [nodes.Symbol, 'y']]]]);

      isAST(parser.parse('{{ x not in y }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Not,
              [nodes.In,
                [nodes.Symbol, 'x'],
                [nodes.Symbol, 'y']]]]]);

      isAST(parser.parse('{{ x is callable }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Is,
              [nodes.Symbol, 'x'],
              [nodes.Symbol, 'callable']]]]);

      isAST(parser.parse('{{ x is not callable }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Not,
              [nodes.Is,
                [nodes.Symbol, 'x'],
                [nodes.Symbol, 'callable']]]]]);
    });

    it('should parse tilde', function() {
      isAST(parser.parse('{{ 2 ~ 3 }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Concat,
              [nodes.Literal, 2],
              [nodes.Literal, 3]
            ]]]
      );
    });

    it('should parse operators with correct precedence', function() {
      isAST(parser.parse('{{ x in y and z }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.And,
              [nodes.In,
                [nodes.Symbol, 'x'],
                [nodes.Symbol, 'y']],
              [nodes.Symbol, 'z']]]]);

      isAST(parser.parse('{{ x not in y or z }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Or,
              [nodes.Not,
                [nodes.In,
                  [nodes.Symbol, 'x'],
                  [nodes.Symbol, 'y']]],
              [nodes.Symbol, 'z']]]]);

      isAST(parser.parse('{{ x or y and z }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Or,
              [nodes.Symbol, 'x'],
              [nodes.And,
                [nodes.Symbol, 'y'],
                [nodes.Symbol, 'z']]]]]);
    });

    it('should parse blocks', function() {
      var n = parser.parse('want some {% if hungry %}pizza{% else %}' +
        'water{% endif %}?');
      expect(n.children[1].typename).to.be('If');

      n = parser.parse('{% block foo %}stuff{% endblock %}');
      expect(n.children[0].typename).to.be('Block');

      n = parser.parse('{% block foo %}stuff{% endblock foo %}');
      expect(n.children[0].typename).to.be('Block');

      n = parser.parse('{% extends "test.njk" %}stuff');
      expect(n.children[0].typename).to.be('Extends');

      n = parser.parse('{% include "test.njk" %}');
      expect(n.children[0].typename).to.be('Include');
    });

    it('should accept attributes and methods of static arrays, objects and primitives', function() {
      expect(function() {
        parser.parse('{{ ([1, 2, 3]).indexOf(1) }}');
      }).to.not.throwException();

      expect(function() {
        parser.parse('{{ [1, 2, 3].length }}');
      }).to.not.throwException();

      expect(function() {
        parser.parse('{{ "Some String".replace("S", "$") }}');
      }).to.not.throwException();

      expect(function() {
        parser.parse('{{ ({ name : "Khalid" }).name }}');
      }).to.not.throwException();

      expect(function() {
        parser.parse('{{ 1.618.toFixed(2) }}');
      }).to.not.throwException();
    });

    it('should parse include tags', function() {
      var n = parser.parse('{% include "test.njk" %}');
      expect(n.children[0].typename).to.be('Include');

      n = parser.parse('{% include "test.html"|replace("html","j2") %}');
      expect(n.children[0].typename).to.be('Include');

      n = parser.parse('{% include ""|default("test.njk") %}');
      expect(n.children[0].typename).to.be('Include');
    });

    it('should parse for loops', function() {
      isAST(parser.parse('{% for x in [1, 2] %}{{ x }}{% endfor %}'),
        [nodes.Root,
          [nodes.For,
            [nodes.Array,
              [nodes.Literal, 1],
              [nodes.Literal, 2]],
            [nodes.Symbol, 'x'],
            [nodes.NodeList,
              [nodes.Output,
                [nodes.Symbol, 'x']]]]]);
    });

    it('should parse for loops with else', function() {
      isAST(parser.parse('{% for x in [] %}{{ x }}{% else %}empty{% endfor %}'),
        [nodes.Root,
          [nodes.For,
            [nodes.Array],
            [nodes.Symbol, 'x'],
            [nodes.NodeList,
              [nodes.Output,
                [nodes.Symbol, 'x']]],
            [nodes.NodeList,
              [nodes.Output,
                [nodes.TemplateData, 'empty']]]]]);
    });

    it('should parse filters', function() {
      isAST(parser.parse('{{ foo | bar }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Filter,
              [nodes.Symbol, 'bar'],
              [nodes.NodeList,
                [nodes.Symbol, 'foo']]]]]);

      isAST(parser.parse('{{ foo | bar | baz }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Filter,
              [nodes.Symbol, 'baz'],
              [nodes.NodeList,
                [nodes.Filter,
                  [nodes.Symbol, 'bar'],
                  [nodes.NodeList,
                    [nodes.Symbol, 'foo']]]]]]]);

      isAST(parser.parse('{{ foo | bar(3) }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.Filter,
              [nodes.Symbol, 'bar'],
              [nodes.NodeList,
                [nodes.Symbol, 'foo'],
                [nodes.Literal, 3]]]]]);
    });

    it('should parse macro definitions', function() {
      var ast = parser.parse('{% macro foo(bar, baz="foobar") %}' +
        'This is a macro' +
        '{% endmacro %}');
      isAST(ast,
        [nodes.Root,
          [nodes.Macro,
            [nodes.Symbol, 'foo'],
            [nodes.NodeList,
              [nodes.Symbol, 'bar'],
              [nodes.KeywordArgs,
                [nodes.Pair,
                  [nodes.Symbol, 'baz'], [nodes.Literal, 'foobar']]]],
            [nodes.NodeList,
              [nodes.Output,
                [nodes.TemplateData, 'This is a macro']]]]]);
    });

    it('should parse call blocks', function() {
      var ast = parser.parse('{% call foo("bar") %}' +
        'This is the caller' +
        '{% endcall %}');
      isAST(ast,
        [nodes.Root,
          [nodes.Output,
            [nodes.FunCall,
              [nodes.Symbol, 'foo'],
              [nodes.NodeList,
                [nodes.Literal, 'bar'],
                [nodes.KeywordArgs,
                  [nodes.Pair,
                    [nodes.Symbol, 'caller'],
                    [nodes.Caller,
                      [nodes.Symbol, 'caller'],
                      [nodes.NodeList],
                      [nodes.NodeList,
                        [nodes.Output,
                          [nodes.TemplateData, 'This is the caller']]]]]]]]]]);
    });

    it('should parse call blocks with args', function() {
      var ast = parser.parse('{% call(i) foo("bar", baz="foobar") %}' +
        'This is {{ i }}' +
        '{% endcall %}');
      isAST(ast,
        [nodes.Root,
          [nodes.Output,
            [nodes.FunCall,
              [nodes.Symbol, 'foo'],
              [nodes.NodeList,
                [nodes.Literal, 'bar'],
                [nodes.KeywordArgs,
                  [nodes.Pair,
                    [nodes.Symbol, 'baz'], [nodes.Literal, 'foobar']],
                  [nodes.Pair,
                    [nodes.Symbol, 'caller'],
                    [nodes.Caller,
                      [nodes.Symbol, 'caller'],
                      [nodes.NodeList, [nodes.Symbol, 'i']],
                      [nodes.NodeList,
                        [nodes.Output,
                          [nodes.TemplateData, 'This is ']],
                        [nodes.Output,
                          [nodes.Symbol, 'i']]]]]]]]]]);
    });

    it('should parse raw', function() {
      isAST(parser.parse('{% raw %}hello {{ {% %} }}{% endraw %}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.TemplateData, 'hello {{ {% %} }}']]]);
    });

    it('should parse raw with broken variables', function() {
      isAST(parser.parse('{% raw %}{{ x }{% endraw %}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.TemplateData, '{{ x }']]]);
    });

    it('should parse raw with broken blocks', function() {
      isAST(parser.parse('{% raw %}{% if i_am_stupid }Still do your job well{% endraw %}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.TemplateData, '{% if i_am_stupid }Still do your job well']]]);
    });

    it('should parse raw with pure text', function() {
      isAST(parser.parse('{% raw %}abc{% endraw %}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.TemplateData, 'abc']]]);
    });


    it('should parse raw with raw blocks', function() {
      isAST(parser.parse('{% raw %}{% raw %}{{ x }{% endraw %}{% endraw %}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.TemplateData, '{% raw %}{{ x }{% endraw %}']]]);
    });

    it('should parse raw with comment blocks', function() {
      isAST(parser.parse('{% raw %}{# test {% endraw %}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.TemplateData, '{# test ']]]);
    });

    it('should parse multiple raw blocks', function() {
      isAST(parser.parse('{% raw %}{{ var }}{% endraw %}{{ var }}{% raw %}{{ var }}{% endraw %}'),
        [nodes.Root,
          [nodes.Output, [nodes.TemplateData, '{{ var }}']],
          [nodes.Output, [nodes.Symbol, 'var']],
          [nodes.Output, [nodes.TemplateData, '{{ var }}']]]);
    });

    it('should parse multiline multiple raw blocks', function() {
      isAST(parser.parse('\n{% raw %}{{ var }}{% endraw %}\n{{ var }}\n{% raw %}{{ var }}{% endraw %}\n'),
        [nodes.Root,
          [nodes.Output, [nodes.TemplateData, '\n']],
          [nodes.Output, [nodes.TemplateData, '{{ var }}']],
          [nodes.Output, [nodes.TemplateData, '\n']],
          [nodes.Output, [nodes.Symbol, 'var']],
          [nodes.Output, [nodes.TemplateData, '\n']],
          [nodes.Output, [nodes.TemplateData, '{{ var }}']],
          [nodes.Output, [nodes.TemplateData, '\n']]]);
    });

    it('should parse verbatim', function() {
      isAST(parser.parse('{% verbatim %}hello {{ {% %} }}{% endverbatim %}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.TemplateData, 'hello {{ {% %} }}']]]);
    });

    it('should parse verbatim with broken variables', function() {
      isAST(parser.parse('{% verbatim %}{{ x }{% endverbatim %}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.TemplateData, '{{ x }']]]);
    });

    it('should parse verbatim with broken blocks', function() {
      isAST(parser.parse('{% verbatim %}{% if i_am_stupid }Still do your job well{% endverbatim %}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.TemplateData, '{% if i_am_stupid }Still do your job well']]]);
    });

    it('should parse verbatim with pure text', function() {
      isAST(parser.parse('{% verbatim %}abc{% endverbatim %}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.TemplateData, 'abc']]]);
    });


    it('should parse verbatim with verbatim blocks', function() {
      isAST(parser.parse('{% verbatim %}{% verbatim %}{{ x }{% endverbatim %}{% endverbatim %}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.TemplateData, '{% verbatim %}{{ x }{% endverbatim %}']]]);
    });

    it('should parse verbatim with comment blocks', function() {
      isAST(parser.parse('{% verbatim %}{# test {% endverbatim %}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.TemplateData, '{# test ']]]);
    });

    it('should parse multiple verbatim blocks', function() {
      isAST(parser.parse('{% verbatim %}{{ var }}{% endverbatim %}{{ var }}{% verbatim %}{{ var }}{% endverbatim %}'),
        [nodes.Root,
          [nodes.Output, [nodes.TemplateData, '{{ var }}']],
          [nodes.Output, [nodes.Symbol, 'var']],
          [nodes.Output, [nodes.TemplateData, '{{ var }}']]]);
    });

    it('should parse multiline multiple verbatim blocks', function() {
      isAST(parser.parse('\n{% verbatim %}{{ var }}{% endverbatim %}\n{{ var }}\n{% verbatim %}{{ var }}{% endverbatim %}\n'),
        [nodes.Root,
          [nodes.Output, [nodes.TemplateData, '\n']],
          [nodes.Output, [nodes.TemplateData, '{{ var }}']],
          [nodes.Output, [nodes.TemplateData, '\n']],
          [nodes.Output, [nodes.Symbol, 'var']],
          [nodes.Output, [nodes.TemplateData, '\n']],
          [nodes.Output, [nodes.TemplateData, '{{ var }}']],
          [nodes.Output, [nodes.TemplateData, '\n']]]);
    });

    it('should parse switch statements', function() {
      var tpl = '{% switch foo %}{% case "bar" %}BAR{% case "baz" %}BAZ{% default %}NEITHER FOO NOR BAR{% endswitch %}';
      isAST(parser.parse(tpl),
        [nodes.Root,
          [nodes.Switch,
            [nodes.Symbol, 'foo'],
            [
              [nodes.Case,
                [nodes.Literal, 'bar'],
                [nodes.NodeList,
                  [nodes.Output,
                    [nodes.TemplateData, 'BAR']]]],
              [nodes.Case,
                [nodes.Literal, 'baz'],
                [nodes.NodeList,
                  [nodes.Output,
                    [nodes.TemplateData, 'BAZ']]]]],
            [nodes.NodeList,
              [nodes.Output,
                [nodes.TemplateData, 'NEITHER FOO NOR BAR']]]]]);
    });

    it('should parse keyword and non-keyword arguments', function() {
      isAST(parser.parse('{{ foo("bar", falalalala, baz="foobar") }}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.FunCall,
              [nodes.Symbol, 'foo'],
              [nodes.NodeList,
                [nodes.Literal, 'bar'],
                [nodes.Symbol, 'falalalala'],
                [nodes.KeywordArgs,
                  [nodes.Pair,
                    [nodes.Symbol, 'baz'],
                    [nodes.Literal, 'foobar']]]]]]]);
    });

    it('should parse imports', function() {
      isAST(parser.parse('{% import "foo/bar.njk" as baz %}'),
        [nodes.Root,
          [nodes.Import,
            [nodes.Literal, 'foo/bar.njk'],
            [nodes.Symbol, 'baz']]]);

      isAST(parser.parse('{% from "foo/bar.njk" import baz, foobar as foobarbaz %}'),
        [nodes.Root,
          [nodes.FromImport,
            [nodes.Literal, 'foo/bar.njk'],
            [nodes.NodeList,
              [nodes.Symbol, 'baz'],
              [nodes.Pair,
                [nodes.Symbol, 'foobar'],
                [nodes.Symbol, 'foobarbaz']]]]]);

      isAST(parser.parse('{% import "foo/bar.html"|replace("html", "j2") as baz %}'),
        [nodes.Root,
          [nodes.Import,
            [nodes.Filter,
              [nodes.Symbol, 'replace'],
              [nodes.NodeList,
                [nodes.Literal, 'foo/bar.html'],
                [nodes.Literal, 'html'],
                [nodes.Literal, 'j2']
              ]
            ],
            [nodes.Symbol, 'baz']]]);

      isAST(parser.parse('{% from ""|default("foo/bar.njk") import baz, foobar as foobarbaz %}'),
        [nodes.Root,
          [nodes.FromImport,
            [nodes.Filter,
              [nodes.Symbol, 'default'],
              [nodes.NodeList,
                [nodes.Literal, ''],
                [nodes.Literal, 'foo/bar.njk']
              ]
            ],
            [nodes.NodeList,
              [nodes.Symbol, 'baz'],
              [nodes.Pair,
                [nodes.Symbol, 'foobar'],
                [nodes.Symbol, 'foobarbaz']]]]]);
    });

    it('should parse whitespace control', function() {
      // Every start/end tag with "-" should trim the whitespace
      // before or after it

      isAST(parser.parse('{% if x %}\n  hi \n{% endif %}'),
        [nodes.Root,
          [nodes.If,
            [nodes.Symbol, 'x'],
            [nodes.NodeList,
              [nodes.Output,
                [nodes.TemplateData, '\n  hi \n']]]]]);

      isAST(parser.parse('{% if x -%}\n  hi \n{% endif %}'),
        [nodes.Root,
          [nodes.If,
            [nodes.Symbol, 'x'],
            [nodes.NodeList,
              [nodes.Output,
                [nodes.TemplateData, 'hi \n']]]]]);

      isAST(parser.parse('{% if x %}\n  hi \n{%- endif %}'),
        [nodes.Root,
          [nodes.If,
            [nodes.Symbol, 'x'],
            [nodes.NodeList,
              [nodes.Output,
                [nodes.TemplateData, '\n  hi']]]]]);

      isAST(parser.parse('{% if x -%}\n  hi \n{%- endif %}'),
        [nodes.Root,
          [nodes.If,
            [nodes.Symbol, 'x'],
            [nodes.NodeList,
              [nodes.Output,
                [nodes.TemplateData, 'hi']]]]]);

      isAST(parser.parse('poop  \n{%- if x -%}\n  hi \n{%- endif %}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.TemplateData, 'poop']],
          [nodes.If,
            [nodes.Symbol, 'x'],
            [nodes.NodeList,
              [nodes.Output,
                [nodes.TemplateData, 'hi']]]]]);

      isAST(parser.parse('hello \n{#- comment #}'),
        [nodes.Root,
          [nodes.Output,
            [nodes.TemplateData, 'hello']]]);

      isAST(parser.parse('{# comment -#} \n world'),
        [nodes.Root,
          [nodes.Output,
            [nodes.TemplateData, 'world']]]);

      isAST(parser.parse('hello \n{#- comment -#} \n world'),
        [nodes.Root,
          [nodes.Output,
            [nodes.TemplateData, 'hello']],
          [nodes.Output,
            [nodes.TemplateData, 'world']]]);

      isAST(parser.parse('hello \n{# - comment - #} \n world'),
        [nodes.Root,
          [nodes.Output,
            [nodes.TemplateData, 'hello \n']],
          [nodes.Output,
            [nodes.TemplateData, ' \n world']]]);

      // The from statement required a special case so make sure to
      // test it
      isAST(parser.parse('{% from x import y %}\n  hi \n'),
        [nodes.Root,
          [nodes.FromImport,
            [nodes.Symbol, 'x'],
            [nodes.NodeList,
              [nodes.Symbol, 'y']]],
          [nodes.Output,
            [nodes.TemplateData, '\n  hi \n']]]);

      isAST(parser.parse('{% from x import y -%}\n  hi \n'),
        [nodes.Root,
          [nodes.FromImport,
            [nodes.Symbol, 'x'],
            [nodes.NodeList,
              [nodes.Symbol, 'y']]],
          [nodes.Output,
            [nodes.TemplateData, 'hi \n']]]);

      isAST(parser.parse('{% if x -%}{{y}} {{z}}{% endif %}'),
        [nodes.Root,
          [nodes.If,
            [nodes.Symbol, 'x'],
            [nodes.NodeList,
              [nodes.Output,
                [nodes.Symbol, 'y']],
              [nodes.Output,
                // the value of TemplateData should be ' ' instead of ''
                [nodes.TemplateData, ' ']],
              [nodes.Output,
                [nodes.Symbol, 'z']]]]]);

      isAST(parser.parse('{% if x -%}{% if y %} {{z}}{% endif %}{% endif %}'),
        [nodes.Root,
          [nodes.If,
            [nodes.Symbol, 'x'],
            [nodes.NodeList,
              [nodes.If,
                [nodes.Symbol, 'y'],
                [nodes.NodeList,
                  [nodes.Output,
                    // the value of TemplateData should be ' ' instead of ''
                    [nodes.TemplateData, ' ']],
                  [nodes.Output,
                    [nodes.Symbol, 'z']]
                ]]]]]);

      isAST(parser.parse('{% if x -%}{# comment #} {{z}}{% endif %}'),
        [nodes.Root,
          [nodes.If,
            [nodes.Symbol, 'x'],
            [nodes.NodeList,
              [nodes.Output,
                // the value of TemplateData should be ' ' instead of ''
                [nodes.TemplateData, ' ']],
              [nodes.Output,
                [nodes.Symbol, 'z']]]]]);
    });

    it('should throw errors', function() {
      expect(function() {
        parser.parse('hello {{ foo');
      }).to.throwException(/expected variable end/);

      expect(function() {
        parser.parse('hello {% if');
      }).to.throwException(/expected expression/);

      expect(function() {
        parser.parse('hello {% if sdf zxc');
      }).to.throwException(/expected block end/);

      expect(function() {
        parser.parse('{% include "foo %}');
      }).to.throwException(/expected block end/);

      expect(function() {
        parser.parse('hello {% if sdf %} data');
      }).to.throwException(/expected elif, else, or endif/);

      expect(function() {
        parser.parse('hello {% block sdf %} data');
      }).to.throwException(/expected endblock/);

      expect(function() {
        parser.parse('hello {% block sdf %} data{% endblock foo %}');
      }).to.throwException(/expected block end/);

      expect(function() {
        parser.parse('hello {% bar %} dsfsdf');
      }).to.throwException(/unknown block tag/);

      expect(function() {
        parser.parse('{{ foo(bar baz) }}');
      }).to.throwException(/expected comma after expression/);

      expect(function() {
        parser.parse('{% import "foo" %}');
      }).to.throwException(/expected "as" keyword/);

      expect(function() {
        parser.parse('{% from "foo" %}');
      }).to.throwException(/expected import/);

      expect(function() {
        parser.parse('{% from "foo" import bar baz %}');
      }).to.throwException(/expected comma/);

      expect(function() {
        parser.parse('{% from "foo" import _bar %}');
      }).to.throwException(/names starting with an underscore cannot be imported/);
    });

    it('should parse custom tags', function() {
      function TestTagExtension() {
        /* eslint-disable no-shadow */
        this.tags = ['testtag'];

        /* normally this is automatically done by Environment */
        this._name = 'testtagExtension';

        this.parse = function(parser, nodes) {
          parser.peekToken();
          parser.advanceAfterBlockEnd();
          return new nodes.CallExtension(this, 'foo');
        };
      }

      function TestBlockTagExtension() {
        /* eslint-disable no-shadow */
        this.tags = ['testblocktag'];
        this._name = 'testblocktagExtension';

        this.parse = function(parser, nodes) {
          parser.peekToken();
          parser.advanceAfterBlockEnd();

          var content = parser.parseUntilBlocks('endtestblocktag');
          var tag = new nodes.CallExtension(this, 'bar', null, [1, content]);
          parser.advanceAfterBlockEnd();

          return tag;
        };
      }

      function TestArgsExtension() {
        /* eslint-disable no-shadow */
        this.tags = ['testargs'];
        this._name = 'testargsExtension';

        this.parse = function(parser, nodes) {
          var begun = parser.peekToken();
          var args = null;

          // Skip the name
          parser.nextToken();

          args = parser.parseSignature(true);
          parser.advanceAfterBlockEnd(begun.value);

          return new nodes.CallExtension(this, 'biz', args);
        };
      }

      var extensions = [new TestTagExtension(),
        new TestBlockTagExtension(),
        new TestArgsExtension()];

      isAST(parser.parse('{% testtag %}', extensions),
        [nodes.Root,
          [nodes.CallExtension, extensions[0], 'foo', undefined, undefined]]);

      isAST(parser.parse('{% testblocktag %}sdfd{% endtestblocktag %}', extensions),
        [nodes.Root,
          [nodes.CallExtension, extensions[1], 'bar', null,
            [1, [nodes.NodeList,
              [nodes.Output,
                [nodes.TemplateData, 'sdfd']]]]]]);

      isAST(parser.parse('{% testblocktag %}{{ 123 }}{% endtestblocktag %}', extensions),
        [nodes.Root,
          [nodes.CallExtension, extensions[1], 'bar', null,
            [1, [nodes.NodeList,
              [nodes.Output,
                [nodes.Literal, 123]]]]]]);

      isAST(parser.parse('{% testargs(123, "abc", foo="bar") %}', extensions),
        [nodes.Root,
          [nodes.CallExtension, extensions[2], 'biz',

            // The only arg is the list of run-time arguments
            // coming from the template
            [nodes.NodeList,
              [nodes.Literal, 123],
              [nodes.Literal, 'abc'],
              [nodes.KeywordArgs,
                [nodes.Pair,
                  [nodes.Symbol, 'foo'],
                  [nodes.Literal, 'bar']]]]]]);

      isAST(parser.parse('{% testargs %}', extensions),
        [nodes.Root,
          [nodes.CallExtension, extensions[2], 'biz', null]]);
    });
  });
}());


/***/ }),

/***/ 9739:
/*!**************************!*\
  !*** ./tests/runtime.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

(function() {
  'use strict';

  var expect, util, finish, render;

  if (true) {
    expect = __webpack_require__(/*! expect.js */ 1801);
    util = __webpack_require__(/*! ./util */ 9099);
  } else {}

  finish = util.finish;
  render = util.render;

  describe('runtime', function() {
    it('should report the failed function calls to symbols', function(done) {
      render('{{ foo("cvan") }}', {}, {
        noThrow: true
      }, function(err) {
        expect(err).to.match(/Unable to call `foo`, which is undefined/);
      });

      finish(done);
    });

    it('should report the failed function calls to lookups', function(done) {
      render('{{ foo["bar"]("cvan") }}', {}, {
        noThrow: true
      }, function(err) {
        expect(err).to.match(/foo\["bar"\]/);
      });

      finish(done);
    });

    it('should report the failed function calls to calls', function(done) {
      render('{{ foo.bar("second call") }}', {}, {
        noThrow: true
      }, function(err) {
        expect(err).to.match(/foo\["bar"\]/);
      });

      finish(done);
    });

    it('should report full function name in error', function(done) {
      render('{{ foo.barThatIsLongerThanTen() }}', {}, {
        noThrow: true
      }, function(err) {
        expect(err).to.match(/foo\["barThatIsLongerThanTen"\]/);
      });

      finish(done);
    });

    it('should report the failed function calls w/multiple args', function(done) {
      render('{{ foo.bar("multiple", "args") }}', {}, {
        noThrow: true
      }, function(err) {
        expect(err).to.match(/foo\["bar"\]/);
      });

      render('{{ foo["bar"]["zip"]("multiple", "args") }}',
        {},
        {
          noThrow: true
        },
        function(err) {
          expect(err).to.match(/foo\["bar"\]\["zip"\]/);
        });

      finish(done);
    });

    it('should allow for undefined macro arguments in the last position', function(done) {
      render('{% macro foo(bar, baz) %}' +
        '{{ bar }} {{ baz }}{% endmacro %}' +
        '{{ foo("hello", nosuchvar) }}',
      {},
      {
        noThrow: true
      },
      function(err, res) {
        expect(err).to.equal(null);
        expect(typeof res).to.be('string');
      });

      finish(done);
    });

    it('should allow for objects without a prototype macro arguments in the last position', function(done) {
      var noProto = Object.create(null);
      noProto.qux = 'world';

      render('{% macro foo(bar, baz) %}' +
      '{{ bar }} {{ baz.qux }}{% endmacro %}' +
      '{{ foo("hello", noProto) }}',
      {
        noProto: noProto
      },
      {
        noThrow: true
      },
      function(err, res) {
        expect(err).to.equal(null);
        expect(res).to.equal('hello world');
      });

      finish(done);
    });

    it('should not read variables property from Object.prototype', function(done) {
      var payload = 'function(){ return 1+2; }()';
      var data = {};
      Object.getPrototypeOf(data).payload = payload;

      render('{{ payload }}', data, {
        noThrow: true
      }, function(err, res) {
        expect(err).to.equal(null);
        expect(res).to.equal(payload);
      });
      delete Object.getPrototypeOf(data).payload;

      finish(done);
    });
  });
}());


/***/ }),

/***/ 8824:
/*!*************************************************************!*\
  !*** ./tests/test-node-pkgs/dummy-pkg/simple-template.html ***!
  \*************************************************************/
/***/ (() => {

{{ foo }}

/***/ }),

/***/ 6438:
/*!************************!*\
  !*** ./tests/tests.js ***!
  \************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

(function() {
  'use strict';

  var expect, util, render, equal;

  if (true) {
    expect = __webpack_require__(/*! expect.js */ 1801);
    util = __webpack_require__(/*! ./util */ 9099);
  } else {}

  render = util.render;
  equal = util.equal;

  describe('tests', function() {
    it('callable should detect callability', function() {
      var callable = render('{{ foo is callable }}', {
        foo: function() {
          return '!!!';
        }
      });
      var uncallable = render('{{ foo is not callable }}', {
        foo: '!!!'
      });
      expect(callable).to.be('true');
      expect(uncallable).to.be('true');
    });

    it('defined should detect definedness', function() {
      expect(render('{{ foo is defined }}')).to.be('false');
      expect(render('{{ foo is not defined }}')).to.be('true');
      expect(render('{{ foo is defined }}', {
        foo: null
      })).to.be('true');
      expect(render('{{ foo is not defined }}', {
        foo: null
      })).to.be('false');
    });

    it('should support "is defined" in {% if %} expressions', function() {
      expect(
        render('{% if foo is defined %}defined{% else %}undefined{% endif %}',
          {})
      ).to.be('undefined');
      expect(
        render('{% if foo is defined %}defined{% else %}undefined{% endif %}',
          {foo: null})
      ).to.be('defined');
    });

    it('should support "is not defined" in {% if %} expressions', function() {
      expect(
        render('{% if foo is not defined %}undefined{% else %}defined{% endif %}',
          {})
      ).to.be('undefined');
      expect(
        render('{% if foo is not defined %}undefined{% else %}defined{% endif %}',
          {foo: null})
      ).to.be('defined');
    });

    it('undefined should detect undefinedness', function() {
      expect(render('{{ foo is undefined }}')).to.be('true');
      expect(render('{{ foo is not undefined }}')).to.be('false');
      expect(render('{{ foo is undefined }}', {
        foo: null
      })).to.be('false');
      expect(render('{{ foo is not undefined }}', {
        foo: null
      })).to.be('true');
    });

    it('none/null should detect strictly null values', function() {
      // required a change in lexer.js @ 220
      expect(render('{{ null is null }}')).to.be('true');
      expect(render('{{ none is none }}')).to.be('true');
      expect(render('{{ none is null }}')).to.be('true');
      expect(render('{{ foo is null }}')).to.be('false');
      expect(render('{{ foo is not null }}', {
        foo: null
      })).to.be('false');
    });

    it('divisibleby should detect divisibility', function() {
      var divisible = render('{{ "6" is divisibleby(3) }}');
      var notDivisible = render('{{ 3 is not divisibleby(2) }}');
      expect(divisible).to.be('true');
      expect(notDivisible).to.be('true');
    });

    it('escaped should test whether or not something is escaped', function() {
      var escaped = render('{{ (foo | safe) is escaped }}', {
        foo: 'foobarbaz'
      });
      var notEscaped = render('{{ foo is escaped }}', {
        foo: 'foobarbaz'
      });
      expect(escaped).to.be('true');
      expect(notEscaped).to.be('false');
    });

    it('even should detect whether or not a number is even', function() {
      var fiveEven = render('{{ "5" is even }}');
      var fourNotEven = render('{{ 4 is not even }}');
      expect(fiveEven).to.be('false');
      expect(fourNotEven).to.be('false');
    });

    it('odd should detect whether or not a number is odd', function() {
      var fiveOdd = render('{{ "5" is odd }}');
      var fourNotOdd = render('{{ 4 is not odd }}');
      expect(fiveOdd).to.be('true');
      expect(fourNotOdd).to.be('true');
    });

    it('mapping should detect Maps or hashes', function() {
      /* global Map */
      var map1, map2, mapOneIsMapping, mapTwoIsMapping;
      if (typeof Map === 'undefined') {
        this.skip();
      } else {
        map1 = new Map();
        map2 = {};
        mapOneIsMapping = render('{{ map is mapping }}', {
          map: map1
        });
        mapTwoIsMapping = render('{{ map is mapping }}', {
          map: map2
        });
        expect(mapOneIsMapping).to.be('true');
        expect(mapTwoIsMapping).to.be('true');
      }
    });

    it('falsy should detect whether or not a value is falsy', function() {
      var zero = render('{{ 0 is falsy }}');
      var pancakes = render('{{ "pancakes" is not falsy }}');
      expect(zero).to.be('true');
      expect(pancakes).to.be('true');
    });

    it('truthy should detect whether or not a value is truthy', function() {
      var nullTruthy = render('{{ null is truthy }}');
      var pancakesNotTruthy = render('{{ "pancakes" is not truthy }}');
      expect(nullTruthy).to.be('false');
      expect(pancakesNotTruthy).to.be('false');
    });

    it('greaterthan than should detect whether or not a value is less than another', function() {
      var fiveGreaterThanFour = render('{{ "5" is greaterthan(4) }}');
      var fourNotGreaterThanTwo = render('{{ 4 is not greaterthan(2) }}');
      expect(fiveGreaterThanFour).to.be('true');
      expect(fourNotGreaterThanTwo).to.be('false');
    });

    it('ge should detect whether or not a value is greater than or equal to another', function() {
      var fiveGreaterThanEqualToFive = render('{{ "5" is ge(5) }}');
      var fourNotGreaterThanEqualToTwo = render('{{ 4 is not ge(2) }}');
      expect(fiveGreaterThanEqualToFive).to.be('true');
      expect(fourNotGreaterThanEqualToTwo).to.be('false');
    });

    it('lessthan than should detect whether or not a value is less than another', function() {
      var fiveLessThanFour = render('{{ "5" is lessthan(4) }}');
      var fourNotLessThanTwo = render('{{ 4 is not lessthan(2) }}');
      expect(fiveLessThanFour).to.be('false');
      expect(fourNotLessThanTwo).to.be('true');
    });

    it('le should detect whether or not a value is less than or equal to another', function() {
      var fiveLessThanEqualToFive = render('{{ "5" is le(5) }}');
      var fourNotLessThanEqualToTwo = render('{{ 4 is not le(2) }}');
      expect(fiveLessThanEqualToFive).to.be('true');
      expect(fourNotLessThanEqualToTwo).to.be('true');
    });

    it('ne should detect whether or not a value is not equal to another', function() {
      var five = render('{{ 5 is ne(5) }}');
      var four = render('{{ 4 is not ne(2) }}');
      expect(five).to.be('false');
      expect(four).to.be('false');
    });

    it('iterable should detect that a generator is iterable', function(done) {
      /* eslint-disable no-eval */
      var iterable;
      try {
        iterable = eval('(function* iterable() { yield true; })()');
      } catch (e) {
        return this.skip(); // Browser does not support generators
      }
      equal('{{ fn is iterable }}', { fn: iterable }, 'true');
      return done();
    });

    it('iterable should detect that an Array is not non-iterable', function() {
      equal('{{ arr is not iterable }}', { arr: [] }, 'false');
    });

    it('iterable should detect that a Map is iterable', function() {
      /* global Map */
      if (typeof Map === 'undefined') {
        this.skip();
      } else {
        equal('{{ map is iterable }}', { map: new Map() }, 'true');
      }
    });

    it('iterable should detect that a Set is not non-iterable', function() {
      /* global Set */
      if (typeof Set === 'undefined') {
        this.skip();
      } else {
        equal('{{ set is not iterable }}', { set: new Set() }, 'false');
      }
    });

    it('number should detect whether a value is numeric', function() {
      var num = render('{{ 5 is number }}');
      var str = render('{{ "42" is number }}');
      expect(num).to.be('true');
      expect(str).to.be('false');
    });

    it('string should detect whether a value is a string', function() {
      var num = render('{{ 5 is string }}');
      var str = render('{{ "42" is string }}');
      expect(num).to.be('false');
      expect(str).to.be('true');
    });

    it('equalto should detect value equality', function() {
      var same = render('{{ 1 is equalto(2) }}');
      var notSame = render('{{ 2 is not equalto(2) }}');
      expect(same).to.be('false');
      expect(notSame).to.be('false');
    });

    it('sameas should alias to equalto', function() {
      var obj = {};
      var same = render('{{ obj1 is sameas(obj2) }}', {
        obj1: obj,
        obj2: obj
      });
      expect(same).to.be('true');
    });

    it('lower should detect whether or not a string is lowercased', function() {
      expect(render('{{ "foobar" is lower }}')).to.be('true');
      expect(render('{{ "Foobar" is lower }}')).to.be('false');
    });

    it('upper should detect whether or not a string is uppercased', function() {
      expect(render('{{ "FOOBAR" is upper }}')).to.be('true');
      expect(render('{{ "Foobar" is upper }}')).to.be('false');
    });
  });
}());


/***/ }),

/***/ 9099:
/*!***********************!*\
  !*** ./tests/util.js ***!
  \***********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

(function() {
  /* eslint-disable vars-on-top */

  'use strict';

  var nunjucks,
    nunjucksFull,
    isSlim = false,
    Environment,
    Template,
    Loader,
    precompileString,
    templatesPath,
    expect;

  if (typeof window === 'undefined') {
    nunjucks = nunjucksFull = __webpack_require__(/*! ../nunjucks/index.js */ 5905);
    Loader = nunjucks.FileSystemLoader;
    templatesPath = 'tests/templates';
    expect = __webpack_require__(/*! expect.js */ 1801);
  } else {
    nunjucks = window.nunjucks;
    if (window.nunjucksFull) {
      isSlim = true;
      nunjucksFull = window.nunjucksFull;
      // These must be the same for instanceof checks to succeed
      nunjucksFull.runtime.SafeString.prototype = nunjucks.runtime.SafeString.prototype;
    } else {
      nunjucksFull = window.nunjucksFull = nunjucks;
    }
    Loader = nunjucksFull.WebLoader;
    templatesPath = '../templates';
    expect = window.expect;
  }
  precompileString = nunjucksFull.precompileString;
  Environment = nunjucks.Environment;
  Template = nunjucks.Template;

  var numAsyncs;
  var doneHandler;

  beforeEach(function() {
    numAsyncs = 0;
    doneHandler = null;
  });

  function equal(str, ctx, opts, str2, env) {
    if (typeof ctx === 'string') {
      env = opts;
      str2 = ctx;
      ctx = null;
      opts = {};
    }
    if (typeof opts === 'string') {
      env = str2;
      str2 = opts;
      opts = {};
    }
    opts = opts || {};
    var res = render(str, ctx, opts, env);
    expect(res).to.be(str2);
  }

  function jinjaEqual(str, ctx, str2, env) {
    var jinjaUninstalls = [nunjucks.installJinjaCompat()];
    if (nunjucksFull !== nunjucks) {
      jinjaUninstalls.push(nunjucksFull.installJinjaCompat());
    }
    try {
      return equal(str, ctx, str2, env);
    } finally {
      for (var i = 0; i < jinjaUninstalls.length; i++) {
        jinjaUninstalls[i]();
      }
    }
  }

  function finish(done) {
    if (numAsyncs > 0) {
      doneHandler = done;
    } else {
      done();
    }
  }

  function normEOL(str) {
    if (!str) {
      return str;
    }
    return str.replace(/\r\n|\r/g, '\n');
  }

  function randomTemplateName() {
    var rand = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5);
    return rand + '.njk';
  }

  // eslint-disable-next-line consistent-return
  function render(str, ctx, opts, env, cb) {
    if (typeof ctx === 'function') {
      cb = ctx;
      ctx = null;
      opts = null;
      env = null;
    } else if (typeof opts === 'function') {
      cb = opts;
      opts = null;
      env = null;
    } else if (typeof env === 'function') {
      cb = env;
      env = null;
    }

    opts = opts || {};
    opts.dev = true;

    var loader;
    var e;

    if (isSlim) {
      e = env || new Environment([], opts);
      loader = e.loaders[0];
    } else {
      loader = new Loader(templatesPath);
      e = env || new Environment(loader, opts);
    }

    var name;
    if (opts.filters) {
      for (name in opts.filters) {
        if (Object.prototype.hasOwnProperty.call(opts.filters, name)) {
          e.addFilter(name, opts.filters[name]);
        }
      }
    }

    if (opts.asyncFilters) {
      for (name in opts.asyncFilters) {
        if (Object.prototype.hasOwnProperty.call(opts.asyncFilters, name)) {
          e.addFilter(name, opts.asyncFilters[name], true);
        }
      }
    }

    if (opts.extensions) {
      for (name in opts.extensions) {
        if (Object.prototype.hasOwnProperty.call(opts.extensions, name)) {
          e.addExtension(name, opts.extensions[name]);
        }
      }
    }

    var tmplName;
    if (isSlim) {
      tmplName = randomTemplateName();
      var precompileJs = precompileString(str, {
        name: tmplName,
        asFunction: true,
        env: e
      });
      eval(precompileJs); // eslint-disable-line no-eval
    }

    ctx = ctx || {};

    var t;

    if (isSlim) {
      var tmplSource = loader.getSource(tmplName);
      t = new Template(tmplSource.src, e, tmplSource.path);
    } else {
      t = new Template(str, e);
    }

    if (!cb) {
      return t.render(ctx);
    } else {
      numAsyncs++;
      t.render(ctx, function(err, res) {
        if (err && !opts.noThrow) {
          throw err;
        }

        try {
          cb(err, normEOL(res));
        } catch (exc) {
          if (doneHandler) {
            doneHandler(exc);
            numAsyncs = 0;
            doneHandler = null;
          } else {
            throw exc;
          }
        }

        numAsyncs--;

        if (numAsyncs === 0 && doneHandler) {
          doneHandler();
        }
      });
    }
  }

  if (typeof window === 'undefined') {
    module.exports.render = render;
    module.exports.equal = equal;
    module.exports.jinjaEqual = jinjaEqual;
    module.exports.finish = finish;
    module.exports.normEOL = normEOL;
    module.exports.isSlim = isSlim;
    module.exports.Loader = Loader;
  } else {
    window.util = {
      render: render,
      equal: equal,
      jinjaEqual: jinjaEqual,
      finish: finish,
      normEOL: normEOL,
      isSlim: isSlim,
      Loader: Loader,
    };
  }
}());


/***/ }),

/***/ 6761:
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ 8181:
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ 5340:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ 9838:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ 4615:
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ 231:
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ 2564:
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

/* (ignored) */

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"tests": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunknunjucks"] = self["webpackChunknunjucks"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendors"], () => (__webpack_require__(9696)))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=tests.bundle.js.map